{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/moment/moment.js","webpack:///./src/app/tabledata/transformation.js","webpack:///./src/app/visualization/builtins/visualization-nvd3chart.js","webpack:///./src/app/notebook/paragraph/paragraph.status.js","webpack:///./src/app/tabledata/pivot.js","webpack:///./src/app/visualization/visualization.js","webpack:///./src/app/tabledata/tabledata.js","webpack:///./src/app/tabledata/dataset.js","webpack:///./node_modules/moment/locale/af.js","webpack:///./node_modules/moment/locale/ar.js","webpack:///./node_modules/moment/locale/ar-dz.js","webpack:///./node_modules/moment/locale/ar-kw.js","webpack:///./node_modules/moment/locale/ar-ly.js","webpack:///./node_modules/moment/locale/ar-ma.js","webpack:///./node_modules/moment/locale/ar-sa.js","webpack:///./node_modules/moment/locale/ar-tn.js","webpack:///./node_modules/moment/locale/az.js","webpack:///./node_modules/moment/locale/be.js","webpack:///./node_modules/moment/locale/bg.js","webpack:///./node_modules/moment/locale/bm.js","webpack:///./node_modules/moment/locale/bn.js","webpack:///./node_modules/moment/locale/bo.js","webpack:///./node_modules/moment/locale/br.js","webpack:///./node_modules/moment/locale/bs.js","webpack:///./node_modules/moment/locale/ca.js","webpack:///./node_modules/moment/locale/cs.js","webpack:///./node_modules/moment/locale/cv.js","webpack:///./node_modules/moment/locale/cy.js","webpack:///./node_modules/moment/locale/da.js","webpack:///./node_modules/moment/locale/de.js","webpack:///./node_modules/moment/locale/de-at.js","webpack:///./node_modules/moment/locale/de-ch.js","webpack:///./node_modules/moment/locale/dv.js","webpack:///./node_modules/moment/locale/el.js","webpack:///./node_modules/moment/locale/en-au.js","webpack:///./node_modules/moment/locale/en-ca.js","webpack:///./node_modules/moment/locale/en-gb.js","webpack:///./node_modules/moment/locale/en-ie.js","webpack:///./node_modules/moment/locale/en-il.js","webpack:///./node_modules/moment/locale/en-nz.js","webpack:///./node_modules/moment/locale/eo.js","webpack:///./node_modules/moment/locale/es.js","webpack:///./node_modules/moment/locale/es-do.js","webpack:///./node_modules/moment/locale/es-us.js","webpack:///./node_modules/moment/locale/et.js","webpack:///./node_modules/moment/locale/eu.js","webpack:///./node_modules/moment/locale/fa.js","webpack:///./node_modules/moment/locale/fi.js","webpack:///./node_modules/moment/locale/fo.js","webpack:///./node_modules/moment/locale/fr.js","webpack:///./node_modules/moment/locale/fr-ca.js","webpack:///./node_modules/moment/locale/fr-ch.js","webpack:///./node_modules/moment/locale/fy.js","webpack:///./node_modules/moment/locale/gd.js","webpack:///./node_modules/moment/locale/gl.js","webpack:///./node_modules/moment/locale/gom-latn.js","webpack:///./node_modules/moment/locale/gu.js","webpack:///./node_modules/moment/locale/he.js","webpack:///./node_modules/moment/locale/hi.js","webpack:///./node_modules/moment/locale/hr.js","webpack:///./node_modules/moment/locale/hu.js","webpack:///./node_modules/moment/locale/hy-am.js","webpack:///./node_modules/moment/locale/id.js","webpack:///./node_modules/moment/locale/is.js","webpack:///./node_modules/moment/locale/it.js","webpack:///./node_modules/moment/locale/ja.js","webpack:///./node_modules/moment/locale/jv.js","webpack:///./node_modules/moment/locale/ka.js","webpack:///./node_modules/moment/locale/kk.js","webpack:///./node_modules/moment/locale/km.js","webpack:///./node_modules/moment/locale/kn.js","webpack:///./node_modules/moment/locale/ko.js","webpack:///./node_modules/moment/locale/ky.js","webpack:///./node_modules/moment/locale/lb.js","webpack:///./node_modules/moment/locale/lo.js","webpack:///./node_modules/moment/locale/lt.js","webpack:///./node_modules/moment/locale/lv.js","webpack:///./node_modules/moment/locale/me.js","webpack:///./node_modules/moment/locale/mi.js","webpack:///./node_modules/moment/locale/mk.js","webpack:///./node_modules/moment/locale/ml.js","webpack:///./node_modules/moment/locale/mn.js","webpack:///./node_modules/moment/locale/mr.js","webpack:///./node_modules/moment/locale/ms.js","webpack:///./node_modules/moment/locale/ms-my.js","webpack:///./node_modules/moment/locale/mt.js","webpack:///./node_modules/moment/locale/my.js","webpack:///./node_modules/moment/locale/nb.js","webpack:///./node_modules/moment/locale/ne.js","webpack:///./node_modules/moment/locale/nl.js","webpack:///./node_modules/moment/locale/nl-be.js","webpack:///./node_modules/moment/locale/nn.js","webpack:///./node_modules/moment/locale/pa-in.js","webpack:///./node_modules/moment/locale/pl.js","webpack:///./node_modules/moment/locale/pt.js","webpack:///./node_modules/moment/locale/pt-br.js","webpack:///./node_modules/moment/locale/ro.js","webpack:///./node_modules/moment/locale/ru.js","webpack:///./node_modules/moment/locale/sd.js","webpack:///./node_modules/moment/locale/se.js","webpack:///./node_modules/moment/locale/si.js","webpack:///./node_modules/moment/locale/sk.js","webpack:///./node_modules/moment/locale/sl.js","webpack:///./node_modules/moment/locale/sq.js","webpack:///./node_modules/moment/locale/sr.js","webpack:///./node_modules/moment/locale/sr-cyrl.js","webpack:///./node_modules/moment/locale/ss.js","webpack:///./node_modules/moment/locale/sv.js","webpack:///./node_modules/moment/locale/sw.js","webpack:///./node_modules/moment/locale/ta.js","webpack:///./node_modules/moment/locale/te.js","webpack:///./node_modules/moment/locale/tet.js","webpack:///./node_modules/moment/locale/tg.js","webpack:///./node_modules/moment/locale/th.js","webpack:///./node_modules/moment/locale/tl-ph.js","webpack:///./node_modules/moment/locale/tlh.js","webpack:///./node_modules/moment/locale/tr.js","webpack:///./node_modules/moment/locale/tzl.js","webpack:///./node_modules/moment/locale/tzm.js","webpack:///./node_modules/moment/locale/tzm-latn.js","webpack:///./node_modules/moment/locale/ug-cn.js","webpack:///./node_modules/moment/locale/uk.js","webpack:///./node_modules/moment/locale/ur.js","webpack:///./node_modules/moment/locale/uz.js","webpack:///./node_modules/moment/locale/uz-latn.js","webpack:///./node_modules/moment/locale/vi.js","webpack:///./node_modules/moment/locale/x-pseudo.js","webpack:///./node_modules/moment/locale/yo.js","webpack:///./node_modules/moment/locale/zh-cn.js","webpack:///./node_modules/moment/locale/zh-hk.js","webpack:///./node_modules/moment/locale/zh-tw.js","webpack:///./src/app/tabledata/passthrough.js","webpack:///./src/app/tabledata/columnselector.js","webpack:///./src/app/visualization/builtins/visualization-table.js","webpack:///./src/app/visualization/builtins/visualization-barchart.js","webpack:///./src/app/visualization/builtins/visualization-piechart.js","webpack:///./src/app/visualization/builtins/visualization-areachart.js","webpack:///./src/app/visualization/builtins/visualization-linechart.js","webpack:///./src/app/visualization/builtins/visualization-scatterchart.js","webpack:///./src/app/jobmanager/job-status.js","webpack:///./src/app/spell/index.js","webpack:///./src/app/spell/spell-result.js","webpack:///./src/app/helium/helium-type.js","webpack:///./src/index.js","webpack:///./src/app/app.js","webpack:///./node_modules/headroom.js/dist/headroom.js","webpack:///./node_modules/headroom.js/dist/angular.headroom.js","webpack:///./node_modules/scrollmonitor/scrollMonitor.js","webpack:///./node_modules/angular-viewport-watch/angular-viewport-watch.js","webpack:///./node_modules/angular-ui-grid/index.js","webpack:///./node_modules/angular-ui-grid/ui-grid.js","webpack:///./src/app/app.controller.js","webpack:///./src/app/home/home.controller.js","webpack:///./src/app/notebook/notebook.controller.js","webpack:///(webpack)/buildin/module.js","webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/app/tabledata/advanced-transformation.js","webpack:///./src/app/tabledata/advanced-transformation-util.js","webpack:///./src/app/visualization/builtins/visualization-util.js","webpack:///./src/app/visualization/builtins/visualization-table-setting.html","webpack:///./src/app/jobmanager/jobmanager.component.js","webpack:///./src/app/jobmanager/job/job.component.js","webpack:///./src/app/jobmanager/job/job.html","webpack:///./src/app/jobmanager/jobmanager.filter.js","webpack:///./src/app/jobmanager/jobmanager.service.js","webpack:///./src/app/cluster/cluster.controller.js","webpack:///./src/app/cluster/node-status.js","webpack:///./src/app/cluster/node.controller.js","webpack:///./src/app/interpreter/interpreter.controller.js","webpack:///./src/app/interpreter/interpreter.filter.js","webpack:///./src/app/interpreter/interpreter-item.directive.js","webpack:///./src/app/interpreter/widget/number-widget.directive.js","webpack:///./src/app/credential/credential.controller.js","webpack:///./src/app/configuration/configuration.controller.js","webpack:///./src/app/notebook/revisions-comparator/revisions-comparator.component.js","webpack:///./src/app/notebook/revisions-comparator/revisions-comparator.html","webpack:///./src/app/notebook/paragraph/paragraph.controller.js","webpack:///./src/app/spell/spell-base.js","webpack:///./node_modules/diff-match-patch/index.js","webpack:///./node_modules/moment-duration-format/lib/moment-duration-format.js","webpack:///./src/app/notebook/paragraph/clipboard.controller.js","webpack:///./src/app/notebook/paragraph/resizable.directive.js","webpack:///./src/app/notebook/paragraph/result/result.controller.js","webpack:///./src/app/tabledata/datasetfactory.js","webpack:///./src/app/tabledata/networkdata.js","webpack:///./src/app/visualization/builtins/visualization-d3network.js","webpack:///./src/app/tabledata/network.js","webpack:///./src/app/notebook/paragraph/result/result.js","webpack:///./node_modules/ansi_up/ansi_up.js","webpack:///./src/app/visualization/builtins/visualization-table-grid-filter.html","webpack:///./src/app/notebook/paragraph/code-editor/code-editor.directive.js","webpack:///./src/app/notebook/save-as/save-as.service.js","webpack:///./src/app/notebook/save-as/browser-detect.service.js","webpack:///./src/app/notebook/elastic-input/elastic-input.controller.js","webpack:///./src/app/notebook/dropdown-input/dropdown-input.directive.js","webpack:///./src/app/notebook/note-var-share.service.js","webpack:///./src/app/notebook-repository/notebook-repository.controller.js","webpack:///./src/app/search/result-list.controller.js","webpack:///./src/app/search/search.service.js","webpack:///./src/app/helium/index.js","webpack:///./src/app/helium/helium.controller.js","webpack:///./src/app/helium/helium.service.js","webpack:///./src/app/helium/helium-conf.js","webpack:///./src/app/helium/helium-package.js","webpack:///./src/app/notebook/dynamic-forms/dynamic-forms.directive.js","webpack:///./src/components/array-ordering/array-ordering.service.js","webpack:///./src/components/navbar/navbar.controller.js","webpack:///./src/components/navbar/expand-collapse/expand-collapse.directive.js","webpack:///./src/components/note-create/note-create.controller.js","webpack:///./src/components/note-create/visible.directive.js","webpack:///./src/components/note-import/note-import.controller.js","webpack:///./src/components/ng-enter/ng-enter.directive.js","webpack:///./src/components/ng-escape/ng-escape.directive.js","webpack:///./src/components/websocket/websocket-message.service.js","webpack:///./src/components/websocket/websocket-event.factory.js","webpack:///./src/components/note-list/note-list.factory.js","webpack:///./src/components/base-url/base-url.service.js","webpack:///./src/components/loader/loader.service.js","webpack:///./src/components/login/login.controller.js","webpack:///./src/components/note-action/note-action.service.js","webpack:///./src/components/note-rename/note-rename.controller.js","webpack:///./src/components/note-rename/note-rename.service.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","hookCallback","some","hooks","apply","arguments","isArray","input","Array","toString","isObject","isUndefined","isNumber","isDate","Date","map","arr","fn","res","length","push","hasOwnProp","a","b","extend","valueOf","createUTC","format","locale","strict","createLocalOrUTC","utc","getParsingFlags","_pf","empty","unusedTokens","unusedInput","overflow","charsLeftOver","nullInput","invalidMonth","invalidFormat","userInvalidated","iso","parsedDateParts","meridiem","rfc2822","weekdayMismatch","isValid","_isValid","flags","parsedParts","isNowValid","isNaN","_d","getTime","invalidWeekday","_strict","undefined","bigHour","isFrozen","createInvalid","NaN","fun","this","len","momentProperties","copyConfig","to","from","prop","val","_isAMomentObject","_i","_f","_l","_tzm","_isUTC","_offset","_locale","updateInProgress","Moment","config","updateOffset","isMoment","obj","absFloor","number","Math","ceil","floor","toInt","argumentForCoercion","coercedNumber","isFinite","compareArrays","array1","array2","dontConvert","min","lengthDiff","abs","diffs","warn","msg","suppressDeprecationWarnings","console","deprecate","firstTime","deprecationHandler","arg","args","slice","join","Error","stack","keys","deprecations","deprecateSimple","isFunction","Function","mergeConfigs","parentConfig","childConfig","Locale","set","aliases","addUnitAlias","unit","shorthand","lowerCase","toLowerCase","normalizeUnits","units","normalizeObjectUnits","inputObject","normalizedProp","normalizedInput","priorities","addUnitPriority","priority","zeroFill","targetLength","forceSign","absNumber","zerosToFill","sign","pow","max","substr","formattingTokens","localFormattingTokens","formatFunctions","formatTokenFunctions","addFormatToken","token","padded","ordinal","callback","func","localeData","removeFormattingTokens","match","replace","formatMoment","expandFormat","array","mom","output","makeFormatFunction","invalidDate","replaceLongDateFormatTokens","longDateFormat","lastIndex","test","match1","match2","match3","match4","match6","match1to2","match3to4","match5to6","match1to3","match1to4","match1to6","matchUnsigned","matchSigned","matchOffset","matchShortOffset","matchWord","regexes","addRegexToken","regex","strictRegex","isStrict","getParseRegexForToken","RegExp","regexEscape","matched","p1","p2","p3","p4","unescapeFormat","tokens","addParseToken","addWeekParseToken","_w","addTimeToArrayFromToken","_a","YEAR","MONTH","DATE","HOUR","MINUTE","SECOND","MILLISECOND","WEEK","WEEKDAY","daysInYear","year","isLeapYear","y","parseTwoDigitYear","parseInt","indexOf","getSetYear","makeGetSet","keepTime","set$1","month","date","daysInMonth","modMonth","x","mod","monthsShort","months","monthsShortRegex","monthsRegex","monthsParse","MONTHS_IN_FORMAT","defaultLocaleMonths","split","defaultLocaleMonthsShort","setMonth","dayOfMonth","getSetMonth","defaultMonthsShortRegex","defaultMonthsRegex","computeMonthsParse","cmpLenRev","shortPieces","longPieces","mixedPieces","sort","_monthsRegex","_monthsShortRegex","_monthsStrictRegex","_monthsShortStrictRegex","createUTCDate","UTC","getUTCFullYear","setUTCFullYear","firstWeekOffset","dow","doy","fwd","fwdlw","getUTCDay","dayOfYearFromWeeks","week","weekday","resYear","resDayOfYear","localWeekday","weekOffset","dayOfYear","weekOfYear","resWeek","weeksInYear","weekOffsetNext","weekdaysMin","weekdaysShort","weekdays","weekdaysMinRegex","weekdaysShortRegex","weekdaysRegex","weekdaysParse","defaultLocaleWeekdays","defaultLocaleWeekdaysShort","defaultLocaleWeekdaysMin","defaultWeekdaysRegex","defaultWeekdaysShortRegex","defaultWeekdaysMinRegex","computeWeekdaysParse","minp","shortp","longp","minPieces","day","_weekdaysRegex","_weekdaysShortRegex","_weekdaysMinRegex","_weekdaysStrictRegex","_weekdaysShortStrictRegex","_weekdaysMinStrictRegex","hFormat","hours","lowercase","minutes","matchMeridiem","_meridiemParse","seconds","kInput","_isPm","isPM","_meridiem","pos","pos1","pos2","globalLocale","getSetHour","baseConfig","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","LTS","LT","L","LL","LLL","LLLL","dayOfMonthOrdinalParse","relativeTime","future","past","ss","mm","h","hh","dd","M","MM","yy","meridiemParse","locales","localeFamilies","normalizeLocale","loadLocale","oldLocale","_abbr","getSetGlobalLocale","e","values","data","getLocale","defineLocale","abbr","_config","parentLocale","forEach","names","j","next","chooseLocale","checkOverflow","_overflowDayOfYear","_overflowWeeks","_overflowWeekday","defaults","configFromArray","currentDate","expectedWeekday","yearToUse","nowValue","now","_useUTC","getUTCMonth","getUTCDate","getFullYear","getMonth","getDate","currentDateArray","w","weekYear","temp","weekdayOverflow","GG","W","E","createLocal","_week","curWeek","gg","_dayOfYear","dayOfYearFromWeekInfo","_nextDay","ms","setFullYear","getDay","setUTCMinutes","getUTCMinutes","extendedIsoRegex","basicIsoRegex","tzRegex","isoDates","isoTimes","aspNetJsonRegex","configFromISO","allowTime","dateFormat","timeFormat","tzFormat","string","exec","configFromStringAndFormat","extractFromRFC2822Strings","yearStr","monthStr","dayStr","hourStr","minuteStr","secondStr","result","untruncateYear","obsOffsets","UT","GMT","EDT","EST","CDT","CST","MDT","MST","PDT","PST","configFromRFC2822","preprocessRFC2822","parsedArray","weekdayStr","parsedInput","weekdayProvided","weekdayActual","checkWeekday","obsOffset","militaryOffset","numOffset","hm","calculateOffset","ISO_8601","RFC_2822","skipped","stringLength","totalParsedInputLength","hour","isPm","meridiemHour","meridiemFixWrap","prepareConfig","preparse","tempConfig","bestMoment","scoreToBeat","currentScore","score","configFromStringAndArray","createFromInputFallback","configFromString","minute","second","millisecond","configFromObject","configFromInput","isUTC","getOwnPropertyNames","k","isObjectEmpty","add","createFromConfig","prototypeMin","other","prototypeMax","pickBy","moments","ordering","Duration","duration","years","quarters","quarter","weeks","days","milliseconds","unitHasDecimal","parseFloat","isDurationValid","_milliseconds","_days","_months","_data","_bubble","isDuration","absRound","round","offset","separator","utcOffset","offsetFromString","chunkOffset","matcher","matches","chunk","parts","cloneWithOffset","model","diff","clone","setTime","local","getDateOffset","getTimezoneOffset","isUtc","aspNetRegex","isoRegex","createDuration","ret","diffRes","parseIso","base","isBefore","positiveMomentsDifference","momentsDifference","inp","isAfter","createAdder","direction","period","tmp","addSubtract","isAdding","invalid","subtract","monthDiff","anchor2","adjust","wholeMonthDiff","anchor","newLocaleData","defaultFormat","defaultFormatUtc","lang","addWeekYearFormatToken","getSetWeekYearHelper","weeksTarget","dayOfYearData","isoWeekYear","_dayOfMonthOrdinalParse","_ordinalParse","_dayOfMonthOrdinalParseLenient","getSetDayOfMonth","getSetMinute","getSetSecond","parseMs","getSetMillisecond","proto","preParsePostFormat","time","formats","sod","startOf","calendarFormat","asFloat","that","zoneDelta","endOf","inputString","postformat","withoutSuffix","humanize","fromNow","toNow","invalidAt","localInput","isBetween","inclusivity","isSame","inputMs","isSameOrAfter","isSameOrBefore","parsingFlags","prioritized","unitsObj","u","getPrioritizedUnits","isoWeekday","toArray","toObject","toDate","toISOString","keepOffset","inspect","zone","isLocal","prefix","suffix","toJSON","unix","creationData","isoWeek","isoWeeks","weekInfo","isoWeeksInYear","parseWeekday","parseIsoWeekday","keepLocalTime","keepMinutes","localAdjust","_changeInProgress","parseZone","tZone","hasAlignedHourOffset","isDST","isUtcOffset","zoneAbbr","zoneName","dates","isDSTShifted","_isDSTShifted","proto$1","get$1","index","field","setter","listMonthsImpl","out","listWeekdaysImpl","localeSorted","shift","_calendar","_longDateFormat","formatUpper","toUpperCase","_invalidDate","_ordinal","isFuture","_relativeTime","pastFuture","source","isFormat","_monthsShort","monthName","_monthsParseExact","ii","llc","toLocaleLowerCase","_monthsParse","_longMonthsParse","_shortMonthsParse","firstDayOfYear","firstDayOfWeek","_weekdays","_weekdaysMin","_weekdaysShort","weekdayName","_weekdaysParseExact","_weekdaysParse","_shortWeekdaysParse","_minWeekdaysParse","_fullWeekdaysParse","charAt","isLower","langData","mathAbs","addSubtract$1","absCeil","daysToMonths","monthsToDays","makeAs","alias","as","asMilliseconds","asSeconds","asMinutes","asHours","asDays","asWeeks","asMonths","asYears","makeGetter","thresholds","abs$1","toISOString$1","Y","D","toFixed","total","totalSign","ymSign","daysSign","hmsSign","proto$2","monthsFromDays","withSuffix","posNegDuration","relativeTime$1","toIsoString","version","setHookCallback","updateLocale","tmpLocale","relativeTimeRounding","roundingFunction","relativeTimeThreshold","threshold","limit","myMoment","HTML5_FMT","DATETIME_LOCAL","DATETIME_LOCAL_SECONDS","DATETIME_LOCAL_MS","TIME","TIME_SECONDS","TIME_MS","factory","Transformation","_classCallCheck","_emitter","tableData","targetEl","setting","getSetting","_scope","self","$apply","scope","_prevSettingScope","_createNewScope","template","endsWith","_templateRequest","then","_render","_targetEl","html","_compile","contents","Nvd3ChartVisualization","_this","_possibleConstructorReturn","__proto__","getPrototypeOf","append","Visualization","chart","update","type","d3g","nv","models","configureChart","animationDuration","height","err","d3","select","id","attr","datum","transition","style","xLabels","customAbbrevFormatter","groupedThousandsWith3DigitsFormatter","schema","rows","groups","allowTextXAxis","fillMissingValues","multiBarChart","concat","getSchemaUnderKey","children","traverse","sKey","rKey","rowName","rowValue","colName","valueOnly","cs","noKey","isMultiBarChart","rowNameIndex","rowIdx","colNameIndex","colIdx","rowIndexValue","xVar","yVar","defaultY","count","namesWithoutAggr","withoutAggr","substring","lastIndexOf","valueIndex","d3gIndex","selectAll","remove","isParagraphRunning","paragraph","status","ParagraphStatus","PENDING","RUNNING","READY","FINISHED","ABORT","ERROR","PivotTransformation","configObj","log","common","pivot","tableDataColumns","save","emitConfig","removeKey","idx","splice","removeGroup","removeValue","setValueAggr","aggr","columns","removeUnknown","selectDefault","unique","list","angular","equals","found","aggrFunc","sum","aIsValid","isValidNumber","bIsValid","avg","num","aggrFuncDiv","row","order","keyKey","g","group","groupKey","v","valueKey","_dirty","_active","TypeError","refresh","isActive","_renderSetting","instance","_dataset","TableData","comment","Dataset","paragraphResult","DatasetType","TABLE","columnNames","textRows","commentRow","textRow","textCols","cols","col","valueOfCol","freeze","NETWORK","moment","symbolMap","1","2","3","4","5","6","7","8","9","0","numberMap","١","٢","٣","٤","٥","٦","٧","٨","٩","٠","pluralForm","plurals","pluralize","f","str","weekdaysParseExact","suffixes","70","80","20","50","100","10","30","60","90","relativeTimeWithPlural","word","forms","plural","standalone","lastDigit","last2Digits","১","২","৩","৪","৫","৬","৭","৮","৯","০","༡","༢","༣","༤","༥","༦","༧","༨","༩","༠","relativeTimeWithMutation","text","mutationTable","softMutation","mutation","lastNumber","translate","monthsParseExact","ll","lll","llll","shortMonthsParse","longMonthsParse","affix","processRelativeTime","monthsNominativeEl","monthsGenitiveEl","momentToFormat","_monthsGenitiveEl","_monthsNominativeEl","calendarEl","_calendarEl","monthsShortDot","monthsStrictRegex","monthsShortStrictRegex","۱","۲","۳","۴","۵","۶","۷","۸","۹","۰","numbersPast","numbersFuture","verbalNumber","monthsShortWithDots","monthsShortWithoutDots","૧","૨","૩","૪","૫","૬","૭","૮","૯","૦","१","२","३","४","५","६","७","८","९","०","weekEndings","40","១","២","៣","៤","៥","៦","៧","៨","៩","០","೧","೨","೩","೪","೫","೬","೭","೮","೯","೦","isUpper","eifelerRegelAppliesToNumber","firstDigit","translateSingular","special","relativeTimeWithSingular","translator","words","correctGrammaticalCase","wordKey","relativeTimeMr","၁","၂","၃","၄","၅","၆","၇","၈","၉","၀","੧","੨","੩","੪","੫","੬","੭","੮","੯","੦","monthsNominative","monthsSubjective","௧","௨","௩","௪","௫","௬","௭","௮","௯","௦","12","13","numbersNouns","numberNoun","hundred","ten","one","numberAsNoun","processHoursFunction","nominative","accusative","genitive","nounCase","PassthroughTransformation","ColumnselectorTransformation","columnSelectorProp","props","selectorName","fields","_visualizationUtil","SETTING_TEMPLATE","require","TABLE_OPTION_SPECS","valueType","ValueType","BOOLEAN","defaultValue","widget","Widget","CHECKBOX","description","TableVisualization","passthrough","emitTimeout","isRestoring","isUpdated","initializeTableConfig","width","calculatedWidth","onRegisterApiCallback","_this2","reduce","acc","enableGridMenu","modifierKeysToMultiSelectCells","exporterMenuCsv","exporterMenuPdf","flatEntityAccess","fastWatch","treeRowHeaderAlwaysVisible","exporterExcelFilename","columnDefs","displayName","DefaultTableColumnType","cellTemplate","editableCellTemplate","minWidth","getColumnMinWidth","sortingAlgorithm","row1","row2","sortType","gridCol","colType","colDef","TableColumnType","NUMBER","getSortedValue","Number","STRING","rowEditWaitInterval","enableRowHashing","saveFocus","saveScroll","saveSort","savePinning","saveGrouping","saveGroupingExpandedStates","saveOrder","saveVisible","saveTreeView","saveFilter","saveSelection","gridElemId","getGridElemId","gridElem","element","css","gridApiId","getGridApiId","getScope","core","handleWindowResize","notifyDataChange","_uiGridConstants","dataChange","ALL","tableColumnTypeState","persistConfigWithGridState","gridOptions","menuItems","title","action","copyStringToClipboard","context","active","updateColDefType","parsed","parseTableOption","tableOptionValue","showAggregationFooter","useFilter","showPagination","showGridFooter","showColumnFooter","enableFiltering","enablePagination","enablePaginationControls","paginationPageSize","paginationPageSizes","enableRowSelection","enableRowHeaderSelection","enableFullRowSelection","enableSelectAll","enableGroupHeaderSelection","enableSelectionBatchEvent","getGridOptions","setDynamicGridOptions","document","getElementById","createGridOptions","gridApi","on","columnVisibilityChanged","colMovable","columnPositionChanged","sortChanged","filterChanged","grouping","aggregationChanged","groupingChanged","treeBase","rowCollapsed","rowExpanded","colResizable","columnSizeChanged","edit","beginCellEdit","rowEntity","triggerEvent","textArea","currentTarget","scrollHeight","addEventListener","elem","setTimeout","find","off","detach","addColumnMenus","onRegisterApi","refreshGrid","updateColumnTypeState","restoreGridState","tableGridState","gridState","_this3","getGridApi","saveState","restore","_this4","initialized","persistConfig","updated","tableOptionSpecs","isInputWidget","isOptionWidget","isCheckboxWidget","isTextareaWidget","isBtnGroupWidget","tableOptionValueChanged","saveTableOption","resetTableOption","resetTableOptionConfig","applyTableOption","tableWidgetOnKeyDown","event","optSpec","code","keyCode","which","shiftKey","stopPropagation","copyString","strToClipboard","createElement","body","appendChild","execCommand","removeChild","BarchartVisualization","rotate","degree","d3Data","d3DataFromPivot","_get","changeXLabel","xLabelStatus","setConfig","yAxis","axisLabelDistance","tickFormat","yAxisTickFormat","stacked","_options","bottom","xAxis","rotateLabels","isXLabelStatus","setDegree","dispatch","PiechartVisualization","generateLabel","label","showLabels","showTooltipPercent","AreachartVisualization","xAxisTickFormat","useInteractiveGuideline","isDegreeEmpty","LinechartVisualization","lineWithFocus","currentMode","isDateFormat","_moment2","default","forceY","setDateFormat","ScatterchartVisualization","columnselectorProps","tooltip","columnselector","setScatterChart","yLabels","showDistX","showDistY","size","xValues","yValues","grpNameIndex","colIndexValue","grpIndexValue","grpIdx","grpName","xValue","yValue","isAllDiscrete","isDiscrete","setDiscreteScatterData","sz","xval","yval","random","d3gvalues","grp","newRows","newRow","String","uniqObj","uniqArr","item","getUnique","options","getJobIconByStatus","jobStatus","JobStatus","getJobColorByStatus","DefaultDisplayType","SpellResult","SpellBase","ELEMENT","HTML","ANGULAR","TEXT","DefaultDisplayMagic","%element","%table","%html","%angular","%text","%network","DataWithType","magic","dataWithType","getText","getMagic","customDisplayMagic","availableMagic","splited","gensWithTypes","mergedGens","previousMagic","extractMagic","withoutMagic","handleDefaultMagic","customDisplayType","textWithoutMagic","getData","getType","Promise","resolve","isPromise","generated","parseStringData","resultData","resultType","dataWithTypes","promises","dt","produceMultipleData","all","cur","allParagraphText","trim","error","resultMsg","createPropagable","HeliumType","VISUALIZATION","SPELL","INTERPRETER","APPLICATION","requiredModules","zeppelinWebApp","filter","$httpProvider","$routeProvider","ngToastProvider","withCredentials","visBundleLoad","load","heliumService","when","templateUrl","controller","controllerAs","otherwise","redirectTo","configure","dismissButton","dismissOnClick","combineDuplications","timeout","$provide","headers","$q","$rootScope","responseError","rejection","$broadcast","reject","interceptors","constant","bootstrapApplication","run","$location","$on","current","pageTitle","ticket","$$route","publicAccess","oldPath","search","path","bootstrap","ready","$http","injector","baseUrlSrv","hideLoader","jQuery","ajaxSetup","dataType","xhrFields","crossDomain","X-Requested-With","getRestApiBase","response","fromJson","window","location","href","screenUsername","principal","errorResponse","redirect","auth","root","Headroom","features","classList","documentElement","rAF","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","Debouncer","ticking","isDOMElement","nodeType","replacement","lastKnownScrollY","tolerance","down","up","normalizeTolerance","classes","scroller","initialised","onPin","onUnpin","onTop","onNotTop","onBottom","onNotBottom","constructor","requestTick","rafCallback","handleEvent","init","cutsTheMustard","debouncer","initial","attachEvent","destroy","removeEventListener","getScrollY","unpin","contains","pinned","unpinned","pin","top","notTop","notBottom","pageYOffset","scrollTop","parentNode","getViewportHeight","innerHeight","clientHeight","getElementPhysicalHeight","elm","offsetHeight","getScrollerPhysicalHeight","getDocumentHeight","getElementHeight","getScrollerHeight","isOutOfBounds","currentScrollY","pastTop","pastBottom","toleranceExceeded","shouldUnpin","scrollingDown","pastOffset","shouldPin","scrollingUp","scrollDirection","headroom","HeadroomService","link","$scope","$element","opts","querySelector","$inject","directive","loaded","isInBrowser","setStateFromDOM","listenToDOM","scrollMonitor","VISIBILITYCHANGE","ENTERVIEWPORT","FULLYENTERVIEWPORT","EXITVIEWPORT","PARTIALLYEXITVIEWPORT","LOCATIONCHANGE","STATECHANGE","eventTypes","isOnServer","defaultOffsets","capture","passive","watchers","viewportTop","viewportBottom","documentHeight","viewportHeight","DOMListener","containerWatcher","recalculateLocation","triggerCallbacks","recalculateLocations","detachEvent","setState","contentHeight","latestEvent","updateAndTriggerWatchers","createCustomContainer","createContainer","beget","isOne","I","watchItem","container","offsets","callbacks","locked","isInViewport","isFullyInViewport","isAboveViewport","isBelowViewport","nodeName","display","getBoundingClientRect","recalculateSize","lock","unlock","viewportWatch","$timeout","viewportUpdateTimeout","debouncedViewportUpdate","cancel","restrict","elementWatcher","$eval","watchDuringDisable","$$watchersBackup","$$watchers","unwatch","$watch","toggleWatchers","enable","digest","$root","$$phase","$$childHead","$$nextSibling","$parent","$digest","disableDigest","$evalAsync","enterViewport","exitViewport","LOG_DEBUG_MESSAGES","LOG_WARN_MESSAGES","LOG_ERROR_MESSAGES","CUSTOM_FILTERS","COL_FIELD","MODEL_COL_FIELD","TOOLTIP","DISPLAY_CELL_TEMPLATE","TEMPLATE_REGEXP","FUNC_REGEXP","DOT_REGEXP","APOS_REGEXP","BRACKET_REGEXP","COL_CLASS_PREFIX","ENTITY_BINDING","events","GRID_SCROLL","COLUMN_MENU_SHOWN","ITEM_DRAGGING","COLUMN_HEADER_CLICK","keymap","TAB","STRG","CAPSLOCK","CTRL","CTRLRIGHT","CTRLR","SHIFT","RETURN","ENTER","BACKSPACE","BCKSP","ALT","ALTR","ALTRIGHT","SPACE","WIN","MAC","FN","PG_UP","PG_DOWN","UP","DOWN","LEFT","RIGHT","ESC","DEL","F1","F2","F3","F4","F5","F6","F7","F8","F9","F10","F11","F12","ASC","DESC","STARTS_WITH","ENDS_WITH","EXACT","CONTAINS","GREATER_THAN","GREATER_THAN_OR_EQUAL","LESS_THAN","LESS_THAN_OR_EQUAL","NOT_EQUAL","SELECT","INPUT","aggregationTypes","CURRENCY_SYMBOLS","NONE","EDIT","ROW","COLUMN","OPTIONS","scrollbars","NEVER","ALWAYS","WHEN_NEEDED","$compile","$parse","gridUtil","uiGridConstants","compile","pre","$elm","$attrs","uiGridCtrl","compiledElementFn","clonedElement","getCompiledElementFn","catch","noop","preEval","cellElement","post","classAdded","initColClass","getColClass","addClass","updateClass","grid","removeClass","cellClass","rowRenderIndex","colRenderIndex","dataChangeDereg","registerDataChangeCallback","rowWatchDereg","newColClass","deregisterFunction","service","i18nService","initialize","columnMenuScope","menuShown","setColMenuItemWatch","deregFunction","defaultMenuItems","sortable","enableSorting","isActiveSort","suppressRemoveSort","hideable","enableHiding","getDefaultMenuItems","getSafeText","icon","$event","sortColumn","shown","unsortColumn","hideColumn","getColumnElementPosition","column","$columnElement","positionData","left","offsetLeft","offsetTop","parentLeft","offsetParent","elementHeight","elementWidth","repositionMenu","menu","querySelectorAll","renderContainerElm","closestElm","renderContainerOffset","containerScrollLeft","scrollLeft","myWidth","paddingRight","lastMenuPaddingRight","getStyles","uiGridColumnMenuService","$document","showMenu","colElementPosition","colElement","hideThenShow","originalEvent","hideMenu","broadcastTrigger","removeAttribute","focus","bySelector","onkeydown","columnElement","visibleMenuItems","circularFocusHandler","isSingleItem","shiftKeyStatus","preventDefault","addKeydownHandlersToMenu","dir","unsort","visible","queueGridRefresh","api","raise","thisIndex","previousVisibleCol","focusToGridMenu","byId","colClass","reason","$templateCache","controllers","updateFilters","filterable","filterHeaderTemplate","providedFilterHeaderTemplate","filterHeaderTemplatePromise","aria","removeFilter","colFilter","term","renderIndex","tElement","tAttrs","transclude","footerCellTemplate","providedFooterCellTemplate","footerCellTemplatePromise","footerCellClass","updateAggregationValue","rowsRendered","containerCtrl","colContainer","footer","footerTemplate","getTemplate","newElm","footerViewport","getElementsByClassName","disableAnimations","gridFooterTemplate","$window","ScrollEvent","headerCellTemplate","providedHeaderCellTemplate","headerCellTemplatePromise","renderContainerCtrl","i18n","headerCell","isSortPriorityVisible","getSortDirectionAriaLabel","ascending","descending","none","renderContainer","renderContainers","containerId","asc","desc","previousMouseX","$contentsElm","filterDeregisters","downFn","button","pageX","mousedownStartTime","mousedownTimeout","colMenu","fireEvent","columnName","offAllEvents","upFn","moveFn","onDownEvents","handleClick","handleKeyDown","clickFn","updateHeaderOptions","headerCellClass","$applyAsync","rightMostContainer","visibleColumnCache","isLastCol","Boolean","oldFilterable","filters","filterDeregister","enableColumnMenus","enableColumnMenu","headerCellArrowKeyDown","toggleMenu","headerTemplate","updateHeaderReferences","header","headerCanvases","headerCanvas","scrollHandler","evt","isScrollingHorizontally","newScrollLeft","normalizeScrollLeft","headerViewport","horizScrollPercentage","scrollHorizontal","scrollEvent","Sources","ViewPortScroll","percentage","scrollContainers","showHeader","replaceWith","queueRefresh","registerStyleComputation","canvasWidth","getColClassDefinition","drawnWidth","gridMenuScope","registeredMenuItems","registerMethod","addToGridMenu","removeFromGridMenu","logError","foundIndex","getMenuItems","gridMenuCustomItems","clearFilters","clearAllFilters","gridMenuShowHideColumns","showHideColumns","isColumnVisible","gridMenuTitleFilter","menuItem","toggleColumnVisibility","target","firstChild","className","getColumn","leaveOpen","setMenuItemTitle","readableColumnName","successValue","errorValue","uiGridGridMenuService","autoHide","dynamicStyles","gridMenuTemplate","setupHeightStyle","gridHeight","gridMenuMaxHeight","headerHeight","gridDimensionChanged","oldGridHeight","oldGridWidth","newGridHeight","newGridWidth","close","shownMid","$emit","docEventType","applyHideMenu","checkKeyUp","checkKeyDown","setFocus","firstMenuItem","lastMenuItem","menuItemButtons","scrollBegin","screenReaderOnly","itemShown","itemAction","correctParent","parentElement","toBeDisplayed","oneBinders","tag","method","directiveName","appendGridId","baseDirectiveName","iElement","iAttrs","rmWatcher","newV","newIdString","results","nonNullFound","rowContainerName","colContainerName","bindScrollHorizontal","bindScrollVertical","enableVerticalScrollbar","enableHorizontalScrollbar","rowContainer","mousewheel","RenderContainerMouseWheel","deltaY","scrollYAmount","deltaFactor","viewport","verticalScrollLength","getVerticalScrollLength","scrollYPercentage","pixels","deltaX","scrollXAmount","horizontalScrollLength","getCanvasWidth","getViewportWidth","scrollXPercentage","atTop","atBottom","atLeft","atRight","fireThrottledScrollingEvent","unbind","eventName","headerViewportWidth","footerViewportWidth","viewportWidth","canvasHeight","getCanvasHeight","needsHScrollbarPlaceholder","scrollbarHeight","getHeaderViewportWidth","scrollbarWidth","explicitHeaderCanvasHeight","reHCHeight","cloneScope","compileTemplate","getRowTemplateFn","newScope","$new","$destroy","newFunc","oldFunc","$interpolate","interpolateFn","$log","customScroller","newScrollTop","vertScrollPercentage","scrollVertical","addVerticalScrollSync","prevScrollArgs","getNewScrollTop","addHorizontalScrollSync","getNewScrollLeft","denormalizeScrollLeft","rowStyle","styles","currentTopRow","translateY","rowHeight","currentFirstColumn","isRTL","columnOffset","$attr","uiGridVisible","uiGridDirective","uiGrid","sizeCheckInterval","maxSizeChecks","sizeChecks","gridWidth","enableMinHeightCheck","minRowsToShow","headerRowHeight","footerHeight","calcFooterHeight","getScrollbarWidth","maxNumberOfFilters","allColumnsHaveFilteringTurnedOff","every","newHeight","autoAdjustHeight","refreshCanvas","gridResize","deregisterLeftWatcher","deregisterRightWatcher","hasLeftContainer","newValue","oldValue","hasRightContainer","setup","renderingComplete","checkSize","offsetWidth","gridClassFactory","mostRecentData","deregFunctions","getSize","columnDefsWatchFunction","callDataChangeCallbacks","orderByColumnDefs","preCompileCellTemplates","dataWatchFunction","newData","isString","appScope","hasColumns","rowHeaderColumns","uiGridColumns","buildColumnDefsFromData","buildColumns","modifyRows","redrawInPlace","createGrid","rtl","$observe","$watchCollection","styleWatchDereg","styleComputations","deregFn","innerCompile","side","updateContainerWidth","adjustment","getViewportAdjustment","registerViewportAdjuster","GridOptions","GridColumn","GridRow","GridApi","rowSorter","rowSearcher","GridRenderContainer","Grid","vertical","isScrollingVertically","scrollEnd","appScopeProvider","columnFooterHeight","calcColumnFooterHeight","columnBuilders","rowBuilders","rowsProcessors","columnsProcessors","viewportAdjusters","dataChangeCallbacks","verticalScrollSyncCallBackFns","horizontalScrollSyncCallBackFns","cellValueGetterCache","disableScrolling","debouncedVertical","debounce","scrollDebounce","debouncedVerticalMinDelay","horizontal","debouncedHorizontal","debouncedHorizontalMinDelay","flagScrollingVertically","withDelay","flagScrollingHorizontally","refreshRows","addRowHeaderColumn","gridRow","scrollToIfNecessary","scrollTo","registerRowsProcessor","registerColumnsProcessor","handleNulls","registerEvent","columnRefreshCallback","processRowsCallback","updateFooterHeightCallback","getFooterStyles","hasFooter","gridFooterHeight","registerColumnBuilder","columnBuilder","dataRows","getColumnsFromData","excludeProperties","registerRowBuilder","rowBuilder","types","uid","nextUid","constants","getColDef","colDefs","assignTypes","firstRow","guessType","getCellValue","isRowHeaderColumn","stopColumnBuild","rowHeaderCol","isRowHeader","createRightContainer","createLeftContainer","headerPriority","getOnlyDataColumns","builderPromises","headerOffset","unshift","preprocessColDef","updateColumnDef","builder","columnCache","preCompileCellTemplate","getQualifiedColField","compiledElementFnDefer","cellTemplatePromise","disableColumnOffset","right","newName","counter","newInN","oAccessor","nAccessor","nV","oV","rowEquality","getRow","lookInRows","entity","newRawData","oldRows","oldRowHash","rowHashMap","createRowHashMap","allRowsSelected","newEntity","oldRow","processRowBuilders","put","isSelected","selection","processRowsProcessors","renderableRows","setVisibleRows","processColumnsProcessors","renderableColumns","setVisibleColumns","addRows","existingRowCount","styleComputationInfo","processor","removeRowsProcessor","rowsProcessor","myRenderableRows","finished","defer","startProcessor","renderedRowsToProcess","processedRows","promise","canvasHeightShouldUpdate","visibleRowCache","ri","targetContainer","rowsVisibleChanged","removeColumnsProcessor","myRenderableColumns","renderedColumnsToProcess","processedColumns","ci","refreshCanceller","gridRefreshCanceller","updateCanvasHeight","buildStyles","customStyles","compInfo","minColumnsToRender","totalWidth","currWidth","getBodyHeight","viewPortHeight","viewPortWidth","callBackFn","sourceContainerId","verts","horizs","idh","removeViewportAdjuster","getVisibleRowCount","getVisibleRows","getVisibleColumnCount","searchRows","sortByColumn","rendered","getEntityQualifiedColField","getCellDisplayValue","cellDisplayGetterCache","custom_filter","cellFilter","colField","rowWithCol","getNextColumnSortPriority","resetColumnSorting","excludeCol","getColumnSorting","sortedCols","prioritySort","directionOrAdd","sortDirectionCycle","removeSortOfColumn","getScrollPercentage","scrollPixels","scrollLength","prevScrolltopPercentage","getScrollX","horizScrollPixels","horizScrollLength","prevScrollleftPercentage","horizPercentage","RowHashMap","hashMap","rowsAltered","containerHeadersToRecalc","explicitHeaderHeight","rebuildStyles","maxHeaderHeight","maxHeaderCanvasHeight","getHeight","oldVal","newVal","outerElementHeight","topBorder","getBorderSize","bottomBorder","innerHeaderHeight","headerCanvasHeight","rowsAdded","adjustRows","prevScrollTop","adjustColumns","prevScrollLeft","hasLeftContainerColumns","renderedColumns","hasRightContainerColumns","visRowCache","visColCache","topBound","leftBound","bottomBound","rightBound","seekRowIndex","pixelsToSeeRow","seekColumnIndex","columnLeftEdge","columnRightEdge","deferred","dereg","clearConditions","clearFlags","condition","rowIdentity","listeners","setRowInvisible","clearRowInvisible","registerEventWithAngular","eventId","handler","suppressEvents","listenerFuncs","foundListeners","listener","featureName","feature","removeListener","registerEventsFromObject","eventObjectMap","featProp","featPropName","propName","methodName","createBoundedWrapper","registerMethodsFromObject","methodMap","methods","aggregationValue","aggregationType","visibleRows","cellValues","cellValue","cellNumber","getAggregationValue","setPropertyOrDefault","isNew","hasCustomWidth","allowCustomWidthOverride","colDefWidth","parseErrorMsg","percentStr","percent","isValidWidthValue","minOrMaxWidth","isDefined","minimumColumnSize","cellTooltip","headerTooltip","sortCellFiltered","filterCellFiltered","headerCellFilter","footerCellFilter","isNullOrUndefined","headerClass","defaultFilters","placeholder","ariaLabel","selectOptions","thisPriority","prefixDot","cls","isPinnedLeft","isPinnedRight","getRenderContainer","showColumn","getAggregationText","aggregationHideLabel","aggregationLabel","getCellTemplate","baseOptions","hashKey","getRowIdentity","$$hashKey","columnWidth","maxVisibleColumnCount","virtualizationThreshold","columnVirtualizationThreshold","excessRows","scrollThreshold","excessColumns","horizontalScrollThreshold","aggregationCalcThrottle","wheelScrollThrottle","entityA","entityB","rowTemplate","renderedRows","prevRowScrollIndex","prevColumnScrollIndex","columnStyles","hasHScrollbar","hasVScrollbar","$$canvasHeight","updateColumnWidths","reset","containsColumn","minRowsToRender","minRows","rowAddedHeight","getMargin","amount","oldCanvasHeight","canvasHeightChanged","getHorizontalScrollLength","setRenderedRows","setRenderedColumns","newColumns","updateColumnOffset","hiddenColumnsWidth","yDiff","adjustScrollVertical","xDiff","adjustScrollHorizontal","scrollPercentage","force","postDataLoaded","rowCache","maxRowIndex","rowIndex","newRange","suppressParentScrollDown","suppressParentScrollUp","maxLen","updateViewableRowRange","minCols","maxColumnIndex","colIndex","updateViewableColumnRange","renderedRange","rowArr","columnArr","headerCellWrapperStyle","margin-right","margin-left","asterisksArray","asteriskNum","usedWidthSum","pinRightColumn","fixedNumberArray","percentageArray","totalPercentage","availableWidth","pinnedRight","percentageIntegerValue","maxWidth","variableWidthColumnArray","remainingWidth","asteriskVal","processColumnUpwards","leftoverWidth","columnsToChange","processColumnDownwards","excessWidth","containerBody","scrollWidth","getViewportStyle","scrollbarVisibility","$$height","setThisRowInvisible","clearThisRowInvisible","fromRowsProcessor","invisibleReason","evaluateRowVisibility","fromRowProcessor","newVisibility","$filter","GridRowColumn","getIntersectionValueRaw","sourceRowContainer","sourceColContainer","throttle","trailing","oldScrollLeft","oldScrollTop","RenderContainerTouchMove","Other","newId","rowTemplateFnPromise","rowTemplateFn","defaultColumnBuilder","rowTemplateAssigner","externalSort","templateGetPromises","processTemplate","templateType","providedType","defaultTemplate","filterType","tooltipType","templatePromise","tooltipCall","perRowTemplateFnPromise","defaultCondition","getTerm","stripTerm","escapeRegExp","guessCondition","regexpFlags","caseSensitive","reText","$0","$1","setupFilters","newFilters","filtersLength","noTerm","newFilter","rawTerm","startswithRE","endswithRE","containsRE","exactRE","runColumnFilter","conditionType","tempFloat","searchColumn","useExternalFiltering","filterData","colsLength","hasTerm","foreachRow","foreachFilterCol","rowsLength","filterDataLength","currencyRegexStr","colSortFnCache","guessSortFn","itemType","sortNumber","sortNumberStr","sortBool","sortAlpha","sortDate","basicSort","nulls","numA","numB","badA","badB","strA","strB","localeCompare","timeA","timeB","getSortFn","sortFn","useExternalSorting","sortCols","defaultSortCols","ignoreSort","defaultSort","$$uiGridIndex","rowA","rowB","tem","propA","propB","bindPolyfill","ownerDocument","defaultView","getComputedStyle","rnumnonpx","rdisplayswap","cssShow","position","visibility","augmentWidthOrHeight","extra","isBorderBox","sides","marg","padd","bordermarg","nocontentPad","nocontentnopad","getWidthOrHeight","valueIsBorderBox","$interval","$injector","uppercase","seedId","postProcessTemplate","url","templateHtml","startSym","startSymbol","endSym","endSymbol","outer","msOverflowStyle","widthNoScroll","inner","widthWithScroll","swap","old","fakeElement","newElement","normalizeWheelEvent","lowestDelta","lowestDeltaXY","absDelta","absDeltaXY","orgEvent","delta","wheelDelta","detail","axis","HORIZONTAL_AXIS","wheelDeltaY","wheelDeltaX","isTouchEnabled","bool","DocumentTouch","arrayContainsObjectWithProperty","propertyName","propertyValue","numericAndNullSort","$animate","major","minor","enabled","enableAnimations","digit","charCodeAt","fromCharCode","objType","resetUids","logMessage","logWarn","logDebug","debug","queue","_purgeQueue","elementID","byElement","isElement","aSync","focusBySelector","capsName","margin","el","selector","matchesFn","parent","borderType","detectBrowser","userAgent","navigator","browsers","chrome","safari","firefox","ie","rtlScrollType","definer","clientWidth","preparsed","part","wait","immediate","callNow","lastCall","queued","runFunc","endDate","sinceLast","_events","addOff","removeAt","nullLowestDeltaTimeout","mouseWheeltoBind","documentMode","mousewheelHandler","deltaMode","lineHeight","pageHeight","shouldAdjustOldDeltas","newEvent","clearTimeout","nullLowestDelta","getElementsByTagName","fontSize","getLineHeight","cbs","removeData","decorator","$delegate","defaultFilterLabel","columnMenuButtonLabel","filterLabel","aggregate","groupPanel","showingItems","selectedItems","totalItems","first","previous","last","hide","aggregation","pinning","pinLeft","pinRight","columnMenu","gridMenu","buttonLabel","importerTitle","exporterAllAsCsv","exporterVisibleAsCsv","exporterSelectedAsCsv","exporterAllAsPdf","exporterVisibleAsPdf","exporterSelectedAsPdf","importer","noHeaders","noObjects","invalidCsv","invalidJson","jsonNotArray","pagination","pageToFirst","pageBack","pageSelected","pageForward","pageToLast","sizes","through","of","ungroup","aggregate_count","aggregate_sum","aggregate_max","aggregate_min","aggregate_avg","aggregate_remove","validate","minLength","maxLength","required","exporterAllAsExcel","exporterVisibleAsExcel","exporterSelectedAsExcel","selected","notSelected","DIRECTIVE_ALIASES","MISSING","UPDATE_EVENT","LOCALE_DIRECTIVE_ALIAS","DEFAULT_LANG","i18nConstants","langCache","_langs","strings","lower","getAllLangs","langs","setCurrent","getCurrentLang","stringMaps","language","trans","paths","setCurrentLang","$$observers","uitDirective","observer","alias1","alias2","missing","uitFilter","updateWidth","updateHeight","$watchGroup","newValues","oldValues","FEATURE_NAME","CELL_NAV_EVENT","EVENT_TYPE","KEYDOWN","CLICK","CLEAR","uiGridCellNavConstants","UiGridCellNav","leftColContainer","rightColContainer","leftColumns","rightColumns","bodyContainer","getFocusableCols","allowCellFocus","getFocusableRows","getNextRowCol","curRow","curCol","getRowColLeft","getRowColRight","getRowColUp","getRowColDown","getRowColPageUp","getRowColPageDown","initializeSelection","focusableCols","focusableRows","curColIndex","curRowIndex","nextColIndex","pageSize","initializeGrid","cellNavColumnBuilder","cellNav","lastRowCol","focusedCells","defaultGridOptions","publicApi","navigate","newRowCol","oldRowCol","viewPortKeyDown","rowCol","viewPortKeyPress","scrollToFocus","getFocusedCell","getCurrentSelection","rowColSelectIndex","keyDownOverrides","decorateRenderContainers","rightContainer","leftContainer","getDirection","ctrlKey","altKey","broadcastCellNav","getLeftWidth","upToCol","uiGridCellNavService","makeRowCol","getActiveCell","elms","modifierDown","originEvt","broadcastFocus","clearFocus","enableCellEditOnFocus","uiGridTargetRenderContainerId","usesAria","ariaNotifierDomElt","ariaNotifier","prepend","currentSelection","cellDisplayValue","getAppendedColumnHeaderText","clip","innerHTML","createTextNode","setNotifyText","currentRowColumn","addAriaLiveRegion","uiGridCellnavCtrl","focuser","setAriaActivedescendant","removeAriaActivedescendant","viewPortKeyDownWasRaisedForRowCol","override","focused","metaKey","preventMouseDown","afterCellEdit","cancelCellEdit","refreshCellFocus","focusedRowCol","div","setFocused","EDITABLE_CELL_TEMPLATE","EDITABLE_CELL_DIRECTIVE","BEGIN_CELL_EDIT","END_CELL_EDIT","CANCEL_CELL_EDIT","editColumnBuilder","cellEditableCondition","enableCellEdit","isStartEditKey","uiGridEditService","uiGridEditConstants","touchstartTimeout","has","origCellValue","cellModel","cancelTouchstartTimeout","editCellScope","inEdit","cellNavNavigateDereg","viewPortKeyDownDereg","setEditable","beginEditEventsWired","registerBeginEditEvents","cancelBeginEditEvents","beginEdit","touchStart","beginEditKeyDown","touchEnd","isSaving","shouldEdit","modelField","editModelField","optionFilter","editDropdownFilter","inputType","editDropdownOptionsFunction","editDropdownOptionsArray","editDropdownRowEntityOptionsArrayPath","resolveObjectFromPath","editDropdownIdLabel","editDropdownValueLabel","createEditor","gridCellContentsEl","deregOnGridScroll","endEdit","deregOnEndCellEdit","deregOnCancelCellEdit","assign","cancelEdit","beginEditAfterScroll","ngModel","setSelectionRange","ex","viewPortKeyDownUnregister","$setViewValue","$render","stopEdit","deepEdit","inputForm","$valid","attrs","$formatters","modelValue","$setValidity","$parsers","viewValue","dateValue","dateString","parseDateString","handleFileSelect","srcElement","files","editFileChooserCallback","form","disableEmptyBaseLayer","baseLayer","emptyRows","enableEmptyGridBaseLayer","setNumberOfEmptyRows","uiGridBaseLayerService","uiGridEmptyBaseLayer","renderBodyContainer","newViewPortHeight","heightHasChanged","getEmptyBaseLayerCss","emptyBaseLayerContainer","expandable","expandedAll","enableExpandable","showExpandAllButton","expandableRowHeight","expandableRowHeaderWidth","expandableRowTemplate","rowExpandedBeforeStateChanged","rowExpandedStateChanged","toggleRowExpansion","expandAllRows","collapseAllRows","toggleAllRows","expandRow","isExpanded","collapseRow","getExpandedRows","expandedRowHeight","subGridOptions","disableRowExpandable","uiGridExpandableService","enableExpandableRowHeader","expandableRowHeaderColDef","exporterSuppressExport","enableColumnResizing","parentRow","expandableRowScope","expandedRowElement","expandedRendered","expandableRow","shouldRenderExpand","shouldRenderFiller","rowRepeatDiv","expandedRowFillerElement","VISIBLE","SELECTED","CSV_CONTENT","BUTTON_LABEL","FILE_NAME","uiGridExporterConstants","delay","exporter","csvExport","rowTypes","colTypes","pdfExport","excelExport","addToMenu","exporterSuppressMenu","exporterMenuLabel","exporterSuppressColumns","exporterCsvColumnSeparator","exporterCsvFilename","exporterPdfFilename","exporterOlderExcelCompatibility","exporterIsExcelCompatible","exporterMenuItemOrder","exporterPdfDefaultStyle","exporterPdfTableStyle","exporterPdfTableHeaderStyle","bold","color","exporterPdfHeader","exporterPdfFooter","exporterPdfOrientation","exporterPdfPageSize","exporterPdfMaxGridWidth","exporterMenuAllData","exporterMenuVisibleData","exporterMenuSelectedData","exporterMenuExcel","exporterPdfCustomFormatter","docDef","exporterHeaderFilterUseName","exporterFieldCallback","defaultExporterFieldCallback","exporterFieldFormatCallback","exporterFieldApplyFilters","exporterAllDataFn","exporterAllDataPromise","getSelectedRows","loadAllDataIfNeeded","exportColumnHeaders","getColumnHeaders","exportData","csvContent","formatAsCsv","downloadFile","allData","bodyColumns","headerEntry","exporterHeaderFilter","getDisplayName","align","getRowsFromNode","aNode","nodeRows","getDataSorted","applyCellFilters","numberLevels","tree","getSelectedGridRows","exporterEnableExporting","extractedRow","extractedField","extension","exporterPdfAlign","alignment","bareHeaders","csv","formatRowAsCsv","formatFieldAsCsv","JSON","stringify","isIE","fileName","columnSeparator","rawFile","strMimeType","ieVersion","msSaveBlob","msSaveOrOpenBlob","Blob","frame","contentWindow","open","write","blob","URL","createObjectURL","setAttribute","encodeURIComponent","click","createEvent","eventObj","initEvent","dispatchEvent","docDefinition","prepareAsPdf","appVersion","downloadPDF","pdfMake","createPdf","getBuffer","buffer","headerWidths","calculatePdfHeaderWidths","headerColumns","stringData","formatRowAsPdf","pageOrientation","content","table","headerRows","widths","tableStyle","tableHeader","defaultStyle","exporterPdfLayout","layout","exportHeaders","baseGridWidth","extraColumns","formatFieldAsPdfString","returnVal","formatAsExcel","workbook","sheet","sheetData","headerData","exportStyle","metadata","formatRowAsExcel","formatFieldAsExcel","formatters","prepareAsExcel","exporterExcelCustomFormatters","exporterExcelHeader","headerText","ExcelBuilder","Workbook","aName","exporterExcelSheetName","Worksheet","addWorksheet","colWidths","setColumns","excelContent","setData","Builder","createFile","uiGridExporterService","rowHeaderColName","EXPANDED","COLLAPSED","COUNT","SUM","MAX","MIN","AVG","uiGridGroupingConstants","uiGridTreeBaseService","groupHeaderCache","groupRows","groupingColumnBuilder","groupingColumnProcessor","getGrouping","getExpanded","aggregations","rowExpandedStates","getRowExpandedStates","groupingHeaderCache","setGrouping","groupColumn","ungroupColumn","clearGrouping","aggregateColumn","aggregationDef","tidyPriorities","enableGrouping","groupingShowCounts","groupingNullLabel","copy","groupPriority","treeAggregationFn","nativeAggregations","aggregationFn","treeAggregationFinalizerFn","groupedFinalizerFn","aggregateRemove","addAggregationMenu","treeAggregation","groupingShowGroupingMenu","groupingShowAggregationMenu","treeCustomAggregations","menuTitle","moveGroupColumns","groupVal","groupingPosition","a_group","b_group","existingGrouping","previousSort","customTreeAggregationFinalizer","finalizerFn","applyRowExpandedStates","currentGrouping","groupArray","sortArray","oldGroupingHeaderCache","processingState","initialiseProcessingState","updateProcessingState","groupFieldState","stateIndex","fieldValue","currentValue","insertGroupHeader","groupItem","fieldName","currentRow","aggregateArray","columnIndex","newDisplayValue","headerRow","getKeyAsValueForCacheMap","cacheItem","treeLevel","groupHeader","internalRow","enableSelection","finaliseProcessingState","treeChildren","newChildren","state","treeNode","currentNode","expandedStates","uiGridGroupingService","uiGridImporterConstants","importFile","fileObject","importThisFile","enableImporter","importerShowMenu","importerProcessHeaders","processHeaders","importerHeaderFilter","importerErrorCallback","importerDataAddCallback","importerObjectCallback","newObject","importAFile","reader","FileReader","onload","importJsonClosure","importCsvClosure","readAsText","newObjects","importArray","parseJson","addObjects","loadedObjects","parse","alertError","parseCsv","createCsvObjects","CSV","headerMapping","lookupHash","flattenColumnDefs","flattenedHash","columnDef","rowEdit","setRowsDirty","importerNewObject","alertI18nToken","consoleMessage","alert","uiGridImporterService","fileChooser","enableInfiniteScroll","infiniteScroll","dataLoading","setScrollDirections","infiniteScrollUp","infiniteScrollDown","handleScroll","needLoadMoreData","needLoadMoreDataTop","dataLoaded","scrollUp","scrollDown","adjustScroll","resetScroll","adjustInfiniteScrollPosition","saveScrollPercentage","previousVisibleRows","dataRemovedTop","dataRemovedBottom","infiniteScrollRowsFromEnd","loadData","targetPercentage","newVisibleRows","newTop","oldTop","uiGridInfiniteScrollService","registerPublicApi","moveColumns","orderCache","movableColumnBuilder","verifyColumnOrder","originalPosition","newPosition","moveColumn","finalPosition","nonMovableColumns","findPositionForRenderIndex","redrawColumnAtPosition","enableColumnMoving","updateColumnCache","newIndex","headerRowOffset","cacheCol","cacheIndex","i0","originalColumn","i1","i2","uiGridMoveColumnService","gridLeft","totalMouseMovement","rightMoveLimit","movingElm","reducedWidth","elmCloned","moveOccurred","changeValue","onselectstart","moveElement","cloneElement","targetIndex","il","totalColumnsLeftWidth","ir","totalColumnsRightWidth","movingElementStyles","gridRight","elmRight","totalColumnWidth","newElementLeft","currentElmLeft","currentElmRight","paginationChanged","currentPage","getPage","paginationCurrentPage","getFirstRowIndex","useCustomPagination","getLastRowIndex","getTotalPages","nextPage","previousPage","seek","page","useExternalPagination","lastRow","paginationTemplate","onPaginationChanged","uiGridPaginationService","updateLabels","paginationApi","sizesLabel","totalItemsLabel","paginationOf","paginationThrough","deregP","cantPageForward","cantPageToLast","totalPages","cantPageBackward","focusToInputIf","pageFirstPageClick","pagePreviousPageClick","pageNextPageClick","pageLastPageClick","uiGridPinningConstants","pinningColumnBuilder","columnPinned","pinColumn","enablePinning","hidePinLeft","hidePinRight","pinnedLeft","pinColumnLeftAction","pinColumnRightAction","removePinAction","uiGridPinningService","enableColumnResize","colResizerColumnBuilder","deltaChange","fireColumnSizeChanged","findTargetCol","rtlMultiplier","uiGridResizeColumnsService","columnResizerElm","displayResizers","resizers","otherCol","resizerLeft","resizerRight","resizeOverlay","startX","constrainWidth","newWidth","moveFunction","targetTouches","clientX","hasClass","upFunction","changedTouches","downFunction","dblClickFn","cells","cell","menuButton","uiGridRowEditConstants","saveRow","setSavePromise","savePromise","getDirtyRows","dirtyRows","getErrorRows","errorRows","flushDirtyRows","setRowsClean","endEditCell","beginEditCell","cancelEditCell","rowEditSavePromise","processSuccessPromise","processErrorPromise","isDirty","isError","rowEditSaveTimer","removeRow","isRowPresent","rowArray","removeGridRow","present","cancelTimer","previousValue","considerSetTimer","waitTime","myDataRows","uiGridRowEditService","existingNgClass","newNgClass","uiGridSaveStateConstants","saveWidths","savedState","saveColumns","scrollFocus","saveScrollFocus","treeView","savePagination","restoreColumns","restoreScrollFocus","restoreSelection","restoreGrouping","restoreTreeView","restorePagination","savedColumn","copiedFilter","rowVal","getRowVal","prevColScrollIndex","getTreeView","saveRowIdentity","identity","columnsState","isSortChanged","columnState","currentCol","isEmpty","currentIndex","scrollFocusState","findRowByIdentity","selectionState","clearSelectedRows","foundRow","selectRow","selectRowByVisibleIndex","groupingState","treeViewState","setTreeView","filteredRows","uiGridSaveStateService","selectionRowHeaderColName","setSelected","selectedCount","uiGridSelectionConstants","lastSelectedRow","rowSelectionChanged","rowSelectionChangedBatch","toggleRowSelection","multiSelect","noUnselect","rowNum","unSelectRow","unSelectRowByVisibleIndex","selectAllRows","changedRows","isRowSelectable","decideRaiseSelectionEvent","decideRaiseSelectionBatchEvent","selectAllVisibleRows","getSelectedCount","setMultiSelect","setModifierKeysToMultiSelect","modifierKeysToMultiSelect","getSelectAllState","selectionRowHeaderWidth","enableFooterTotalSelected","selectedRows","shiftSelect","fromRow","toRow","rowToSelect","uiGridSelectionService","selectionRowHeaderDef","processorSet","processSelectableRows","updateOptions","selectButtonClick","selectButtonKeyDown","headerButtonKeyDown","headerButtonClick","touchStartTime","selectCells","registerRowSelectionEvents","registered","uiGridTreeBaseConstants","expandAll","treeRows","treeBaseColumnBuilder","createRowHeader","toggleRowTreeState","recursive","expandRowChildren","collapseRowChildren","getTreeExpandedState","expandedState","getTreeState","setTreeState","getRowChildren","childNode","treeRowHeaderBaseWidth","treeIndent","showTreeRowHeader","showTreeExpandNoChildren","enableExpandAll","customTreeAggregationFn","treeAggregationType","treeAggregationLabel","treeAggregationUpdateEntity","customTreeAggregationFinalizerFn","rowHeaderColumnDef","node","setAllNodes","targetState","parents","pop","allExpanded","allExpandedInternal","createTree","updateRowHeaderWidth","sortTree","fixFilter","renderTree","rowHeader","nodeList","currentLevel","getAggregations","$$treeLevel","lastParent","finaliseAggregations","setCurrentState","addOrUseNode","aggregationBase","newAggregations","buildAggregationObject","newNode","currentState","sortInternal","treeList","treeNodes","parentsVisible","fixFilterInternal","nodes","setParentsVisible","newAggregation","treeFooterAggregation","treeFooterAggregationType","numValue","finaliseAggregation","aggregationCopy","treeButtonClick","uiGridTreeViewConstants","adjustSorting","enableTreeView","uiGridTreeViewService","$sce","validatorFactories","setExternalFactoryFunction","externalFactoryFunction","clearExternalFactory","getValidatorFromExternalFactory","argument","validatorFactory","getMessageFromExternalFactory","messageFunction","setValidator","getValidator","validator","getMessage","message","isInvalid","setInvalid","setValid","setError","validatorName","clearError","getErrorMessages","errors","validators","getFormattedErrors","msgString","errorMsg","trustAsHtml","getTitleFormattedErrors","runValidators","validateClosureFactory","validationFailed","validatorFunction","createDefaultValidators","uiGridValidateService","MainCtrl","arrayOrderingSrv","looknfeel","asIframe","defaultPrevented","noteName","note","_","getNoteName","notePath","getNotePath","BootstrapDialog","defaultOptions","onshown","configDefaultOptions","animate","HomeCtrl","noteListFactory","websocketMsgSrv","ngToast","noteActionService","TRASH_FOLDER_ID","dismiss","vm","notes","numberOfNotesDisplayed","notebookHome","noteCustomHome","staticHome","isReloading","query","q","initHome","getHomeNote","reloadNoteList","reloadAllNotesFromRepo","isReloadingNotes","toggleFolderNode","hidden","viewOnly","loadMoreNotes","renameNote","nodeId","nodePath","moveNoteToTrash","noteId","moveFolderToTrash","folderId","restoreNote","restoreFolder","restoreAll","renameFolder","removeNote","removeFolder","emptyTrash","clearAllParagraphOutput","isFilterNote","noteComparator","note1","note2","_interopRequireDefault","_paragraph","NotebookCtrl","$route","$routeParams","saveAsService","noteVarShareService","actionOnFormSelectionChange","hideForms","disableForms","editorToggled","tableToggled","showSetting","showRevisionsComparator","collaborativeMode","collaborativeModeUsers","looknfeelOption","noteFormTitle","cronOption","formatRevisionDate","revisionSort","orderArr","interpreterSettings","interpreterBindings","isNoteDirty","saveTimer","paragraphWarningDialog","connectedOnce","noteRevisions","currentRevision","revisionView","isRevisionPath","searchText","occurrencesExists","needHighlightFirst","occurrencesHidden","replaceText","needToSendNextOccurrenceAfterReplace","occurrencesCount","currentOccurrence","searchBoxOpened","searchBoxWidth","currentSearchParagraph","param","initNotebook","addEvent","removeEventByID","eventType","eventID","onDestroyElement","getCronOptionNameFromValue","blockAnonUsers","zeppelinVersion","show","closable","closeByBackdrop","closeByKeyboard","buttons","dialog","clear","revisionId","getNoteByRevision","getNote","listRevisionHistory","currentRoute","routeParams","params","$id","focusParagraphOnClick","clickEvent","paragraphs","paragraphId","keydownEvent","keyEvent","keyboardShortcut","paragraphOnDoubleClick","isTrash","listConfigurations","configurations","exportNote","jsonContent","confirm","saveAs","exportNbformat","convertNote","cloneNote","checkpointNote","commitMessage","setNoteRevision","preVisibleRevisionsComparator","mergeNoteRevisionsForCompare","firstNoteRevisionForCompare","secondNoteRevisionForCompare","currentFirstRevisionForCompare","currentSecondRevisionForCompare","revisionList","findIndex","initializeLookAndFeel","visitRevision","revision","danger","verticalPosition","dismissOnTimeout","runAllParagraphs","settings","saveNote","par","saveParagraph","toggleAllEditor","showAllEditor","hideAllEditor","toggleAllTable","showAllTable","hideAllTable","isNoteRunning","killSaveTimer","startSaveTimer","setLookAndFeel","setNoteFormTitle","setCronScheduler","cronExpr","cronExecutingUser","cronExecutingRoles","roles","cron","updateNote","updateNoteName","trimmedNewName","addPara","para","removePara","removeIdx","each","paragraphUrl","newIdx","removedPara","info","getInterpreterBindings","interpreterBindingsOrig","selectedIntp","interpreterSelectionListeners","accept","sourceItemHandleScope","destSortableScope","itemMoved","orderChanged","closeAdditionalBoards","closeSetting","closePermissions","closeRevisionsComparator","openSetting","isSettingDirty","saveSetting","selectedSettingIds","no","saveInterpreterBindings","toggleSetting","openRevisionsComparator","toggleRevisionsComparator","getPermissions","success","permissions","permissionsOrig","selectJson","tokenSeparators","ajax","processResults","users","more","cache","tags","minimumInputLength","setMyPermissions","select2","openPermissions","showPermissions","isPermissionsDirty","hasMatches","markAllOccurrences","markAllOccurrencesAndHighlightFirst","sendNextOccurrenceMessage","sendPrevOccurrenceMessage","increaseCurrentSearchParagraph","nextOccurrence","prevOccurrence","cnt","replaceAll","onPressOnFindInput","makeSearchBoxVisible","searchGroupRect","dropdownRight","innerWidth","searchClicked","restartInterpreter","interpreter","thisConfirm","escape","payload","$modalFooter","savePermissions","isAnonymous","owners","readers","runners","writers","isOwnerEmpty","setPermissions","modal","togglePermissions","arrayIntersection","arrayFirst","arraySecond","myPermissions","isOwner","isWriter","toggleNotePersonalizedMode","personalizedMode","updatePersonalizedMode","isNeedConfirm","allParagraphs","toRunParagraphs","saveCursorPosition","reverse","angParagEditor","editor","lead","prevParagraph","moveParagraph","nextParagraph","currentParagraphId","insertParagraph","noteCopy","editorHide","tableHide","cleanParagraphExcept","$unBindKeyEvent","isPersonalized","allowLeave","thisScope","dirtyText","originalText","showParagraphWarning","opened","locationToRedirect","pathParams","noteForms","formsData","noteParams","isShowNoteForms","saveNoteForms","removeNoteForms","formName","actionbarHeight","lastElementChild","webpackPolyfill","./af","./af.js","./ar","./ar-dz","./ar-dz.js","./ar-kw","./ar-kw.js","./ar-ly","./ar-ly.js","./ar-ma","./ar-ma.js","./ar-sa","./ar-sa.js","./ar-tn","./ar-tn.js","./ar.js","./az","./az.js","./be","./be.js","./bg","./bg.js","./bm","./bm.js","./bn","./bn.js","./bo","./bo.js","./br","./br.js","./bs","./bs.js","./ca","./ca.js","./cs","./cs.js","./cv","./cv.js","./cy","./cy.js","./da","./da.js","./de","./de-at","./de-at.js","./de-ch","./de-ch.js","./de.js","./dv","./dv.js","./el","./el.js","./en-au","./en-au.js","./en-ca","./en-ca.js","./en-gb","./en-gb.js","./en-ie","./en-ie.js","./en-il","./en-il.js","./en-nz","./en-nz.js","./eo","./eo.js","./es","./es-do","./es-do.js","./es-us","./es-us.js","./es.js","./et","./et.js","./eu","./eu.js","./fa","./fa.js","./fi","./fi.js","./fo","./fo.js","./fr","./fr-ca","./fr-ca.js","./fr-ch","./fr-ch.js","./fr.js","./fy","./fy.js","./gd","./gd.js","./gl","./gl.js","./gom-latn","./gom-latn.js","./gu","./gu.js","./he","./he.js","./hi","./hi.js","./hr","./hr.js","./hu","./hu.js","./hy-am","./hy-am.js","./id","./id.js","./is","./is.js","./it","./it.js","./ja","./ja.js","./jv","./jv.js","./ka","./ka.js","./kk","./kk.js","./km","./km.js","./kn","./kn.js","./ko","./ko.js","./ky","./ky.js","./lb","./lb.js","./lo","./lo.js","./lt","./lt.js","./lv","./lv.js","./me","./me.js","./mi","./mi.js","./mk","./mk.js","./ml","./ml.js","./mn","./mn.js","./mr","./mr.js","./ms","./ms-my","./ms-my.js","./ms.js","./mt","./mt.js","./my","./my.js","./nb","./nb.js","./ne","./ne.js","./nl","./nl-be","./nl-be.js","./nl.js","./nn","./nn.js","./pa-in","./pa-in.js","./pl","./pl.js","./pt","./pt-br","./pt-br.js","./pt.js","./ro","./ro.js","./ru","./ru.js","./sd","./sd.js","./se","./se.js","./si","./si.js","./sk","./sk.js","./sl","./sl.js","./sq","./sq.js","./sr","./sr-cyrl","./sr-cyrl.js","./sr.js","./ss","./ss.js","./sv","./sv.js","./sw","./sw.js","./ta","./ta.js","./te","./te.js","./tet","./tet.js","./tg","./tg.js","./th","./th.js","./tl-ph","./tl-ph.js","./tlh","./tlh.js","./tr","./tr.js","./tzl","./tzl.js","./tzm","./tzm-latn","./tzm-latn.js","./tzm.js","./ug-cn","./ug-cn.js","./uk","./uk.js","./ur","./ur.js","./uz","./uz-latn","./uz-latn.js","./uz.js","./vi","./vi.js","./x-pseudo","./x-pseudo.js","./yo","./yo.js","./zh-cn","./zh-cn.js","./zh-hk","./zh-hk.js","./zh-tw","./zh-tw.js","webpackContext","req","webpackContextResolve","_advancedTransformationUtil","AdvancedTransformation","spec","initializeConfig","conf","chartChanged","parameterChanged","configInstance","resetAxisConfig","emitChartChange","resetParameterConfig","emitParameterChange","toggleColumnPanel","panel","columnPanelOpened","emitConfigChange","toggleParameterPanel","parameterPanelOpened","getAxisAnnotation","axisSpec","anno","getAxisTypeAnnotation","minAxisCount","maxAxisCount","isSingleDimensionAxis","getAxisAnnotationColor","isAggregatorAxis","background-color","isGroupAxis","isKeyAxis","useSharedAxis","chartName","getSingleDimensionAxis","getCurrentChartAxis","axisChanged","ui","removeDuplicatedColumnsInMultiDimensionAxis","applyMaxAxisCount","aggregatorChanged","aggregator","removeFromAxis","paramSpec","parameterOnKeyDown","serializeSharedAxes","getCurrentChart","axisSpecs","getCurrentChartAxisSpecs","getCurrentChartParam","paramSpecs","getCurrentChartParamSpecs","parsedParam","parseParameter","_getTransformer","getTransformer","transformer","parameter","getCurrentChartTransform","charts","transform","sharedAxis","availableCharts","getAvailableChartNames","OPTION","TEXTAREA","ParameterValueType","INT","FLOAT","_typeof","getSpecs","sliced","uniqObject","filtered","clearAxisConfig","initAxisConfig","clearParameterConfig","initParameterConfig","getSpecVersion","_getSpecVersion","axisVersion","paramVersion","available","getColumnsForMultipleAxes","getColumnsFromAxis","transformSpec","keyColumns","groupColumns","aggregatorColumns","customColumns","custom","TransformMethod","RAW","OBJECT","_getKGACube","getKGACube","cube","keyColumnName","keyNames","groupNameSet","selectorNameWithIndex","_getObjectRowsFromKGA","getObjectRowsFromKGACube","transformed","groupNames","sortedSelectors","selectors","ARRAY","_getKGACube2","_getArrayRowsFromKGAC","getArrayRowsFromKGACube","ARRAY_2_KEY","keyAxisColumn","AxisType","KEY","key1Columns","key2Columns","axisName","_getKKGACube","getKKGACube","key1ColumnName","key1Names","key2ColumnName","key2Names","_getArrayRowsFromKKGA","getArrayRowsFromKKGACube","key1NameWithIndex","key2NameWithIndex","DRILL_DOWN","_getKAGCube","getKAGCube","_getDrilldownRowsFrom","getDrilldownRowsFromKAGCube","getSelectorName","getCubeValue","getNameWithIndex","fillSelectorRows","fillArrayRow","getObjectRow","fillDrillDownRow","sortWithNumberSupport","AGGREGATOR","GROUP","axisType","dimension","specObject","specs","singleSpec","axisHash","paramHash","axisNames","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","iterator","done","return","keyAxisNames","groupAxisNames","aggrAxisNames","customColumn","_loop","includes","Aggregator","AggregatorFunctions","varA","varB","AggregatorFunctionDiv","aggrColumns","entry","Set","keyNameSet","indexCounter","_loop2","mergedKeyName","mergedGroupName","aggrColumn","aggrName","mergedGroupColumnName","_loop3","drillDownedValue","drillDownedCount","key1","key2","key1NameSet","key2NameSet","_loop4","mergedKey1Name","mergedKey2Name","aggrColumnLength","aggrColumnName","nameWithIndex","sortedSelectorNameWithIndex","selectorRows","fill","grouped","key1Name","key2Name","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","selectorIndex","aggregated","iterateGroupNames","keyed","availableGroupNames","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","groupName","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","key1ed","availableKey2Names","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","keyArrowRows","keyNameWithIndex","keyName","keyArrayRows","keyIndex","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","drillDown","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","BTN_GROUP","newSpecHash","toJson","previousSpecHash","tableOptionSpecHash","option","persistedTableOption","isColumnNameUpdated","columnTypeState","prevColumnNames","newColumnNames","prevColumnType","NUMBER_STR","prevColName","newColName","_jobmanager","_jobmanager2","_jobStatus","JobManagerController","JobManagerFilter","JobManagerService","JobDateSorter","RECENTLY_UPDATED","OLDEST_UPDATED","isFilterLoaded","jobs","sorter","availableDateSorter","currentDateSorter","filteredJobs","filterConfig","isRunningAlwaysTop","noteNameFilterValue","interpreterFilterValue","isSortByAsc","itemsPerPage","maxPageCount","getJobs","subscribeSetJobs","setJobsCallback","subscribeUpdateJobs","updateJobsCallback","disconnect","setJobDateSorter","dateSorter","getJobsInCurrentPage","cp","itp","asyncNotebookJobFilter","setJobs","filterJobs","jobByNoteId","updatedJob","newItem","job","isRemoved","removeIndex","isRunningJob","noteType","unixTimeLastRun","filterValueToName","filterValue","maxStringLength","defaultInterpreters","intp","setFilterValue","interpreters","arr2","JobModule","JobComponent","_createClass","defineProperties","descriptor","configurable","writable","Constructor","protoProps","staticProps","_job2","JobController","clickOk","getNoteId","sendRunJobRequest","showErrorDialog","sendStopJobRequest","errorMessage","timestamp","paragraphStatuses","getParagraphs","runningOrFinishedParagraphs","totalCount","runningCount","getProgress","bindings","jobTemplate","component","jobItem","lowerFilterValue","lowerNotebookName","BaseUrlService","WebsocketMessageService","apiURL","disconnectJobEvent","controllerScope","receiveCallback","unsubscribeHandler","_nodeStatus","ClusterController","NodeDateSorter","Domain_ASC","Domain_DSC","filteredNodes","nodeNameFilterValue","getBase","setNodeDateSorter","getNodesInCurrentPage","getNodeIconByStatus","getNodeColorByStatus","filterNodes","task","NodeStatus","NodeCtrl","intpName","intpProcesses","searchNode","filteredProcesses","nodeFilter","intpProcess","properties","INTP_PROCESS_NAME","getProgressInCurrentPage","pros","InterpreterCtrl","interpreterSettingsTmp","availableInterpreters","showAddNewSetting","showRepositoryInfo","searchInterpreter","interpreterPropertyTypes","showInterpreterAuth","getSelectJson","multiple","getInterpreterSettings","checkDownloadingDependencies","isDownloading","errorReason","originalPath","emptyNewProperty","propertyKey","propertyType","emptyNewDependency","depArtifact","depExclude","removeTMPSettings","copyOriginInterpreterSettingProperties","settingId","setPerNoteOption","sessionOption","newInterpreterSetting","perNote","session","process","defaultValueByType","setPerUserOption","perUser","getPerNoteOption","getPerUserOption","getInterpreterRunningOption","setInterpreterRunningOption","isPerNoteMode","isPerUserMode","updateInterpreterSetting","addNewInterpreterProperty","addNewInterpreterDependency","isExistingProcess","setPermission","isUserImpersonate","remote","request","dependencies","$show","resetInterpreterSetting","removeInterpreterSetting","delete","newInterpreterGroupChange","pluck","intpInfo","restartInterpreterSetting","addNewInterpreterSetting","newSetting","newProperties","resetNewInterpreterSetting","cancelInterpreterSetting","removeInterpreterProperty","removeInterpreterDependency","artifact","groupArtifactVersion","exclusions","dep","resetNewRepositorySetting","newRepoSetting","snapshot","username","password","proxyProtocol","proxyHost","proxyPort","proxyLogin","proxyPassword","getRepositories","repositories","addNewRepository","removeRepository","repoId","isDefaultRepository","showErrorMessage","getInterpreterBindingModeDocsLink","sortedKeys","InterpreterItemDirective","$last","modelCtrl","inputValue","transformedInput","CredentialController","credentialInfo","showAddNewCredentialInfo","hasCredential","isValidCredential","addNewCredentialInfo","newCredential","showToast","resetCredentialInfo","toggleAddNewCredentialInfo","cancelCredentialInfo","copyOriginCredentialsInfo","updateCredentialInfo","credential","removeCredentialInfo","getCredentialDocsLink","currentVersion","autocomplete","returnedCredentials","userCredentials","ConfigurationCtrl","configrations","RevisionsComparatorModule","RevisionsComparatorComponent","_revisionsComparator2","RevisionsComparatorController","currentParagraphDiffDisplay","getNoteRevisionForReview","getNoteByRevisionForCompare","compareRevisions","paragraphs1","paragraphs2","merge","firstString","colorClass","span","text1","text2","JsDiff","diffLines","diffHtml","createDocumentFragment","identical","added","removed","changeCurrentParagraphDiffDisplay","revisionsComparatorTemplate","_spell","_diffMatchPatch2","ParagraphExecutor","ParagraphCtrl","completionListLength","parentNote","cursorPosition","diffMatchPatch","DiffMatchPatch","spellTransaction","totalResultCount","renderedResultCount","propagated","resultsMsg","paragraphText","searchRanges","currentRange","markerId","editorSetting","pastePercentSign","setInterpreterBindings","paragraphScope","compiledScope","z","runParagraph","angularBind","varName","clientBindAngularObject","angularUnbind","clientUnbindAngularObject","angularObjectRegistry","newParagraph","baseMapOption","colWidthOption","fontSizeOption","paragraphFocused","isRunning","initializeDefault","setReadOnly","colWidth","runOnSelectionChange","editOnDblClick","isOutputHidden","getIframeDimensions","paragraphid","$$absUrl","postMessage","getEditor","cancelParagraph","cancelParagraphRun","propagateSpellResult","paragraphTitle","paragraphResults","paragraphStatus","paragraphErrorMessage","paragraphConfig","paragraphSettingsParam","paragraphDateStarted","paragraphDateFinished","paragraphExecutedBySpell","handleSpellError","digestRequired","dateFinished","getFormattedParagraphTime","dateStarted","prepareSpellTransaction","increaseSpellTransactionResultCount","cleanupSpellTransaction","executor","propagable","runParagraphUsingSpell","executeSpell","runParagraphUsingBackendInterpreter","bindBeforeUnload","returnValue","unBindBeforeUnload","commitParagraph","toggleEnableDisable","getSpellByMagic","closeEditorAndOpenTable","openEditorAndOpenTable","runParagraphFromShortcut","runParagraphFromButton","getEditorValue","runAllToThis","runAllFromThis","runAllFromThisFromShortcut","runAllToThisFromShortcut","turnOnAutoRun","moveUp","moveDown","insertNew","copyPara","editorValue","copyParagraph","removeParagraph","clearParagraphOutput","toggleEditor","openEditor","closeEditor","closeTable","openTable","manageEditorAndTableState","hideEditor","hideTable","showTitle","hideTitle","setTitle","showLineNumbers","lineNumbers","renderer","setShowGutter","hideLineNumbers","columnWidthClass","changeColWidth","changeFontSize","setOptions","autoAdjustEditorHeight","toggleOutput","aceChanged","getSession","getValue","sendPatch","setParagraphMode","getCursorPosition","moveCursorToPosition","patch","patch_make","patchParagraph","aceLoaded","_editor","langTools","ace","Range","$blockScrolling","Infinity","setShowFoldWidgets","setHighlightActiveLine","setUseWrapMode","setTheme","getParagraphMagic","goToEnd","gotoLine","adjustEditorListener","resize","setKeyboardHandler","isMac","completion","buf","remoteCompleter","getCompletions","defaultKeywords","keyWordCompleter","completions","isFocused","getTextRange","computeCaption","meta","maxLengthCaption","caption","setCompleters","snippetCompleter","textCompleter","enableBasicAutocompletion","enableSnippets","enableLiveAutocompletion","handleFocus","editSession","commands","removeCommand","isOption","bindKey","addCommand","win","mac","sender","env","iCursor","getLine","char","completionKey","loadModule","indent","keyBindingEditorFocusAction","scrollValue","numRows","getLength","scrollToCursor","keyBinding","origOnCommandKey","onCommandKey","hashId","completer","activated","cursorPos","$cursorLayer","getPixelPosition","completionSupportWithoutBackend","filterText","prev","filterCompletions","exactMatch","snippet","completionSupportWithBackend","isDigestPass","filteredList","FilteredList","completionSupport","setFilter","editorMode","setMode","pragraphText","getEditorSetting","setEditorLanguage","getScreenLength","lastCursorMove","windowHeight","scrollPosition","editorPosition","lastCursorPosition","calculatedCursorPosition","scrollTargetPos","bodyEl","stop","finish","interrupt","currentProgress","getExecutionTime","pdata","end","start","timeMs","isResultOutdated","durationFormat","endFormat","user","getElapsedTime","dateUpdated","navigateFileEnd","parseTableCell","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","isUpdateRequired","oldPara","newPara","dateCreated","jobName","runtimeInfos","goToSingleParagraph","redirectToUrl","protocol","host","pathname","showScrollDownIcon","doc","scrollParagraphDown","keepScrollDown","showScrollUpIcon","scrollParagraphUp","registry","angularObject","interpreterGroupId","skipEmit","clearWatcher","updateAngularObject","funcName","infos","updateAllScopeTexts","updateParagraphObjectWhenUpdated","aborted","isReadOnly","updateParagraph","updateCallback","statusChanged","resultRefreshed","newResult","oldResult","newConfig","oldConfig","patch_fromText","patch_apply","progress","noShortcutDefined","cursorPosRow","cursorPosCol","mouseEvent","blur","openEditorAndCloseTable","clearSearchSelection","removeMarker","onEditorClick","findAll","ranges","getAllRanges","toSingleRange","clearSelection","addMarker","range","indexFromEnd","prevId","needle","diff_match_patch","Diff_Timeout","Diff_EditCost","Match_Threshold","Match_Distance","Patch_DeleteThreshold","Patch_Margin","Match_MaxBits","Diff","diff_main","opt_checklines","opt_deadline","MAX_VALUE","deadline","checklines","commonlength","diff_commonPrefix","commonprefix","diff_commonSuffix","commonsuffix","diff_compute_","diff_cleanupMerge","longtext","shorttext","diff_halfMatch_","text1_a","text1_b","text2_a","text2_b","mid_common","diffs_a","diffs_b","diff_lineMode_","diff_bisect_","diff_linesToChars_","chars1","chars2","linearray","lineArray","diff_charsToLines_","diff_cleanupSemantic","pointer","count_delete","count_insert","text_delete","text_insert","text1_length","text2_length","max_d","v_offset","v_length","v1","v2","front","k1start","k1end","k2start","k2end","k1","k1_offset","y1","x1","k2_offset","x2","diff_bisectSplit_","k2","y2","text1a","text2a","text1b","text2b","diffsb","lineHash","diff_linesToCharsMunge_","chars","lineStart","lineEnd","lineArrayLength","line","pointermin","pointermax","pointermid","pointerstart","pointerend","diff_commonOverlap_","text_length","best","pattern","dmp","diff_halfMatchI_","best_longtext_a","best_longtext_b","best_shorttext_a","best_shorttext_b","seed","best_common","prefixLength","suffixLength","hm1","hm2","changes","equalities","equalitiesLength","lastequality","length_insertions1","length_deletions1","length_insertions2","length_deletions2","diff_cleanupSemanticLossless","deletion","insertion","overlap_length1","overlap_length2","diff_cleanupSemanticScore_","two","char1","char2","nonAlphaNumeric1","nonAlphaNumericRegex_","nonAlphaNumeric2","whitespace1","whitespaceRegex_","whitespace2","lineBreak1","linebreakRegex_","lineBreak2","blankLine1","blanklineEndRegex_","blankLine2","blanklineStartRegex_","equality1","equality2","commonOffset","commonString","bestEquality1","bestEdit","bestEquality2","bestScore","diff_cleanupEfficiency","pre_ins","pre_del","post_ins","post_del","diff_xIndex","loc","last_chars1","last_chars2","diff_prettyHtml","pattern_amp","pattern_lt","pattern_gt","pattern_para","op","diff_text1","diff_text2","diff_levenshtein","levenshtein","insertions","deletions","diff_toDelta","encodeURI","diff_fromDelta","diffsLength","decodeURI","match_main","match_bitap_","match_alphabet_","match_bitapScore_","accuracy","proximity","score_threshold","best_loc","bin_min","bin_mid","matchmask","last_rd","bin_max","rd","charMatch","patch_addContext_","start2","length1","padding","start1","length2","opt_b","opt_c","patches","patch_obj","patchDiffLength","char_count1","char_count2","prepatch_text","postpatch_text","diff_type","diff_text","patch_deepCopy","patchesCopy","patchCopy","nullPadding","patch_addPadding","patch_splitMax","start_loc","expected_loc","end_loc","index2","index1","paddingLength","extraLength","patch_size","bigpatch","precontext","postcontext","patch_toText","textline","textPointer","patchHeader","repeatZero","qty","padZero","isRight","rest","tokenizer","typeMap","momentTypes","foundFirst","remainder","precision","_b","intersection","compact","momentType","wholeValue","decimalValue","isLeast","isMost","forceLength","decVal","general","dur","findLast","ClipboardController","complete","copied","clipError","resizableConfig","handles","helper","resetResize","colStep","graphType","minHeight","resizable","allowresize","_datasetfactory2","_visualizationTable2","_visualizationBarchart2","_visualizationPiechart2","_visualizationAreachart2","_visualizationLinechart2","_visualizationScatterchart2","_visualizationD3network2","_result2","AnsiUpConverter","TableGridFilterTemplate","ResultCtrl","$templateRequest","builtInTableDataVisualizationList","supports","transformation","builtInVisualizations","class","pieChart","stackedAreaChart","lineChart","scatterChart","network","NetworkVisualization","resultIndex","enableHelium","graphMode","imageData","textResultQueueForAppend","retryRenderElements","isDOMLoaded","targetElemId","cancelRetryRender","retryUntilElemIsLoaded","nextTick","callbackFun","retry","mouseOver","onMouseOver","onMouseOut","getPointerEvent","pointer-events","visPackages","getVisualizationCachedPackages","getVisualizationCachedPackageOrder","visName","vis","updateData","renderResult","paragraphRef","elemId","getTextResultElemId","ansi_to_html","checkAndReplaceCarriageReturn","appendTextOutput","appendTableOutput","graph","optionOpen","DatasetFactory","createDataset","loadParagraphResult","tableDataComment","networkNodes","networkRelationships","networkProperties","createDisplayDOMId","baseDOMId","renderDefaultDisplay","renderGraph","renderHtml","renderAngular","renderText","renderElem","activeApp","getSuggestions","getApplicationStates","appState","apps","renderApp","renderCustomDisplay","isDefaultDisplay","executeSpellAsDisplaySystem","containerDOMId","containerDOM","subResultDOMId","subResultDOM","handleData","successCallback","failureCallback","hljs","highlightBlock","MathJax","Hub","Queue","resultId","Result","removeChildrenDOM","escaped","divDOM","builtInViz","getTrSettingElem","scopeId","getVizSettingElem","graphElemId","deactivate","afterLoaded","loadedElem","transformationSettingTargetEl","visualizationSettingTargetEl","getVizConfig","getTransformation","renderSetting","render","activate","emitter","graphSetting","commitVizConfigChange","_timeout","createNewScope","tableElemId","switchViz","newMode","newParams","commitParagraphResult","newParagraphConfig","toggleGraphSetting","vizId","commonSetting","changeHeight","exportToDSV","delimiter","dsv","exportedFileName","titleIndex","dsvRow","stringValue","getBase64ImageSrc","base64Data","suggestion","switchApp","appId","commitConfig","loadApp","heliumPackage","appStates","app","pkg","currentAppState","newAppState","getAppScope","getAppRegistry","datasetType","NetworkData","edges","labels","entities","baseColumnNames","containsLabelField","internalFieldsToJump","baseCols","flatten","uniq","entityColumnNames","parsedValue","d3Graph","forceLayout","charge","linkDistance","zoom","minScale","svg","NetworkTransformation","networkData","isRendered","isDefaultSet","_setEdgesDefaults","transformationConfig","getNetworkProperties","arcPath","leftHand","dx","dy","dr","sqrt","sweep","setOpacity","scale","opacity","behavior","scaleExtent","linkPath","textPath","circle","links","renderFooterOnClick","footerId","defaultLabel","drag","origin","sourceEvent","classed","px","py","fixed","resume","directed","enter","getPathId","showLabel","_showNodeLabel","nodeSize","selectedLabel","edge","prevEdge","innerEdge","hasLabel","hasKey","isEmptyObject","setNetworkLabel","saveConfig","newGenerated","strArr","splitCR","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","AnsiUp","VERSION","ansi_colors","rgb","class_name","htmlFormatter","fragment","txt","_escape_for_html","old_escape_for_html","bright","fg","bg","_use_classes","class_string","style_string","compose","segments","textFormatter","setup_256_palette","_buffer","palette_256","palette","rec","levels","grey_level","gry","old_linkify","detect_incomplete_ansi","detect_incomplete_link","ansi_to","formatter","pkt","raw_text_pkts","handle_incomplete_sequences","first_chunk","with_state","blocks","process_ansi","ansi_to_text","chunks","last_chunk","block","_sgr_regex","raw","tmplObj","subst","txt2","rgx","orig_txt","sgr_cmds","sgr_cmd_str","bidx","is_foreground","mode_cmd","palette_index","CodeEditorDirective","onLoad","editorHtml","SaveAsService","browserDetectService","filename","detectIE","frameSaveAs","t1","binaryData","download","revokeObjectURL","ua","msie","trident","rv","showEditor","store","del","NotebookRepositoryCtrl","notebookRepos","showDropdownSelected","saveNotebookRepo","valueform","repo","SearchResultCtrl","searchService","isResult","searchTerm","$promise","allResults","highlightSearchResults","setOption","editorModes","ace/mode/scala","ace/mode/python","ace/mode/r","ace/mode/sql","ace/mode/markdown","ace/mode/sh","getEditorMode","lines","__line","indeces","getIndeces","setValue","searchResult","SearchService","$resource","encQuery","HeliumController","HeliumCtrl","_heliumType","getAllPackageInfoAndDefaultPackages","_ref","pkgSearchResults","defaultPackages","maxSize","classifyPkgType","getAllPackageConfigs","defaultPackageConfigs","getVisualizationPackageOrder","visPackageOrder","setVisPackageOrder","showVersions","bundleOrder","bundleOrderChanged","vizTypePkg","spellTypePkg","intpTypePkg","appTypePkg","numberOfEachPackageByType","allPackageTypes","pkgListByType","intpDefaultIcon","orderPackageByPubDate","published","packageInfo","allTypesOfPkg","packageInfoArr","pkgs","pkgsArr","bundleOrderListeners","saveBundleOrder","setVisualizationPackageOrder","groupId","license","filteredPkgSearchResults","getLicense","mavenArtifactInfoToHTML","installInterpreter","getHeliumTypeText","disable","toggleVersions","pkgName","isLocalPackage","pkgSearchResult","hasNpmLink","hasMavenLink","getPackageSize","targetPkgType","configExists","configOpened","configFetching","getConfigButtonClass","toggleConfigButton","getSinglePackageConfigs","confs","currentConf","getDescriptionText","HeliumService","_heliumConf","_heliumPackage","visualizationBundles","visualizationPackageOrder","heliumBundles","spellPerMagic","pkgNamePerMagic","getSinglePackageConfigUsingMagic","createPersistableConfig","interpret","getAllParsedDataWithTypes","installRequest","defaultPackageConfig","closeConfigPanelCallback","pkgArtifact","getAllPackageInfo","getAllEnabledPackages","getSingleBundle","bundle","getDefaultPackages","createDefaultPackages","promisedDefaultPackages","promisedPersistedConfs","persistedConfs","createAllPackageConfigs","confUrl","confSpec","confPersisted","mergePersistedConfWithSpec","_ref2","enabledPackageSearchResults","packageSearchResult","bundles","availableBundles","eval","spell","packageConfs","persistedConf","parseConfigValue","currentConfs","HeliumConfFieldType","persisted","specField","persistedValue","merged","stringified","createDefaultPackage","sce","pkgIdx","DynamicFormDirective","actiononchange","removeaction","loadForm","toggleCheckbox","formsHtml","formulaire","ArrayOrderingService","noteListOrdering","noteName1","noteName2","NavCtrl","connected","isConnected","logout","logoutURL","clearAuthorizationHeader","outcome","send","XMLHttpRequest","ActiveXObject","userName","searchForm","showLoginWindow","revisionSupported","loadNotes","getNoteList","isDrawNavbarNoteList","perfectScrollbar","suppressScrollX","clusterAddr","setNotes","calculateTooltipPlacement","isRevisionSupported","slideUp","toggleClass","slideToggle","tagName","NoteCreateCtrl","defaultInterpreter","createNote","notename","defaultInterpreterGroup","createNotebook","handleNameEnter","preVisible","sourceNoteName","cloneNoteName","newNoteName","newCount","flatList","lastCount","copyCount","newCloneName","noteNamePrefix","regexp","lastCopyCount","preVisibleCallback","postVisibleCallback","targetinput","previsibleMethod","postVisibleMethod","relatedTarget","ele","NoteImportCtrl","step1","step2","maxLimit","resetFlags","uploadFile","errorText","file","onloadend","processImportJson","uploadURL","importBack","importNote","importUrl","jsonp","xhr","ajaxOptions","thrownError","noteImportName","kernelspec","display_name","ngEnter","ngEscape","websocketEvents","sendNewEvent","folderPath","deleteNote","noteIdToClone","noteConfig","modeValue","personalized","relative","paragraphData","paragraphParams","paragraphResultsMsg","serializedData","cursor","pararaphText","getUpdateNoteJobsList","lastUpdateServerUnixTime","lastUpdateUnixTime","WebsocketEventFactory","$websocket","websocketCalls","pingIntervalId","uniqueClientId","lastMsgIdSeqSent","ws","getWebsocketUrl","reconnectIfNotNormalClose","onOpen","setInterval","msgId","socket","readyState","onMessage","msgIdSeqReceived","isResponseForRequestFromThisClient","noteJobs","noteRunningJobs","btn","closeAll","nbformat","notice","onError","onClose","clearInterval","NoteListFactory","flatFolderMap","notesList","addNode","curDir","newDir","getPort","port","wsProtocol","hostname","skipTrailingSlash","showLoader","fadeIn","fadeOut","LoginCtrl","$httpParamSerializer","SigningIn","loginParams","login","Content-Type","redirectLocation","$$search","locationPath","noteRenameService","redirectToHome","TYPE_WARNING","openRenameModal","oldName","newFolderPath","normalizeFolderId","NoteRenameController","defaultValidator","rename","NoteRenameService"],"mappings":"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AA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,UAAA,GACAC,aAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,aAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,aAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,UAAA,GACAC,aAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,aAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,YAAA,IACAC,eAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAA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","file":"app.96ba6dea9ba86bfc5c28.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 143);\n","//! moment.js\n\n;(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    global.moment = factory()\n}(this, (function () { 'use strict';\n\n    var hookCallback;\n\n    function hooks () {\n        return hookCallback.apply(null, arguments);\n    }\n\n    // This is done to register the method called with moment()\n    // without creating circular dependencies.\n    function setHookCallback (callback) {\n        hookCallback = callback;\n    }\n\n    function isArray(input) {\n        return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n    }\n\n    function isObject(input) {\n        // IE8 will treat undefined and null as object if it wasn't for\n        // input != null\n        return input != null && Object.prototype.toString.call(input) === '[object Object]';\n    }\n\n    function isObjectEmpty(obj) {\n        if (Object.getOwnPropertyNames) {\n            return (Object.getOwnPropertyNames(obj).length === 0);\n        } else {\n            var k;\n            for (k in obj) {\n                if (obj.hasOwnProperty(k)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    }\n\n    function isUndefined(input) {\n        return input === void 0;\n    }\n\n    function isNumber(input) {\n        return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\n    }\n\n    function isDate(input) {\n        return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n    }\n\n    function map(arr, fn) {\n        var res = [], i;\n        for (i = 0; i < arr.length; ++i) {\n            res.push(fn(arr[i], i));\n        }\n        return res;\n    }\n\n    function hasOwnProp(a, b) {\n        return Object.prototype.hasOwnProperty.call(a, b);\n    }\n\n    function extend(a, b) {\n        for (var i in b) {\n            if (hasOwnProp(b, i)) {\n                a[i] = b[i];\n            }\n        }\n\n        if (hasOwnProp(b, 'toString')) {\n            a.toString = b.toString;\n        }\n\n        if (hasOwnProp(b, 'valueOf')) {\n            a.valueOf = b.valueOf;\n        }\n\n        return a;\n    }\n\n    function createUTC (input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, true).utc();\n    }\n\n    function defaultParsingFlags() {\n        // We need to deep clone this object.\n        return {\n            empty           : false,\n            unusedTokens    : [],\n            unusedInput     : [],\n            overflow        : -2,\n            charsLeftOver   : 0,\n            nullInput       : false,\n            invalidMonth    : null,\n            invalidFormat   : false,\n            userInvalidated : false,\n            iso             : false,\n            parsedDateParts : [],\n            meridiem        : null,\n            rfc2822         : false,\n            weekdayMismatch : false\n        };\n    }\n\n    function getParsingFlags(m) {\n        if (m._pf == null) {\n            m._pf = defaultParsingFlags();\n        }\n        return m._pf;\n    }\n\n    var some;\n    if (Array.prototype.some) {\n        some = Array.prototype.some;\n    } else {\n        some = function (fun) {\n            var t = Object(this);\n            var len = t.length >>> 0;\n\n            for (var i = 0; i < len; i++) {\n                if (i in t && fun.call(this, t[i], i, t)) {\n                    return true;\n                }\n            }\n\n            return false;\n        };\n    }\n\n    function isValid(m) {\n        if (m._isValid == null) {\n            var flags = getParsingFlags(m);\n            var parsedParts = some.call(flags.parsedDateParts, function (i) {\n                return i != null;\n            });\n            var isNowValid = !isNaN(m._d.getTime()) &&\n                flags.overflow < 0 &&\n                !flags.empty &&\n                !flags.invalidMonth &&\n                !flags.invalidWeekday &&\n                !flags.weekdayMismatch &&\n                !flags.nullInput &&\n                !flags.invalidFormat &&\n                !flags.userInvalidated &&\n                (!flags.meridiem || (flags.meridiem && parsedParts));\n\n            if (m._strict) {\n                isNowValid = isNowValid &&\n                    flags.charsLeftOver === 0 &&\n                    flags.unusedTokens.length === 0 &&\n                    flags.bigHour === undefined;\n            }\n\n            if (Object.isFrozen == null || !Object.isFrozen(m)) {\n                m._isValid = isNowValid;\n            }\n            else {\n                return isNowValid;\n            }\n        }\n        return m._isValid;\n    }\n\n    function createInvalid (flags) {\n        var m = createUTC(NaN);\n        if (flags != null) {\n            extend(getParsingFlags(m), flags);\n        }\n        else {\n            getParsingFlags(m).userInvalidated = true;\n        }\n\n        return m;\n    }\n\n    // Plugins that add properties should also add the key here (null value),\n    // so we can properly clone ourselves.\n    var momentProperties = hooks.momentProperties = [];\n\n    function copyConfig(to, from) {\n        var i, prop, val;\n\n        if (!isUndefined(from._isAMomentObject)) {\n            to._isAMomentObject = from._isAMomentObject;\n        }\n        if (!isUndefined(from._i)) {\n            to._i = from._i;\n        }\n        if (!isUndefined(from._f)) {\n            to._f = from._f;\n        }\n        if (!isUndefined(from._l)) {\n            to._l = from._l;\n        }\n        if (!isUndefined(from._strict)) {\n            to._strict = from._strict;\n        }\n        if (!isUndefined(from._tzm)) {\n            to._tzm = from._tzm;\n        }\n        if (!isUndefined(from._isUTC)) {\n            to._isUTC = from._isUTC;\n        }\n        if (!isUndefined(from._offset)) {\n            to._offset = from._offset;\n        }\n        if (!isUndefined(from._pf)) {\n            to._pf = getParsingFlags(from);\n        }\n        if (!isUndefined(from._locale)) {\n            to._locale = from._locale;\n        }\n\n        if (momentProperties.length > 0) {\n            for (i = 0; i < momentProperties.length; i++) {\n                prop = momentProperties[i];\n                val = from[prop];\n                if (!isUndefined(val)) {\n                    to[prop] = val;\n                }\n            }\n        }\n\n        return to;\n    }\n\n    var updateInProgress = false;\n\n    // Moment prototype object\n    function Moment(config) {\n        copyConfig(this, config);\n        this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n        if (!this.isValid()) {\n            this._d = new Date(NaN);\n        }\n        // Prevent infinite loop in case updateOffset creates new moment\n        // objects.\n        if (updateInProgress === false) {\n            updateInProgress = true;\n            hooks.updateOffset(this);\n            updateInProgress = false;\n        }\n    }\n\n    function isMoment (obj) {\n        return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);\n    }\n\n    function absFloor (number) {\n        if (number < 0) {\n            // -0 -> 0\n            return Math.ceil(number) || 0;\n        } else {\n            return Math.floor(number);\n        }\n    }\n\n    function toInt(argumentForCoercion) {\n        var coercedNumber = +argumentForCoercion,\n            value = 0;\n\n        if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n            value = absFloor(coercedNumber);\n        }\n\n        return value;\n    }\n\n    // compare two arrays, return the number of differences\n    function compareArrays(array1, array2, dontConvert) {\n        var len = Math.min(array1.length, array2.length),\n            lengthDiff = Math.abs(array1.length - array2.length),\n            diffs = 0,\n            i;\n        for (i = 0; i < len; i++) {\n            if ((dontConvert && array1[i] !== array2[i]) ||\n                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {\n                diffs++;\n            }\n        }\n        return diffs + lengthDiff;\n    }\n\n    function warn(msg) {\n        if (hooks.suppressDeprecationWarnings === false &&\n                (typeof console !==  'undefined') && console.warn) {\n            console.warn('Deprecation warning: ' + msg);\n        }\n    }\n\n    function deprecate(msg, fn) {\n        var firstTime = true;\n\n        return extend(function () {\n            if (hooks.deprecationHandler != null) {\n                hooks.deprecationHandler(null, msg);\n            }\n            if (firstTime) {\n                var args = [];\n                var arg;\n                for (var i = 0; i < arguments.length; i++) {\n                    arg = '';\n                    if (typeof arguments[i] === 'object') {\n                        arg += '\\n[' + i + '] ';\n                        for (var key in arguments[0]) {\n                            arg += key + ': ' + arguments[0][key] + ', ';\n                        }\n                        arg = arg.slice(0, -2); // Remove trailing comma and space\n                    } else {\n                        arg = arguments[i];\n                    }\n                    args.push(arg);\n                }\n                warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + (new Error()).stack);\n                firstTime = false;\n            }\n            return fn.apply(this, arguments);\n        }, fn);\n    }\n\n    var deprecations = {};\n\n    function deprecateSimple(name, msg) {\n        if (hooks.deprecationHandler != null) {\n            hooks.deprecationHandler(name, msg);\n        }\n        if (!deprecations[name]) {\n            warn(msg);\n            deprecations[name] = true;\n        }\n    }\n\n    hooks.suppressDeprecationWarnings = false;\n    hooks.deprecationHandler = null;\n\n    function isFunction(input) {\n        return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n    }\n\n    function set (config) {\n        var prop, i;\n        for (i in config) {\n            prop = config[i];\n            if (isFunction(prop)) {\n                this[i] = prop;\n            } else {\n                this['_' + i] = prop;\n            }\n        }\n        this._config = config;\n        // Lenient ordinal parsing accepts just a number in addition to\n        // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n        // TODO: Remove \"ordinalParse\" fallback in next major release.\n        this._dayOfMonthOrdinalParseLenient = new RegExp(\n            (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +\n                '|' + (/\\d{1,2}/).source);\n    }\n\n    function mergeConfigs(parentConfig, childConfig) {\n        var res = extend({}, parentConfig), prop;\n        for (prop in childConfig) {\n            if (hasOwnProp(childConfig, prop)) {\n                if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n                    res[prop] = {};\n                    extend(res[prop], parentConfig[prop]);\n                    extend(res[prop], childConfig[prop]);\n                } else if (childConfig[prop] != null) {\n                    res[prop] = childConfig[prop];\n                } else {\n                    delete res[prop];\n                }\n            }\n        }\n        for (prop in parentConfig) {\n            if (hasOwnProp(parentConfig, prop) &&\n                    !hasOwnProp(childConfig, prop) &&\n                    isObject(parentConfig[prop])) {\n                // make sure changes to properties don't modify parent config\n                res[prop] = extend({}, res[prop]);\n            }\n        }\n        return res;\n    }\n\n    function Locale(config) {\n        if (config != null) {\n            this.set(config);\n        }\n    }\n\n    var keys;\n\n    if (Object.keys) {\n        keys = Object.keys;\n    } else {\n        keys = function (obj) {\n            var i, res = [];\n            for (i in obj) {\n                if (hasOwnProp(obj, i)) {\n                    res.push(i);\n                }\n            }\n            return res;\n        };\n    }\n\n    var defaultCalendar = {\n        sameDay : '[Today at] LT',\n        nextDay : '[Tomorrow at] LT',\n        nextWeek : 'dddd [at] LT',\n        lastDay : '[Yesterday at] LT',\n        lastWeek : '[Last] dddd [at] LT',\n        sameElse : 'L'\n    };\n\n    function calendar (key, mom, now) {\n        var output = this._calendar[key] || this._calendar['sameElse'];\n        return isFunction(output) ? output.call(mom, now) : output;\n    }\n\n    var defaultLongDateFormat = {\n        LTS  : 'h:mm:ss A',\n        LT   : 'h:mm A',\n        L    : 'MM/DD/YYYY',\n        LL   : 'MMMM D, YYYY',\n        LLL  : 'MMMM D, YYYY h:mm A',\n        LLLL : 'dddd, MMMM D, YYYY h:mm A'\n    };\n\n    function longDateFormat (key) {\n        var format = this._longDateFormat[key],\n            formatUpper = this._longDateFormat[key.toUpperCase()];\n\n        if (format || !formatUpper) {\n            return format;\n        }\n\n        this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n            return val.slice(1);\n        });\n\n        return this._longDateFormat[key];\n    }\n\n    var defaultInvalidDate = 'Invalid date';\n\n    function invalidDate () {\n        return this._invalidDate;\n    }\n\n    var defaultOrdinal = '%d';\n    var defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\n    function ordinal (number) {\n        return this._ordinal.replace('%d', number);\n    }\n\n    var defaultRelativeTime = {\n        future : 'in %s',\n        past   : '%s ago',\n        s  : 'a few seconds',\n        ss : '%d seconds',\n        m  : 'a minute',\n        mm : '%d minutes',\n        h  : 'an hour',\n        hh : '%d hours',\n        d  : 'a day',\n        dd : '%d days',\n        M  : 'a month',\n        MM : '%d months',\n        y  : 'a year',\n        yy : '%d years'\n    };\n\n    function relativeTime (number, withoutSuffix, string, isFuture) {\n        var output = this._relativeTime[string];\n        return (isFunction(output)) ?\n            output(number, withoutSuffix, string, isFuture) :\n            output.replace(/%d/i, number);\n    }\n\n    function pastFuture (diff, output) {\n        var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n        return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n    }\n\n    var aliases = {};\n\n    function addUnitAlias (unit, shorthand) {\n        var lowerCase = unit.toLowerCase();\n        aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n    }\n\n    function normalizeUnits(units) {\n        return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n    }\n\n    function normalizeObjectUnits(inputObject) {\n        var normalizedInput = {},\n            normalizedProp,\n            prop;\n\n        for (prop in inputObject) {\n            if (hasOwnProp(inputObject, prop)) {\n                normalizedProp = normalizeUnits(prop);\n                if (normalizedProp) {\n                    normalizedInput[normalizedProp] = inputObject[prop];\n                }\n            }\n        }\n\n        return normalizedInput;\n    }\n\n    var priorities = {};\n\n    function addUnitPriority(unit, priority) {\n        priorities[unit] = priority;\n    }\n\n    function getPrioritizedUnits(unitsObj) {\n        var units = [];\n        for (var u in unitsObj) {\n            units.push({unit: u, priority: priorities[u]});\n        }\n        units.sort(function (a, b) {\n            return a.priority - b.priority;\n        });\n        return units;\n    }\n\n    function zeroFill(number, targetLength, forceSign) {\n        var absNumber = '' + Math.abs(number),\n            zerosToFill = targetLength - absNumber.length,\n            sign = number >= 0;\n        return (sign ? (forceSign ? '+' : '') : '-') +\n            Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n    }\n\n    var formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n\n    var localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n\n    var formatFunctions = {};\n\n    var formatTokenFunctions = {};\n\n    // token:    'M'\n    // padded:   ['MM', 2]\n    // ordinal:  'Mo'\n    // callback: function () { this.month() + 1 }\n    function addFormatToken (token, padded, ordinal, callback) {\n        var func = callback;\n        if (typeof callback === 'string') {\n            func = function () {\n                return this[callback]();\n            };\n        }\n        if (token) {\n            formatTokenFunctions[token] = func;\n        }\n        if (padded) {\n            formatTokenFunctions[padded[0]] = function () {\n                return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n            };\n        }\n        if (ordinal) {\n            formatTokenFunctions[ordinal] = function () {\n                return this.localeData().ordinal(func.apply(this, arguments), token);\n            };\n        }\n    }\n\n    function removeFormattingTokens(input) {\n        if (input.match(/\\[[\\s\\S]/)) {\n            return input.replace(/^\\[|\\]$/g, '');\n        }\n        return input.replace(/\\\\/g, '');\n    }\n\n    function makeFormatFunction(format) {\n        var array = format.match(formattingTokens), i, length;\n\n        for (i = 0, length = array.length; i < length; i++) {\n            if (formatTokenFunctions[array[i]]) {\n                array[i] = formatTokenFunctions[array[i]];\n            } else {\n                array[i] = removeFormattingTokens(array[i]);\n            }\n        }\n\n        return function (mom) {\n            var output = '', i;\n            for (i = 0; i < length; i++) {\n                output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];\n            }\n            return output;\n        };\n    }\n\n    // format date using native date object\n    function formatMoment(m, format) {\n        if (!m.isValid()) {\n            return m.localeData().invalidDate();\n        }\n\n        format = expandFormat(format, m.localeData());\n        formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n\n        return formatFunctions[format](m);\n    }\n\n    function expandFormat(format, locale) {\n        var i = 5;\n\n        function replaceLongDateFormatTokens(input) {\n            return locale.longDateFormat(input) || input;\n        }\n\n        localFormattingTokens.lastIndex = 0;\n        while (i >= 0 && localFormattingTokens.test(format)) {\n            format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n            localFormattingTokens.lastIndex = 0;\n            i -= 1;\n        }\n\n        return format;\n    }\n\n    var match1         = /\\d/;            //       0 - 9\n    var match2         = /\\d\\d/;          //      00 - 99\n    var match3         = /\\d{3}/;         //     000 - 999\n    var match4         = /\\d{4}/;         //    0000 - 9999\n    var match6         = /[+-]?\\d{6}/;    // -999999 - 999999\n    var match1to2      = /\\d\\d?/;         //       0 - 99\n    var match3to4      = /\\d\\d\\d\\d?/;     //     999 - 9999\n    var match5to6      = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\n    var match1to3      = /\\d{1,3}/;       //       0 - 999\n    var match1to4      = /\\d{1,4}/;       //       0 - 9999\n    var match1to6      = /[+-]?\\d{1,6}/;  // -999999 - 999999\n\n    var matchUnsigned  = /\\d+/;           //       0 - inf\n    var matchSigned    = /[+-]?\\d+/;      //    -inf - inf\n\n    var matchOffset    = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\n    var matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\n    var matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n\n    // any word (or two) characters or numbers including two/three word month in arabic.\n    // includes scottish gaelic two word and hyphenated months\n    var matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i;\n\n    var regexes = {};\n\n    function addRegexToken (token, regex, strictRegex) {\n        regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n            return (isStrict && strictRegex) ? strictRegex : regex;\n        };\n    }\n\n    function getParseRegexForToken (token, config) {\n        if (!hasOwnProp(regexes, token)) {\n            return new RegExp(unescapeFormat(token));\n        }\n\n        return regexes[token](config._strict, config._locale);\n    }\n\n    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n    function unescapeFormat(s) {\n        return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n            return p1 || p2 || p3 || p4;\n        }));\n    }\n\n    function regexEscape(s) {\n        return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    }\n\n    var tokens = {};\n\n    function addParseToken (token, callback) {\n        var i, func = callback;\n        if (typeof token === 'string') {\n            token = [token];\n        }\n        if (isNumber(callback)) {\n            func = function (input, array) {\n                array[callback] = toInt(input);\n            };\n        }\n        for (i = 0; i < token.length; i++) {\n            tokens[token[i]] = func;\n        }\n    }\n\n    function addWeekParseToken (token, callback) {\n        addParseToken(token, function (input, array, config, token) {\n            config._w = config._w || {};\n            callback(input, config._w, config, token);\n        });\n    }\n\n    function addTimeToArrayFromToken(token, input, config) {\n        if (input != null && hasOwnProp(tokens, token)) {\n            tokens[token](input, config._a, config, token);\n        }\n    }\n\n    var YEAR = 0;\n    var MONTH = 1;\n    var DATE = 2;\n    var HOUR = 3;\n    var MINUTE = 4;\n    var SECOND = 5;\n    var MILLISECOND = 6;\n    var WEEK = 7;\n    var WEEKDAY = 8;\n\n    // FORMATTING\n\n    addFormatToken('Y', 0, 0, function () {\n        var y = this.year();\n        return y <= 9999 ? '' + y : '+' + y;\n    });\n\n    addFormatToken(0, ['YY', 2], 0, function () {\n        return this.year() % 100;\n    });\n\n    addFormatToken(0, ['YYYY',   4],       0, 'year');\n    addFormatToken(0, ['YYYYY',  5],       0, 'year');\n    addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');\n\n    // ALIASES\n\n    addUnitAlias('year', 'y');\n\n    // PRIORITIES\n\n    addUnitPriority('year', 1);\n\n    // PARSING\n\n    addRegexToken('Y',      matchSigned);\n    addRegexToken('YY',     match1to2, match2);\n    addRegexToken('YYYY',   match1to4, match4);\n    addRegexToken('YYYYY',  match1to6, match6);\n    addRegexToken('YYYYYY', match1to6, match6);\n\n    addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n    addParseToken('YYYY', function (input, array) {\n        array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n    });\n    addParseToken('YY', function (input, array) {\n        array[YEAR] = hooks.parseTwoDigitYear(input);\n    });\n    addParseToken('Y', function (input, array) {\n        array[YEAR] = parseInt(input, 10);\n    });\n\n    // HELPERS\n\n    function daysInYear(year) {\n        return isLeapYear(year) ? 366 : 365;\n    }\n\n    function isLeapYear(year) {\n        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n    }\n\n    // HOOKS\n\n    hooks.parseTwoDigitYear = function (input) {\n        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n    };\n\n    // MOMENTS\n\n    var getSetYear = makeGetSet('FullYear', true);\n\n    function getIsLeapYear () {\n        return isLeapYear(this.year());\n    }\n\n    function makeGetSet (unit, keepTime) {\n        return function (value) {\n            if (value != null) {\n                set$1(this, unit, value);\n                hooks.updateOffset(this, keepTime);\n                return this;\n            } else {\n                return get(this, unit);\n            }\n        };\n    }\n\n    function get (mom, unit) {\n        return mom.isValid() ?\n            mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n    }\n\n    function set$1 (mom, unit, value) {\n        if (mom.isValid() && !isNaN(value)) {\n            if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {\n                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));\n            }\n            else {\n                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function stringGet (units) {\n        units = normalizeUnits(units);\n        if (isFunction(this[units])) {\n            return this[units]();\n        }\n        return this;\n    }\n\n\n    function stringSet (units, value) {\n        if (typeof units === 'object') {\n            units = normalizeObjectUnits(units);\n            var prioritized = getPrioritizedUnits(units);\n            for (var i = 0; i < prioritized.length; i++) {\n                this[prioritized[i].unit](units[prioritized[i].unit]);\n            }\n        } else {\n            units = normalizeUnits(units);\n            if (isFunction(this[units])) {\n                return this[units](value);\n            }\n        }\n        return this;\n    }\n\n    function mod(n, x) {\n        return ((n % x) + x) % x;\n    }\n\n    var indexOf;\n\n    if (Array.prototype.indexOf) {\n        indexOf = Array.prototype.indexOf;\n    } else {\n        indexOf = function (o) {\n            // I know\n            var i;\n            for (i = 0; i < this.length; ++i) {\n                if (this[i] === o) {\n                    return i;\n                }\n            }\n            return -1;\n        };\n    }\n\n    function daysInMonth(year, month) {\n        if (isNaN(year) || isNaN(month)) {\n            return NaN;\n        }\n        var modMonth = mod(month, 12);\n        year += (month - modMonth) / 12;\n        return modMonth === 1 ? (isLeapYear(year) ? 29 : 28) : (31 - modMonth % 7 % 2);\n    }\n\n    // FORMATTING\n\n    addFormatToken('M', ['MM', 2], 'Mo', function () {\n        return this.month() + 1;\n    });\n\n    addFormatToken('MMM', 0, 0, function (format) {\n        return this.localeData().monthsShort(this, format);\n    });\n\n    addFormatToken('MMMM', 0, 0, function (format) {\n        return this.localeData().months(this, format);\n    });\n\n    // ALIASES\n\n    addUnitAlias('month', 'M');\n\n    // PRIORITY\n\n    addUnitPriority('month', 8);\n\n    // PARSING\n\n    addRegexToken('M',    match1to2);\n    addRegexToken('MM',   match1to2, match2);\n    addRegexToken('MMM',  function (isStrict, locale) {\n        return locale.monthsShortRegex(isStrict);\n    });\n    addRegexToken('MMMM', function (isStrict, locale) {\n        return locale.monthsRegex(isStrict);\n    });\n\n    addParseToken(['M', 'MM'], function (input, array) {\n        array[MONTH] = toInt(input) - 1;\n    });\n\n    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n        var month = config._locale.monthsParse(input, token, config._strict);\n        // if we didn't find a month name, mark the date as invalid.\n        if (month != null) {\n            array[MONTH] = month;\n        } else {\n            getParsingFlags(config).invalidMonth = input;\n        }\n    });\n\n    // LOCALES\n\n    var MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\n    var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\n    function localeMonths (m, format) {\n        if (!m) {\n            return isArray(this._months) ? this._months :\n                this._months['standalone'];\n        }\n        return isArray(this._months) ? this._months[m.month()] :\n            this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n    }\n\n    var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\n    function localeMonthsShort (m, format) {\n        if (!m) {\n            return isArray(this._monthsShort) ? this._monthsShort :\n                this._monthsShort['standalone'];\n        }\n        return isArray(this._monthsShort) ? this._monthsShort[m.month()] :\n            this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n    }\n\n    function handleStrictParse(monthName, format, strict) {\n        var i, ii, mom, llc = monthName.toLocaleLowerCase();\n        if (!this._monthsParse) {\n            // this is not used\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n            for (i = 0; i < 12; ++i) {\n                mom = createUTC([2000, i]);\n                this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n                this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n            }\n        }\n\n        if (strict) {\n            if (format === 'MMM') {\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._longMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        } else {\n            if (format === 'MMM') {\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._longMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._longMonthsParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n    }\n\n    function localeMonthsParse (monthName, format, strict) {\n        var i, mom, regex;\n\n        if (this._monthsParseExact) {\n            return handleStrictParse.call(this, monthName, format, strict);\n        }\n\n        if (!this._monthsParse) {\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n        }\n\n        // TODO: add sorting\n        // Sorting makes sure if one month (or abbr) is a prefix of another\n        // see sorting in computeMonthsParse\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, i]);\n            if (strict && !this._longMonthsParse[i]) {\n                this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n                this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n            }\n            if (!strict && !this._monthsParse[i]) {\n                regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n                return i;\n            } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n                return i;\n            } else if (!strict && this._monthsParse[i].test(monthName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function setMonth (mom, value) {\n        var dayOfMonth;\n\n        if (!mom.isValid()) {\n            // No op\n            return mom;\n        }\n\n        if (typeof value === 'string') {\n            if (/^\\d+$/.test(value)) {\n                value = toInt(value);\n            } else {\n                value = mom.localeData().monthsParse(value);\n                // TODO: Another silent failure?\n                if (!isNumber(value)) {\n                    return mom;\n                }\n            }\n        }\n\n        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n        return mom;\n    }\n\n    function getSetMonth (value) {\n        if (value != null) {\n            setMonth(this, value);\n            hooks.updateOffset(this, true);\n            return this;\n        } else {\n            return get(this, 'Month');\n        }\n    }\n\n    function getDaysInMonth () {\n        return daysInMonth(this.year(), this.month());\n    }\n\n    var defaultMonthsShortRegex = matchWord;\n    function monthsShortRegex (isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                computeMonthsParse.call(this);\n            }\n            if (isStrict) {\n                return this._monthsShortStrictRegex;\n            } else {\n                return this._monthsShortRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_monthsShortRegex')) {\n                this._monthsShortRegex = defaultMonthsShortRegex;\n            }\n            return this._monthsShortStrictRegex && isStrict ?\n                this._monthsShortStrictRegex : this._monthsShortRegex;\n        }\n    }\n\n    var defaultMonthsRegex = matchWord;\n    function monthsRegex (isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                computeMonthsParse.call(this);\n            }\n            if (isStrict) {\n                return this._monthsStrictRegex;\n            } else {\n                return this._monthsRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                this._monthsRegex = defaultMonthsRegex;\n            }\n            return this._monthsStrictRegex && isStrict ?\n                this._monthsStrictRegex : this._monthsRegex;\n        }\n    }\n\n    function computeMonthsParse () {\n        function cmpLenRev(a, b) {\n            return b.length - a.length;\n        }\n\n        var shortPieces = [], longPieces = [], mixedPieces = [],\n            i, mom;\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, i]);\n            shortPieces.push(this.monthsShort(mom, ''));\n            longPieces.push(this.months(mom, ''));\n            mixedPieces.push(this.months(mom, ''));\n            mixedPieces.push(this.monthsShort(mom, ''));\n        }\n        // Sorting makes sure if one month (or abbr) is a prefix of another it\n        // will match the longer piece.\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n        for (i = 0; i < 12; i++) {\n            shortPieces[i] = regexEscape(shortPieces[i]);\n            longPieces[i] = regexEscape(longPieces[i]);\n        }\n        for (i = 0; i < 24; i++) {\n            mixedPieces[i] = regexEscape(mixedPieces[i]);\n        }\n\n        this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._monthsShortRegex = this._monthsRegex;\n        this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n        this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n    }\n\n    function createDate (y, m, d, h, M, s, ms) {\n        // can't just apply() to create a date:\n        // https://stackoverflow.com/q/181348\n        var date = new Date(y, m, d, h, M, s, ms);\n\n        // the date constructor remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0 && isFinite(date.getFullYear())) {\n            date.setFullYear(y);\n        }\n        return date;\n    }\n\n    function createUTCDate (y) {\n        var date = new Date(Date.UTC.apply(null, arguments));\n\n        // the Date.UTC function remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0 && isFinite(date.getUTCFullYear())) {\n            date.setUTCFullYear(y);\n        }\n        return date;\n    }\n\n    // start-of-first-week - start-of-year\n    function firstWeekOffset(year, dow, doy) {\n        var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n            fwd = 7 + dow - doy,\n            // first-week day local weekday -- which local weekday is fwd\n            fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n\n        return -fwdlw + fwd - 1;\n    }\n\n    // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n    function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n        var localWeekday = (7 + weekday - dow) % 7,\n            weekOffset = firstWeekOffset(year, dow, doy),\n            dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n            resYear, resDayOfYear;\n\n        if (dayOfYear <= 0) {\n            resYear = year - 1;\n            resDayOfYear = daysInYear(resYear) + dayOfYear;\n        } else if (dayOfYear > daysInYear(year)) {\n            resYear = year + 1;\n            resDayOfYear = dayOfYear - daysInYear(year);\n        } else {\n            resYear = year;\n            resDayOfYear = dayOfYear;\n        }\n\n        return {\n            year: resYear,\n            dayOfYear: resDayOfYear\n        };\n    }\n\n    function weekOfYear(mom, dow, doy) {\n        var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n            week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n            resWeek, resYear;\n\n        if (week < 1) {\n            resYear = mom.year() - 1;\n            resWeek = week + weeksInYear(resYear, dow, doy);\n        } else if (week > weeksInYear(mom.year(), dow, doy)) {\n            resWeek = week - weeksInYear(mom.year(), dow, doy);\n            resYear = mom.year() + 1;\n        } else {\n            resYear = mom.year();\n            resWeek = week;\n        }\n\n        return {\n            week: resWeek,\n            year: resYear\n        };\n    }\n\n    function weeksInYear(year, dow, doy) {\n        var weekOffset = firstWeekOffset(year, dow, doy),\n            weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n        return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n    }\n\n    // FORMATTING\n\n    addFormatToken('w', ['ww', 2], 'wo', 'week');\n    addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');\n\n    // ALIASES\n\n    addUnitAlias('week', 'w');\n    addUnitAlias('isoWeek', 'W');\n\n    // PRIORITIES\n\n    addUnitPriority('week', 5);\n    addUnitPriority('isoWeek', 5);\n\n    // PARSING\n\n    addRegexToken('w',  match1to2);\n    addRegexToken('ww', match1to2, match2);\n    addRegexToken('W',  match1to2);\n    addRegexToken('WW', match1to2, match2);\n\n    addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n        week[token.substr(0, 1)] = toInt(input);\n    });\n\n    // HELPERS\n\n    // LOCALES\n\n    function localeWeek (mom) {\n        return weekOfYear(mom, this._week.dow, this._week.doy).week;\n    }\n\n    var defaultLocaleWeek = {\n        dow : 0, // Sunday is the first day of the week.\n        doy : 6  // The week that contains Jan 1st is the first week of the year.\n    };\n\n    function localeFirstDayOfWeek () {\n        return this._week.dow;\n    }\n\n    function localeFirstDayOfYear () {\n        return this._week.doy;\n    }\n\n    // MOMENTS\n\n    function getSetWeek (input) {\n        var week = this.localeData().week(this);\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    function getSetISOWeek (input) {\n        var week = weekOfYear(this, 1, 4).week;\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    // FORMATTING\n\n    addFormatToken('d', 0, 'do', 'day');\n\n    addFormatToken('dd', 0, 0, function (format) {\n        return this.localeData().weekdaysMin(this, format);\n    });\n\n    addFormatToken('ddd', 0, 0, function (format) {\n        return this.localeData().weekdaysShort(this, format);\n    });\n\n    addFormatToken('dddd', 0, 0, function (format) {\n        return this.localeData().weekdays(this, format);\n    });\n\n    addFormatToken('e', 0, 0, 'weekday');\n    addFormatToken('E', 0, 0, 'isoWeekday');\n\n    // ALIASES\n\n    addUnitAlias('day', 'd');\n    addUnitAlias('weekday', 'e');\n    addUnitAlias('isoWeekday', 'E');\n\n    // PRIORITY\n    addUnitPriority('day', 11);\n    addUnitPriority('weekday', 11);\n    addUnitPriority('isoWeekday', 11);\n\n    // PARSING\n\n    addRegexToken('d',    match1to2);\n    addRegexToken('e',    match1to2);\n    addRegexToken('E',    match1to2);\n    addRegexToken('dd',   function (isStrict, locale) {\n        return locale.weekdaysMinRegex(isStrict);\n    });\n    addRegexToken('ddd',   function (isStrict, locale) {\n        return locale.weekdaysShortRegex(isStrict);\n    });\n    addRegexToken('dddd',   function (isStrict, locale) {\n        return locale.weekdaysRegex(isStrict);\n    });\n\n    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n        var weekday = config._locale.weekdaysParse(input, token, config._strict);\n        // if we didn't get a weekday name, mark the date as invalid\n        if (weekday != null) {\n            week.d = weekday;\n        } else {\n            getParsingFlags(config).invalidWeekday = input;\n        }\n    });\n\n    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n        week[token] = toInt(input);\n    });\n\n    // HELPERS\n\n    function parseWeekday(input, locale) {\n        if (typeof input !== 'string') {\n            return input;\n        }\n\n        if (!isNaN(input)) {\n            return parseInt(input, 10);\n        }\n\n        input = locale.weekdaysParse(input);\n        if (typeof input === 'number') {\n            return input;\n        }\n\n        return null;\n    }\n\n    function parseIsoWeekday(input, locale) {\n        if (typeof input === 'string') {\n            return locale.weekdaysParse(input) % 7 || 7;\n        }\n        return isNaN(input) ? null : input;\n    }\n\n    // LOCALES\n\n    var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\n    function localeWeekdays (m, format) {\n        if (!m) {\n            return isArray(this._weekdays) ? this._weekdays :\n                this._weekdays['standalone'];\n        }\n        return isArray(this._weekdays) ? this._weekdays[m.day()] :\n            this._weekdays[this._weekdays.isFormat.test(format) ? 'format' : 'standalone'][m.day()];\n    }\n\n    var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\n    function localeWeekdaysShort (m) {\n        return (m) ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n    }\n\n    var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\n    function localeWeekdaysMin (m) {\n        return (m) ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n    }\n\n    function handleStrictParse$1(weekdayName, format, strict) {\n        var i, ii, mom, llc = weekdayName.toLocaleLowerCase();\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._minWeekdaysParse = [];\n\n            for (i = 0; i < 7; ++i) {\n                mom = createUTC([2000, 1]).day(i);\n                this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n                this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n                this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n            }\n        }\n\n        if (strict) {\n            if (format === 'dddd') {\n                ii = indexOf.call(this._weekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else if (format === 'ddd') {\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        } else {\n            if (format === 'dddd') {\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else if (format === 'ddd') {\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n    }\n\n    function localeWeekdaysParse (weekdayName, format, strict) {\n        var i, mom, regex;\n\n        if (this._weekdaysParseExact) {\n            return handleStrictParse$1.call(this, weekdayName, format, strict);\n        }\n\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._minWeekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._fullWeekdaysParse = [];\n        }\n\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n\n            mom = createUTC([2000, 1]).day(i);\n            if (strict && !this._fullWeekdaysParse[i]) {\n                this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\\\.?') + '$', 'i');\n                this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\\\.?') + '$', 'i');\n                this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\\\.?') + '$', 'i');\n            }\n            if (!this._weekdaysParse[i]) {\n                regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function getSetDayOfWeek (input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n        if (input != null) {\n            input = parseWeekday(input, this.localeData());\n            return this.add(input - day, 'd');\n        } else {\n            return day;\n        }\n    }\n\n    function getSetLocaleDayOfWeek (input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n        return input == null ? weekday : this.add(input - weekday, 'd');\n    }\n\n    function getSetISODayOfWeek (input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n\n        // behaves the same as moment#day except\n        // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n        // as a setter, sunday should belong to the previous week.\n\n        if (input != null) {\n            var weekday = parseIsoWeekday(input, this.localeData());\n            return this.day(this.day() % 7 ? weekday : weekday - 7);\n        } else {\n            return this.day() || 7;\n        }\n    }\n\n    var defaultWeekdaysRegex = matchWord;\n    function weekdaysRegex (isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysStrictRegex;\n            } else {\n                return this._weekdaysRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                this._weekdaysRegex = defaultWeekdaysRegex;\n            }\n            return this._weekdaysStrictRegex && isStrict ?\n                this._weekdaysStrictRegex : this._weekdaysRegex;\n        }\n    }\n\n    var defaultWeekdaysShortRegex = matchWord;\n    function weekdaysShortRegex (isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysShortStrictRegex;\n            } else {\n                return this._weekdaysShortRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n                this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n            }\n            return this._weekdaysShortStrictRegex && isStrict ?\n                this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n        }\n    }\n\n    var defaultWeekdaysMinRegex = matchWord;\n    function weekdaysMinRegex (isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysMinStrictRegex;\n            } else {\n                return this._weekdaysMinRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n                this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n            }\n            return this._weekdaysMinStrictRegex && isStrict ?\n                this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n        }\n    }\n\n\n    function computeWeekdaysParse () {\n        function cmpLenRev(a, b) {\n            return b.length - a.length;\n        }\n\n        var minPieces = [], shortPieces = [], longPieces = [], mixedPieces = [],\n            i, mom, minp, shortp, longp;\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, 1]).day(i);\n            minp = this.weekdaysMin(mom, '');\n            shortp = this.weekdaysShort(mom, '');\n            longp = this.weekdays(mom, '');\n            minPieces.push(minp);\n            shortPieces.push(shortp);\n            longPieces.push(longp);\n            mixedPieces.push(minp);\n            mixedPieces.push(shortp);\n            mixedPieces.push(longp);\n        }\n        // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n        // will match the longer piece.\n        minPieces.sort(cmpLenRev);\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n        for (i = 0; i < 7; i++) {\n            shortPieces[i] = regexEscape(shortPieces[i]);\n            longPieces[i] = regexEscape(longPieces[i]);\n            mixedPieces[i] = regexEscape(mixedPieces[i]);\n        }\n\n        this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._weekdaysShortRegex = this._weekdaysRegex;\n        this._weekdaysMinRegex = this._weekdaysRegex;\n\n        this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n        this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n        this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n    }\n\n    // FORMATTING\n\n    function hFormat() {\n        return this.hours() % 12 || 12;\n    }\n\n    function kFormat() {\n        return this.hours() || 24;\n    }\n\n    addFormatToken('H', ['HH', 2], 0, 'hour');\n    addFormatToken('h', ['hh', 2], 0, hFormat);\n    addFormatToken('k', ['kk', 2], 0, kFormat);\n\n    addFormatToken('hmm', 0, 0, function () {\n        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n    });\n\n    addFormatToken('hmmss', 0, 0, function () {\n        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) +\n            zeroFill(this.seconds(), 2);\n    });\n\n    addFormatToken('Hmm', 0, 0, function () {\n        return '' + this.hours() + zeroFill(this.minutes(), 2);\n    });\n\n    addFormatToken('Hmmss', 0, 0, function () {\n        return '' + this.hours() + zeroFill(this.minutes(), 2) +\n            zeroFill(this.seconds(), 2);\n    });\n\n    function meridiem (token, lowercase) {\n        addFormatToken(token, 0, 0, function () {\n            return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n        });\n    }\n\n    meridiem('a', true);\n    meridiem('A', false);\n\n    // ALIASES\n\n    addUnitAlias('hour', 'h');\n\n    // PRIORITY\n    addUnitPriority('hour', 13);\n\n    // PARSING\n\n    function matchMeridiem (isStrict, locale) {\n        return locale._meridiemParse;\n    }\n\n    addRegexToken('a',  matchMeridiem);\n    addRegexToken('A',  matchMeridiem);\n    addRegexToken('H',  match1to2);\n    addRegexToken('h',  match1to2);\n    addRegexToken('k',  match1to2);\n    addRegexToken('HH', match1to2, match2);\n    addRegexToken('hh', match1to2, match2);\n    addRegexToken('kk', match1to2, match2);\n\n    addRegexToken('hmm', match3to4);\n    addRegexToken('hmmss', match5to6);\n    addRegexToken('Hmm', match3to4);\n    addRegexToken('Hmmss', match5to6);\n\n    addParseToken(['H', 'HH'], HOUR);\n    addParseToken(['k', 'kk'], function (input, array, config) {\n        var kInput = toInt(input);\n        array[HOUR] = kInput === 24 ? 0 : kInput;\n    });\n    addParseToken(['a', 'A'], function (input, array, config) {\n        config._isPm = config._locale.isPM(input);\n        config._meridiem = input;\n    });\n    addParseToken(['h', 'hh'], function (input, array, config) {\n        array[HOUR] = toInt(input);\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmm', function (input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmmss', function (input, array, config) {\n        var pos1 = input.length - 4;\n        var pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('Hmm', function (input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n    });\n    addParseToken('Hmmss', function (input, array, config) {\n        var pos1 = input.length - 4;\n        var pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n    });\n\n    // LOCALES\n\n    function localeIsPM (input) {\n        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n        // Using charAt should be more compatible.\n        return ((input + '').toLowerCase().charAt(0) === 'p');\n    }\n\n    var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\n    function localeMeridiem (hours, minutes, isLower) {\n        if (hours > 11) {\n            return isLower ? 'pm' : 'PM';\n        } else {\n            return isLower ? 'am' : 'AM';\n        }\n    }\n\n\n    // MOMENTS\n\n    // Setting the hour should keep the time, because the user explicitly\n    // specified which hour they want. So trying to maintain the same hour (in\n    // a new timezone) makes sense. Adding/subtracting hours does not follow\n    // this rule.\n    var getSetHour = makeGetSet('Hours', true);\n\n    var baseConfig = {\n        calendar: defaultCalendar,\n        longDateFormat: defaultLongDateFormat,\n        invalidDate: defaultInvalidDate,\n        ordinal: defaultOrdinal,\n        dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n        relativeTime: defaultRelativeTime,\n\n        months: defaultLocaleMonths,\n        monthsShort: defaultLocaleMonthsShort,\n\n        week: defaultLocaleWeek,\n\n        weekdays: defaultLocaleWeekdays,\n        weekdaysMin: defaultLocaleWeekdaysMin,\n        weekdaysShort: defaultLocaleWeekdaysShort,\n\n        meridiemParse: defaultLocaleMeridiemParse\n    };\n\n    // internal storage for locale config files\n    var locales = {};\n    var localeFamilies = {};\n    var globalLocale;\n\n    function normalizeLocale(key) {\n        return key ? key.toLowerCase().replace('_', '-') : key;\n    }\n\n    // pick the locale from the array\n    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n    function chooseLocale(names) {\n        var i = 0, j, next, locale, split;\n\n        while (i < names.length) {\n            split = normalizeLocale(names[i]).split('-');\n            j = split.length;\n            next = normalizeLocale(names[i + 1]);\n            next = next ? next.split('-') : null;\n            while (j > 0) {\n                locale = loadLocale(split.slice(0, j).join('-'));\n                if (locale) {\n                    return locale;\n                }\n                if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n                    //the next array item is better than a shallower substring of this one\n                    break;\n                }\n                j--;\n            }\n            i++;\n        }\n        return globalLocale;\n    }\n\n    function loadLocale(name) {\n        var oldLocale = null;\n        // TODO: Find a better way to register and load all the locales in Node\n        if (!locales[name] && (typeof module !== 'undefined') &&\n                module && module.exports) {\n            try {\n                oldLocale = globalLocale._abbr;\n                var aliasedRequire = require;\n                aliasedRequire('./locale/' + name);\n                getSetGlobalLocale(oldLocale);\n            } catch (e) {}\n        }\n        return locales[name];\n    }\n\n    // This function will load locale and then set the global locale.  If\n    // no arguments are passed in, it will simply return the current global\n    // locale key.\n    function getSetGlobalLocale (key, values) {\n        var data;\n        if (key) {\n            if (isUndefined(values)) {\n                data = getLocale(key);\n            }\n            else {\n                data = defineLocale(key, values);\n            }\n\n            if (data) {\n                // moment.duration._locale = moment._locale = data;\n                globalLocale = data;\n            }\n            else {\n                if ((typeof console !==  'undefined') && console.warn) {\n                    //warn user if arguments are passed but the locale could not be set\n                    console.warn('Locale ' + key +  ' not found. Did you forget to load it?');\n                }\n            }\n        }\n\n        return globalLocale._abbr;\n    }\n\n    function defineLocale (name, config) {\n        if (config !== null) {\n            var locale, parentConfig = baseConfig;\n            config.abbr = name;\n            if (locales[name] != null) {\n                deprecateSimple('defineLocaleOverride',\n                        'use moment.updateLocale(localeName, config) to change ' +\n                        'an existing locale. moment.defineLocale(localeName, ' +\n                        'config) should only be used for creating a new locale ' +\n                        'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\n                parentConfig = locales[name]._config;\n            } else if (config.parentLocale != null) {\n                if (locales[config.parentLocale] != null) {\n                    parentConfig = locales[config.parentLocale]._config;\n                } else {\n                    locale = loadLocale(config.parentLocale);\n                    if (locale != null) {\n                        parentConfig = locale._config;\n                    } else {\n                        if (!localeFamilies[config.parentLocale]) {\n                            localeFamilies[config.parentLocale] = [];\n                        }\n                        localeFamilies[config.parentLocale].push({\n                            name: name,\n                            config: config\n                        });\n                        return null;\n                    }\n                }\n            }\n            locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n            if (localeFamilies[name]) {\n                localeFamilies[name].forEach(function (x) {\n                    defineLocale(x.name, x.config);\n                });\n            }\n\n            // backwards compat for now: also set the locale\n            // make sure we set the locale AFTER all child locales have been\n            // created, so we won't end up with the child locale set.\n            getSetGlobalLocale(name);\n\n\n            return locales[name];\n        } else {\n            // useful for testing\n            delete locales[name];\n            return null;\n        }\n    }\n\n    function updateLocale(name, config) {\n        if (config != null) {\n            var locale, tmpLocale, parentConfig = baseConfig;\n            // MERGE\n            tmpLocale = loadLocale(name);\n            if (tmpLocale != null) {\n                parentConfig = tmpLocale._config;\n            }\n            config = mergeConfigs(parentConfig, config);\n            locale = new Locale(config);\n            locale.parentLocale = locales[name];\n            locales[name] = locale;\n\n            // backwards compat for now: also set the locale\n            getSetGlobalLocale(name);\n        } else {\n            // pass null for config to unupdate, useful for tests\n            if (locales[name] != null) {\n                if (locales[name].parentLocale != null) {\n                    locales[name] = locales[name].parentLocale;\n                } else if (locales[name] != null) {\n                    delete locales[name];\n                }\n            }\n        }\n        return locales[name];\n    }\n\n    // returns locale data\n    function getLocale (key) {\n        var locale;\n\n        if (key && key._locale && key._locale._abbr) {\n            key = key._locale._abbr;\n        }\n\n        if (!key) {\n            return globalLocale;\n        }\n\n        if (!isArray(key)) {\n            //short-circuit everything else\n            locale = loadLocale(key);\n            if (locale) {\n                return locale;\n            }\n            key = [key];\n        }\n\n        return chooseLocale(key);\n    }\n\n    function listLocales() {\n        return keys(locales);\n    }\n\n    function checkOverflow (m) {\n        var overflow;\n        var a = m._a;\n\n        if (a && getParsingFlags(m).overflow === -2) {\n            overflow =\n                a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :\n                a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :\n                a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :\n                a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :\n                a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :\n                a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :\n                -1;\n\n            if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n                overflow = DATE;\n            }\n            if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n                overflow = WEEK;\n            }\n            if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n                overflow = WEEKDAY;\n            }\n\n            getParsingFlags(m).overflow = overflow;\n        }\n\n        return m;\n    }\n\n    // Pick the first defined of two or three arguments.\n    function defaults(a, b, c) {\n        if (a != null) {\n            return a;\n        }\n        if (b != null) {\n            return b;\n        }\n        return c;\n    }\n\n    function currentDateArray(config) {\n        // hooks is actually the exported moment object\n        var nowValue = new Date(hooks.now());\n        if (config._useUTC) {\n            return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n        }\n        return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n    }\n\n    // convert an array to a date.\n    // the array should mirror the parameters below\n    // note: all values past the year are optional and will default to the lowest possible value.\n    // [year, month, day , hour, minute, second, millisecond]\n    function configFromArray (config) {\n        var i, date, input = [], currentDate, expectedWeekday, yearToUse;\n\n        if (config._d) {\n            return;\n        }\n\n        currentDate = currentDateArray(config);\n\n        //compute day of the year from weeks and weekdays\n        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n            dayOfYearFromWeekInfo(config);\n        }\n\n        //if the day of the year is set, figure out what it is\n        if (config._dayOfYear != null) {\n            yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n            if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n                getParsingFlags(config)._overflowDayOfYear = true;\n            }\n\n            date = createUTCDate(yearToUse, 0, config._dayOfYear);\n            config._a[MONTH] = date.getUTCMonth();\n            config._a[DATE] = date.getUTCDate();\n        }\n\n        // Default to current date.\n        // * if no year, month, day of month are given, default to today\n        // * if day of month is given, default month and year\n        // * if month is given, default only year\n        // * if year is given, don't default anything\n        for (i = 0; i < 3 && config._a[i] == null; ++i) {\n            config._a[i] = input[i] = currentDate[i];\n        }\n\n        // Zero out whatever was not defaulted, including time\n        for (; i < 7; i++) {\n            config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];\n        }\n\n        // Check for 24:00:00.000\n        if (config._a[HOUR] === 24 &&\n                config._a[MINUTE] === 0 &&\n                config._a[SECOND] === 0 &&\n                config._a[MILLISECOND] === 0) {\n            config._nextDay = true;\n            config._a[HOUR] = 0;\n        }\n\n        config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n        expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay();\n\n        // Apply timezone offset from input. The actual utcOffset can be changed\n        // with parseZone.\n        if (config._tzm != null) {\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n        }\n\n        if (config._nextDay) {\n            config._a[HOUR] = 24;\n        }\n\n        // check for mismatching day of week\n        if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {\n            getParsingFlags(config).weekdayMismatch = true;\n        }\n    }\n\n    function dayOfYearFromWeekInfo(config) {\n        var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n\n        w = config._w;\n        if (w.GG != null || w.W != null || w.E != null) {\n            dow = 1;\n            doy = 4;\n\n            // TODO: We need to take the current isoWeekYear, but that depends on\n            // how we interpret now (local, utc, fixed offset). So create\n            // a now version of current config (take local/utc/offset flags, and\n            // create now).\n            weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n            week = defaults(w.W, 1);\n            weekday = defaults(w.E, 1);\n            if (weekday < 1 || weekday > 7) {\n                weekdayOverflow = true;\n            }\n        } else {\n            dow = config._locale._week.dow;\n            doy = config._locale._week.doy;\n\n            var curWeek = weekOfYear(createLocal(), dow, doy);\n\n            weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);\n\n            // Default to current week.\n            week = defaults(w.w, curWeek.week);\n\n            if (w.d != null) {\n                // weekday -- low day numbers are considered next week\n                weekday = w.d;\n                if (weekday < 0 || weekday > 6) {\n                    weekdayOverflow = true;\n                }\n            } else if (w.e != null) {\n                // local weekday -- counting starts from begining of week\n                weekday = w.e + dow;\n                if (w.e < 0 || w.e > 6) {\n                    weekdayOverflow = true;\n                }\n            } else {\n                // default to begining of week\n                weekday = dow;\n            }\n        }\n        if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n            getParsingFlags(config)._overflowWeeks = true;\n        } else if (weekdayOverflow != null) {\n            getParsingFlags(config)._overflowWeekday = true;\n        } else {\n            temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n            config._a[YEAR] = temp.year;\n            config._dayOfYear = temp.dayOfYear;\n        }\n    }\n\n    // iso 8601 regex\n    // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n    var extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n    var basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n\n    var tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n\n    var isoDates = [\n        ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/],\n        ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/],\n        ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/],\n        ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false],\n        ['YYYY-DDD', /\\d{4}-\\d{3}/],\n        ['YYYY-MM', /\\d{4}-\\d\\d/, false],\n        ['YYYYYYMMDD', /[+-]\\d{10}/],\n        ['YYYYMMDD', /\\d{8}/],\n        // YYYYMM is NOT allowed by the standard\n        ['GGGG[W]WWE', /\\d{4}W\\d{3}/],\n        ['GGGG[W]WW', /\\d{4}W\\d{2}/, false],\n        ['YYYYDDD', /\\d{7}/]\n    ];\n\n    // iso time formats and regexes\n    var isoTimes = [\n        ['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n        ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/],\n        ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/],\n        ['HH:mm', /\\d\\d:\\d\\d/],\n        ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/],\n        ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/],\n        ['HHmmss', /\\d\\d\\d\\d\\d\\d/],\n        ['HHmm', /\\d\\d\\d\\d/],\n        ['HH', /\\d\\d/]\n    ];\n\n    var aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i;\n\n    // date from iso format\n    function configFromISO(config) {\n        var i, l,\n            string = config._i,\n            match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n            allowTime, dateFormat, timeFormat, tzFormat;\n\n        if (match) {\n            getParsingFlags(config).iso = true;\n\n            for (i = 0, l = isoDates.length; i < l; i++) {\n                if (isoDates[i][1].exec(match[1])) {\n                    dateFormat = isoDates[i][0];\n                    allowTime = isoDates[i][2] !== false;\n                    break;\n                }\n            }\n            if (dateFormat == null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[3]) {\n                for (i = 0, l = isoTimes.length; i < l; i++) {\n                    if (isoTimes[i][1].exec(match[3])) {\n                        // match[2] should be 'T' or space\n                        timeFormat = (match[2] || ' ') + isoTimes[i][0];\n                        break;\n                    }\n                }\n                if (timeFormat == null) {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            if (!allowTime && timeFormat != null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[4]) {\n                if (tzRegex.exec(match[4])) {\n                    tzFormat = 'Z';\n                } else {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n            configFromStringAndFormat(config);\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n    var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/;\n\n    function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {\n        var result = [\n            untruncateYear(yearStr),\n            defaultLocaleMonthsShort.indexOf(monthStr),\n            parseInt(dayStr, 10),\n            parseInt(hourStr, 10),\n            parseInt(minuteStr, 10)\n        ];\n\n        if (secondStr) {\n            result.push(parseInt(secondStr, 10));\n        }\n\n        return result;\n    }\n\n    function untruncateYear(yearStr) {\n        var year = parseInt(yearStr, 10);\n        if (year <= 49) {\n            return 2000 + year;\n        } else if (year <= 999) {\n            return 1900 + year;\n        }\n        return year;\n    }\n\n    function preprocessRFC2822(s) {\n        // Remove comments and folding whitespace and replace multiple-spaces with a single space\n        return s.replace(/\\([^)]*\\)|[\\n\\t]/g, ' ').replace(/(\\s\\s+)/g, ' ').replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n    }\n\n    function checkWeekday(weekdayStr, parsedInput, config) {\n        if (weekdayStr) {\n            // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n            var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n                weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();\n            if (weekdayProvided !== weekdayActual) {\n                getParsingFlags(config).weekdayMismatch = true;\n                config._isValid = false;\n                return false;\n            }\n        }\n        return true;\n    }\n\n    var obsOffsets = {\n        UT: 0,\n        GMT: 0,\n        EDT: -4 * 60,\n        EST: -5 * 60,\n        CDT: -5 * 60,\n        CST: -6 * 60,\n        MDT: -6 * 60,\n        MST: -7 * 60,\n        PDT: -7 * 60,\n        PST: -8 * 60\n    };\n\n    function calculateOffset(obsOffset, militaryOffset, numOffset) {\n        if (obsOffset) {\n            return obsOffsets[obsOffset];\n        } else if (militaryOffset) {\n            // the only allowed military tz is Z\n            return 0;\n        } else {\n            var hm = parseInt(numOffset, 10);\n            var m = hm % 100, h = (hm - m) / 100;\n            return h * 60 + m;\n        }\n    }\n\n    // date and time from ref 2822 format\n    function configFromRFC2822(config) {\n        var match = rfc2822.exec(preprocessRFC2822(config._i));\n        if (match) {\n            var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);\n            if (!checkWeekday(match[1], parsedArray, config)) {\n                return;\n            }\n\n            config._a = parsedArray;\n            config._tzm = calculateOffset(match[8], match[9], match[10]);\n\n            config._d = createUTCDate.apply(null, config._a);\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n            getParsingFlags(config).rfc2822 = true;\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    // date from iso format or fallback\n    function configFromString(config) {\n        var matched = aspNetJsonRegex.exec(config._i);\n\n        if (matched !== null) {\n            config._d = new Date(+matched[1]);\n            return;\n        }\n\n        configFromISO(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n        } else {\n            return;\n        }\n\n        configFromRFC2822(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n        } else {\n            return;\n        }\n\n        // Final attempt, use Input Fallback\n        hooks.createFromInputFallback(config);\n    }\n\n    hooks.createFromInputFallback = deprecate(\n        'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +\n        'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +\n        'discouraged and will be removed in an upcoming major release. Please refer to ' +\n        'http://momentjs.com/guides/#/warnings/js-date/ for more info.',\n        function (config) {\n            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n        }\n    );\n\n    // constant that refers to the ISO standard\n    hooks.ISO_8601 = function () {};\n\n    // constant that refers to the RFC 2822 form\n    hooks.RFC_2822 = function () {};\n\n    // date from string and format string\n    function configFromStringAndFormat(config) {\n        // TODO: Move this to another part of the creation flow to prevent circular deps\n        if (config._f === hooks.ISO_8601) {\n            configFromISO(config);\n            return;\n        }\n        if (config._f === hooks.RFC_2822) {\n            configFromRFC2822(config);\n            return;\n        }\n        config._a = [];\n        getParsingFlags(config).empty = true;\n\n        // This array is used to make a Date, either with `new Date` or `Date.UTC`\n        var string = '' + config._i,\n            i, parsedInput, tokens, token, skipped,\n            stringLength = string.length,\n            totalParsedInputLength = 0;\n\n        tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n        for (i = 0; i < tokens.length; i++) {\n            token = tokens[i];\n            parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];\n            // console.log('token', token, 'parsedInput', parsedInput,\n            //         'regex', getParseRegexForToken(token, config));\n            if (parsedInput) {\n                skipped = string.substr(0, string.indexOf(parsedInput));\n                if (skipped.length > 0) {\n                    getParsingFlags(config).unusedInput.push(skipped);\n                }\n                string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n                totalParsedInputLength += parsedInput.length;\n            }\n            // don't parse if it's not a known token\n            if (formatTokenFunctions[token]) {\n                if (parsedInput) {\n                    getParsingFlags(config).empty = false;\n                }\n                else {\n                    getParsingFlags(config).unusedTokens.push(token);\n                }\n                addTimeToArrayFromToken(token, parsedInput, config);\n            }\n            else if (config._strict && !parsedInput) {\n                getParsingFlags(config).unusedTokens.push(token);\n            }\n        }\n\n        // add remaining unparsed input length to the string\n        getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n        if (string.length > 0) {\n            getParsingFlags(config).unusedInput.push(string);\n        }\n\n        // clear _12h flag if hour is <= 12\n        if (config._a[HOUR] <= 12 &&\n            getParsingFlags(config).bigHour === true &&\n            config._a[HOUR] > 0) {\n            getParsingFlags(config).bigHour = undefined;\n        }\n\n        getParsingFlags(config).parsedDateParts = config._a.slice(0);\n        getParsingFlags(config).meridiem = config._meridiem;\n        // handle meridiem\n        config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n\n        configFromArray(config);\n        checkOverflow(config);\n    }\n\n\n    function meridiemFixWrap (locale, hour, meridiem) {\n        var isPm;\n\n        if (meridiem == null) {\n            // nothing to do\n            return hour;\n        }\n        if (locale.meridiemHour != null) {\n            return locale.meridiemHour(hour, meridiem);\n        } else if (locale.isPM != null) {\n            // Fallback\n            isPm = locale.isPM(meridiem);\n            if (isPm && hour < 12) {\n                hour += 12;\n            }\n            if (!isPm && hour === 12) {\n                hour = 0;\n            }\n            return hour;\n        } else {\n            // this is not supposed to happen\n            return hour;\n        }\n    }\n\n    // date from string and array of format strings\n    function configFromStringAndArray(config) {\n        var tempConfig,\n            bestMoment,\n\n            scoreToBeat,\n            i,\n            currentScore;\n\n        if (config._f.length === 0) {\n            getParsingFlags(config).invalidFormat = true;\n            config._d = new Date(NaN);\n            return;\n        }\n\n        for (i = 0; i < config._f.length; i++) {\n            currentScore = 0;\n            tempConfig = copyConfig({}, config);\n            if (config._useUTC != null) {\n                tempConfig._useUTC = config._useUTC;\n            }\n            tempConfig._f = config._f[i];\n            configFromStringAndFormat(tempConfig);\n\n            if (!isValid(tempConfig)) {\n                continue;\n            }\n\n            // if there is any input that was not parsed add a penalty for that format\n            currentScore += getParsingFlags(tempConfig).charsLeftOver;\n\n            //or tokens\n            currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n\n            getParsingFlags(tempConfig).score = currentScore;\n\n            if (scoreToBeat == null || currentScore < scoreToBeat) {\n                scoreToBeat = currentScore;\n                bestMoment = tempConfig;\n            }\n        }\n\n        extend(config, bestMoment || tempConfig);\n    }\n\n    function configFromObject(config) {\n        if (config._d) {\n            return;\n        }\n\n        var i = normalizeObjectUnits(config._i);\n        config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n            return obj && parseInt(obj, 10);\n        });\n\n        configFromArray(config);\n    }\n\n    function createFromConfig (config) {\n        var res = new Moment(checkOverflow(prepareConfig(config)));\n        if (res._nextDay) {\n            // Adding is smart enough around DST\n            res.add(1, 'd');\n            res._nextDay = undefined;\n        }\n\n        return res;\n    }\n\n    function prepareConfig (config) {\n        var input = config._i,\n            format = config._f;\n\n        config._locale = config._locale || getLocale(config._l);\n\n        if (input === null || (format === undefined && input === '')) {\n            return createInvalid({nullInput: true});\n        }\n\n        if (typeof input === 'string') {\n            config._i = input = config._locale.preparse(input);\n        }\n\n        if (isMoment(input)) {\n            return new Moment(checkOverflow(input));\n        } else if (isDate(input)) {\n            config._d = input;\n        } else if (isArray(format)) {\n            configFromStringAndArray(config);\n        } else if (format) {\n            configFromStringAndFormat(config);\n        }  else {\n            configFromInput(config);\n        }\n\n        if (!isValid(config)) {\n            config._d = null;\n        }\n\n        return config;\n    }\n\n    function configFromInput(config) {\n        var input = config._i;\n        if (isUndefined(input)) {\n            config._d = new Date(hooks.now());\n        } else if (isDate(input)) {\n            config._d = new Date(input.valueOf());\n        } else if (typeof input === 'string') {\n            configFromString(config);\n        } else if (isArray(input)) {\n            config._a = map(input.slice(0), function (obj) {\n                return parseInt(obj, 10);\n            });\n            configFromArray(config);\n        } else if (isObject(input)) {\n            configFromObject(config);\n        } else if (isNumber(input)) {\n            // from milliseconds\n            config._d = new Date(input);\n        } else {\n            hooks.createFromInputFallback(config);\n        }\n    }\n\n    function createLocalOrUTC (input, format, locale, strict, isUTC) {\n        var c = {};\n\n        if (locale === true || locale === false) {\n            strict = locale;\n            locale = undefined;\n        }\n\n        if ((isObject(input) && isObjectEmpty(input)) ||\n                (isArray(input) && input.length === 0)) {\n            input = undefined;\n        }\n        // object construction must be done this way.\n        // https://github.com/moment/moment/issues/1423\n        c._isAMomentObject = true;\n        c._useUTC = c._isUTC = isUTC;\n        c._l = locale;\n        c._i = input;\n        c._f = format;\n        c._strict = strict;\n\n        return createFromConfig(c);\n    }\n\n    function createLocal (input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, false);\n    }\n\n    var prototypeMin = deprecate(\n        'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',\n        function () {\n            var other = createLocal.apply(null, arguments);\n            if (this.isValid() && other.isValid()) {\n                return other < this ? this : other;\n            } else {\n                return createInvalid();\n            }\n        }\n    );\n\n    var prototypeMax = deprecate(\n        'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',\n        function () {\n            var other = createLocal.apply(null, arguments);\n            if (this.isValid() && other.isValid()) {\n                return other > this ? this : other;\n            } else {\n                return createInvalid();\n            }\n        }\n    );\n\n    // Pick a moment m from moments so that m[fn](other) is true for all\n    // other. This relies on the function fn to be transitive.\n    //\n    // moments should either be an array of moment objects or an array, whose\n    // first element is an array of moment objects.\n    function pickBy(fn, moments) {\n        var res, i;\n        if (moments.length === 1 && isArray(moments[0])) {\n            moments = moments[0];\n        }\n        if (!moments.length) {\n            return createLocal();\n        }\n        res = moments[0];\n        for (i = 1; i < moments.length; ++i) {\n            if (!moments[i].isValid() || moments[i][fn](res)) {\n                res = moments[i];\n            }\n        }\n        return res;\n    }\n\n    // TODO: Use [].sort instead?\n    function min () {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isBefore', args);\n    }\n\n    function max () {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isAfter', args);\n    }\n\n    var now = function () {\n        return Date.now ? Date.now() : +(new Date());\n    };\n\n    var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];\n\n    function isDurationValid(m) {\n        for (var key in m) {\n            if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {\n                return false;\n            }\n        }\n\n        var unitHasDecimal = false;\n        for (var i = 0; i < ordering.length; ++i) {\n            if (m[ordering[i]]) {\n                if (unitHasDecimal) {\n                    return false; // only allow non-integers for smallest unit\n                }\n                if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n                    unitHasDecimal = true;\n                }\n            }\n        }\n\n        return true;\n    }\n\n    function isValid$1() {\n        return this._isValid;\n    }\n\n    function createInvalid$1() {\n        return createDuration(NaN);\n    }\n\n    function Duration (duration) {\n        var normalizedInput = normalizeObjectUnits(duration),\n            years = normalizedInput.year || 0,\n            quarters = normalizedInput.quarter || 0,\n            months = normalizedInput.month || 0,\n            weeks = normalizedInput.week || 0,\n            days = normalizedInput.day || 0,\n            hours = normalizedInput.hour || 0,\n            minutes = normalizedInput.minute || 0,\n            seconds = normalizedInput.second || 0,\n            milliseconds = normalizedInput.millisecond || 0;\n\n        this._isValid = isDurationValid(normalizedInput);\n\n        // representation for dateAddRemove\n        this._milliseconds = +milliseconds +\n            seconds * 1e3 + // 1000\n            minutes * 6e4 + // 1000 * 60\n            hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n        // Because of dateAddRemove treats 24 hours as different from a\n        // day when working around DST, we need to store them separately\n        this._days = +days +\n            weeks * 7;\n        // It is impossible to translate months into days without knowing\n        // which months you are are talking about, so we have to store\n        // it separately.\n        this._months = +months +\n            quarters * 3 +\n            years * 12;\n\n        this._data = {};\n\n        this._locale = getLocale();\n\n        this._bubble();\n    }\n\n    function isDuration (obj) {\n        return obj instanceof Duration;\n    }\n\n    function absRound (number) {\n        if (number < 0) {\n            return Math.round(-1 * number) * -1;\n        } else {\n            return Math.round(number);\n        }\n    }\n\n    // FORMATTING\n\n    function offset (token, separator) {\n        addFormatToken(token, 0, 0, function () {\n            var offset = this.utcOffset();\n            var sign = '+';\n            if (offset < 0) {\n                offset = -offset;\n                sign = '-';\n            }\n            return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);\n        });\n    }\n\n    offset('Z', ':');\n    offset('ZZ', '');\n\n    // PARSING\n\n    addRegexToken('Z',  matchShortOffset);\n    addRegexToken('ZZ', matchShortOffset);\n    addParseToken(['Z', 'ZZ'], function (input, array, config) {\n        config._useUTC = true;\n        config._tzm = offsetFromString(matchShortOffset, input);\n    });\n\n    // HELPERS\n\n    // timezone chunker\n    // '+10:00' > ['10',  '00']\n    // '-1530'  > ['-15', '30']\n    var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n    function offsetFromString(matcher, string) {\n        var matches = (string || '').match(matcher);\n\n        if (matches === null) {\n            return null;\n        }\n\n        var chunk   = matches[matches.length - 1] || [];\n        var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n        var minutes = +(parts[1] * 60) + toInt(parts[2]);\n\n        return minutes === 0 ?\n          0 :\n          parts[0] === '+' ? minutes : -minutes;\n    }\n\n    // Return a moment from input, that is local/utc/zone equivalent to model.\n    function cloneWithOffset(input, model) {\n        var res, diff;\n        if (model._isUTC) {\n            res = model.clone();\n            diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf();\n            // Use low-level api, because this fn is low-level api.\n            res._d.setTime(res._d.valueOf() + diff);\n            hooks.updateOffset(res, false);\n            return res;\n        } else {\n            return createLocal(input).local();\n        }\n    }\n\n    function getDateOffset (m) {\n        // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n        // https://github.com/moment/moment/pull/1871\n        return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n    }\n\n    // HOOKS\n\n    // This function will be called whenever a moment is mutated.\n    // It is intended to keep the offset in sync with the timezone.\n    hooks.updateOffset = function () {};\n\n    // MOMENTS\n\n    // keepLocalTime = true means only change the timezone, without\n    // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n    // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n    // +0200, so we adjust the time as needed, to be valid.\n    //\n    // Keeping the time actually adds/subtracts (one hour)\n    // from the actual represented time. That is why we call updateOffset\n    // a second time. In case it wants us to change the offset again\n    // _changeInProgress == true case, then we have to adjust, because\n    // there is no such time in the given timezone.\n    function getSetOffset (input, keepLocalTime, keepMinutes) {\n        var offset = this._offset || 0,\n            localAdjust;\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        if (input != null) {\n            if (typeof input === 'string') {\n                input = offsetFromString(matchShortOffset, input);\n                if (input === null) {\n                    return this;\n                }\n            } else if (Math.abs(input) < 16 && !keepMinutes) {\n                input = input * 60;\n            }\n            if (!this._isUTC && keepLocalTime) {\n                localAdjust = getDateOffset(this);\n            }\n            this._offset = input;\n            this._isUTC = true;\n            if (localAdjust != null) {\n                this.add(localAdjust, 'm');\n            }\n            if (offset !== input) {\n                if (!keepLocalTime || this._changeInProgress) {\n                    addSubtract(this, createDuration(input - offset, 'm'), 1, false);\n                } else if (!this._changeInProgress) {\n                    this._changeInProgress = true;\n                    hooks.updateOffset(this, true);\n                    this._changeInProgress = null;\n                }\n            }\n            return this;\n        } else {\n            return this._isUTC ? offset : getDateOffset(this);\n        }\n    }\n\n    function getSetZone (input, keepLocalTime) {\n        if (input != null) {\n            if (typeof input !== 'string') {\n                input = -input;\n            }\n\n            this.utcOffset(input, keepLocalTime);\n\n            return this;\n        } else {\n            return -this.utcOffset();\n        }\n    }\n\n    function setOffsetToUTC (keepLocalTime) {\n        return this.utcOffset(0, keepLocalTime);\n    }\n\n    function setOffsetToLocal (keepLocalTime) {\n        if (this._isUTC) {\n            this.utcOffset(0, keepLocalTime);\n            this._isUTC = false;\n\n            if (keepLocalTime) {\n                this.subtract(getDateOffset(this), 'm');\n            }\n        }\n        return this;\n    }\n\n    function setOffsetToParsedOffset () {\n        if (this._tzm != null) {\n            this.utcOffset(this._tzm, false, true);\n        } else if (typeof this._i === 'string') {\n            var tZone = offsetFromString(matchOffset, this._i);\n            if (tZone != null) {\n                this.utcOffset(tZone);\n            }\n            else {\n                this.utcOffset(0, true);\n            }\n        }\n        return this;\n    }\n\n    function hasAlignedHourOffset (input) {\n        if (!this.isValid()) {\n            return false;\n        }\n        input = input ? createLocal(input).utcOffset() : 0;\n\n        return (this.utcOffset() - input) % 60 === 0;\n    }\n\n    function isDaylightSavingTime () {\n        return (\n            this.utcOffset() > this.clone().month(0).utcOffset() ||\n            this.utcOffset() > this.clone().month(5).utcOffset()\n        );\n    }\n\n    function isDaylightSavingTimeShifted () {\n        if (!isUndefined(this._isDSTShifted)) {\n            return this._isDSTShifted;\n        }\n\n        var c = {};\n\n        copyConfig(c, this);\n        c = prepareConfig(c);\n\n        if (c._a) {\n            var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n            this._isDSTShifted = this.isValid() &&\n                compareArrays(c._a, other.toArray()) > 0;\n        } else {\n            this._isDSTShifted = false;\n        }\n\n        return this._isDSTShifted;\n    }\n\n    function isLocal () {\n        return this.isValid() ? !this._isUTC : false;\n    }\n\n    function isUtcOffset () {\n        return this.isValid() ? this._isUTC : false;\n    }\n\n    function isUtc () {\n        return this.isValid() ? this._isUTC && this._offset === 0 : false;\n    }\n\n    // ASP.NET json date format regex\n    var aspNetRegex = /^(\\-|\\+)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/;\n\n    // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n    // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n    // and further modified to allow for strings containing both week and day\n    var isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n    function createDuration (input, key) {\n        var duration = input,\n            // matching against regexp is expensive, do it on demand\n            match = null,\n            sign,\n            ret,\n            diffRes;\n\n        if (isDuration(input)) {\n            duration = {\n                ms : input._milliseconds,\n                d  : input._days,\n                M  : input._months\n            };\n        } else if (isNumber(input)) {\n            duration = {};\n            if (key) {\n                duration[key] = input;\n            } else {\n                duration.milliseconds = input;\n            }\n        } else if (!!(match = aspNetRegex.exec(input))) {\n            sign = (match[1] === '-') ? -1 : 1;\n            duration = {\n                y  : 0,\n                d  : toInt(match[DATE])                         * sign,\n                h  : toInt(match[HOUR])                         * sign,\n                m  : toInt(match[MINUTE])                       * sign,\n                s  : toInt(match[SECOND])                       * sign,\n                ms : toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n            };\n        } else if (!!(match = isoRegex.exec(input))) {\n            sign = (match[1] === '-') ? -1 : (match[1] === '+') ? 1 : 1;\n            duration = {\n                y : parseIso(match[2], sign),\n                M : parseIso(match[3], sign),\n                w : parseIso(match[4], sign),\n                d : parseIso(match[5], sign),\n                h : parseIso(match[6], sign),\n                m : parseIso(match[7], sign),\n                s : parseIso(match[8], sign)\n            };\n        } else if (duration == null) {// checks for null or undefined\n            duration = {};\n        } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n            diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n\n            duration = {};\n            duration.ms = diffRes.milliseconds;\n            duration.M = diffRes.months;\n        }\n\n        ret = new Duration(duration);\n\n        if (isDuration(input) && hasOwnProp(input, '_locale')) {\n            ret._locale = input._locale;\n        }\n\n        return ret;\n    }\n\n    createDuration.fn = Duration.prototype;\n    createDuration.invalid = createInvalid$1;\n\n    function parseIso (inp, sign) {\n        // We'd normally use ~~inp for this, but unfortunately it also\n        // converts floats to ints.\n        // inp may be undefined, so careful calling replace on it.\n        var res = inp && parseFloat(inp.replace(',', '.'));\n        // apply sign while we're at it\n        return (isNaN(res) ? 0 : res) * sign;\n    }\n\n    function positiveMomentsDifference(base, other) {\n        var res = {milliseconds: 0, months: 0};\n\n        res.months = other.month() - base.month() +\n            (other.year() - base.year()) * 12;\n        if (base.clone().add(res.months, 'M').isAfter(other)) {\n            --res.months;\n        }\n\n        res.milliseconds = +other - +(base.clone().add(res.months, 'M'));\n\n        return res;\n    }\n\n    function momentsDifference(base, other) {\n        var res;\n        if (!(base.isValid() && other.isValid())) {\n            return {milliseconds: 0, months: 0};\n        }\n\n        other = cloneWithOffset(other, base);\n        if (base.isBefore(other)) {\n            res = positiveMomentsDifference(base, other);\n        } else {\n            res = positiveMomentsDifference(other, base);\n            res.milliseconds = -res.milliseconds;\n            res.months = -res.months;\n        }\n\n        return res;\n    }\n\n    // TODO: remove 'name' arg after deprecation is removed\n    function createAdder(direction, name) {\n        return function (val, period) {\n            var dur, tmp;\n            //invert the arguments, but complain about it\n            if (period !== null && !isNaN(+period)) {\n                deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' +\n                'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n                tmp = val; val = period; period = tmp;\n            }\n\n            val = typeof val === 'string' ? +val : val;\n            dur = createDuration(val, period);\n            addSubtract(this, dur, direction);\n            return this;\n        };\n    }\n\n    function addSubtract (mom, duration, isAdding, updateOffset) {\n        var milliseconds = duration._milliseconds,\n            days = absRound(duration._days),\n            months = absRound(duration._months);\n\n        if (!mom.isValid()) {\n            // No op\n            return;\n        }\n\n        updateOffset = updateOffset == null ? true : updateOffset;\n\n        if (months) {\n            setMonth(mom, get(mom, 'Month') + months * isAdding);\n        }\n        if (days) {\n            set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n        }\n        if (milliseconds) {\n            mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n        }\n        if (updateOffset) {\n            hooks.updateOffset(mom, days || months);\n        }\n    }\n\n    var add      = createAdder(1, 'add');\n    var subtract = createAdder(-1, 'subtract');\n\n    function getCalendarFormat(myMoment, now) {\n        var diff = myMoment.diff(now, 'days', true);\n        return diff < -6 ? 'sameElse' :\n                diff < -1 ? 'lastWeek' :\n                diff < 0 ? 'lastDay' :\n                diff < 1 ? 'sameDay' :\n                diff < 2 ? 'nextDay' :\n                diff < 7 ? 'nextWeek' : 'sameElse';\n    }\n\n    function calendar$1 (time, formats) {\n        // We want to compare the start of today, vs this.\n        // Getting start-of-today depends on whether we're local/utc/offset or not.\n        var now = time || createLocal(),\n            sod = cloneWithOffset(now, this).startOf('day'),\n            format = hooks.calendarFormat(this, sod) || 'sameElse';\n\n        var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n\n        return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n    }\n\n    function clone () {\n        return new Moment(this);\n    }\n\n    function isAfter (input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\n        if (units === 'millisecond') {\n            return this.valueOf() > localInput.valueOf();\n        } else {\n            return localInput.valueOf() < this.clone().startOf(units).valueOf();\n        }\n    }\n\n    function isBefore (input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\n        if (units === 'millisecond') {\n            return this.valueOf() < localInput.valueOf();\n        } else {\n            return this.clone().endOf(units).valueOf() < localInput.valueOf();\n        }\n    }\n\n    function isBetween (from, to, units, inclusivity) {\n        inclusivity = inclusivity || '()';\n        return (inclusivity[0] === '(' ? this.isAfter(from, units) : !this.isBefore(from, units)) &&\n            (inclusivity[1] === ')' ? this.isBefore(to, units) : !this.isAfter(to, units));\n    }\n\n    function isSame (input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input),\n            inputMs;\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units || 'millisecond');\n        if (units === 'millisecond') {\n            return this.valueOf() === localInput.valueOf();\n        } else {\n            inputMs = localInput.valueOf();\n            return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n        }\n    }\n\n    function isSameOrAfter (input, units) {\n        return this.isSame(input, units) || this.isAfter(input,units);\n    }\n\n    function isSameOrBefore (input, units) {\n        return this.isSame(input, units) || this.isBefore(input,units);\n    }\n\n    function diff (input, units, asFloat) {\n        var that,\n            zoneDelta,\n            output;\n\n        if (!this.isValid()) {\n            return NaN;\n        }\n\n        that = cloneWithOffset(input, this);\n\n        if (!that.isValid()) {\n            return NaN;\n        }\n\n        zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n\n        units = normalizeUnits(units);\n\n        switch (units) {\n            case 'year': output = monthDiff(this, that) / 12; break;\n            case 'month': output = monthDiff(this, that); break;\n            case 'quarter': output = monthDiff(this, that) / 3; break;\n            case 'second': output = (this - that) / 1e3; break; // 1000\n            case 'minute': output = (this - that) / 6e4; break; // 1000 * 60\n            case 'hour': output = (this - that) / 36e5; break; // 1000 * 60 * 60\n            case 'day': output = (this - that - zoneDelta) / 864e5; break; // 1000 * 60 * 60 * 24, negate dst\n            case 'week': output = (this - that - zoneDelta) / 6048e5; break; // 1000 * 60 * 60 * 24 * 7, negate dst\n            default: output = this - that;\n        }\n\n        return asFloat ? output : absFloor(output);\n    }\n\n    function monthDiff (a, b) {\n        // difference in months\n        var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),\n            // b is in (anchor - 1 month, anchor + 1 month)\n            anchor = a.clone().add(wholeMonthDiff, 'months'),\n            anchor2, adjust;\n\n        if (b - anchor < 0) {\n            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor - anchor2);\n        } else {\n            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor2 - anchor);\n        }\n\n        //check for negative zero, return zero if negative zero\n        return -(wholeMonthDiff + adjust) || 0;\n    }\n\n    hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n    hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\n    function toString () {\n        return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n    }\n\n    function toISOString(keepOffset) {\n        if (!this.isValid()) {\n            return null;\n        }\n        var utc = keepOffset !== true;\n        var m = utc ? this.clone().utc() : this;\n        if (m.year() < 0 || m.year() > 9999) {\n            return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');\n        }\n        if (isFunction(Date.prototype.toISOString)) {\n            // native implementation is ~50x faster, use it when we can\n            if (utc) {\n                return this.toDate().toISOString();\n            } else {\n                return new Date(this.valueOf() + this.utcOffset() * 60 * 1000).toISOString().replace('Z', formatMoment(m, 'Z'));\n            }\n        }\n        return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');\n    }\n\n    /**\n     * Return a human readable representation of a moment that can\n     * also be evaluated to get a new moment which is the same\n     *\n     * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n     */\n    function inspect () {\n        if (!this.isValid()) {\n            return 'moment.invalid(/* ' + this._i + ' */)';\n        }\n        var func = 'moment';\n        var zone = '';\n        if (!this.isLocal()) {\n            func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n            zone = 'Z';\n        }\n        var prefix = '[' + func + '(\"]';\n        var year = (0 <= this.year() && this.year() <= 9999) ? 'YYYY' : 'YYYYYY';\n        var datetime = '-MM-DD[T]HH:mm:ss.SSS';\n        var suffix = zone + '[\")]';\n\n        return this.format(prefix + year + datetime + suffix);\n    }\n\n    function format (inputString) {\n        if (!inputString) {\n            inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n        }\n        var output = formatMoment(this, inputString);\n        return this.localeData().postformat(output);\n    }\n\n    function from (time, withoutSuffix) {\n        if (this.isValid() &&\n                ((isMoment(time) && time.isValid()) ||\n                 createLocal(time).isValid())) {\n            return createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);\n        } else {\n            return this.localeData().invalidDate();\n        }\n    }\n\n    function fromNow (withoutSuffix) {\n        return this.from(createLocal(), withoutSuffix);\n    }\n\n    function to (time, withoutSuffix) {\n        if (this.isValid() &&\n                ((isMoment(time) && time.isValid()) ||\n                 createLocal(time).isValid())) {\n            return createDuration({from: this, to: time}).locale(this.locale()).humanize(!withoutSuffix);\n        } else {\n            return this.localeData().invalidDate();\n        }\n    }\n\n    function toNow (withoutSuffix) {\n        return this.to(createLocal(), withoutSuffix);\n    }\n\n    // If passed a locale key, it will set the locale for this\n    // instance.  Otherwise, it will return the locale configuration\n    // variables for this instance.\n    function locale (key) {\n        var newLocaleData;\n\n        if (key === undefined) {\n            return this._locale._abbr;\n        } else {\n            newLocaleData = getLocale(key);\n            if (newLocaleData != null) {\n                this._locale = newLocaleData;\n            }\n            return this;\n        }\n    }\n\n    var lang = deprecate(\n        'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',\n        function (key) {\n            if (key === undefined) {\n                return this.localeData();\n            } else {\n                return this.locale(key);\n            }\n        }\n    );\n\n    function localeData () {\n        return this._locale;\n    }\n\n    function startOf (units) {\n        units = normalizeUnits(units);\n        // the following switch intentionally omits break keywords\n        // to utilize falling through the cases.\n        switch (units) {\n            case 'year':\n                this.month(0);\n                /* falls through */\n            case 'quarter':\n            case 'month':\n                this.date(1);\n                /* falls through */\n            case 'week':\n            case 'isoWeek':\n            case 'day':\n            case 'date':\n                this.hours(0);\n                /* falls through */\n            case 'hour':\n                this.minutes(0);\n                /* falls through */\n            case 'minute':\n                this.seconds(0);\n                /* falls through */\n            case 'second':\n                this.milliseconds(0);\n        }\n\n        // weeks are a special case\n        if (units === 'week') {\n            this.weekday(0);\n        }\n        if (units === 'isoWeek') {\n            this.isoWeekday(1);\n        }\n\n        // quarters are also special\n        if (units === 'quarter') {\n            this.month(Math.floor(this.month() / 3) * 3);\n        }\n\n        return this;\n    }\n\n    function endOf (units) {\n        units = normalizeUnits(units);\n        if (units === undefined || units === 'millisecond') {\n            return this;\n        }\n\n        // 'date' is an alias for 'day', so it should be considered as such.\n        if (units === 'date') {\n            units = 'day';\n        }\n\n        return this.startOf(units).add(1, (units === 'isoWeek' ? 'week' : units)).subtract(1, 'ms');\n    }\n\n    function valueOf () {\n        return this._d.valueOf() - ((this._offset || 0) * 60000);\n    }\n\n    function unix () {\n        return Math.floor(this.valueOf() / 1000);\n    }\n\n    function toDate () {\n        return new Date(this.valueOf());\n    }\n\n    function toArray () {\n        var m = this;\n        return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n    }\n\n    function toObject () {\n        var m = this;\n        return {\n            years: m.year(),\n            months: m.month(),\n            date: m.date(),\n            hours: m.hours(),\n            minutes: m.minutes(),\n            seconds: m.seconds(),\n            milliseconds: m.milliseconds()\n        };\n    }\n\n    function toJSON () {\n        // new Date(NaN).toJSON() === null\n        return this.isValid() ? this.toISOString() : null;\n    }\n\n    function isValid$2 () {\n        return isValid(this);\n    }\n\n    function parsingFlags () {\n        return extend({}, getParsingFlags(this));\n    }\n\n    function invalidAt () {\n        return getParsingFlags(this).overflow;\n    }\n\n    function creationData() {\n        return {\n            input: this._i,\n            format: this._f,\n            locale: this._locale,\n            isUTC: this._isUTC,\n            strict: this._strict\n        };\n    }\n\n    // FORMATTING\n\n    addFormatToken(0, ['gg', 2], 0, function () {\n        return this.weekYear() % 100;\n    });\n\n    addFormatToken(0, ['GG', 2], 0, function () {\n        return this.isoWeekYear() % 100;\n    });\n\n    function addWeekYearFormatToken (token, getter) {\n        addFormatToken(0, [token, token.length], 0, getter);\n    }\n\n    addWeekYearFormatToken('gggg',     'weekYear');\n    addWeekYearFormatToken('ggggg',    'weekYear');\n    addWeekYearFormatToken('GGGG',  'isoWeekYear');\n    addWeekYearFormatToken('GGGGG', 'isoWeekYear');\n\n    // ALIASES\n\n    addUnitAlias('weekYear', 'gg');\n    addUnitAlias('isoWeekYear', 'GG');\n\n    // PRIORITY\n\n    addUnitPriority('weekYear', 1);\n    addUnitPriority('isoWeekYear', 1);\n\n\n    // PARSING\n\n    addRegexToken('G',      matchSigned);\n    addRegexToken('g',      matchSigned);\n    addRegexToken('GG',     match1to2, match2);\n    addRegexToken('gg',     match1to2, match2);\n    addRegexToken('GGGG',   match1to4, match4);\n    addRegexToken('gggg',   match1to4, match4);\n    addRegexToken('GGGGG',  match1to6, match6);\n    addRegexToken('ggggg',  match1to6, match6);\n\n    addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n        week[token.substr(0, 2)] = toInt(input);\n    });\n\n    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n        week[token] = hooks.parseTwoDigitYear(input);\n    });\n\n    // MOMENTS\n\n    function getSetWeekYear (input) {\n        return getSetWeekYearHelper.call(this,\n                input,\n                this.week(),\n                this.weekday(),\n                this.localeData()._week.dow,\n                this.localeData()._week.doy);\n    }\n\n    function getSetISOWeekYear (input) {\n        return getSetWeekYearHelper.call(this,\n                input, this.isoWeek(), this.isoWeekday(), 1, 4);\n    }\n\n    function getISOWeeksInYear () {\n        return weeksInYear(this.year(), 1, 4);\n    }\n\n    function getWeeksInYear () {\n        var weekInfo = this.localeData()._week;\n        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n    }\n\n    function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n        var weeksTarget;\n        if (input == null) {\n            return weekOfYear(this, dow, doy).year;\n        } else {\n            weeksTarget = weeksInYear(input, dow, doy);\n            if (week > weeksTarget) {\n                week = weeksTarget;\n            }\n            return setWeekAll.call(this, input, week, weekday, dow, doy);\n        }\n    }\n\n    function setWeekAll(weekYear, week, weekday, dow, doy) {\n        var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n            date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n\n        this.year(date.getUTCFullYear());\n        this.month(date.getUTCMonth());\n        this.date(date.getUTCDate());\n        return this;\n    }\n\n    // FORMATTING\n\n    addFormatToken('Q', 0, 'Qo', 'quarter');\n\n    // ALIASES\n\n    addUnitAlias('quarter', 'Q');\n\n    // PRIORITY\n\n    addUnitPriority('quarter', 7);\n\n    // PARSING\n\n    addRegexToken('Q', match1);\n    addParseToken('Q', function (input, array) {\n        array[MONTH] = (toInt(input) - 1) * 3;\n    });\n\n    // MOMENTS\n\n    function getSetQuarter (input) {\n        return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n    }\n\n    // FORMATTING\n\n    addFormatToken('D', ['DD', 2], 'Do', 'date');\n\n    // ALIASES\n\n    addUnitAlias('date', 'D');\n\n    // PRIORITY\n    addUnitPriority('date', 9);\n\n    // PARSING\n\n    addRegexToken('D',  match1to2);\n    addRegexToken('DD', match1to2, match2);\n    addRegexToken('Do', function (isStrict, locale) {\n        // TODO: Remove \"ordinalParse\" fallback in next major release.\n        return isStrict ?\n          (locale._dayOfMonthOrdinalParse || locale._ordinalParse) :\n          locale._dayOfMonthOrdinalParseLenient;\n    });\n\n    addParseToken(['D', 'DD'], DATE);\n    addParseToken('Do', function (input, array) {\n        array[DATE] = toInt(input.match(match1to2)[0]);\n    });\n\n    // MOMENTS\n\n    var getSetDayOfMonth = makeGetSet('Date', true);\n\n    // FORMATTING\n\n    addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');\n\n    // ALIASES\n\n    addUnitAlias('dayOfYear', 'DDD');\n\n    // PRIORITY\n    addUnitPriority('dayOfYear', 4);\n\n    // PARSING\n\n    addRegexToken('DDD',  match1to3);\n    addRegexToken('DDDD', match3);\n    addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n        config._dayOfYear = toInt(input);\n    });\n\n    // HELPERS\n\n    // MOMENTS\n\n    function getSetDayOfYear (input) {\n        var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n        return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');\n    }\n\n    // FORMATTING\n\n    addFormatToken('m', ['mm', 2], 0, 'minute');\n\n    // ALIASES\n\n    addUnitAlias('minute', 'm');\n\n    // PRIORITY\n\n    addUnitPriority('minute', 14);\n\n    // PARSING\n\n    addRegexToken('m',  match1to2);\n    addRegexToken('mm', match1to2, match2);\n    addParseToken(['m', 'mm'], MINUTE);\n\n    // MOMENTS\n\n    var getSetMinute = makeGetSet('Minutes', false);\n\n    // FORMATTING\n\n    addFormatToken('s', ['ss', 2], 0, 'second');\n\n    // ALIASES\n\n    addUnitAlias('second', 's');\n\n    // PRIORITY\n\n    addUnitPriority('second', 15);\n\n    // PARSING\n\n    addRegexToken('s',  match1to2);\n    addRegexToken('ss', match1to2, match2);\n    addParseToken(['s', 'ss'], SECOND);\n\n    // MOMENTS\n\n    var getSetSecond = makeGetSet('Seconds', false);\n\n    // FORMATTING\n\n    addFormatToken('S', 0, 0, function () {\n        return ~~(this.millisecond() / 100);\n    });\n\n    addFormatToken(0, ['SS', 2], 0, function () {\n        return ~~(this.millisecond() / 10);\n    });\n\n    addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n    addFormatToken(0, ['SSSS', 4], 0, function () {\n        return this.millisecond() * 10;\n    });\n    addFormatToken(0, ['SSSSS', 5], 0, function () {\n        return this.millisecond() * 100;\n    });\n    addFormatToken(0, ['SSSSSS', 6], 0, function () {\n        return this.millisecond() * 1000;\n    });\n    addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n        return this.millisecond() * 10000;\n    });\n    addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n        return this.millisecond() * 100000;\n    });\n    addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n        return this.millisecond() * 1000000;\n    });\n\n\n    // ALIASES\n\n    addUnitAlias('millisecond', 'ms');\n\n    // PRIORITY\n\n    addUnitPriority('millisecond', 16);\n\n    // PARSING\n\n    addRegexToken('S',    match1to3, match1);\n    addRegexToken('SS',   match1to3, match2);\n    addRegexToken('SSS',  match1to3, match3);\n\n    var token;\n    for (token = 'SSSS'; token.length <= 9; token += 'S') {\n        addRegexToken(token, matchUnsigned);\n    }\n\n    function parseMs(input, array) {\n        array[MILLISECOND] = toInt(('0.' + input) * 1000);\n    }\n\n    for (token = 'S'; token.length <= 9; token += 'S') {\n        addParseToken(token, parseMs);\n    }\n    // MOMENTS\n\n    var getSetMillisecond = makeGetSet('Milliseconds', false);\n\n    // FORMATTING\n\n    addFormatToken('z',  0, 0, 'zoneAbbr');\n    addFormatToken('zz', 0, 0, 'zoneName');\n\n    // MOMENTS\n\n    function getZoneAbbr () {\n        return this._isUTC ? 'UTC' : '';\n    }\n\n    function getZoneName () {\n        return this._isUTC ? 'Coordinated Universal Time' : '';\n    }\n\n    var proto = Moment.prototype;\n\n    proto.add               = add;\n    proto.calendar          = calendar$1;\n    proto.clone             = clone;\n    proto.diff              = diff;\n    proto.endOf             = endOf;\n    proto.format            = format;\n    proto.from              = from;\n    proto.fromNow           = fromNow;\n    proto.to                = to;\n    proto.toNow             = toNow;\n    proto.get               = stringGet;\n    proto.invalidAt         = invalidAt;\n    proto.isAfter           = isAfter;\n    proto.isBefore          = isBefore;\n    proto.isBetween         = isBetween;\n    proto.isSame            = isSame;\n    proto.isSameOrAfter     = isSameOrAfter;\n    proto.isSameOrBefore    = isSameOrBefore;\n    proto.isValid           = isValid$2;\n    proto.lang              = lang;\n    proto.locale            = locale;\n    proto.localeData        = localeData;\n    proto.max               = prototypeMax;\n    proto.min               = prototypeMin;\n    proto.parsingFlags      = parsingFlags;\n    proto.set               = stringSet;\n    proto.startOf           = startOf;\n    proto.subtract          = subtract;\n    proto.toArray           = toArray;\n    proto.toObject          = toObject;\n    proto.toDate            = toDate;\n    proto.toISOString       = toISOString;\n    proto.inspect           = inspect;\n    proto.toJSON            = toJSON;\n    proto.toString          = toString;\n    proto.unix              = unix;\n    proto.valueOf           = valueOf;\n    proto.creationData      = creationData;\n    proto.year       = getSetYear;\n    proto.isLeapYear = getIsLeapYear;\n    proto.weekYear    = getSetWeekYear;\n    proto.isoWeekYear = getSetISOWeekYear;\n    proto.quarter = proto.quarters = getSetQuarter;\n    proto.month       = getSetMonth;\n    proto.daysInMonth = getDaysInMonth;\n    proto.week           = proto.weeks        = getSetWeek;\n    proto.isoWeek        = proto.isoWeeks     = getSetISOWeek;\n    proto.weeksInYear    = getWeeksInYear;\n    proto.isoWeeksInYear = getISOWeeksInYear;\n    proto.date       = getSetDayOfMonth;\n    proto.day        = proto.days             = getSetDayOfWeek;\n    proto.weekday    = getSetLocaleDayOfWeek;\n    proto.isoWeekday = getSetISODayOfWeek;\n    proto.dayOfYear  = getSetDayOfYear;\n    proto.hour = proto.hours = getSetHour;\n    proto.minute = proto.minutes = getSetMinute;\n    proto.second = proto.seconds = getSetSecond;\n    proto.millisecond = proto.milliseconds = getSetMillisecond;\n    proto.utcOffset            = getSetOffset;\n    proto.utc                  = setOffsetToUTC;\n    proto.local                = setOffsetToLocal;\n    proto.parseZone            = setOffsetToParsedOffset;\n    proto.hasAlignedHourOffset = hasAlignedHourOffset;\n    proto.isDST                = isDaylightSavingTime;\n    proto.isLocal              = isLocal;\n    proto.isUtcOffset          = isUtcOffset;\n    proto.isUtc                = isUtc;\n    proto.isUTC                = isUtc;\n    proto.zoneAbbr = getZoneAbbr;\n    proto.zoneName = getZoneName;\n    proto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\n    proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\n    proto.years  = deprecate('years accessor is deprecated. Use year instead', getSetYear);\n    proto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\n    proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\n\n    function createUnix (input) {\n        return createLocal(input * 1000);\n    }\n\n    function createInZone () {\n        return createLocal.apply(null, arguments).parseZone();\n    }\n\n    function preParsePostFormat (string) {\n        return string;\n    }\n\n    var proto$1 = Locale.prototype;\n\n    proto$1.calendar        = calendar;\n    proto$1.longDateFormat  = longDateFormat;\n    proto$1.invalidDate     = invalidDate;\n    proto$1.ordinal         = ordinal;\n    proto$1.preparse        = preParsePostFormat;\n    proto$1.postformat      = preParsePostFormat;\n    proto$1.relativeTime    = relativeTime;\n    proto$1.pastFuture      = pastFuture;\n    proto$1.set             = set;\n\n    proto$1.months            =        localeMonths;\n    proto$1.monthsShort       =        localeMonthsShort;\n    proto$1.monthsParse       =        localeMonthsParse;\n    proto$1.monthsRegex       = monthsRegex;\n    proto$1.monthsShortRegex  = monthsShortRegex;\n    proto$1.week = localeWeek;\n    proto$1.firstDayOfYear = localeFirstDayOfYear;\n    proto$1.firstDayOfWeek = localeFirstDayOfWeek;\n\n    proto$1.weekdays       =        localeWeekdays;\n    proto$1.weekdaysMin    =        localeWeekdaysMin;\n    proto$1.weekdaysShort  =        localeWeekdaysShort;\n    proto$1.weekdaysParse  =        localeWeekdaysParse;\n\n    proto$1.weekdaysRegex       =        weekdaysRegex;\n    proto$1.weekdaysShortRegex  =        weekdaysShortRegex;\n    proto$1.weekdaysMinRegex    =        weekdaysMinRegex;\n\n    proto$1.isPM = localeIsPM;\n    proto$1.meridiem = localeMeridiem;\n\n    function get$1 (format, index, field, setter) {\n        var locale = getLocale();\n        var utc = createUTC().set(setter, index);\n        return locale[field](utc, format);\n    }\n\n    function listMonthsImpl (format, index, field) {\n        if (isNumber(format)) {\n            index = format;\n            format = undefined;\n        }\n\n        format = format || '';\n\n        if (index != null) {\n            return get$1(format, index, field, 'month');\n        }\n\n        var i;\n        var out = [];\n        for (i = 0; i < 12; i++) {\n            out[i] = get$1(format, i, field, 'month');\n        }\n        return out;\n    }\n\n    // ()\n    // (5)\n    // (fmt, 5)\n    // (fmt)\n    // (true)\n    // (true, 5)\n    // (true, fmt, 5)\n    // (true, fmt)\n    function listWeekdaysImpl (localeSorted, format, index, field) {\n        if (typeof localeSorted === 'boolean') {\n            if (isNumber(format)) {\n                index = format;\n                format = undefined;\n            }\n\n            format = format || '';\n        } else {\n            format = localeSorted;\n            index = format;\n            localeSorted = false;\n\n            if (isNumber(format)) {\n                index = format;\n                format = undefined;\n            }\n\n            format = format || '';\n        }\n\n        var locale = getLocale(),\n            shift = localeSorted ? locale._week.dow : 0;\n\n        if (index != null) {\n            return get$1(format, (index + shift) % 7, field, 'day');\n        }\n\n        var i;\n        var out = [];\n        for (i = 0; i < 7; i++) {\n            out[i] = get$1(format, (i + shift) % 7, field, 'day');\n        }\n        return out;\n    }\n\n    function listMonths (format, index) {\n        return listMonthsImpl(format, index, 'months');\n    }\n\n    function listMonthsShort (format, index) {\n        return listMonthsImpl(format, index, 'monthsShort');\n    }\n\n    function listWeekdays (localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n    }\n\n    function listWeekdaysShort (localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n    }\n\n    function listWeekdaysMin (localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n    }\n\n    getSetGlobalLocale('en', {\n        dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (toInt(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n            return number + output;\n        }\n    });\n\n    // Side effect imports\n\n    hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\n    hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\n\n    var mathAbs = Math.abs;\n\n    function abs () {\n        var data           = this._data;\n\n        this._milliseconds = mathAbs(this._milliseconds);\n        this._days         = mathAbs(this._days);\n        this._months       = mathAbs(this._months);\n\n        data.milliseconds  = mathAbs(data.milliseconds);\n        data.seconds       = mathAbs(data.seconds);\n        data.minutes       = mathAbs(data.minutes);\n        data.hours         = mathAbs(data.hours);\n        data.months        = mathAbs(data.months);\n        data.years         = mathAbs(data.years);\n\n        return this;\n    }\n\n    function addSubtract$1 (duration, input, value, direction) {\n        var other = createDuration(input, value);\n\n        duration._milliseconds += direction * other._milliseconds;\n        duration._days         += direction * other._days;\n        duration._months       += direction * other._months;\n\n        return duration._bubble();\n    }\n\n    // supports only 2.0-style add(1, 's') or add(duration)\n    function add$1 (input, value) {\n        return addSubtract$1(this, input, value, 1);\n    }\n\n    // supports only 2.0-style subtract(1, 's') or subtract(duration)\n    function subtract$1 (input, value) {\n        return addSubtract$1(this, input, value, -1);\n    }\n\n    function absCeil (number) {\n        if (number < 0) {\n            return Math.floor(number);\n        } else {\n            return Math.ceil(number);\n        }\n    }\n\n    function bubble () {\n        var milliseconds = this._milliseconds;\n        var days         = this._days;\n        var months       = this._months;\n        var data         = this._data;\n        var seconds, minutes, hours, years, monthsFromDays;\n\n        // if we have a mix of positive and negative values, bubble down first\n        // check: https://github.com/moment/moment/issues/2166\n        if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||\n                (milliseconds <= 0 && days <= 0 && months <= 0))) {\n            milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n            days = 0;\n            months = 0;\n        }\n\n        // The following code bubbles up values, see the tests for\n        // examples of what that means.\n        data.milliseconds = milliseconds % 1000;\n\n        seconds           = absFloor(milliseconds / 1000);\n        data.seconds      = seconds % 60;\n\n        minutes           = absFloor(seconds / 60);\n        data.minutes      = minutes % 60;\n\n        hours             = absFloor(minutes / 60);\n        data.hours        = hours % 24;\n\n        days += absFloor(hours / 24);\n\n        // convert days to months\n        monthsFromDays = absFloor(daysToMonths(days));\n        months += monthsFromDays;\n        days -= absCeil(monthsToDays(monthsFromDays));\n\n        // 12 months -> 1 year\n        years = absFloor(months / 12);\n        months %= 12;\n\n        data.days   = days;\n        data.months = months;\n        data.years  = years;\n\n        return this;\n    }\n\n    function daysToMonths (days) {\n        // 400 years have 146097 days (taking into account leap year rules)\n        // 400 years have 12 months === 4800\n        return days * 4800 / 146097;\n    }\n\n    function monthsToDays (months) {\n        // the reverse of daysToMonths\n        return months * 146097 / 4800;\n    }\n\n    function as (units) {\n        if (!this.isValid()) {\n            return NaN;\n        }\n        var days;\n        var months;\n        var milliseconds = this._milliseconds;\n\n        units = normalizeUnits(units);\n\n        if (units === 'month' || units === 'year') {\n            days   = this._days   + milliseconds / 864e5;\n            months = this._months + daysToMonths(days);\n            return units === 'month' ? months : months / 12;\n        } else {\n            // handle milliseconds separately because of floating point math errors (issue #1867)\n            days = this._days + Math.round(monthsToDays(this._months));\n            switch (units) {\n                case 'week'   : return days / 7     + milliseconds / 6048e5;\n                case 'day'    : return days         + milliseconds / 864e5;\n                case 'hour'   : return days * 24    + milliseconds / 36e5;\n                case 'minute' : return days * 1440  + milliseconds / 6e4;\n                case 'second' : return days * 86400 + milliseconds / 1000;\n                // Math.floor prevents floating point math errors here\n                case 'millisecond': return Math.floor(days * 864e5) + milliseconds;\n                default: throw new Error('Unknown unit ' + units);\n            }\n        }\n    }\n\n    // TODO: Use this.as('ms')?\n    function valueOf$1 () {\n        if (!this.isValid()) {\n            return NaN;\n        }\n        return (\n            this._milliseconds +\n            this._days * 864e5 +\n            (this._months % 12) * 2592e6 +\n            toInt(this._months / 12) * 31536e6\n        );\n    }\n\n    function makeAs (alias) {\n        return function () {\n            return this.as(alias);\n        };\n    }\n\n    var asMilliseconds = makeAs('ms');\n    var asSeconds      = makeAs('s');\n    var asMinutes      = makeAs('m');\n    var asHours        = makeAs('h');\n    var asDays         = makeAs('d');\n    var asWeeks        = makeAs('w');\n    var asMonths       = makeAs('M');\n    var asYears        = makeAs('y');\n\n    function clone$1 () {\n        return createDuration(this);\n    }\n\n    function get$2 (units) {\n        units = normalizeUnits(units);\n        return this.isValid() ? this[units + 's']() : NaN;\n    }\n\n    function makeGetter(name) {\n        return function () {\n            return this.isValid() ? this._data[name] : NaN;\n        };\n    }\n\n    var milliseconds = makeGetter('milliseconds');\n    var seconds      = makeGetter('seconds');\n    var minutes      = makeGetter('minutes');\n    var hours        = makeGetter('hours');\n    var days         = makeGetter('days');\n    var months       = makeGetter('months');\n    var years        = makeGetter('years');\n\n    function weeks () {\n        return absFloor(this.days() / 7);\n    }\n\n    var round = Math.round;\n    var thresholds = {\n        ss: 44,         // a few seconds to seconds\n        s : 45,         // seconds to minute\n        m : 45,         // minutes to hour\n        h : 22,         // hours to day\n        d : 26,         // days to month\n        M : 11          // months to year\n    };\n\n    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n    }\n\n    function relativeTime$1 (posNegDuration, withoutSuffix, locale) {\n        var duration = createDuration(posNegDuration).abs();\n        var seconds  = round(duration.as('s'));\n        var minutes  = round(duration.as('m'));\n        var hours    = round(duration.as('h'));\n        var days     = round(duration.as('d'));\n        var months   = round(duration.as('M'));\n        var years    = round(duration.as('y'));\n\n        var a = seconds <= thresholds.ss && ['s', seconds]  ||\n                seconds < thresholds.s   && ['ss', seconds] ||\n                minutes <= 1             && ['m']           ||\n                minutes < thresholds.m   && ['mm', minutes] ||\n                hours   <= 1             && ['h']           ||\n                hours   < thresholds.h   && ['hh', hours]   ||\n                days    <= 1             && ['d']           ||\n                days    < thresholds.d   && ['dd', days]    ||\n                months  <= 1             && ['M']           ||\n                months  < thresholds.M   && ['MM', months]  ||\n                years   <= 1             && ['y']           || ['yy', years];\n\n        a[2] = withoutSuffix;\n        a[3] = +posNegDuration > 0;\n        a[4] = locale;\n        return substituteTimeAgo.apply(null, a);\n    }\n\n    // This function allows you to set the rounding function for relative time strings\n    function getSetRelativeTimeRounding (roundingFunction) {\n        if (roundingFunction === undefined) {\n            return round;\n        }\n        if (typeof(roundingFunction) === 'function') {\n            round = roundingFunction;\n            return true;\n        }\n        return false;\n    }\n\n    // This function allows you to set a threshold for relative time strings\n    function getSetRelativeTimeThreshold (threshold, limit) {\n        if (thresholds[threshold] === undefined) {\n            return false;\n        }\n        if (limit === undefined) {\n            return thresholds[threshold];\n        }\n        thresholds[threshold] = limit;\n        if (threshold === 's') {\n            thresholds.ss = limit - 1;\n        }\n        return true;\n    }\n\n    function humanize (withSuffix) {\n        if (!this.isValid()) {\n            return this.localeData().invalidDate();\n        }\n\n        var locale = this.localeData();\n        var output = relativeTime$1(this, !withSuffix, locale);\n\n        if (withSuffix) {\n            output = locale.pastFuture(+this, output);\n        }\n\n        return locale.postformat(output);\n    }\n\n    var abs$1 = Math.abs;\n\n    function sign(x) {\n        return ((x > 0) - (x < 0)) || +x;\n    }\n\n    function toISOString$1() {\n        // for ISO strings we do not use the normal bubbling rules:\n        //  * milliseconds bubble up until they become hours\n        //  * days do not bubble at all\n        //  * months bubble up until they become years\n        // This is because there is no context-free conversion between hours and days\n        // (think of clock changes)\n        // and also not between days and months (28-31 days per month)\n        if (!this.isValid()) {\n            return this.localeData().invalidDate();\n        }\n\n        var seconds = abs$1(this._milliseconds) / 1000;\n        var days         = abs$1(this._days);\n        var months       = abs$1(this._months);\n        var minutes, hours, years;\n\n        // 3600 seconds -> 60 minutes -> 1 hour\n        minutes           = absFloor(seconds / 60);\n        hours             = absFloor(minutes / 60);\n        seconds %= 60;\n        minutes %= 60;\n\n        // 12 months -> 1 year\n        years  = absFloor(months / 12);\n        months %= 12;\n\n\n        // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n        var Y = years;\n        var M = months;\n        var D = days;\n        var h = hours;\n        var m = minutes;\n        var s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n        var total = this.asSeconds();\n\n        if (!total) {\n            // this is the same as C#'s (Noda) and python (isodate)...\n            // but not other JS (goog.date)\n            return 'P0D';\n        }\n\n        var totalSign = total < 0 ? '-' : '';\n        var ymSign = sign(this._months) !== sign(total) ? '-' : '';\n        var daysSign = sign(this._days) !== sign(total) ? '-' : '';\n        var hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n\n        return totalSign + 'P' +\n            (Y ? ymSign + Y + 'Y' : '') +\n            (M ? ymSign + M + 'M' : '') +\n            (D ? daysSign + D + 'D' : '') +\n            ((h || m || s) ? 'T' : '') +\n            (h ? hmsSign + h + 'H' : '') +\n            (m ? hmsSign + m + 'M' : '') +\n            (s ? hmsSign + s + 'S' : '');\n    }\n\n    var proto$2 = Duration.prototype;\n\n    proto$2.isValid        = isValid$1;\n    proto$2.abs            = abs;\n    proto$2.add            = add$1;\n    proto$2.subtract       = subtract$1;\n    proto$2.as             = as;\n    proto$2.asMilliseconds = asMilliseconds;\n    proto$2.asSeconds      = asSeconds;\n    proto$2.asMinutes      = asMinutes;\n    proto$2.asHours        = asHours;\n    proto$2.asDays         = asDays;\n    proto$2.asWeeks        = asWeeks;\n    proto$2.asMonths       = asMonths;\n    proto$2.asYears        = asYears;\n    proto$2.valueOf        = valueOf$1;\n    proto$2._bubble        = bubble;\n    proto$2.clone          = clone$1;\n    proto$2.get            = get$2;\n    proto$2.milliseconds   = milliseconds;\n    proto$2.seconds        = seconds;\n    proto$2.minutes        = minutes;\n    proto$2.hours          = hours;\n    proto$2.days           = days;\n    proto$2.weeks          = weeks;\n    proto$2.months         = months;\n    proto$2.years          = years;\n    proto$2.humanize       = humanize;\n    proto$2.toISOString    = toISOString$1;\n    proto$2.toString       = toISOString$1;\n    proto$2.toJSON         = toISOString$1;\n    proto$2.locale         = locale;\n    proto$2.localeData     = localeData;\n\n    proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\n    proto$2.lang = lang;\n\n    // Side effect imports\n\n    // FORMATTING\n\n    addFormatToken('X', 0, 0, 'unix');\n    addFormatToken('x', 0, 0, 'valueOf');\n\n    // PARSING\n\n    addRegexToken('x', matchSigned);\n    addRegexToken('X', matchTimestamp);\n    addParseToken('X', function (input, array, config) {\n        config._d = new Date(parseFloat(input, 10) * 1000);\n    });\n    addParseToken('x', function (input, array, config) {\n        config._d = new Date(toInt(input));\n    });\n\n    // Side effect imports\n\n\n    hooks.version = '2.22.2';\n\n    setHookCallback(createLocal);\n\n    hooks.fn                    = proto;\n    hooks.min                   = min;\n    hooks.max                   = max;\n    hooks.now                   = now;\n    hooks.utc                   = createUTC;\n    hooks.unix                  = createUnix;\n    hooks.months                = listMonths;\n    hooks.isDate                = isDate;\n    hooks.locale                = getSetGlobalLocale;\n    hooks.invalid               = createInvalid;\n    hooks.duration              = createDuration;\n    hooks.isMoment              = isMoment;\n    hooks.weekdays              = listWeekdays;\n    hooks.parseZone             = createInZone;\n    hooks.localeData            = getLocale;\n    hooks.isDuration            = isDuration;\n    hooks.monthsShort           = listMonthsShort;\n    hooks.weekdaysMin           = listWeekdaysMin;\n    hooks.defineLocale          = defineLocale;\n    hooks.updateLocale          = updateLocale;\n    hooks.locales               = listLocales;\n    hooks.weekdaysShort         = listWeekdaysShort;\n    hooks.normalizeUnits        = normalizeUnits;\n    hooks.relativeTimeRounding  = getSetRelativeTimeRounding;\n    hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n    hooks.calendarFormat        = getCalendarFormat;\n    hooks.prototype             = proto;\n\n    // currently HTML5 input type only supports 24-hour formats\n    hooks.HTML5_FMT = {\n        DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',             // <input type=\"datetime-local\" />\n        DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',  // <input type=\"datetime-local\" step=\"1\" />\n        DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',   // <input type=\"datetime-local\" step=\"0.001\" />\n        DATE: 'YYYY-MM-DD',                             // <input type=\"date\" />\n        TIME: 'HH:mm',                                  // <input type=\"time\" />\n        TIME_SECONDS: 'HH:mm:ss',                       // <input type=\"time\" step=\"1\" />\n        TIME_MS: 'HH:mm:ss.SSS',                        // <input type=\"time\" step=\"0.001\" />\n        WEEK: 'YYYY-[W]WW',                             // <input type=\"week\" />\n        MONTH: 'YYYY-MM'                                // <input type=\"month\" />\n    };\n\n    return hooks;\n\n})));\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Base class for visualization\n */\nexport default class Transformation {\n  constructor(config) {\n    this.config = config;\n    this._emitter = () => {};\n  }\n\n  /**\n   * return {\n   *   template : angular template string or url (url should end with .html),\n   *   scope : an object to bind to template scope\n   * }\n   */\n  getSetting() {\n    // override this\n  }\n\n  /**\n   * Method will be invoked when tableData or config changes\n   */\n  transform(tableData) {\n    // override this\n  }\n\n  /**\n   * render setting\n   */\n  renderSetting(targetEl) {\n    let setting = this.getSetting();\n    if (!setting) {\n      return;\n    }\n\n    // already readered\n    if (this._scope) {\n      let self = this;\n      this._scope.$apply(function() {\n        for (let k in setting.scope) {\n          if(setting.scope.hasOwnProperty(k)) {\n            self._scope[k] = setting.scope[k];\n          }\n        }\n\n        for (let k in self._prevSettingScope) {\n          if (!setting.scope[k]) {\n            self._scope[k] = setting.scope[k];\n          }\n        }\n      });\n      return;\n    } else {\n      this._prevSettingScope = setting.scope;\n    }\n\n    let scope = this._createNewScope();\n    for (let k in setting.scope) {\n      if(setting.scope.hasOwnProperty(k)) {\n        scope[k] = setting.scope[k];\n      }\n    }\n    let template = setting.template;\n\n    if (template.split('\\n').length === 1 &&\n        template.endsWith('.html')) { // template is url\n      let self = this;\n      this._templateRequest(template).then(function(t) {\n        self._render(targetEl, t, scope);\n      });\n    } else {\n      this._render(targetEl, template, scope);\n    }\n  }\n\n  _render(targetEl, template, scope) {\n    this._targetEl = targetEl;\n    targetEl.html(template);\n    this._compile(targetEl.contents())(scope);\n    this._scope = scope;\n  }\n\n  setConfig(config) {\n    this.config = config;\n  }\n\n  /**\n   * Emit config. config will sent to server and saved.\n   */\n  emitConfig(config) {\n    this._emitter(config);\n  }\n}\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Visualization from '../visualization';\n\n/**\n * Visualize data in table format\n */\nexport default class Nvd3ChartVisualization extends Visualization {\n  constructor(targetEl, config) {\n    super(targetEl, config);\n    this.targetEl.append('<svg></svg>');\n  }\n\n  refresh() {\n    if (this.chart) {\n      this.chart.update();\n    }\n  }\n\n  render(data) {\n    let type = this.type();\n    let d3g = data.d3g;\n\n    if (!this.chart) {\n      this.chart = nv.models[type]();\n    }\n\n    this.configureChart(this.chart);\n\n    let animationDuration = 300;\n    let numberOfDataThreshold = 150;\n    let height = this.targetEl.height();\n\n    // turn off animation when dataset is too large. (for performance issue)\n    // still, since dataset is large, the chart content sequentially appears like animated\n    try {\n      if (d3g[0].values.length > numberOfDataThreshold) {\n        animationDuration = 0;\n      }\n    } catch (err) { /** ignore */ }\n\n    d3.select('#' + this.targetEl[0].id + ' svg')\n      .attr('height', height)\n      .datum(d3g)\n      .transition()\n      .duration(animationDuration)\n      .call(this.chart);\n    d3.select('#' + this.targetEl[0].id + ' svg').style.height = height + 'px';\n  }\n\n  type() {\n    // override this and return chart type\n  }\n\n  configureChart(chart) {\n    // override this to configure chart\n  }\n\n  groupedThousandsWith3DigitsFormatter(x) {\n    return d3.format(',')(d3.round(x, 3));\n  }\n\n  customAbbrevFormatter(x) {\n    let s = d3.format('.3s')(x);\n    switch (s[s.length - 1]) {\n      case 'G': return s.slice(0, -1) + 'B';\n    }\n    return s;\n  }\n\n  defaultY() {\n    return 0;\n  }\n\n  xAxisTickFormat(d, xLabels) {\n    if (xLabels[d] && (isNaN(parseFloat(xLabels[d])) || !isFinite(xLabels[d]))) { // to handle string type xlabel\n      return xLabels[d];\n    } else {\n      return d;\n    }\n  }\n\n  yAxisTickFormat(d) {\n    if (Math.abs(d) >= Math.pow(10, 6)) {\n      return this.customAbbrevFormatter(d);\n    }\n    return this.groupedThousandsWith3DigitsFormatter(d);\n  }\n\n  d3DataFromPivot(\n    schema, rows, keys, groups, values, allowTextXAxis, fillMissingValues, multiBarChart) {\n    let self = this;\n    // construct table data\n    let d3g = [];\n\n    let concat = function(o, n) {\n      if (!o) {\n        return n;\n      } else {\n        return o + '.' + n;\n      }\n    };\n\n    const getSchemaUnderKey = function(key, s) {\n      for (let c in key.children) {\n        if(key.children.hasOwnProperty(c)) {\n          s[c] = {};\n          getSchemaUnderKey(key.children[c], s[c]);\n        }\n      }\n    };\n\n    const traverse = function(sKey, s, rKey, r, func, rowName, rowValue, colName) {\n      // console.log(\"TRAVERSE sKey=%o, s=%o, rKey=%o, r=%o, rowName=%o, rowValue=%o, colName=%o\", sKey, s, rKey, r, rowName, rowValue, colName);\n\n      if (s.type === 'key') {\n        rowName = concat(rowName, sKey);\n        rowValue = concat(rowValue, rKey);\n      } else if (s.type === 'group') {\n        colName = concat(colName, rKey);\n      } else if (s.type === 'value' && sKey === rKey || valueOnly) {\n        colName = concat(colName, rKey);\n        func(rowName, rowValue, colName, r);\n      }\n\n      for (let c in s.children) {\n        if (fillMissingValues && s.children[c].type === 'group' && r[c] === undefined) {\n          let cs = {};\n          getSchemaUnderKey(s.children[c], cs);\n          traverse(c, s.children[c], c, cs, func, rowName, rowValue, colName);\n          continue;\n        }\n\n        for (let j in r) {\n          if (s.children[c].type === 'key' || c === j) {\n            traverse(c, s.children[c], j, r[j], func, rowName, rowValue, colName);\n          }\n        }\n      }\n    };\n\n    const valueOnly = (keys.length === 0 && groups.length === 0 && values.length > 0);\n    let noKey = (keys.length === 0);\n    let isMultiBarChart = multiBarChart;\n\n    let sKey = Object.keys(schema)[0];\n\n    let rowNameIndex = {};\n    let rowIdx = 0;\n    let colNameIndex = {};\n    let colIdx = 0;\n    let rowIndexValue = {};\n\n    for (let k in rows) {\n      if (rows.hasOwnProperty(k)) {\n        traverse(sKey, schema[sKey], k, rows[k], function(rowName, rowValue, colName, value) {\n          // console.log(\"RowName=%o, row=%o, col=%o, value=%o\", rowName, rowValue, colName, value);\n          if (rowNameIndex[rowValue] === undefined) {\n            rowIndexValue[rowIdx] = rowValue;\n            rowNameIndex[rowValue] = rowIdx++;\n          }\n\n          if (colNameIndex[colName] === undefined) {\n            colNameIndex[colName] = colIdx++;\n          }\n          let i = colNameIndex[colName];\n          if (noKey && isMultiBarChart) {\n            i = 0;\n          }\n\n          if (!d3g[i]) {\n            d3g[i] = {\n              values: [],\n              key: (noKey && isMultiBarChart) ? 'values' : colName,\n            };\n          }\n\n          let xVar = isNaN(rowValue) ? ((allowTextXAxis) ? rowValue : rowNameIndex[rowValue]) : parseFloat(rowValue);\n          let yVar = self.defaultY();\n          if (xVar === undefined) {\n            xVar = colName;\n          }\n          if (value !== undefined) {\n            yVar = isNaN(value.value) ? self.defaultY() : parseFloat(value.value) / parseFloat(value.count);\n          }\n          d3g[i].values.push({\n            x: xVar,\n            y: yVar,\n          });\n        });\n      }\n    }\n\n    // clear aggregation name, if possible\n    let namesWithoutAggr = {};\n    let colName;\n    let withoutAggr;\n    // TODO - This part could use som refactoring - Weird if/else with similar actions and variable names\n    for (colName in colNameIndex) {\n      if (colNameIndex.hasOwnProperty(colName)) {\n        withoutAggr = colName.substring(0, colName.lastIndexOf('('));\n        if (!namesWithoutAggr[withoutAggr]) {\n          namesWithoutAggr[withoutAggr] = 1;\n        } else {\n          namesWithoutAggr[withoutAggr]++;\n        }\n      }\n    }\n\n    if (valueOnly) {\n      for (let valueIndex = 0; valueIndex < d3g[0].values.length; valueIndex++) {\n        colName = d3g[0].values[valueIndex].x;\n        if (!colName) {\n          continue;\n        }\n\n        withoutAggr = colName.substring(0, colName.lastIndexOf('('));\n        if (namesWithoutAggr[withoutAggr] <= 1) {\n          d3g[0].values[valueIndex].x = withoutAggr;\n        }\n      }\n    } else {\n      for (let d3gIndex = 0; d3gIndex < d3g.length; d3gIndex++) {\n        colName = d3g[d3gIndex].key;\n        withoutAggr = colName.substring(0, colName.lastIndexOf('('));\n        if (namesWithoutAggr[withoutAggr] <= 1) {\n          d3g[d3gIndex].key = withoutAggr;\n        }\n      }\n\n      // use group name instead of group.value as a column name, if there're only one group and one value selected.\n      if (groups.length === 1 && values.length === 1) {\n        for (let d3gIndex = 0; d3gIndex < d3g.length; d3gIndex++) {\n          colName = d3g[d3gIndex].key;\n          colName = colName.split('.').slice(0, -1).join('.');\n          d3g[d3gIndex].key = colName;\n        }\n      }\n    }\n\n    return {\n      xLabels: rowIndexValue,\n      d3g: d3g,\n    };\n  }\n\n  /**\n   * method will be invoked when visualization need to be destroyed.\n   * Don't need to destroy this.targetEl.\n   */\n  destroy() {\n    if (this.chart) {\n      d3.selectAll('#' + this.targetEl[0].id + ' svg > *').remove();\n      this.chart = undefined;\n    }\n  }\n}\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const ParagraphStatus = {\n  READY: 'READY',\n  PENDING: 'PENDING',\n  RUNNING: 'RUNNING',\n  FINISHED: 'FINISHED',\n  ABORT: 'ABORT',\n  ERROR: 'ERROR',\n};\n\nexport function isParagraphRunning(paragraph) {\n  if (!paragraph) {\n    return false;\n  }\n  const status = paragraph.status;\n  if (!status) {\n    return false;\n  }\n\n  return status === ParagraphStatus.PENDING || status === ParagraphStatus.RUNNING;\n}\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Transformation from './transformation';\n\n/**\n * pivot table data and return d3 chart data\n */\nexport default class PivotTransformation extends Transformation {\n  // eslint-disable-next-line no-useless-constructor\n  constructor(config) {\n    super(config);\n  }\n\n  getSetting() {\n    let self = this;\n\n    let configObj = self.config;\n    console.log('getSetting', configObj);\n    return {\n      template: 'app/tabledata/pivot_settings.html',\n      scope: {\n        config: configObj.common.pivot,\n        tableDataColumns: self.tableDataColumns,\n        save: function() {\n          self.emitConfig(configObj);\n        },\n        removeKey: function(idx) {\n          configObj.common.pivot.keys.splice(idx, 1);\n          self.emitConfig(configObj);\n        },\n        removeGroup: function(idx) {\n          configObj.common.pivot.groups.splice(idx, 1);\n          self.emitConfig(configObj);\n        },\n        removeValue: function(idx) {\n          configObj.common.pivot.values.splice(idx, 1);\n          self.emitConfig(configObj);\n        },\n        setValueAggr: function(idx, aggr) {\n          configObj.common.pivot.values[idx].aggr = aggr;\n          self.emitConfig(configObj);\n        },\n      },\n    };\n  }\n\n  /**\n   * Method will be invoked when tableData or config changes\n   */\n  transform(tableData) {\n    this.tableDataColumns = tableData.columns;\n    this.config.common = this.config.common || {};\n    this.config.common.pivot = this.config.common.pivot || {};\n    let config = this.config.common.pivot;\n    let firstTime = (!config.keys && !config.groups && !config.values);\n\n    config.keys = config.keys || [];\n    config.groups = config.groups || [];\n    config.values = config.values || [];\n\n    this.removeUnknown();\n    if (firstTime) {\n      this.selectDefault();\n    }\n    return this.pivot(\n      tableData,\n      config.keys,\n      config.groups,\n      config.values);\n  }\n\n  removeUnknown() {\n    let config = this.config.common.pivot;\n    let tableDataColumns = this.tableDataColumns;\n    let unique = function(list) {\n      for (let i = 0; i < list.length; i++) {\n        for (let j = i + 1; j < list.length; j++) {\n          if (angular.equals(list[i], list[j])) {\n            list.splice(j, 1);\n            j--;\n          }\n        }\n      }\n    };\n\n    let removeUnknown = function(list) {\n      for (let i = 0; i < list.length; i++) {\n        // remove non existing column\n        let found = false;\n        for (let j = 0; j < tableDataColumns.length; j++) {\n          let a = list[i];\n          let b = tableDataColumns[j];\n          if (a.index === b.index && a.name === b.name) {\n            found = true;\n            break;\n          }\n        }\n        if (!found) {\n          list.splice(i, 1);\n        }\n      }\n    };\n\n    unique(config.keys);\n    removeUnknown(config.keys);\n    unique(config.groups);\n    removeUnknown(config.groups);\n    removeUnknown(config.values);\n  }\n\n  selectDefault() {\n    let config = this.config.common.pivot;\n    if (config.keys.length === 0 &&\n        config.groups.length === 0 &&\n        config.values.length === 0) {\n      if (config.keys.length === 0 && this.tableDataColumns.length > 0) {\n        config.keys.push(this.tableDataColumns[0]);\n      }\n\n      if (config.values.length === 0 && this.tableDataColumns.length > 1) {\n        config.values.push(this.tableDataColumns[1]);\n      }\n    }\n  }\n\n  pivot(data, keys, groups, values) {\n    let aggrFunc = {\n      sum: function(a, b) {\n        let varA = (a !== undefined) ? (isNaN(a) ? 0 : parseFloat(a)) : 0;\n        let varB = (b !== undefined) ? (isNaN(b) ? 0 : parseFloat(b)) : 0;\n        return varA + varB;\n      },\n      count: function(a, b) {\n        let varA = (a !== undefined) ? parseInt(a) : 0;\n        let varB = (b !== undefined) ? 1 : 0;\n        return varA + varB;\n      },\n      min: function(a, b) {\n        let aIsValid = isValidNumber(a);\n        let bIsValid = isValidNumber(b);\n        if (!aIsValid) {\n          return parseFloat(b);\n        } else if (!bIsValid) {\n          return parseFloat(a);\n        } else {\n          return Math.min(parseFloat(a), parseFloat(b));\n        }\n      },\n      max: function(a, b) {\n        let aIsValid = isValidNumber(a);\n        let bIsValid = isValidNumber(b);\n        if (!aIsValid) {\n          return parseFloat(b);\n        } else if (!bIsValid) {\n          return parseFloat(a);\n        } else {\n          return Math.max(parseFloat(a), parseFloat(b));\n        }\n      },\n      avg: function(a, b, c) {\n        let varA = (a !== undefined) ? (isNaN(a) ? 0 : parseFloat(a)) : 0;\n        let varB = (b !== undefined) ? (isNaN(b) ? 0 : parseFloat(b)) : 0;\n        return varA + varB;\n      },\n    };\n\n    let isValidNumber = function(num) {\n      return num !== undefined && !isNaN(num);\n    };\n\n    let aggrFuncDiv = {\n      sum: false,\n      count: false,\n      min: false,\n      max: false,\n      avg: true,\n    };\n\n    let schema = {};\n    let rows = {};\n\n    for (let i = 0; i < data.rows.length; i++) {\n      let row = data.rows[i];\n      let s = schema;\n      let p = rows;\n\n      for (let k = 0; k < keys.length; k++) {\n        let key = keys[k];\n\n        // add key to schema\n        if (!s[key.name]) {\n          s[key.name] = {\n            order: k,\n            index: key.index,\n            type: 'key',\n            children: {},\n          };\n        }\n        s = s[key.name].children;\n\n        // add key to row\n        let keyKey = row[key.index];\n        if (!p[keyKey]) {\n          p[keyKey] = {};\n        }\n        p = p[keyKey];\n      }\n\n      for (let g = 0; g < groups.length; g++) {\n        let group = groups[g];\n        let groupKey = row[group.index];\n\n        // add group to schema\n        if (!s[groupKey]) {\n          s[groupKey] = {\n            order: g,\n            index: group.index,\n            type: 'group',\n            children: {},\n          };\n        }\n        s = s[groupKey].children;\n\n        // add key to row\n        if (!p[groupKey]) {\n          p[groupKey] = {};\n        }\n        p = p[groupKey];\n      }\n\n      for (let v = 0; v < values.length; v++) {\n        let value = values[v];\n        let valueKey = value.name + '(' + value.aggr + ')';\n\n        // add value to schema\n        if (!s[valueKey]) {\n          s[valueKey] = {\n            type: 'value',\n            order: v,\n            index: value.index,\n          };\n        }\n\n        // add value to row\n        if (!p[valueKey]) {\n          p[valueKey] = {\n            value: (value.aggr !== 'count') ? row[value.index] : 1,\n            count: 1,\n          };\n        } else {\n          p[valueKey] = {\n            value: aggrFunc[value.aggr](p[valueKey].value, row[value.index], p[valueKey].count + 1),\n            count: (aggrFuncDiv[value.aggr]) ? p[valueKey].count + 1 : p[valueKey].count,\n          };\n        }\n      }\n    }\n\n    // console.log('schema=%o, rows=%o', schema, rows);\n    return {\n      keys: keys,\n      groups: groups,\n      values: values,\n      schema: schema,\n      rows: rows,\n    };\n  }\n}\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Base class for visualization.\n */\nexport default class Visualization {\n  constructor(targetEl, config) {\n    this.targetEl = targetEl;\n    this.config = config;\n    this._dirty = false;\n    this._active = false;\n    this._emitter = () => {};\n  }\n\n  /**\n   * Get transformation.\n   * @abstract\n   * @return {Transformation}\n   */\n  getTransformation() {\n    // override this\n    throw new TypeError('Visualization.getTransformation() should be overrided');\n  }\n\n  /**\n   * Method will be invoked when data or configuration changed.\n   * @abstract\n   */\n  render(tableData) {\n    // override this\n    throw new TypeError('Visualization.render() should be overrided');\n  }\n\n  /**\n   * Refresh visualization.\n   */\n  refresh() {\n    // override this\n    console.warn('A chart is missing refresh function, it might not work preperly');\n  }\n\n  /**\n   * Method will be invoked when visualization need to be destroyed.\n   * Don't need to destroy this.targetEl.\n   */\n  destroy() {\n    // override this\n  }\n\n  /**\n   * return {\n   *   template : angular template string or url (url should end with .html),\n   *   scope : an object to bind to template scope\n   * }\n   */\n  getSetting() {\n    // override this\n  }\n\n  /**\n   * Activate. Invoked when visualization is selected.\n   */\n  activate() {\n    if (!this._active || this._dirty) {\n      this.refresh();\n      this._dirty = false;\n    }\n    this._active = true;\n  }\n\n  /**\n   * Deactivate. Invoked when visualization is de selected.\n   */\n  deactivate() {\n    this._active = false;\n  }\n\n  /**\n   * Is active.\n   */\n  isActive() {\n    return this._active;\n  }\n\n  /**\n   * When window or paragraph is resized.\n   */\n  resize() {\n    if (this.isActive()) {\n      this.refresh();\n    } else {\n      this._dirty = true;\n    }\n  }\n\n  /**\n   * Set new config.\n   */\n  setConfig(config) {\n    this.config = config;\n    if (this.isActive()) {\n      this.refresh();\n    } else {\n      this._dirty = true;\n    }\n  }\n\n  /**\n   * Emit config. config will sent to server and saved.\n   */\n  emitConfig(config) {\n    this._emitter(config);\n  }\n\n  /**\n   * Render setting.\n   */\n  renderSetting(targetEl) {\n    let setting = this.getSetting();\n    if (!setting) {\n      return;\n    }\n\n    // already readered\n    if (this._scope) {\n      let self = this;\n      this._scope.$apply(function() {\n        for (let k in setting.scope) {\n          if (setting.scope.hasOwnProperty(k)) {\n            self._scope[k] = setting.scope[k];\n          }\n        }\n\n        for (let k in self._prevSettingScope) {\n          if (!setting.scope[k]) {\n            self._scope[k] = setting.scope[k];\n          }\n        }\n      });\n      return;\n    } else {\n      this._prevSettingScope = setting.scope;\n    }\n\n    let scope = this._createNewScope();\n    for (let k in setting.scope) {\n      if (setting.scope.hasOwnProperty(k)) {\n        scope[k] = setting.scope[k];\n      }\n    }\n    let template = setting.template;\n\n    if (template.split('\\n').length === 1 &&\n        template.endsWith('.html')) { // template is url\n      this._templateRequest(template).then((t) =>\n      _renderSetting(this, targetEl, t, scope)\n      );\n    } else {\n      _renderSetting(this, targetEl, template, scope);\n    }\n  }\n}\n\nfunction _renderSetting(instance, targetEl, template, scope) {\n  instance._targetEl = targetEl;\n  targetEl.html(template);\n  instance._compile(targetEl.contents())(scope);\n  instance._scope = scope;\n}\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {Dataset, DatasetType} from './dataset';\n\n/**\n * Create table data object from paragraph table type result\n */\nexport default class TableData extends Dataset {\n  constructor(columns, rows, comment) {\n    super();\n    this.columns = columns || [];\n    this.rows = rows || [];\n    this.comment = comment || '';\n  }\n\n  loadParagraphResult(paragraphResult) {\n    if (!paragraphResult || paragraphResult.type !== DatasetType.TABLE) {\n      console.log('Can not load paragraph result');\n      return;\n    }\n\n    let columnNames = [];\n    let rows = [];\n    let textRows = paragraphResult.msg.split('\\n');\n    let comment = '';\n    let commentRow = false;\n    const float64MaxDigits = 16;\n\n    for (let i = 0; i < textRows.length; i++) {\n      let textRow = textRows[i];\n\n      if (commentRow) {\n        comment += textRow;\n        continue;\n      }\n\n      if (textRow === '' || textRow === '<!--TABLE_COMMENT-->') {\n        if (rows.length > 0) {\n          commentRow = true;\n        }\n        continue;\n      }\n      let textCols = textRow.split('\\t');\n      let cols = [];\n      for (let j = 0; j < textCols.length; j++) {\n        let col = textCols[j];\n        if (i === 0) {\n          columnNames.push({name: col, index: j, aggr: 'sum'});\n        } else {\n          let valueOfCol;\n          if (!(col[0] === '0' || col[0] === '+' || col.length > float64MaxDigits)) {\n            if (!isNaN(valueOfCol = col) && isFinite(col)) {\n              col = valueOfCol;\n            }\n          }\n          cols.push(col);\n        }\n      }\n      if (i !== 0) {\n        rows.push(cols);\n      }\n    }\n    this.comment = comment;\n    this.columns = columnNames;\n    this.rows = rows;\n  }\n}\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * The abstract dataset rapresentation\n */\nclass Dataset {\n  /**\n   * Load the paragraph result, every Dataset implementation must override this method\n   * where is contained the business rules to convert the paragraphResult object to the related dataset type\n   */\n  loadParagraphResult(paragraphResult) {\n    // override this\n  }\n}\n\n/**\n * Dataset types\n */\nconst DatasetType = Object.freeze({\n  NETWORK: 'NETWORK',\n  TABLE: 'TABLE',\n});\n\nexport {Dataset, DatasetType};\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var af = moment.defineLocale('af', {\n        months : 'Januarie_Februarie_Maart_April_Mei_Junie_Julie_Augustus_September_Oktober_November_Desember'.split('_'),\n        monthsShort : 'Jan_Feb_Mrt_Apr_Mei_Jun_Jul_Aug_Sep_Okt_Nov_Des'.split('_'),\n        weekdays : 'Sondag_Maandag_Dinsdag_Woensdag_Donderdag_Vrydag_Saterdag'.split('_'),\n        weekdaysShort : 'Son_Maa_Din_Woe_Don_Vry_Sat'.split('_'),\n        weekdaysMin : 'So_Ma_Di_Wo_Do_Vr_Sa'.split('_'),\n        meridiemParse: /vm|nm/i,\n        isPM : function (input) {\n            return /^nm$/i.test(input);\n        },\n        meridiem : function (hours, minutes, isLower) {\n            if (hours < 12) {\n                return isLower ? 'vm' : 'VM';\n            } else {\n                return isLower ? 'nm' : 'NM';\n            }\n        },\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd, D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay : '[Vandag om] LT',\n            nextDay : '[Môre om] LT',\n            nextWeek : 'dddd [om] LT',\n            lastDay : '[Gister om] LT',\n            lastWeek : '[Laas] dddd [om] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'oor %s',\n            past : '%s gelede',\n            s : '\\'n paar sekondes',\n            ss : '%d sekondes',\n            m : '\\'n minuut',\n            mm : '%d minute',\n            h : '\\'n uur',\n            hh : '%d ure',\n            d : '\\'n dag',\n            dd : '%d dae',\n            M : '\\'n maand',\n            MM : '%d maande',\n            y : '\\'n jaar',\n            yy : '%d jaar'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(ste|de)/,\n        ordinal : function (number) {\n            return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de'); // Thanks to Joris Röling : https://github.com/jjupiter\n        },\n        week : {\n            dow : 1, // Maandag is die eerste dag van die week.\n            doy : 4  // Die week wat die 4de Januarie bevat is die eerste week van die jaar.\n        }\n    });\n\n    return af;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var symbolMap = {\n        '1': '١',\n        '2': '٢',\n        '3': '٣',\n        '4': '٤',\n        '5': '٥',\n        '6': '٦',\n        '7': '٧',\n        '8': '٨',\n        '9': '٩',\n        '0': '٠'\n    }, numberMap = {\n        '١': '1',\n        '٢': '2',\n        '٣': '3',\n        '٤': '4',\n        '٥': '5',\n        '٦': '6',\n        '٧': '7',\n        '٨': '8',\n        '٩': '9',\n        '٠': '0'\n    }, pluralForm = function (n) {\n        return n === 0 ? 0 : n === 1 ? 1 : n === 2 ? 2 : n % 100 >= 3 && n % 100 <= 10 ? 3 : n % 100 >= 11 ? 4 : 5;\n    }, plurals = {\n        s : ['أقل من ثانية', 'ثانية واحدة', ['ثانيتان', 'ثانيتين'], '%d ثوان', '%d ثانية', '%d ثانية'],\n        m : ['أقل من دقيقة', 'دقيقة واحدة', ['دقيقتان', 'دقيقتين'], '%d دقائق', '%d دقيقة', '%d دقيقة'],\n        h : ['أقل من ساعة', 'ساعة واحدة', ['ساعتان', 'ساعتين'], '%d ساعات', '%d ساعة', '%d ساعة'],\n        d : ['أقل من يوم', 'يوم واحد', ['يومان', 'يومين'], '%d أيام', '%d يومًا', '%d يوم'],\n        M : ['أقل من شهر', 'شهر واحد', ['شهران', 'شهرين'], '%d أشهر', '%d شهرا', '%d شهر'],\n        y : ['أقل من عام', 'عام واحد', ['عامان', 'عامين'], '%d أعوام', '%d عامًا', '%d عام']\n    }, pluralize = function (u) {\n        return function (number, withoutSuffix, string, isFuture) {\n            var f = pluralForm(number),\n                str = plurals[u][pluralForm(number)];\n            if (f === 2) {\n                str = str[withoutSuffix ? 0 : 1];\n            }\n            return str.replace(/%d/i, number);\n        };\n    }, months = [\n        'يناير',\n        'فبراير',\n        'مارس',\n        'أبريل',\n        'مايو',\n        'يونيو',\n        'يوليو',\n        'أغسطس',\n        'سبتمبر',\n        'أكتوبر',\n        'نوفمبر',\n        'ديسمبر'\n    ];\n\n    var ar = moment.defineLocale('ar', {\n        months : months,\n        monthsShort : months,\n        weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),\n        weekdaysShort : 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),\n        weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'D/\\u200FM/\\u200FYYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd D MMMM YYYY HH:mm'\n        },\n        meridiemParse: /ص|م/,\n        isPM : function (input) {\n            return 'م' === input;\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'ص';\n            } else {\n                return 'م';\n            }\n        },\n        calendar : {\n            sameDay: '[اليوم عند الساعة] LT',\n            nextDay: '[غدًا عند الساعة] LT',\n            nextWeek: 'dddd [عند الساعة] LT',\n            lastDay: '[أمس عند الساعة] LT',\n            lastWeek: 'dddd [عند الساعة] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'بعد %s',\n            past : 'منذ %s',\n            s : pluralize('s'),\n            ss : pluralize('s'),\n            m : pluralize('m'),\n            mm : pluralize('m'),\n            h : pluralize('h'),\n            hh : pluralize('h'),\n            d : pluralize('d'),\n            dd : pluralize('d'),\n            M : pluralize('M'),\n            MM : pluralize('M'),\n            y : pluralize('y'),\n            yy : pluralize('y')\n        },\n        preparse: function (string) {\n            return string.replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {\n                return numberMap[match];\n            }).replace(/،/g, ',');\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap[match];\n            }).replace(/,/g, '،');\n        },\n        week : {\n            dow : 6, // Saturday is the first day of the week.\n            doy : 12  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n\n    return ar;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var arDz = moment.defineLocale('ar-dz', {\n        months : 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),\n        monthsShort : 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),\n        weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),\n        weekdaysShort : 'احد_اثنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),\n        weekdaysMin : 'أح_إث_ثلا_أر_خم_جم_سب'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: '[اليوم على الساعة] LT',\n            nextDay: '[غدا على الساعة] LT',\n            nextWeek: 'dddd [على الساعة] LT',\n            lastDay: '[أمس على الساعة] LT',\n            lastWeek: 'dddd [على الساعة] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'في %s',\n            past : 'منذ %s',\n            s : 'ثوان',\n            ss : '%d ثانية',\n            m : 'دقيقة',\n            mm : '%d دقائق',\n            h : 'ساعة',\n            hh : '%d ساعات',\n            d : 'يوم',\n            dd : '%d أيام',\n            M : 'شهر',\n            MM : '%d أشهر',\n            y : 'سنة',\n            yy : '%d سنوات'\n        },\n        week : {\n            dow : 0, // Sunday is the first day of the week.\n            doy : 4  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n\n    return arDz;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var arKw = moment.defineLocale('ar-kw', {\n        months : 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),\n        monthsShort : 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),\n        weekdays : 'الأحد_الإتنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),\n        weekdaysShort : 'احد_اتنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),\n        weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: '[اليوم على الساعة] LT',\n            nextDay: '[غدا على الساعة] LT',\n            nextWeek: 'dddd [على الساعة] LT',\n            lastDay: '[أمس على الساعة] LT',\n            lastWeek: 'dddd [على الساعة] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'في %s',\n            past : 'منذ %s',\n            s : 'ثوان',\n            ss : '%d ثانية',\n            m : 'دقيقة',\n            mm : '%d دقائق',\n            h : 'ساعة',\n            hh : '%d ساعات',\n            d : 'يوم',\n            dd : '%d أيام',\n            M : 'شهر',\n            MM : '%d أشهر',\n            y : 'سنة',\n            yy : '%d سنوات'\n        },\n        week : {\n            dow : 0, // Sunday is the first day of the week.\n            doy : 12  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n\n    return arKw;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var symbolMap = {\n        '1': '1',\n        '2': '2',\n        '3': '3',\n        '4': '4',\n        '5': '5',\n        '6': '6',\n        '7': '7',\n        '8': '8',\n        '9': '9',\n        '0': '0'\n    }, pluralForm = function (n) {\n        return n === 0 ? 0 : n === 1 ? 1 : n === 2 ? 2 : n % 100 >= 3 && n % 100 <= 10 ? 3 : n % 100 >= 11 ? 4 : 5;\n    }, plurals = {\n        s : ['أقل من ثانية', 'ثانية واحدة', ['ثانيتان', 'ثانيتين'], '%d ثوان', '%d ثانية', '%d ثانية'],\n        m : ['أقل من دقيقة', 'دقيقة واحدة', ['دقيقتان', 'دقيقتين'], '%d دقائق', '%d دقيقة', '%d دقيقة'],\n        h : ['أقل من ساعة', 'ساعة واحدة', ['ساعتان', 'ساعتين'], '%d ساعات', '%d ساعة', '%d ساعة'],\n        d : ['أقل من يوم', 'يوم واحد', ['يومان', 'يومين'], '%d أيام', '%d يومًا', '%d يوم'],\n        M : ['أقل من شهر', 'شهر واحد', ['شهران', 'شهرين'], '%d أشهر', '%d شهرا', '%d شهر'],\n        y : ['أقل من عام', 'عام واحد', ['عامان', 'عامين'], '%d أعوام', '%d عامًا', '%d عام']\n    }, pluralize = function (u) {\n        return function (number, withoutSuffix, string, isFuture) {\n            var f = pluralForm(number),\n                str = plurals[u][pluralForm(number)];\n            if (f === 2) {\n                str = str[withoutSuffix ? 0 : 1];\n            }\n            return str.replace(/%d/i, number);\n        };\n    }, months = [\n        'يناير',\n        'فبراير',\n        'مارس',\n        'أبريل',\n        'مايو',\n        'يونيو',\n        'يوليو',\n        'أغسطس',\n        'سبتمبر',\n        'أكتوبر',\n        'نوفمبر',\n        'ديسمبر'\n    ];\n\n    var arLy = moment.defineLocale('ar-ly', {\n        months : months,\n        monthsShort : months,\n        weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),\n        weekdaysShort : 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),\n        weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'D/\\u200FM/\\u200FYYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd D MMMM YYYY HH:mm'\n        },\n        meridiemParse: /ص|م/,\n        isPM : function (input) {\n            return 'م' === input;\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'ص';\n            } else {\n                return 'م';\n            }\n        },\n        calendar : {\n            sameDay: '[اليوم عند الساعة] LT',\n            nextDay: '[غدًا عند الساعة] LT',\n            nextWeek: 'dddd [عند الساعة] LT',\n            lastDay: '[أمس عند الساعة] LT',\n            lastWeek: 'dddd [عند الساعة] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'بعد %s',\n            past : 'منذ %s',\n            s : pluralize('s'),\n            ss : pluralize('s'),\n            m : pluralize('m'),\n            mm : pluralize('m'),\n            h : pluralize('h'),\n            hh : pluralize('h'),\n            d : pluralize('d'),\n            dd : pluralize('d'),\n            M : pluralize('M'),\n            MM : pluralize('M'),\n            y : pluralize('y'),\n            yy : pluralize('y')\n        },\n        preparse: function (string) {\n            return string.replace(/،/g, ',');\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap[match];\n            }).replace(/,/g, '،');\n        },\n        week : {\n            dow : 6, // Saturday is the first day of the week.\n            doy : 12  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n\n    return arLy;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var arMa = moment.defineLocale('ar-ma', {\n        months : 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),\n        monthsShort : 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),\n        weekdays : 'الأحد_الإتنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),\n        weekdaysShort : 'احد_اتنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),\n        weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: '[اليوم على الساعة] LT',\n            nextDay: '[غدا على الساعة] LT',\n            nextWeek: 'dddd [على الساعة] LT',\n            lastDay: '[أمس على الساعة] LT',\n            lastWeek: 'dddd [على الساعة] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'في %s',\n            past : 'منذ %s',\n            s : 'ثوان',\n            ss : '%d ثانية',\n            m : 'دقيقة',\n            mm : '%d دقائق',\n            h : 'ساعة',\n            hh : '%d ساعات',\n            d : 'يوم',\n            dd : '%d أيام',\n            M : 'شهر',\n            MM : '%d أشهر',\n            y : 'سنة',\n            yy : '%d سنوات'\n        },\n        week : {\n            dow : 6, // Saturday is the first day of the week.\n            doy : 12  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n\n    return arMa;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var symbolMap = {\n        '1': '١',\n        '2': '٢',\n        '3': '٣',\n        '4': '٤',\n        '5': '٥',\n        '6': '٦',\n        '7': '٧',\n        '8': '٨',\n        '9': '٩',\n        '0': '٠'\n    }, numberMap = {\n        '١': '1',\n        '٢': '2',\n        '٣': '3',\n        '٤': '4',\n        '٥': '5',\n        '٦': '6',\n        '٧': '7',\n        '٨': '8',\n        '٩': '9',\n        '٠': '0'\n    };\n\n    var arSa = moment.defineLocale('ar-sa', {\n        months : 'يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),\n        monthsShort : 'يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),\n        weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),\n        weekdaysShort : 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),\n        weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd D MMMM YYYY HH:mm'\n        },\n        meridiemParse: /ص|م/,\n        isPM : function (input) {\n            return 'م' === input;\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'ص';\n            } else {\n                return 'م';\n            }\n        },\n        calendar : {\n            sameDay: '[اليوم على الساعة] LT',\n            nextDay: '[غدا على الساعة] LT',\n            nextWeek: 'dddd [على الساعة] LT',\n            lastDay: '[أمس على الساعة] LT',\n            lastWeek: 'dddd [على الساعة] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'في %s',\n            past : 'منذ %s',\n            s : 'ثوان',\n            ss : '%d ثانية',\n            m : 'دقيقة',\n            mm : '%d دقائق',\n            h : 'ساعة',\n            hh : '%d ساعات',\n            d : 'يوم',\n            dd : '%d أيام',\n            M : 'شهر',\n            MM : '%d أشهر',\n            y : 'سنة',\n            yy : '%d سنوات'\n        },\n        preparse: function (string) {\n            return string.replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {\n                return numberMap[match];\n            }).replace(/،/g, ',');\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap[match];\n            }).replace(/,/g, '،');\n        },\n        week : {\n            dow : 0, // Sunday is the first day of the week.\n            doy : 6  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n\n    return arSa;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var arTn = moment.defineLocale('ar-tn', {\n        months: 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),\n        monthsShort: 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),\n        weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),\n        weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),\n        weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd D MMMM YYYY HH:mm'\n        },\n        calendar: {\n            sameDay: '[اليوم على الساعة] LT',\n            nextDay: '[غدا على الساعة] LT',\n            nextWeek: 'dddd [على الساعة] LT',\n            lastDay: '[أمس على الساعة] LT',\n            lastWeek: 'dddd [على الساعة] LT',\n            sameElse: 'L'\n        },\n        relativeTime: {\n            future: 'في %s',\n            past: 'منذ %s',\n            s: 'ثوان',\n            ss : '%d ثانية',\n            m: 'دقيقة',\n            mm: '%d دقائق',\n            h: 'ساعة',\n            hh: '%d ساعات',\n            d: 'يوم',\n            dd: '%d أيام',\n            M: 'شهر',\n            MM: '%d أشهر',\n            y: 'سنة',\n            yy: '%d سنوات'\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4 // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return arTn;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var suffixes = {\n        1: '-inci',\n        5: '-inci',\n        8: '-inci',\n        70: '-inci',\n        80: '-inci',\n        2: '-nci',\n        7: '-nci',\n        20: '-nci',\n        50: '-nci',\n        3: '-üncü',\n        4: '-üncü',\n        100: '-üncü',\n        6: '-ncı',\n        9: '-uncu',\n        10: '-uncu',\n        30: '-uncu',\n        60: '-ıncı',\n        90: '-ıncı'\n    };\n\n    var az = moment.defineLocale('az', {\n        months : 'yanvar_fevral_mart_aprel_may_iyun_iyul_avqust_sentyabr_oktyabr_noyabr_dekabr'.split('_'),\n        monthsShort : 'yan_fev_mar_apr_may_iyn_iyl_avq_sen_okt_noy_dek'.split('_'),\n        weekdays : 'Bazar_Bazar ertəsi_Çərşənbə axşamı_Çərşənbə_Cümə axşamı_Cümə_Şənbə'.split('_'),\n        weekdaysShort : 'Baz_BzE_ÇAx_Çər_CAx_Cüm_Şən'.split('_'),\n        weekdaysMin : 'Bz_BE_ÇA_Çə_CA_Cü_Şə'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd, D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay : '[bugün saat] LT',\n            nextDay : '[sabah saat] LT',\n            nextWeek : '[gələn həftə] dddd [saat] LT',\n            lastDay : '[dünən] LT',\n            lastWeek : '[keçən həftə] dddd [saat] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s sonra',\n            past : '%s əvvəl',\n            s : 'birneçə saniyə',\n            ss : '%d saniyə',\n            m : 'bir dəqiqə',\n            mm : '%d dəqiqə',\n            h : 'bir saat',\n            hh : '%d saat',\n            d : 'bir gün',\n            dd : '%d gün',\n            M : 'bir ay',\n            MM : '%d ay',\n            y : 'bir il',\n            yy : '%d il'\n        },\n        meridiemParse: /gecə|səhər|gündüz|axşam/,\n        isPM : function (input) {\n            return /^(gündüz|axşam)$/.test(input);\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'gecə';\n            } else if (hour < 12) {\n                return 'səhər';\n            } else if (hour < 17) {\n                return 'gündüz';\n            } else {\n                return 'axşam';\n            }\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}-(ıncı|inci|nci|üncü|ncı|uncu)/,\n        ordinal : function (number) {\n            if (number === 0) {  // special case for zero\n                return number + '-ıncı';\n            }\n            var a = number % 10,\n                b = number % 100 - a,\n                c = number >= 100 ? 100 : null;\n            return number + (suffixes[a] || suffixes[b] || suffixes[c]);\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n\n    return az;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    function plural(word, num) {\n        var forms = word.split('_');\n        return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);\n    }\n    function relativeTimeWithPlural(number, withoutSuffix, key) {\n        var format = {\n            'ss': withoutSuffix ? 'секунда_секунды_секунд' : 'секунду_секунды_секунд',\n            'mm': withoutSuffix ? 'хвіліна_хвіліны_хвілін' : 'хвіліну_хвіліны_хвілін',\n            'hh': withoutSuffix ? 'гадзіна_гадзіны_гадзін' : 'гадзіну_гадзіны_гадзін',\n            'dd': 'дзень_дні_дзён',\n            'MM': 'месяц_месяцы_месяцаў',\n            'yy': 'год_гады_гадоў'\n        };\n        if (key === 'm') {\n            return withoutSuffix ? 'хвіліна' : 'хвіліну';\n        }\n        else if (key === 'h') {\n            return withoutSuffix ? 'гадзіна' : 'гадзіну';\n        }\n        else {\n            return number + ' ' + plural(format[key], +number);\n        }\n    }\n\n    var be = moment.defineLocale('be', {\n        months : {\n            format: 'студзеня_лютага_сакавіка_красавіка_траўня_чэрвеня_ліпеня_жніўня_верасня_кастрычніка_лістапада_снежня'.split('_'),\n            standalone: 'студзень_люты_сакавік_красавік_травень_чэрвень_ліпень_жнівень_верасень_кастрычнік_лістапад_снежань'.split('_')\n        },\n        monthsShort : 'студ_лют_сак_крас_трав_чэрв_ліп_жнів_вер_каст_ліст_снеж'.split('_'),\n        weekdays : {\n            format: 'нядзелю_панядзелак_аўторак_сераду_чацвер_пятніцу_суботу'.split('_'),\n            standalone: 'нядзеля_панядзелак_аўторак_серада_чацвер_пятніца_субота'.split('_'),\n            isFormat: /\\[ ?[Ууў] ?(?:мінулую|наступную)? ?\\] ?dddd/\n        },\n        weekdaysShort : 'нд_пн_ат_ср_чц_пт_сб'.split('_'),\n        weekdaysMin : 'нд_пн_ат_ср_чц_пт_сб'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D MMMM YYYY г.',\n            LLL : 'D MMMM YYYY г., HH:mm',\n            LLLL : 'dddd, D MMMM YYYY г., HH:mm'\n        },\n        calendar : {\n            sameDay: '[Сёння ў] LT',\n            nextDay: '[Заўтра ў] LT',\n            lastDay: '[Учора ў] LT',\n            nextWeek: function () {\n                return '[У] dddd [ў] LT';\n            },\n            lastWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                    case 3:\n                    case 5:\n                    case 6:\n                        return '[У мінулую] dddd [ў] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                        return '[У мінулы] dddd [ў] LT';\n                }\n            },\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'праз %s',\n            past : '%s таму',\n            s : 'некалькі секунд',\n            m : relativeTimeWithPlural,\n            mm : relativeTimeWithPlural,\n            h : relativeTimeWithPlural,\n            hh : relativeTimeWithPlural,\n            d : 'дзень',\n            dd : relativeTimeWithPlural,\n            M : 'месяц',\n            MM : relativeTimeWithPlural,\n            y : 'год',\n            yy : relativeTimeWithPlural\n        },\n        meridiemParse: /ночы|раніцы|дня|вечара/,\n        isPM : function (input) {\n            return /^(дня|вечара)$/.test(input);\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'ночы';\n            } else if (hour < 12) {\n                return 'раніцы';\n            } else if (hour < 17) {\n                return 'дня';\n            } else {\n                return 'вечара';\n            }\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}-(і|ы|га)/,\n        ordinal: function (number, period) {\n            switch (period) {\n                case 'M':\n                case 'd':\n                case 'DDD':\n                case 'w':\n                case 'W':\n                    return (number % 10 === 2 || number % 10 === 3) && (number % 100 !== 12 && number % 100 !== 13) ? number + '-і' : number + '-ы';\n                case 'D':\n                    return number + '-га';\n                default:\n                    return number;\n            }\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n\n    return be;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var bg = moment.defineLocale('bg', {\n        months : 'януари_февруари_март_април_май_юни_юли_август_септември_октомври_ноември_декември'.split('_'),\n        monthsShort : 'янр_фев_мар_апр_май_юни_юли_авг_сеп_окт_ное_дек'.split('_'),\n        weekdays : 'неделя_понеделник_вторник_сряда_четвъртък_петък_събота'.split('_'),\n        weekdaysShort : 'нед_пон_вто_сря_чет_пет_съб'.split('_'),\n        weekdaysMin : 'нд_пн_вт_ср_чт_пт_сб'.split('_'),\n        longDateFormat : {\n            LT : 'H:mm',\n            LTS : 'H:mm:ss',\n            L : 'D.MM.YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY H:mm',\n            LLLL : 'dddd, D MMMM YYYY H:mm'\n        },\n        calendar : {\n            sameDay : '[Днес в] LT',\n            nextDay : '[Утре в] LT',\n            nextWeek : 'dddd [в] LT',\n            lastDay : '[Вчера в] LT',\n            lastWeek : function () {\n                switch (this.day()) {\n                    case 0:\n                    case 3:\n                    case 6:\n                        return '[В изминалата] dddd [в] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 5:\n                        return '[В изминалия] dddd [в] LT';\n                }\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'след %s',\n            past : 'преди %s',\n            s : 'няколко секунди',\n            ss : '%d секунди',\n            m : 'минута',\n            mm : '%d минути',\n            h : 'час',\n            hh : '%d часа',\n            d : 'ден',\n            dd : '%d дни',\n            M : 'месец',\n            MM : '%d месеца',\n            y : 'година',\n            yy : '%d години'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}-(ев|ен|ти|ви|ри|ми)/,\n        ordinal : function (number) {\n            var lastDigit = number % 10,\n                last2Digits = number % 100;\n            if (number === 0) {\n                return number + '-ев';\n            } else if (last2Digits === 0) {\n                return number + '-ен';\n            } else if (last2Digits > 10 && last2Digits < 20) {\n                return number + '-ти';\n            } else if (lastDigit === 1) {\n                return number + '-ви';\n            } else if (lastDigit === 2) {\n                return number + '-ри';\n            } else if (lastDigit === 7 || lastDigit === 8) {\n                return number + '-ми';\n            } else {\n                return number + '-ти';\n            }\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n\n    return bg;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var bm = moment.defineLocale('bm', {\n        months : 'Zanwuyekalo_Fewuruyekalo_Marisikalo_Awirilikalo_Mɛkalo_Zuwɛnkalo_Zuluyekalo_Utikalo_Sɛtanburukalo_ɔkutɔburukalo_Nowanburukalo_Desanburukalo'.split('_'),\n        monthsShort : 'Zan_Few_Mar_Awi_Mɛ_Zuw_Zul_Uti_Sɛt_ɔku_Now_Des'.split('_'),\n        weekdays : 'Kari_Ntɛnɛn_Tarata_Araba_Alamisa_Juma_Sibiri'.split('_'),\n        weekdaysShort : 'Kar_Ntɛ_Tar_Ara_Ala_Jum_Sib'.split('_'),\n        weekdaysMin : 'Ka_Nt_Ta_Ar_Al_Ju_Si'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'MMMM [tile] D [san] YYYY',\n            LLL : 'MMMM [tile] D [san] YYYY [lɛrɛ] HH:mm',\n            LLLL : 'dddd MMMM [tile] D [san] YYYY [lɛrɛ] HH:mm'\n        },\n        calendar : {\n            sameDay : '[Bi lɛrɛ] LT',\n            nextDay : '[Sini lɛrɛ] LT',\n            nextWeek : 'dddd [don lɛrɛ] LT',\n            lastDay : '[Kunu lɛrɛ] LT',\n            lastWeek : 'dddd [tɛmɛnen lɛrɛ] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s kɔnɔ',\n            past : 'a bɛ %s bɔ',\n            s : 'sanga dama dama',\n            ss : 'sekondi %d',\n            m : 'miniti kelen',\n            mm : 'miniti %d',\n            h : 'lɛrɛ kelen',\n            hh : 'lɛrɛ %d',\n            d : 'tile kelen',\n            dd : 'tile %d',\n            M : 'kalo kelen',\n            MM : 'kalo %d',\n            y : 'san kelen',\n            yy : 'san %d'\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return bm;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var symbolMap = {\n        '1': '১',\n        '2': '২',\n        '3': '৩',\n        '4': '৪',\n        '5': '৫',\n        '6': '৬',\n        '7': '৭',\n        '8': '৮',\n        '9': '৯',\n        '0': '০'\n    },\n    numberMap = {\n        '১': '1',\n        '২': '2',\n        '৩': '3',\n        '৪': '4',\n        '৫': '5',\n        '৬': '6',\n        '৭': '7',\n        '৮': '8',\n        '৯': '9',\n        '০': '0'\n    };\n\n    var bn = moment.defineLocale('bn', {\n        months : 'জানুয়ারী_ফেব্রুয়ারি_মার্চ_এপ্রিল_মে_জুন_জুলাই_আগস্ট_সেপ্টেম্বর_অক্টোবর_নভেম্বর_ডিসেম্বর'.split('_'),\n        monthsShort : 'জানু_ফেব_মার্চ_এপ্র_মে_জুন_জুল_আগ_সেপ্ট_অক্টো_নভে_ডিসে'.split('_'),\n        weekdays : 'রবিবার_সোমবার_মঙ্গলবার_বুধবার_বৃহস্পতিবার_শুক্রবার_শনিবার'.split('_'),\n        weekdaysShort : 'রবি_সোম_মঙ্গল_বুধ_বৃহস্পতি_শুক্র_শনি'.split('_'),\n        weekdaysMin : 'রবি_সোম_মঙ্গ_বুধ_বৃহঃ_শুক্র_শনি'.split('_'),\n        longDateFormat : {\n            LT : 'A h:mm সময়',\n            LTS : 'A h:mm:ss সময়',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY, A h:mm সময়',\n            LLLL : 'dddd, D MMMM YYYY, A h:mm সময়'\n        },\n        calendar : {\n            sameDay : '[আজ] LT',\n            nextDay : '[আগামীকাল] LT',\n            nextWeek : 'dddd, LT',\n            lastDay : '[গতকাল] LT',\n            lastWeek : '[গত] dddd, LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s পরে',\n            past : '%s আগে',\n            s : 'কয়েক সেকেন্ড',\n            ss : '%d সেকেন্ড',\n            m : 'এক মিনিট',\n            mm : '%d মিনিট',\n            h : 'এক ঘন্টা',\n            hh : '%d ঘন্টা',\n            d : 'এক দিন',\n            dd : '%d দিন',\n            M : 'এক মাস',\n            MM : '%d মাস',\n            y : 'এক বছর',\n            yy : '%d বছর'\n        },\n        preparse: function (string) {\n            return string.replace(/[১২৩৪৫৬৭৮৯০]/g, function (match) {\n                return numberMap[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap[match];\n            });\n        },\n        meridiemParse: /রাত|সকাল|দুপুর|বিকাল|রাত/,\n        meridiemHour : function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if ((meridiem === 'রাত' && hour >= 4) ||\n                    (meridiem === 'দুপুর' && hour < 5) ||\n                    meridiem === 'বিকাল') {\n                return hour + 12;\n            } else {\n                return hour;\n            }\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'রাত';\n            } else if (hour < 10) {\n                return 'সকাল';\n            } else if (hour < 17) {\n                return 'দুপুর';\n            } else if (hour < 20) {\n                return 'বিকাল';\n            } else {\n                return 'রাত';\n            }\n        },\n        week : {\n            dow : 0, // Sunday is the first day of the week.\n            doy : 6  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n\n    return bn;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var symbolMap = {\n        '1': '༡',\n        '2': '༢',\n        '3': '༣',\n        '4': '༤',\n        '5': '༥',\n        '6': '༦',\n        '7': '༧',\n        '8': '༨',\n        '9': '༩',\n        '0': '༠'\n    },\n    numberMap = {\n        '༡': '1',\n        '༢': '2',\n        '༣': '3',\n        '༤': '4',\n        '༥': '5',\n        '༦': '6',\n        '༧': '7',\n        '༨': '8',\n        '༩': '9',\n        '༠': '0'\n    };\n\n    var bo = moment.defineLocale('bo', {\n        months : 'ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ'.split('_'),\n        monthsShort : 'ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ'.split('_'),\n        weekdays : 'གཟའ་ཉི་མ་_གཟའ་ཟླ་བ་_གཟའ་མིག་དམར་_གཟའ་ལྷག་པ་_གཟའ་ཕུར་བུ_གཟའ་པ་སངས་_གཟའ་སྤེན་པ་'.split('_'),\n        weekdaysShort : 'ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་'.split('_'),\n        weekdaysMin : 'ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་'.split('_'),\n        longDateFormat : {\n            LT : 'A h:mm',\n            LTS : 'A h:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY, A h:mm',\n            LLLL : 'dddd, D MMMM YYYY, A h:mm'\n        },\n        calendar : {\n            sameDay : '[དི་རིང] LT',\n            nextDay : '[སང་ཉིན] LT',\n            nextWeek : '[བདུན་ཕྲག་རྗེས་མ], LT',\n            lastDay : '[ཁ་སང] LT',\n            lastWeek : '[བདུན་ཕྲག་མཐའ་མ] dddd, LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s ལ་',\n            past : '%s སྔན་ལ',\n            s : 'ལམ་སང',\n            ss : '%d སྐར་ཆ།',\n            m : 'སྐར་མ་གཅིག',\n            mm : '%d སྐར་མ',\n            h : 'ཆུ་ཚོད་གཅིག',\n            hh : '%d ཆུ་ཚོད',\n            d : 'ཉིན་གཅིག',\n            dd : '%d ཉིན་',\n            M : 'ཟླ་བ་གཅིག',\n            MM : '%d ཟླ་བ',\n            y : 'ལོ་གཅིག',\n            yy : '%d ལོ'\n        },\n        preparse: function (string) {\n            return string.replace(/[༡༢༣༤༥༦༧༨༩༠]/g, function (match) {\n                return numberMap[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap[match];\n            });\n        },\n        meridiemParse: /མཚན་མོ|ཞོགས་ཀས|ཉིན་གུང|དགོང་དག|མཚན་མོ/,\n        meridiemHour : function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if ((meridiem === 'མཚན་མོ' && hour >= 4) ||\n                    (meridiem === 'ཉིན་གུང' && hour < 5) ||\n                    meridiem === 'དགོང་དག') {\n                return hour + 12;\n            } else {\n                return hour;\n            }\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'མཚན་མོ';\n            } else if (hour < 10) {\n                return 'ཞོགས་ཀས';\n            } else if (hour < 17) {\n                return 'ཉིན་གུང';\n            } else if (hour < 20) {\n                return 'དགོང་དག';\n            } else {\n                return 'མཚན་མོ';\n            }\n        },\n        week : {\n            dow : 0, // Sunday is the first day of the week.\n            doy : 6  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n\n    return bo;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    function relativeTimeWithMutation(number, withoutSuffix, key) {\n        var format = {\n            'mm': 'munutenn',\n            'MM': 'miz',\n            'dd': 'devezh'\n        };\n        return number + ' ' + mutation(format[key], number);\n    }\n    function specialMutationForYears(number) {\n        switch (lastNumber(number)) {\n            case 1:\n            case 3:\n            case 4:\n            case 5:\n            case 9:\n                return number + ' bloaz';\n            default:\n                return number + ' vloaz';\n        }\n    }\n    function lastNumber(number) {\n        if (number > 9) {\n            return lastNumber(number % 10);\n        }\n        return number;\n    }\n    function mutation(text, number) {\n        if (number === 2) {\n            return softMutation(text);\n        }\n        return text;\n    }\n    function softMutation(text) {\n        var mutationTable = {\n            'm': 'v',\n            'b': 'v',\n            'd': 'z'\n        };\n        if (mutationTable[text.charAt(0)] === undefined) {\n            return text;\n        }\n        return mutationTable[text.charAt(0)] + text.substring(1);\n    }\n\n    var br = moment.defineLocale('br', {\n        months : 'Genver_C\\'hwevrer_Meurzh_Ebrel_Mae_Mezheven_Gouere_Eost_Gwengolo_Here_Du_Kerzu'.split('_'),\n        monthsShort : 'Gen_C\\'hwe_Meu_Ebr_Mae_Eve_Gou_Eos_Gwe_Her_Du_Ker'.split('_'),\n        weekdays : 'Sul_Lun_Meurzh_Merc\\'her_Yaou_Gwener_Sadorn'.split('_'),\n        weekdaysShort : 'Sul_Lun_Meu_Mer_Yao_Gwe_Sad'.split('_'),\n        weekdaysMin : 'Su_Lu_Me_Mer_Ya_Gw_Sa'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'h[e]mm A',\n            LTS : 'h[e]mm:ss A',\n            L : 'DD/MM/YYYY',\n            LL : 'D [a viz] MMMM YYYY',\n            LLL : 'D [a viz] MMMM YYYY h[e]mm A',\n            LLLL : 'dddd, D [a viz] MMMM YYYY h[e]mm A'\n        },\n        calendar : {\n            sameDay : '[Hiziv da] LT',\n            nextDay : '[Warc\\'hoazh da] LT',\n            nextWeek : 'dddd [da] LT',\n            lastDay : '[Dec\\'h da] LT',\n            lastWeek : 'dddd [paset da] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'a-benn %s',\n            past : '%s \\'zo',\n            s : 'un nebeud segondennoù',\n            ss : '%d eilenn',\n            m : 'ur vunutenn',\n            mm : relativeTimeWithMutation,\n            h : 'un eur',\n            hh : '%d eur',\n            d : 'un devezh',\n            dd : relativeTimeWithMutation,\n            M : 'ur miz',\n            MM : relativeTimeWithMutation,\n            y : 'ur bloaz',\n            yy : specialMutationForYears\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(añ|vet)/,\n        ordinal : function (number) {\n            var output = (number === 1) ? 'añ' : 'vet';\n            return number + output;\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return br;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    function translate(number, withoutSuffix, key) {\n        var result = number + ' ';\n        switch (key) {\n            case 'ss':\n                if (number === 1) {\n                    result += 'sekunda';\n                } else if (number === 2 || number === 3 || number === 4) {\n                    result += 'sekunde';\n                } else {\n                    result += 'sekundi';\n                }\n                return result;\n            case 'm':\n                return withoutSuffix ? 'jedna minuta' : 'jedne minute';\n            case 'mm':\n                if (number === 1) {\n                    result += 'minuta';\n                } else if (number === 2 || number === 3 || number === 4) {\n                    result += 'minute';\n                } else {\n                    result += 'minuta';\n                }\n                return result;\n            case 'h':\n                return withoutSuffix ? 'jedan sat' : 'jednog sata';\n            case 'hh':\n                if (number === 1) {\n                    result += 'sat';\n                } else if (number === 2 || number === 3 || number === 4) {\n                    result += 'sata';\n                } else {\n                    result += 'sati';\n                }\n                return result;\n            case 'dd':\n                if (number === 1) {\n                    result += 'dan';\n                } else {\n                    result += 'dana';\n                }\n                return result;\n            case 'MM':\n                if (number === 1) {\n                    result += 'mjesec';\n                } else if (number === 2 || number === 3 || number === 4) {\n                    result += 'mjeseca';\n                } else {\n                    result += 'mjeseci';\n                }\n                return result;\n            case 'yy':\n                if (number === 1) {\n                    result += 'godina';\n                } else if (number === 2 || number === 3 || number === 4) {\n                    result += 'godine';\n                } else {\n                    result += 'godina';\n                }\n                return result;\n        }\n    }\n\n    var bs = moment.defineLocale('bs', {\n        months : 'januar_februar_mart_april_maj_juni_juli_august_septembar_oktobar_novembar_decembar'.split('_'),\n        monthsShort : 'jan._feb._mar._apr._maj._jun._jul._aug._sep._okt._nov._dec.'.split('_'),\n        monthsParseExact: true,\n        weekdays : 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),\n        weekdaysShort : 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),\n        weekdaysMin : 'ne_po_ut_sr_če_pe_su'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'H:mm',\n            LTS : 'H:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D. MMMM YYYY',\n            LLL : 'D. MMMM YYYY H:mm',\n            LLLL : 'dddd, D. MMMM YYYY H:mm'\n        },\n        calendar : {\n            sameDay  : '[danas u] LT',\n            nextDay  : '[sutra u] LT',\n            nextWeek : function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[u] [nedjelju] [u] LT';\n                    case 3:\n                        return '[u] [srijedu] [u] LT';\n                    case 6:\n                        return '[u] [subotu] [u] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 5:\n                        return '[u] dddd [u] LT';\n                }\n            },\n            lastDay  : '[jučer u] LT',\n            lastWeek : function () {\n                switch (this.day()) {\n                    case 0:\n                    case 3:\n                        return '[prošlu] dddd [u] LT';\n                    case 6:\n                        return '[prošle] [subote] [u] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 5:\n                        return '[prošli] dddd [u] LT';\n                }\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'za %s',\n            past   : 'prije %s',\n            s      : 'par sekundi',\n            ss     : translate,\n            m      : translate,\n            mm     : translate,\n            h      : translate,\n            hh     : translate,\n            d      : 'dan',\n            dd     : translate,\n            M      : 'mjesec',\n            MM     : translate,\n            y      : 'godinu',\n            yy     : translate\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n\n    return bs;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var ca = moment.defineLocale('ca', {\n        months : {\n            standalone: 'gener_febrer_març_abril_maig_juny_juliol_agost_setembre_octubre_novembre_desembre'.split('_'),\n            format: 'de gener_de febrer_de març_d\\'abril_de maig_de juny_de juliol_d\\'agost_de setembre_d\\'octubre_de novembre_de desembre'.split('_'),\n            isFormat: /D[oD]?(\\s)+MMMM/\n        },\n        monthsShort : 'gen._febr._març_abr._maig_juny_jul._ag._set._oct._nov._des.'.split('_'),\n        monthsParseExact : true,\n        weekdays : 'diumenge_dilluns_dimarts_dimecres_dijous_divendres_dissabte'.split('_'),\n        weekdaysShort : 'dg._dl._dt._dc._dj._dv._ds.'.split('_'),\n        weekdaysMin : 'dg_dl_dt_dc_dj_dv_ds'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'H:mm',\n            LTS : 'H:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM [de] YYYY',\n            ll : 'D MMM YYYY',\n            LLL : 'D MMMM [de] YYYY [a les] H:mm',\n            lll : 'D MMM YYYY, H:mm',\n            LLLL : 'dddd D MMMM [de] YYYY [a les] H:mm',\n            llll : 'ddd D MMM YYYY, H:mm'\n        },\n        calendar : {\n            sameDay : function () {\n                return '[avui a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';\n            },\n            nextDay : function () {\n                return '[demà a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';\n            },\n            nextWeek : function () {\n                return 'dddd [a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';\n            },\n            lastDay : function () {\n                return '[ahir a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';\n            },\n            lastWeek : function () {\n                return '[el] dddd [passat a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'd\\'aquí %s',\n            past : 'fa %s',\n            s : 'uns segons',\n            ss : '%d segons',\n            m : 'un minut',\n            mm : '%d minuts',\n            h : 'una hora',\n            hh : '%d hores',\n            d : 'un dia',\n            dd : '%d dies',\n            M : 'un mes',\n            MM : '%d mesos',\n            y : 'un any',\n            yy : '%d anys'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(r|n|t|è|a)/,\n        ordinal : function (number, period) {\n            var output = (number === 1) ? 'r' :\n                (number === 2) ? 'n' :\n                (number === 3) ? 'r' :\n                (number === 4) ? 't' : 'è';\n            if (period === 'w' || period === 'W') {\n                output = 'a';\n            }\n            return number + output;\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return ca;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var months = 'leden_únor_březen_duben_květen_červen_červenec_srpen_září_říjen_listopad_prosinec'.split('_'),\n        monthsShort = 'led_úno_bře_dub_kvě_čvn_čvc_srp_zář_říj_lis_pro'.split('_');\n    function plural(n) {\n        return (n > 1) && (n < 5) && (~~(n / 10) !== 1);\n    }\n    function translate(number, withoutSuffix, key, isFuture) {\n        var result = number + ' ';\n        switch (key) {\n            case 's':  // a few seconds / in a few seconds / a few seconds ago\n                return (withoutSuffix || isFuture) ? 'pár sekund' : 'pár sekundami';\n            case 'ss': // 9 seconds / in 9 seconds / 9 seconds ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural(number) ? 'sekundy' : 'sekund');\n                } else {\n                    return result + 'sekundami';\n                }\n                break;\n            case 'm':  // a minute / in a minute / a minute ago\n                return withoutSuffix ? 'minuta' : (isFuture ? 'minutu' : 'minutou');\n            case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural(number) ? 'minuty' : 'minut');\n                } else {\n                    return result + 'minutami';\n                }\n                break;\n            case 'h':  // an hour / in an hour / an hour ago\n                return withoutSuffix ? 'hodina' : (isFuture ? 'hodinu' : 'hodinou');\n            case 'hh': // 9 hours / in 9 hours / 9 hours ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural(number) ? 'hodiny' : 'hodin');\n                } else {\n                    return result + 'hodinami';\n                }\n                break;\n            case 'd':  // a day / in a day / a day ago\n                return (withoutSuffix || isFuture) ? 'den' : 'dnem';\n            case 'dd': // 9 days / in 9 days / 9 days ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural(number) ? 'dny' : 'dní');\n                } else {\n                    return result + 'dny';\n                }\n                break;\n            case 'M':  // a month / in a month / a month ago\n                return (withoutSuffix || isFuture) ? 'měsíc' : 'měsícem';\n            case 'MM': // 9 months / in 9 months / 9 months ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural(number) ? 'měsíce' : 'měsíců');\n                } else {\n                    return result + 'měsíci';\n                }\n                break;\n            case 'y':  // a year / in a year / a year ago\n                return (withoutSuffix || isFuture) ? 'rok' : 'rokem';\n            case 'yy': // 9 years / in 9 years / 9 years ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural(number) ? 'roky' : 'let');\n                } else {\n                    return result + 'lety';\n                }\n                break;\n        }\n    }\n\n    var cs = moment.defineLocale('cs', {\n        months : months,\n        monthsShort : monthsShort,\n        monthsParse : (function (months, monthsShort) {\n            var i, _monthsParse = [];\n            for (i = 0; i < 12; i++) {\n                // use custom parser to solve problem with July (červenec)\n                _monthsParse[i] = new RegExp('^' + months[i] + '$|^' + monthsShort[i] + '$', 'i');\n            }\n            return _monthsParse;\n        }(months, monthsShort)),\n        shortMonthsParse : (function (monthsShort) {\n            var i, _shortMonthsParse = [];\n            for (i = 0; i < 12; i++) {\n                _shortMonthsParse[i] = new RegExp('^' + monthsShort[i] + '$', 'i');\n            }\n            return _shortMonthsParse;\n        }(monthsShort)),\n        longMonthsParse : (function (months) {\n            var i, _longMonthsParse = [];\n            for (i = 0; i < 12; i++) {\n                _longMonthsParse[i] = new RegExp('^' + months[i] + '$', 'i');\n            }\n            return _longMonthsParse;\n        }(months)),\n        weekdays : 'neděle_pondělí_úterý_středa_čtvrtek_pátek_sobota'.split('_'),\n        weekdaysShort : 'ne_po_út_st_čt_pá_so'.split('_'),\n        weekdaysMin : 'ne_po_út_st_čt_pá_so'.split('_'),\n        longDateFormat : {\n            LT: 'H:mm',\n            LTS : 'H:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D. MMMM YYYY',\n            LLL : 'D. MMMM YYYY H:mm',\n            LLLL : 'dddd D. MMMM YYYY H:mm',\n            l : 'D. M. YYYY'\n        },\n        calendar : {\n            sameDay: '[dnes v] LT',\n            nextDay: '[zítra v] LT',\n            nextWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[v neděli v] LT';\n                    case 1:\n                    case 2:\n                        return '[v] dddd [v] LT';\n                    case 3:\n                        return '[ve středu v] LT';\n                    case 4:\n                        return '[ve čtvrtek v] LT';\n                    case 5:\n                        return '[v pátek v] LT';\n                    case 6:\n                        return '[v sobotu v] LT';\n                }\n            },\n            lastDay: '[včera v] LT',\n            lastWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[minulou neděli v] LT';\n                    case 1:\n                    case 2:\n                        return '[minulé] dddd [v] LT';\n                    case 3:\n                        return '[minulou středu v] LT';\n                    case 4:\n                    case 5:\n                        return '[minulý] dddd [v] LT';\n                    case 6:\n                        return '[minulou sobotu v] LT';\n                }\n            },\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'za %s',\n            past : 'před %s',\n            s : translate,\n            ss : translate,\n            m : translate,\n            mm : translate,\n            h : translate,\n            hh : translate,\n            d : translate,\n            dd : translate,\n            M : translate,\n            MM : translate,\n            y : translate,\n            yy : translate\n        },\n        dayOfMonthOrdinalParse : /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return cs;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var cv = moment.defineLocale('cv', {\n        months : 'кӑрлач_нарӑс_пуш_ака_май_ҫӗртме_утӑ_ҫурла_авӑн_юпа_чӳк_раштав'.split('_'),\n        monthsShort : 'кӑр_нар_пуш_ака_май_ҫӗр_утӑ_ҫур_авн_юпа_чӳк_раш'.split('_'),\n        weekdays : 'вырсарникун_тунтикун_ытларикун_юнкун_кӗҫнерникун_эрнекун_шӑматкун'.split('_'),\n        weekdaysShort : 'выр_тун_ытл_юн_кӗҫ_эрн_шӑм'.split('_'),\n        weekdaysMin : 'вр_тн_ыт_юн_кҫ_эр_шм'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD-MM-YYYY',\n            LL : 'YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ]',\n            LLL : 'YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm',\n            LLLL : 'dddd, YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm'\n        },\n        calendar : {\n            sameDay: '[Паян] LT [сехетре]',\n            nextDay: '[Ыран] LT [сехетре]',\n            lastDay: '[Ӗнер] LT [сехетре]',\n            nextWeek: '[Ҫитес] dddd LT [сехетре]',\n            lastWeek: '[Иртнӗ] dddd LT [сехетре]',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : function (output) {\n                var affix = /сехет$/i.exec(output) ? 'рен' : /ҫул$/i.exec(output) ? 'тан' : 'ран';\n                return output + affix;\n            },\n            past : '%s каялла',\n            s : 'пӗр-ик ҫеккунт',\n            ss : '%d ҫеккунт',\n            m : 'пӗр минут',\n            mm : '%d минут',\n            h : 'пӗр сехет',\n            hh : '%d сехет',\n            d : 'пӗр кун',\n            dd : '%d кун',\n            M : 'пӗр уйӑх',\n            MM : '%d уйӑх',\n            y : 'пӗр ҫул',\n            yy : '%d ҫул'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}-мӗш/,\n        ordinal : '%d-мӗш',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n\n    return cv;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var cy = moment.defineLocale('cy', {\n        months: 'Ionawr_Chwefror_Mawrth_Ebrill_Mai_Mehefin_Gorffennaf_Awst_Medi_Hydref_Tachwedd_Rhagfyr'.split('_'),\n        monthsShort: 'Ion_Chwe_Maw_Ebr_Mai_Meh_Gor_Aws_Med_Hyd_Tach_Rhag'.split('_'),\n        weekdays: 'Dydd Sul_Dydd Llun_Dydd Mawrth_Dydd Mercher_Dydd Iau_Dydd Gwener_Dydd Sadwrn'.split('_'),\n        weekdaysShort: 'Sul_Llun_Maw_Mer_Iau_Gwe_Sad'.split('_'),\n        weekdaysMin: 'Su_Ll_Ma_Me_Ia_Gw_Sa'.split('_'),\n        weekdaysParseExact : true,\n        // time formats are the same as en-gb\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd, D MMMM YYYY HH:mm'\n        },\n        calendar: {\n            sameDay: '[Heddiw am] LT',\n            nextDay: '[Yfory am] LT',\n            nextWeek: 'dddd [am] LT',\n            lastDay: '[Ddoe am] LT',\n            lastWeek: 'dddd [diwethaf am] LT',\n            sameElse: 'L'\n        },\n        relativeTime: {\n            future: 'mewn %s',\n            past: '%s yn ôl',\n            s: 'ychydig eiliadau',\n            ss: '%d eiliad',\n            m: 'munud',\n            mm: '%d munud',\n            h: 'awr',\n            hh: '%d awr',\n            d: 'diwrnod',\n            dd: '%d diwrnod',\n            M: 'mis',\n            MM: '%d mis',\n            y: 'blwyddyn',\n            yy: '%d flynedd'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(fed|ain|af|il|ydd|ed|eg)/,\n        // traditional ordinal numbers above 31 are not commonly used in colloquial Welsh\n        ordinal: function (number) {\n            var b = number,\n                output = '',\n                lookup = [\n                    '', 'af', 'il', 'ydd', 'ydd', 'ed', 'ed', 'ed', 'fed', 'fed', 'fed', // 1af to 10fed\n                    'eg', 'fed', 'eg', 'eg', 'fed', 'eg', 'eg', 'fed', 'eg', 'fed' // 11eg to 20fed\n                ];\n            if (b > 20) {\n                if (b === 40 || b === 50 || b === 60 || b === 80 || b === 100) {\n                    output = 'fed'; // not 30ain, 70ain or 90ain\n                } else {\n                    output = 'ain';\n                }\n            } else if (b > 0) {\n                output = lookup[b];\n            }\n            return number + output;\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return cy;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var da = moment.defineLocale('da', {\n        months : 'januar_februar_marts_april_maj_juni_juli_august_september_oktober_november_december'.split('_'),\n        monthsShort : 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),\n        weekdays : 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),\n        weekdaysShort : 'søn_man_tir_ons_tor_fre_lør'.split('_'),\n        weekdaysMin : 'sø_ma_ti_on_to_fr_lø'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D. MMMM YYYY',\n            LLL : 'D. MMMM YYYY HH:mm',\n            LLLL : 'dddd [d.] D. MMMM YYYY [kl.] HH:mm'\n        },\n        calendar : {\n            sameDay : '[i dag kl.] LT',\n            nextDay : '[i morgen kl.] LT',\n            nextWeek : 'på dddd [kl.] LT',\n            lastDay : '[i går kl.] LT',\n            lastWeek : '[i] dddd[s kl.] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'om %s',\n            past : '%s siden',\n            s : 'få sekunder',\n            ss : '%d sekunder',\n            m : 'et minut',\n            mm : '%d minutter',\n            h : 'en time',\n            hh : '%d timer',\n            d : 'en dag',\n            dd : '%d dage',\n            M : 'en måned',\n            MM : '%d måneder',\n            y : 'et år',\n            yy : '%d år'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return da;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    function processRelativeTime(number, withoutSuffix, key, isFuture) {\n        var format = {\n            'm': ['eine Minute', 'einer Minute'],\n            'h': ['eine Stunde', 'einer Stunde'],\n            'd': ['ein Tag', 'einem Tag'],\n            'dd': [number + ' Tage', number + ' Tagen'],\n            'M': ['ein Monat', 'einem Monat'],\n            'MM': [number + ' Monate', number + ' Monaten'],\n            'y': ['ein Jahr', 'einem Jahr'],\n            'yy': [number + ' Jahre', number + ' Jahren']\n        };\n        return withoutSuffix ? format[key][0] : format[key][1];\n    }\n\n    var de = moment.defineLocale('de', {\n        months : 'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),\n        monthsShort : 'Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),\n        monthsParseExact : true,\n        weekdays : 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),\n        weekdaysShort : 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),\n        weekdaysMin : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D. MMMM YYYY',\n            LLL : 'D. MMMM YYYY HH:mm',\n            LLLL : 'dddd, D. MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: '[heute um] LT [Uhr]',\n            sameElse: 'L',\n            nextDay: '[morgen um] LT [Uhr]',\n            nextWeek: 'dddd [um] LT [Uhr]',\n            lastDay: '[gestern um] LT [Uhr]',\n            lastWeek: '[letzten] dddd [um] LT [Uhr]'\n        },\n        relativeTime : {\n            future : 'in %s',\n            past : 'vor %s',\n            s : 'ein paar Sekunden',\n            ss : '%d Sekunden',\n            m : processRelativeTime,\n            mm : '%d Minuten',\n            h : processRelativeTime,\n            hh : '%d Stunden',\n            d : processRelativeTime,\n            dd : processRelativeTime,\n            M : processRelativeTime,\n            MM : processRelativeTime,\n            y : processRelativeTime,\n            yy : processRelativeTime\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return de;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    function processRelativeTime(number, withoutSuffix, key, isFuture) {\n        var format = {\n            'm': ['eine Minute', 'einer Minute'],\n            'h': ['eine Stunde', 'einer Stunde'],\n            'd': ['ein Tag', 'einem Tag'],\n            'dd': [number + ' Tage', number + ' Tagen'],\n            'M': ['ein Monat', 'einem Monat'],\n            'MM': [number + ' Monate', number + ' Monaten'],\n            'y': ['ein Jahr', 'einem Jahr'],\n            'yy': [number + ' Jahre', number + ' Jahren']\n        };\n        return withoutSuffix ? format[key][0] : format[key][1];\n    }\n\n    var deAt = moment.defineLocale('de-at', {\n        months : 'Jänner_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),\n        monthsShort : 'Jän._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),\n        monthsParseExact : true,\n        weekdays : 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),\n        weekdaysShort : 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),\n        weekdaysMin : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D. MMMM YYYY',\n            LLL : 'D. MMMM YYYY HH:mm',\n            LLLL : 'dddd, D. MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: '[heute um] LT [Uhr]',\n            sameElse: 'L',\n            nextDay: '[morgen um] LT [Uhr]',\n            nextWeek: 'dddd [um] LT [Uhr]',\n            lastDay: '[gestern um] LT [Uhr]',\n            lastWeek: '[letzten] dddd [um] LT [Uhr]'\n        },\n        relativeTime : {\n            future : 'in %s',\n            past : 'vor %s',\n            s : 'ein paar Sekunden',\n            ss : '%d Sekunden',\n            m : processRelativeTime,\n            mm : '%d Minuten',\n            h : processRelativeTime,\n            hh : '%d Stunden',\n            d : processRelativeTime,\n            dd : processRelativeTime,\n            M : processRelativeTime,\n            MM : processRelativeTime,\n            y : processRelativeTime,\n            yy : processRelativeTime\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return deAt;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    function processRelativeTime(number, withoutSuffix, key, isFuture) {\n        var format = {\n            'm': ['eine Minute', 'einer Minute'],\n            'h': ['eine Stunde', 'einer Stunde'],\n            'd': ['ein Tag', 'einem Tag'],\n            'dd': [number + ' Tage', number + ' Tagen'],\n            'M': ['ein Monat', 'einem Monat'],\n            'MM': [number + ' Monate', number + ' Monaten'],\n            'y': ['ein Jahr', 'einem Jahr'],\n            'yy': [number + ' Jahre', number + ' Jahren']\n        };\n        return withoutSuffix ? format[key][0] : format[key][1];\n    }\n\n    var deCh = moment.defineLocale('de-ch', {\n        months : 'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),\n        monthsShort : 'Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),\n        monthsParseExact : true,\n        weekdays : 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),\n        weekdaysShort : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),\n        weekdaysMin : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D. MMMM YYYY',\n            LLL : 'D. MMMM YYYY HH:mm',\n            LLLL : 'dddd, D. MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: '[heute um] LT [Uhr]',\n            sameElse: 'L',\n            nextDay: '[morgen um] LT [Uhr]',\n            nextWeek: 'dddd [um] LT [Uhr]',\n            lastDay: '[gestern um] LT [Uhr]',\n            lastWeek: '[letzten] dddd [um] LT [Uhr]'\n        },\n        relativeTime : {\n            future : 'in %s',\n            past : 'vor %s',\n            s : 'ein paar Sekunden',\n            ss : '%d Sekunden',\n            m : processRelativeTime,\n            mm : '%d Minuten',\n            h : processRelativeTime,\n            hh : '%d Stunden',\n            d : processRelativeTime,\n            dd : processRelativeTime,\n            M : processRelativeTime,\n            MM : processRelativeTime,\n            y : processRelativeTime,\n            yy : processRelativeTime\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return deCh;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var months = [\n        'ޖެނުއަރީ',\n        'ފެބްރުއަރީ',\n        'މާރިޗު',\n        'އޭޕްރީލު',\n        'މޭ',\n        'ޖޫން',\n        'ޖުލައި',\n        'އޯގަސްޓު',\n        'ސެޕްޓެމްބަރު',\n        'އޮކްޓޯބަރު',\n        'ނޮވެމްބަރު',\n        'ޑިސެމްބަރު'\n    ], weekdays = [\n        'އާދިއްތަ',\n        'ހޯމަ',\n        'އަންގާރަ',\n        'ބުދަ',\n        'ބުރާސްފަތި',\n        'ހުކުރު',\n        'ހޮނިހިރު'\n    ];\n\n    var dv = moment.defineLocale('dv', {\n        months : months,\n        monthsShort : months,\n        weekdays : weekdays,\n        weekdaysShort : weekdays,\n        weekdaysMin : 'އާދި_ހޯމަ_އަން_ބުދަ_ބުރާ_ހުކު_ހޮނި'.split('_'),\n        longDateFormat : {\n\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'D/M/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd D MMMM YYYY HH:mm'\n        },\n        meridiemParse: /މކ|މފ/,\n        isPM : function (input) {\n            return 'މފ' === input;\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'މކ';\n            } else {\n                return 'މފ';\n            }\n        },\n        calendar : {\n            sameDay : '[މިއަދު] LT',\n            nextDay : '[މާދަމާ] LT',\n            nextWeek : 'dddd LT',\n            lastDay : '[އިއްޔެ] LT',\n            lastWeek : '[ފާއިތުވި] dddd LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'ތެރޭގައި %s',\n            past : 'ކުރިން %s',\n            s : 'ސިކުންތުކޮޅެއް',\n            ss : 'd% ސިކުންތު',\n            m : 'މިނިޓެއް',\n            mm : 'މިނިޓު %d',\n            h : 'ގަޑިއިރެއް',\n            hh : 'ގަޑިއިރު %d',\n            d : 'ދުވަހެއް',\n            dd : 'ދުވަސް %d',\n            M : 'މަހެއް',\n            MM : 'މަސް %d',\n            y : 'އަހަރެއް',\n            yy : 'އަހަރު %d'\n        },\n        preparse: function (string) {\n            return string.replace(/،/g, ',');\n        },\n        postformat: function (string) {\n            return string.replace(/,/g, '،');\n        },\n        week : {\n            dow : 7,  // Sunday is the first day of the week.\n            doy : 12  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n\n    return dv;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n    function isFunction(input) {\n        return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n    }\n\n\n    var el = moment.defineLocale('el', {\n        monthsNominativeEl : 'Ιανουάριος_Φεβρουάριος_Μάρτιος_Απρίλιος_Μάιος_Ιούνιος_Ιούλιος_Αύγουστος_Σεπτέμβριος_Οκτώβριος_Νοέμβριος_Δεκέμβριος'.split('_'),\n        monthsGenitiveEl : 'Ιανουαρίου_Φεβρουαρίου_Μαρτίου_Απριλίου_Μαΐου_Ιουνίου_Ιουλίου_Αυγούστου_Σεπτεμβρίου_Οκτωβρίου_Νοεμβρίου_Δεκεμβρίου'.split('_'),\n        months : function (momentToFormat, format) {\n            if (!momentToFormat) {\n                return this._monthsNominativeEl;\n            } else if (typeof format === 'string' && /D/.test(format.substring(0, format.indexOf('MMMM')))) { // if there is a day number before 'MMMM'\n                return this._monthsGenitiveEl[momentToFormat.month()];\n            } else {\n                return this._monthsNominativeEl[momentToFormat.month()];\n            }\n        },\n        monthsShort : 'Ιαν_Φεβ_Μαρ_Απρ_Μαϊ_Ιουν_Ιουλ_Αυγ_Σεπ_Οκτ_Νοε_Δεκ'.split('_'),\n        weekdays : 'Κυριακή_Δευτέρα_Τρίτη_Τετάρτη_Πέμπτη_Παρασκευή_Σάββατο'.split('_'),\n        weekdaysShort : 'Κυρ_Δευ_Τρι_Τετ_Πεμ_Παρ_Σαβ'.split('_'),\n        weekdaysMin : 'Κυ_Δε_Τρ_Τε_Πε_Πα_Σα'.split('_'),\n        meridiem : function (hours, minutes, isLower) {\n            if (hours > 11) {\n                return isLower ? 'μμ' : 'ΜΜ';\n            } else {\n                return isLower ? 'πμ' : 'ΠΜ';\n            }\n        },\n        isPM : function (input) {\n            return ((input + '').toLowerCase()[0] === 'μ');\n        },\n        meridiemParse : /[ΠΜ]\\.?Μ?\\.?/i,\n        longDateFormat : {\n            LT : 'h:mm A',\n            LTS : 'h:mm:ss A',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY h:mm A',\n            LLLL : 'dddd, D MMMM YYYY h:mm A'\n        },\n        calendarEl : {\n            sameDay : '[Σήμερα {}] LT',\n            nextDay : '[Αύριο {}] LT',\n            nextWeek : 'dddd [{}] LT',\n            lastDay : '[Χθες {}] LT',\n            lastWeek : function () {\n                switch (this.day()) {\n                    case 6:\n                        return '[το προηγούμενο] dddd [{}] LT';\n                    default:\n                        return '[την προηγούμενη] dddd [{}] LT';\n                }\n            },\n            sameElse : 'L'\n        },\n        calendar : function (key, mom) {\n            var output = this._calendarEl[key],\n                hours = mom && mom.hours();\n            if (isFunction(output)) {\n                output = output.apply(mom);\n            }\n            return output.replace('{}', (hours % 12 === 1 ? 'στη' : 'στις'));\n        },\n        relativeTime : {\n            future : 'σε %s',\n            past : '%s πριν',\n            s : 'λίγα δευτερόλεπτα',\n            ss : '%d δευτερόλεπτα',\n            m : 'ένα λεπτό',\n            mm : '%d λεπτά',\n            h : 'μία ώρα',\n            hh : '%d ώρες',\n            d : 'μία μέρα',\n            dd : '%d μέρες',\n            M : 'ένας μήνας',\n            MM : '%d μήνες',\n            y : 'ένας χρόνος',\n            yy : '%d χρόνια'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}η/,\n        ordinal: '%dη',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4st is the first week of the year.\n        }\n    });\n\n    return el;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var enAu = moment.defineLocale('en-au', {\n        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),\n        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n        longDateFormat : {\n            LT : 'h:mm A',\n            LTS : 'h:mm:ss A',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY h:mm A',\n            LLLL : 'dddd, D MMMM YYYY h:mm A'\n        },\n        calendar : {\n            sameDay : '[Today at] LT',\n            nextDay : '[Tomorrow at] LT',\n            nextWeek : 'dddd [at] LT',\n            lastDay : '[Yesterday at] LT',\n            lastWeek : '[Last] dddd [at] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'in %s',\n            past : '%s ago',\n            s : 'a few seconds',\n            ss : '%d seconds',\n            m : 'a minute',\n            mm : '%d minutes',\n            h : 'an hour',\n            hh : '%d hours',\n            d : 'a day',\n            dd : '%d days',\n            M : 'a month',\n            MM : '%d months',\n            y : 'a year',\n            yy : '%d years'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (~~(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n            return number + output;\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return enAu;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var enCa = moment.defineLocale('en-ca', {\n        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),\n        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n        longDateFormat : {\n            LT : 'h:mm A',\n            LTS : 'h:mm:ss A',\n            L : 'YYYY-MM-DD',\n            LL : 'MMMM D, YYYY',\n            LLL : 'MMMM D, YYYY h:mm A',\n            LLLL : 'dddd, MMMM D, YYYY h:mm A'\n        },\n        calendar : {\n            sameDay : '[Today at] LT',\n            nextDay : '[Tomorrow at] LT',\n            nextWeek : 'dddd [at] LT',\n            lastDay : '[Yesterday at] LT',\n            lastWeek : '[Last] dddd [at] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'in %s',\n            past : '%s ago',\n            s : 'a few seconds',\n            ss : '%d seconds',\n            m : 'a minute',\n            mm : '%d minutes',\n            h : 'an hour',\n            hh : '%d hours',\n            d : 'a day',\n            dd : '%d days',\n            M : 'a month',\n            MM : '%d months',\n            y : 'a year',\n            yy : '%d years'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (~~(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n            return number + output;\n        }\n    });\n\n    return enCa;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var enGb = moment.defineLocale('en-gb', {\n        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),\n        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd, D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay : '[Today at] LT',\n            nextDay : '[Tomorrow at] LT',\n            nextWeek : 'dddd [at] LT',\n            lastDay : '[Yesterday at] LT',\n            lastWeek : '[Last] dddd [at] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'in %s',\n            past : '%s ago',\n            s : 'a few seconds',\n            ss : '%d seconds',\n            m : 'a minute',\n            mm : '%d minutes',\n            h : 'an hour',\n            hh : '%d hours',\n            d : 'a day',\n            dd : '%d days',\n            M : 'a month',\n            MM : '%d months',\n            y : 'a year',\n            yy : '%d years'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (~~(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n            return number + output;\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return enGb;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var enIe = moment.defineLocale('en-ie', {\n        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),\n        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD-MM-YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay : '[Today at] LT',\n            nextDay : '[Tomorrow at] LT',\n            nextWeek : 'dddd [at] LT',\n            lastDay : '[Yesterday at] LT',\n            lastWeek : '[Last] dddd [at] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'in %s',\n            past : '%s ago',\n            s : 'a few seconds',\n            ss : '%d seconds',\n            m : 'a minute',\n            mm : '%d minutes',\n            h : 'an hour',\n            hh : '%d hours',\n            d : 'a day',\n            dd : '%d days',\n            M : 'a month',\n            MM : '%d months',\n            y : 'a year',\n            yy : '%d years'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (~~(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n            return number + output;\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return enIe;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var enIl = moment.defineLocale('en-il', {\n        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),\n        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd, D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay : '[Today at] LT',\n            nextDay : '[Tomorrow at] LT',\n            nextWeek : 'dddd [at] LT',\n            lastDay : '[Yesterday at] LT',\n            lastWeek : '[Last] dddd [at] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'in %s',\n            past : '%s ago',\n            s : 'a few seconds',\n            m : 'a minute',\n            mm : '%d minutes',\n            h : 'an hour',\n            hh : '%d hours',\n            d : 'a day',\n            dd : '%d days',\n            M : 'a month',\n            MM : '%d months',\n            y : 'a year',\n            yy : '%d years'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (~~(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n            return number + output;\n        }\n    });\n\n    return enIl;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var enNz = moment.defineLocale('en-nz', {\n        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),\n        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n        longDateFormat : {\n            LT : 'h:mm A',\n            LTS : 'h:mm:ss A',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY h:mm A',\n            LLLL : 'dddd, D MMMM YYYY h:mm A'\n        },\n        calendar : {\n            sameDay : '[Today at] LT',\n            nextDay : '[Tomorrow at] LT',\n            nextWeek : 'dddd [at] LT',\n            lastDay : '[Yesterday at] LT',\n            lastWeek : '[Last] dddd [at] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'in %s',\n            past : '%s ago',\n            s : 'a few seconds',\n            ss : '%d seconds',\n            m : 'a minute',\n            mm : '%d minutes',\n            h : 'an hour',\n            hh : '%d hours',\n            d : 'a day',\n            dd : '%d days',\n            M : 'a month',\n            MM : '%d months',\n            y : 'a year',\n            yy : '%d years'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (~~(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n            return number + output;\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return enNz;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var eo = moment.defineLocale('eo', {\n        months : 'januaro_februaro_marto_aprilo_majo_junio_julio_aŭgusto_septembro_oktobro_novembro_decembro'.split('_'),\n        monthsShort : 'jan_feb_mar_apr_maj_jun_jul_aŭg_sep_okt_nov_dec'.split('_'),\n        weekdays : 'dimanĉo_lundo_mardo_merkredo_ĵaŭdo_vendredo_sabato'.split('_'),\n        weekdaysShort : 'dim_lun_mard_merk_ĵaŭ_ven_sab'.split('_'),\n        weekdaysMin : 'di_lu_ma_me_ĵa_ve_sa'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'YYYY-MM-DD',\n            LL : 'D[-a de] MMMM, YYYY',\n            LLL : 'D[-a de] MMMM, YYYY HH:mm',\n            LLLL : 'dddd, [la] D[-a de] MMMM, YYYY HH:mm'\n        },\n        meridiemParse: /[ap]\\.t\\.m/i,\n        isPM: function (input) {\n            return input.charAt(0).toLowerCase() === 'p';\n        },\n        meridiem : function (hours, minutes, isLower) {\n            if (hours > 11) {\n                return isLower ? 'p.t.m.' : 'P.T.M.';\n            } else {\n                return isLower ? 'a.t.m.' : 'A.T.M.';\n            }\n        },\n        calendar : {\n            sameDay : '[Hodiaŭ je] LT',\n            nextDay : '[Morgaŭ je] LT',\n            nextWeek : 'dddd [je] LT',\n            lastDay : '[Hieraŭ je] LT',\n            lastWeek : '[pasinta] dddd [je] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'post %s',\n            past : 'antaŭ %s',\n            s : 'sekundoj',\n            ss : '%d sekundoj',\n            m : 'minuto',\n            mm : '%d minutoj',\n            h : 'horo',\n            hh : '%d horoj',\n            d : 'tago',//ne 'diurno', ĉar estas uzita por proksimumo\n            dd : '%d tagoj',\n            M : 'monato',\n            MM : '%d monatoj',\n            y : 'jaro',\n            yy : '%d jaroj'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}a/,\n        ordinal : '%da',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n\n    return eo;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_'),\n        monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');\n\n    var monthsParse = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i];\n    var monthsRegex = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i;\n\n    var es = moment.defineLocale('es', {\n        months : 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),\n        monthsShort : function (m, format) {\n            if (!m) {\n                return monthsShortDot;\n            } else if (/-MMM-/.test(format)) {\n                return monthsShort[m.month()];\n            } else {\n                return monthsShortDot[m.month()];\n            }\n        },\n        monthsRegex : monthsRegex,\n        monthsShortRegex : monthsRegex,\n        monthsStrictRegex : /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,\n        monthsShortStrictRegex : /^(ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i,\n        monthsParse : monthsParse,\n        longMonthsParse : monthsParse,\n        shortMonthsParse : monthsParse,\n        weekdays : 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),\n        weekdaysShort : 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),\n        weekdaysMin : 'do_lu_ma_mi_ju_vi_sá'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'H:mm',\n            LTS : 'H:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D [de] MMMM [de] YYYY',\n            LLL : 'D [de] MMMM [de] YYYY H:mm',\n            LLLL : 'dddd, D [de] MMMM [de] YYYY H:mm'\n        },\n        calendar : {\n            sameDay : function () {\n                return '[hoy a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n            },\n            nextDay : function () {\n                return '[mañana a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n            },\n            nextWeek : function () {\n                return 'dddd [a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n            },\n            lastDay : function () {\n                return '[ayer a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n            },\n            lastWeek : function () {\n                return '[el] dddd [pasado a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'en %s',\n            past : 'hace %s',\n            s : 'unos segundos',\n            ss : '%d segundos',\n            m : 'un minuto',\n            mm : '%d minutos',\n            h : 'una hora',\n            hh : '%d horas',\n            d : 'un día',\n            dd : '%d días',\n            M : 'un mes',\n            MM : '%d meses',\n            y : 'un año',\n            yy : '%d años'\n        },\n        dayOfMonthOrdinalParse : /\\d{1,2}º/,\n        ordinal : '%dº',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return es;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_'),\n        monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');\n\n    var monthsParse = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i];\n    var monthsRegex = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i;\n\n    var esDo = moment.defineLocale('es-do', {\n        months : 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),\n        monthsShort : function (m, format) {\n            if (!m) {\n                return monthsShortDot;\n            } else if (/-MMM-/.test(format)) {\n                return monthsShort[m.month()];\n            } else {\n                return monthsShortDot[m.month()];\n            }\n        },\n        monthsRegex: monthsRegex,\n        monthsShortRegex: monthsRegex,\n        monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,\n        monthsShortStrictRegex: /^(ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i,\n        monthsParse: monthsParse,\n        longMonthsParse: monthsParse,\n        shortMonthsParse: monthsParse,\n        weekdays : 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),\n        weekdaysShort : 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),\n        weekdaysMin : 'do_lu_ma_mi_ju_vi_sá'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'h:mm A',\n            LTS : 'h:mm:ss A',\n            L : 'DD/MM/YYYY',\n            LL : 'D [de] MMMM [de] YYYY',\n            LLL : 'D [de] MMMM [de] YYYY h:mm A',\n            LLLL : 'dddd, D [de] MMMM [de] YYYY h:mm A'\n        },\n        calendar : {\n            sameDay : function () {\n                return '[hoy a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n            },\n            nextDay : function () {\n                return '[mañana a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n            },\n            nextWeek : function () {\n                return 'dddd [a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n            },\n            lastDay : function () {\n                return '[ayer a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n            },\n            lastWeek : function () {\n                return '[el] dddd [pasado a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'en %s',\n            past : 'hace %s',\n            s : 'unos segundos',\n            ss : '%d segundos',\n            m : 'un minuto',\n            mm : '%d minutos',\n            h : 'una hora',\n            hh : '%d horas',\n            d : 'un día',\n            dd : '%d días',\n            M : 'un mes',\n            MM : '%d meses',\n            y : 'un año',\n            yy : '%d años'\n        },\n        dayOfMonthOrdinalParse : /\\d{1,2}º/,\n        ordinal : '%dº',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return esDo;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_'),\n        monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');\n\n    var esUs = moment.defineLocale('es-us', {\n        months : 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),\n        monthsShort : function (m, format) {\n            if (!m) {\n                return monthsShortDot;\n            } else if (/-MMM-/.test(format)) {\n                return monthsShort[m.month()];\n            } else {\n                return monthsShortDot[m.month()];\n            }\n        },\n        monthsParseExact : true,\n        weekdays : 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),\n        weekdaysShort : 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),\n        weekdaysMin : 'do_lu_ma_mi_ju_vi_sá'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'h:mm A',\n            LTS : 'h:mm:ss A',\n            L : 'MM/DD/YYYY',\n            LL : 'MMMM [de] D [de] YYYY',\n            LLL : 'MMMM [de] D [de] YYYY h:mm A',\n            LLLL : 'dddd, MMMM [de] D [de] YYYY h:mm A'\n        },\n        calendar : {\n            sameDay : function () {\n                return '[hoy a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n            },\n            nextDay : function () {\n                return '[mañana a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n            },\n            nextWeek : function () {\n                return 'dddd [a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n            },\n            lastDay : function () {\n                return '[ayer a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n            },\n            lastWeek : function () {\n                return '[el] dddd [pasado a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'en %s',\n            past : 'hace %s',\n            s : 'unos segundos',\n            ss : '%d segundos',\n            m : 'un minuto',\n            mm : '%d minutos',\n            h : 'una hora',\n            hh : '%d horas',\n            d : 'un día',\n            dd : '%d días',\n            M : 'un mes',\n            MM : '%d meses',\n            y : 'un año',\n            yy : '%d años'\n        },\n        dayOfMonthOrdinalParse : /\\d{1,2}º/,\n        ordinal : '%dº',\n        week : {\n            dow : 0, // Sunday is the first day of the week.\n            doy : 6  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n\n    return esUs;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    function processRelativeTime(number, withoutSuffix, key, isFuture) {\n        var format = {\n            's' : ['mõne sekundi', 'mõni sekund', 'paar sekundit'],\n            'ss': [number + 'sekundi', number + 'sekundit'],\n            'm' : ['ühe minuti', 'üks minut'],\n            'mm': [number + ' minuti', number + ' minutit'],\n            'h' : ['ühe tunni', 'tund aega', 'üks tund'],\n            'hh': [number + ' tunni', number + ' tundi'],\n            'd' : ['ühe päeva', 'üks päev'],\n            'M' : ['kuu aja', 'kuu aega', 'üks kuu'],\n            'MM': [number + ' kuu', number + ' kuud'],\n            'y' : ['ühe aasta', 'aasta', 'üks aasta'],\n            'yy': [number + ' aasta', number + ' aastat']\n        };\n        if (withoutSuffix) {\n            return format[key][2] ? format[key][2] : format[key][1];\n        }\n        return isFuture ? format[key][0] : format[key][1];\n    }\n\n    var et = moment.defineLocale('et', {\n        months        : 'jaanuar_veebruar_märts_aprill_mai_juuni_juuli_august_september_oktoober_november_detsember'.split('_'),\n        monthsShort   : 'jaan_veebr_märts_apr_mai_juuni_juuli_aug_sept_okt_nov_dets'.split('_'),\n        weekdays      : 'pühapäev_esmaspäev_teisipäev_kolmapäev_neljapäev_reede_laupäev'.split('_'),\n        weekdaysShort : 'P_E_T_K_N_R_L'.split('_'),\n        weekdaysMin   : 'P_E_T_K_N_R_L'.split('_'),\n        longDateFormat : {\n            LT   : 'H:mm',\n            LTS : 'H:mm:ss',\n            L    : 'DD.MM.YYYY',\n            LL   : 'D. MMMM YYYY',\n            LLL  : 'D. MMMM YYYY H:mm',\n            LLLL : 'dddd, D. MMMM YYYY H:mm'\n        },\n        calendar : {\n            sameDay  : '[Täna,] LT',\n            nextDay  : '[Homme,] LT',\n            nextWeek : '[Järgmine] dddd LT',\n            lastDay  : '[Eile,] LT',\n            lastWeek : '[Eelmine] dddd LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s pärast',\n            past   : '%s tagasi',\n            s      : processRelativeTime,\n            ss     : processRelativeTime,\n            m      : processRelativeTime,\n            mm     : processRelativeTime,\n            h      : processRelativeTime,\n            hh     : processRelativeTime,\n            d      : processRelativeTime,\n            dd     : '%d päeva',\n            M      : processRelativeTime,\n            MM     : processRelativeTime,\n            y      : processRelativeTime,\n            yy     : processRelativeTime\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return et;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var eu = moment.defineLocale('eu', {\n        months : 'urtarrila_otsaila_martxoa_apirila_maiatza_ekaina_uztaila_abuztua_iraila_urria_azaroa_abendua'.split('_'),\n        monthsShort : 'urt._ots._mar._api._mai._eka._uzt._abu._ira._urr._aza._abe.'.split('_'),\n        monthsParseExact : true,\n        weekdays : 'igandea_astelehena_asteartea_asteazkena_osteguna_ostirala_larunbata'.split('_'),\n        weekdaysShort : 'ig._al._ar._az._og._ol._lr.'.split('_'),\n        weekdaysMin : 'ig_al_ar_az_og_ol_lr'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'YYYY-MM-DD',\n            LL : 'YYYY[ko] MMMM[ren] D[a]',\n            LLL : 'YYYY[ko] MMMM[ren] D[a] HH:mm',\n            LLLL : 'dddd, YYYY[ko] MMMM[ren] D[a] HH:mm',\n            l : 'YYYY-M-D',\n            ll : 'YYYY[ko] MMM D[a]',\n            lll : 'YYYY[ko] MMM D[a] HH:mm',\n            llll : 'ddd, YYYY[ko] MMM D[a] HH:mm'\n        },\n        calendar : {\n            sameDay : '[gaur] LT[etan]',\n            nextDay : '[bihar] LT[etan]',\n            nextWeek : 'dddd LT[etan]',\n            lastDay : '[atzo] LT[etan]',\n            lastWeek : '[aurreko] dddd LT[etan]',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s barru',\n            past : 'duela %s',\n            s : 'segundo batzuk',\n            ss : '%d segundo',\n            m : 'minutu bat',\n            mm : '%d minutu',\n            h : 'ordu bat',\n            hh : '%d ordu',\n            d : 'egun bat',\n            dd : '%d egun',\n            M : 'hilabete bat',\n            MM : '%d hilabete',\n            y : 'urte bat',\n            yy : '%d urte'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n\n    return eu;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var symbolMap = {\n        '1': '۱',\n        '2': '۲',\n        '3': '۳',\n        '4': '۴',\n        '5': '۵',\n        '6': '۶',\n        '7': '۷',\n        '8': '۸',\n        '9': '۹',\n        '0': '۰'\n    }, numberMap = {\n        '۱': '1',\n        '۲': '2',\n        '۳': '3',\n        '۴': '4',\n        '۵': '5',\n        '۶': '6',\n        '۷': '7',\n        '۸': '8',\n        '۹': '9',\n        '۰': '0'\n    };\n\n    var fa = moment.defineLocale('fa', {\n        months : 'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split('_'),\n        monthsShort : 'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split('_'),\n        weekdays : 'یک\\u200cشنبه_دوشنبه_سه\\u200cشنبه_چهارشنبه_پنج\\u200cشنبه_جمعه_شنبه'.split('_'),\n        weekdaysShort : 'یک\\u200cشنبه_دوشنبه_سه\\u200cشنبه_چهارشنبه_پنج\\u200cشنبه_جمعه_شنبه'.split('_'),\n        weekdaysMin : 'ی_د_س_چ_پ_ج_ش'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd, D MMMM YYYY HH:mm'\n        },\n        meridiemParse: /قبل از ظهر|بعد از ظهر/,\n        isPM: function (input) {\n            return /بعد از ظهر/.test(input);\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'قبل از ظهر';\n            } else {\n                return 'بعد از ظهر';\n            }\n        },\n        calendar : {\n            sameDay : '[امروز ساعت] LT',\n            nextDay : '[فردا ساعت] LT',\n            nextWeek : 'dddd [ساعت] LT',\n            lastDay : '[دیروز ساعت] LT',\n            lastWeek : 'dddd [پیش] [ساعت] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'در %s',\n            past : '%s پیش',\n            s : 'چند ثانیه',\n            ss : 'ثانیه d%',\n            m : 'یک دقیقه',\n            mm : '%d دقیقه',\n            h : 'یک ساعت',\n            hh : '%d ساعت',\n            d : 'یک روز',\n            dd : '%d روز',\n            M : 'یک ماه',\n            MM : '%d ماه',\n            y : 'یک سال',\n            yy : '%d سال'\n        },\n        preparse: function (string) {\n            return string.replace(/[۰-۹]/g, function (match) {\n                return numberMap[match];\n            }).replace(/،/g, ',');\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap[match];\n            }).replace(/,/g, '،');\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}م/,\n        ordinal : '%dم',\n        week : {\n            dow : 6, // Saturday is the first day of the week.\n            doy : 12 // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n\n    return fa;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var numbersPast = 'nolla yksi kaksi kolme neljä viisi kuusi seitsemän kahdeksan yhdeksän'.split(' '),\n        numbersFuture = [\n            'nolla', 'yhden', 'kahden', 'kolmen', 'neljän', 'viiden', 'kuuden',\n            numbersPast[7], numbersPast[8], numbersPast[9]\n        ];\n    function translate(number, withoutSuffix, key, isFuture) {\n        var result = '';\n        switch (key) {\n            case 's':\n                return isFuture ? 'muutaman sekunnin' : 'muutama sekunti';\n            case 'ss':\n                return isFuture ? 'sekunnin' : 'sekuntia';\n            case 'm':\n                return isFuture ? 'minuutin' : 'minuutti';\n            case 'mm':\n                result = isFuture ? 'minuutin' : 'minuuttia';\n                break;\n            case 'h':\n                return isFuture ? 'tunnin' : 'tunti';\n            case 'hh':\n                result = isFuture ? 'tunnin' : 'tuntia';\n                break;\n            case 'd':\n                return isFuture ? 'päivän' : 'päivä';\n            case 'dd':\n                result = isFuture ? 'päivän' : 'päivää';\n                break;\n            case 'M':\n                return isFuture ? 'kuukauden' : 'kuukausi';\n            case 'MM':\n                result = isFuture ? 'kuukauden' : 'kuukautta';\n                break;\n            case 'y':\n                return isFuture ? 'vuoden' : 'vuosi';\n            case 'yy':\n                result = isFuture ? 'vuoden' : 'vuotta';\n                break;\n        }\n        result = verbalNumber(number, isFuture) + ' ' + result;\n        return result;\n    }\n    function verbalNumber(number, isFuture) {\n        return number < 10 ? (isFuture ? numbersFuture[number] : numbersPast[number]) : number;\n    }\n\n    var fi = moment.defineLocale('fi', {\n        months : 'tammikuu_helmikuu_maaliskuu_huhtikuu_toukokuu_kesäkuu_heinäkuu_elokuu_syyskuu_lokakuu_marraskuu_joulukuu'.split('_'),\n        monthsShort : 'tammi_helmi_maalis_huhti_touko_kesä_heinä_elo_syys_loka_marras_joulu'.split('_'),\n        weekdays : 'sunnuntai_maanantai_tiistai_keskiviikko_torstai_perjantai_lauantai'.split('_'),\n        weekdaysShort : 'su_ma_ti_ke_to_pe_la'.split('_'),\n        weekdaysMin : 'su_ma_ti_ke_to_pe_la'.split('_'),\n        longDateFormat : {\n            LT : 'HH.mm',\n            LTS : 'HH.mm.ss',\n            L : 'DD.MM.YYYY',\n            LL : 'Do MMMM[ta] YYYY',\n            LLL : 'Do MMMM[ta] YYYY, [klo] HH.mm',\n            LLLL : 'dddd, Do MMMM[ta] YYYY, [klo] HH.mm',\n            l : 'D.M.YYYY',\n            ll : 'Do MMM YYYY',\n            lll : 'Do MMM YYYY, [klo] HH.mm',\n            llll : 'ddd, Do MMM YYYY, [klo] HH.mm'\n        },\n        calendar : {\n            sameDay : '[tänään] [klo] LT',\n            nextDay : '[huomenna] [klo] LT',\n            nextWeek : 'dddd [klo] LT',\n            lastDay : '[eilen] [klo] LT',\n            lastWeek : '[viime] dddd[na] [klo] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s päästä',\n            past : '%s sitten',\n            s : translate,\n            ss : translate,\n            m : translate,\n            mm : translate,\n            h : translate,\n            hh : translate,\n            d : translate,\n            dd : translate,\n            M : translate,\n            MM : translate,\n            y : translate,\n            yy : translate\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return fi;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var fo = moment.defineLocale('fo', {\n        months : 'januar_februar_mars_apríl_mai_juni_juli_august_september_oktober_november_desember'.split('_'),\n        monthsShort : 'jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_'),\n        weekdays : 'sunnudagur_mánadagur_týsdagur_mikudagur_hósdagur_fríggjadagur_leygardagur'.split('_'),\n        weekdaysShort : 'sun_mán_týs_mik_hós_frí_ley'.split('_'),\n        weekdaysMin : 'su_má_tý_mi_hó_fr_le'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd D. MMMM, YYYY HH:mm'\n        },\n        calendar : {\n            sameDay : '[Í dag kl.] LT',\n            nextDay : '[Í morgin kl.] LT',\n            nextWeek : 'dddd [kl.] LT',\n            lastDay : '[Í gjár kl.] LT',\n            lastWeek : '[síðstu] dddd [kl] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'um %s',\n            past : '%s síðani',\n            s : 'fá sekund',\n            ss : '%d sekundir',\n            m : 'ein minutt',\n            mm : '%d minuttir',\n            h : 'ein tími',\n            hh : '%d tímar',\n            d : 'ein dagur',\n            dd : '%d dagar',\n            M : 'ein mánaði',\n            MM : '%d mánaðir',\n            y : 'eitt ár',\n            yy : '%d ár'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return fo;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var fr = moment.defineLocale('fr', {\n        months : 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),\n        monthsShort : 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),\n        monthsParseExact : true,\n        weekdays : 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),\n        weekdaysShort : 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),\n        weekdaysMin : 'di_lu_ma_me_je_ve_sa'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay : '[Aujourd’hui à] LT',\n            nextDay : '[Demain à] LT',\n            nextWeek : 'dddd [à] LT',\n            lastDay : '[Hier à] LT',\n            lastWeek : 'dddd [dernier à] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'dans %s',\n            past : 'il y a %s',\n            s : 'quelques secondes',\n            ss : '%d secondes',\n            m : 'une minute',\n            mm : '%d minutes',\n            h : 'une heure',\n            hh : '%d heures',\n            d : 'un jour',\n            dd : '%d jours',\n            M : 'un mois',\n            MM : '%d mois',\n            y : 'un an',\n            yy : '%d ans'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(er|)/,\n        ordinal : function (number, period) {\n            switch (period) {\n                // TODO: Return 'e' when day of month > 1. Move this case inside\n                // block for masculine words below.\n                // See https://github.com/moment/moment/issues/3375\n                case 'D':\n                    return number + (number === 1 ? 'er' : '');\n\n                // Words with masculine grammatical gender: mois, trimestre, jour\n                default:\n                case 'M':\n                case 'Q':\n                case 'DDD':\n                case 'd':\n                    return number + (number === 1 ? 'er' : 'e');\n\n                // Words with feminine grammatical gender: semaine\n                case 'w':\n                case 'W':\n                    return number + (number === 1 ? 're' : 'e');\n            }\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return fr;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var frCa = moment.defineLocale('fr-ca', {\n        months : 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),\n        monthsShort : 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),\n        monthsParseExact : true,\n        weekdays : 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),\n        weekdaysShort : 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),\n        weekdaysMin : 'di_lu_ma_me_je_ve_sa'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'YYYY-MM-DD',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay : '[Aujourd’hui à] LT',\n            nextDay : '[Demain à] LT',\n            nextWeek : 'dddd [à] LT',\n            lastDay : '[Hier à] LT',\n            lastWeek : 'dddd [dernier à] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'dans %s',\n            past : 'il y a %s',\n            s : 'quelques secondes',\n            ss : '%d secondes',\n            m : 'une minute',\n            mm : '%d minutes',\n            h : 'une heure',\n            hh : '%d heures',\n            d : 'un jour',\n            dd : '%d jours',\n            M : 'un mois',\n            MM : '%d mois',\n            y : 'un an',\n            yy : '%d ans'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(er|e)/,\n        ordinal : function (number, period) {\n            switch (period) {\n                // Words with masculine grammatical gender: mois, trimestre, jour\n                default:\n                case 'M':\n                case 'Q':\n                case 'D':\n                case 'DDD':\n                case 'd':\n                    return number + (number === 1 ? 'er' : 'e');\n\n                // Words with feminine grammatical gender: semaine\n                case 'w':\n                case 'W':\n                    return number + (number === 1 ? 're' : 'e');\n            }\n        }\n    });\n\n    return frCa;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var frCh = moment.defineLocale('fr-ch', {\n        months : 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),\n        monthsShort : 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),\n        monthsParseExact : true,\n        weekdays : 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),\n        weekdaysShort : 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),\n        weekdaysMin : 'di_lu_ma_me_je_ve_sa'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay : '[Aujourd’hui à] LT',\n            nextDay : '[Demain à] LT',\n            nextWeek : 'dddd [à] LT',\n            lastDay : '[Hier à] LT',\n            lastWeek : 'dddd [dernier à] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'dans %s',\n            past : 'il y a %s',\n            s : 'quelques secondes',\n            ss : '%d secondes',\n            m : 'une minute',\n            mm : '%d minutes',\n            h : 'une heure',\n            hh : '%d heures',\n            d : 'un jour',\n            dd : '%d jours',\n            M : 'un mois',\n            MM : '%d mois',\n            y : 'un an',\n            yy : '%d ans'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(er|e)/,\n        ordinal : function (number, period) {\n            switch (period) {\n                // Words with masculine grammatical gender: mois, trimestre, jour\n                default:\n                case 'M':\n                case 'Q':\n                case 'D':\n                case 'DDD':\n                case 'd':\n                    return number + (number === 1 ? 'er' : 'e');\n\n                // Words with feminine grammatical gender: semaine\n                case 'w':\n                case 'W':\n                    return number + (number === 1 ? 're' : 'e');\n            }\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return frCh;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var monthsShortWithDots = 'jan._feb._mrt._apr._mai_jun._jul._aug._sep._okt._nov._des.'.split('_'),\n        monthsShortWithoutDots = 'jan_feb_mrt_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_');\n\n    var fy = moment.defineLocale('fy', {\n        months : 'jannewaris_febrewaris_maart_april_maaie_juny_july_augustus_septimber_oktober_novimber_desimber'.split('_'),\n        monthsShort : function (m, format) {\n            if (!m) {\n                return monthsShortWithDots;\n            } else if (/-MMM-/.test(format)) {\n                return monthsShortWithoutDots[m.month()];\n            } else {\n                return monthsShortWithDots[m.month()];\n            }\n        },\n        monthsParseExact : true,\n        weekdays : 'snein_moandei_tiisdei_woansdei_tongersdei_freed_sneon'.split('_'),\n        weekdaysShort : 'si._mo._ti._wo._to._fr._so.'.split('_'),\n        weekdaysMin : 'Si_Mo_Ti_Wo_To_Fr_So'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD-MM-YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: '[hjoed om] LT',\n            nextDay: '[moarn om] LT',\n            nextWeek: 'dddd [om] LT',\n            lastDay: '[juster om] LT',\n            lastWeek: '[ôfrûne] dddd [om] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'oer %s',\n            past : '%s lyn',\n            s : 'in pear sekonden',\n            ss : '%d sekonden',\n            m : 'ien minút',\n            mm : '%d minuten',\n            h : 'ien oere',\n            hh : '%d oeren',\n            d : 'ien dei',\n            dd : '%d dagen',\n            M : 'ien moanne',\n            MM : '%d moannen',\n            y : 'ien jier',\n            yy : '%d jierren'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(ste|de)/,\n        ordinal : function (number) {\n            return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de');\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return fy;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var months = [\n        'Am Faoilleach', 'An Gearran', 'Am Màrt', 'An Giblean', 'An Cèitean', 'An t-Ògmhios', 'An t-Iuchar', 'An Lùnastal', 'An t-Sultain', 'An Dàmhair', 'An t-Samhain', 'An Dùbhlachd'\n    ];\n\n    var monthsShort = ['Faoi', 'Gear', 'Màrt', 'Gibl', 'Cèit', 'Ògmh', 'Iuch', 'Lùn', 'Sult', 'Dàmh', 'Samh', 'Dùbh'];\n\n    var weekdays = ['Didòmhnaich', 'Diluain', 'Dimàirt', 'Diciadain', 'Diardaoin', 'Dihaoine', 'Disathairne'];\n\n    var weekdaysShort = ['Did', 'Dil', 'Dim', 'Dic', 'Dia', 'Dih', 'Dis'];\n\n    var weekdaysMin = ['Dò', 'Lu', 'Mà', 'Ci', 'Ar', 'Ha', 'Sa'];\n\n    var gd = moment.defineLocale('gd', {\n        months : months,\n        monthsShort : monthsShort,\n        monthsParseExact : true,\n        weekdays : weekdays,\n        weekdaysShort : weekdaysShort,\n        weekdaysMin : weekdaysMin,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd, D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay : '[An-diugh aig] LT',\n            nextDay : '[A-màireach aig] LT',\n            nextWeek : 'dddd [aig] LT',\n            lastDay : '[An-dè aig] LT',\n            lastWeek : 'dddd [seo chaidh] [aig] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'ann an %s',\n            past : 'bho chionn %s',\n            s : 'beagan diogan',\n            ss : '%d diogan',\n            m : 'mionaid',\n            mm : '%d mionaidean',\n            h : 'uair',\n            hh : '%d uairean',\n            d : 'latha',\n            dd : '%d latha',\n            M : 'mìos',\n            MM : '%d mìosan',\n            y : 'bliadhna',\n            yy : '%d bliadhna'\n        },\n        dayOfMonthOrdinalParse : /\\d{1,2}(d|na|mh)/,\n        ordinal : function (number) {\n            var output = number === 1 ? 'd' : number % 10 === 2 ? 'na' : 'mh';\n            return number + output;\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return gd;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var gl = moment.defineLocale('gl', {\n        months : 'xaneiro_febreiro_marzo_abril_maio_xuño_xullo_agosto_setembro_outubro_novembro_decembro'.split('_'),\n        monthsShort : 'xan._feb._mar._abr._mai._xuñ._xul._ago._set._out._nov._dec.'.split('_'),\n        monthsParseExact: true,\n        weekdays : 'domingo_luns_martes_mércores_xoves_venres_sábado'.split('_'),\n        weekdaysShort : 'dom._lun._mar._mér._xov._ven._sáb.'.split('_'),\n        weekdaysMin : 'do_lu_ma_mé_xo_ve_sá'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'H:mm',\n            LTS : 'H:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D [de] MMMM [de] YYYY',\n            LLL : 'D [de] MMMM [de] YYYY H:mm',\n            LLLL : 'dddd, D [de] MMMM [de] YYYY H:mm'\n        },\n        calendar : {\n            sameDay : function () {\n                return '[hoxe ' + ((this.hours() !== 1) ? 'ás' : 'á') + '] LT';\n            },\n            nextDay : function () {\n                return '[mañá ' + ((this.hours() !== 1) ? 'ás' : 'á') + '] LT';\n            },\n            nextWeek : function () {\n                return 'dddd [' + ((this.hours() !== 1) ? 'ás' : 'a') + '] LT';\n            },\n            lastDay : function () {\n                return '[onte ' + ((this.hours() !== 1) ? 'á' : 'a') + '] LT';\n            },\n            lastWeek : function () {\n                return '[o] dddd [pasado ' + ((this.hours() !== 1) ? 'ás' : 'a') + '] LT';\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : function (str) {\n                if (str.indexOf('un') === 0) {\n                    return 'n' + str;\n                }\n                return 'en ' + str;\n            },\n            past : 'hai %s',\n            s : 'uns segundos',\n            ss : '%d segundos',\n            m : 'un minuto',\n            mm : '%d minutos',\n            h : 'unha hora',\n            hh : '%d horas',\n            d : 'un día',\n            dd : '%d días',\n            M : 'un mes',\n            MM : '%d meses',\n            y : 'un ano',\n            yy : '%d anos'\n        },\n        dayOfMonthOrdinalParse : /\\d{1,2}º/,\n        ordinal : '%dº',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return gl;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    function processRelativeTime(number, withoutSuffix, key, isFuture) {\n        var format = {\n            's': ['thodde secondanim', 'thodde second'],\n            'ss': [number + ' secondanim', number + ' second'],\n            'm': ['eka mintan', 'ek minute'],\n            'mm': [number + ' mintanim', number + ' mintam'],\n            'h': ['eka horan', 'ek hor'],\n            'hh': [number + ' horanim', number + ' horam'],\n            'd': ['eka disan', 'ek dis'],\n            'dd': [number + ' disanim', number + ' dis'],\n            'M': ['eka mhoinean', 'ek mhoino'],\n            'MM': [number + ' mhoineanim', number + ' mhoine'],\n            'y': ['eka vorsan', 'ek voros'],\n            'yy': [number + ' vorsanim', number + ' vorsam']\n        };\n        return withoutSuffix ? format[key][0] : format[key][1];\n    }\n\n    var gomLatn = moment.defineLocale('gom-latn', {\n        months : 'Janer_Febrer_Mars_Abril_Mai_Jun_Julai_Agost_Setembr_Otubr_Novembr_Dezembr'.split('_'),\n        monthsShort : 'Jan._Feb._Mars_Abr._Mai_Jun_Jul._Ago._Set._Otu._Nov._Dez.'.split('_'),\n        monthsParseExact : true,\n        weekdays : 'Aitar_Somar_Mongllar_Budvar_Brestar_Sukrar_Son\\'var'.split('_'),\n        weekdaysShort : 'Ait._Som._Mon._Bud._Bre._Suk._Son.'.split('_'),\n        weekdaysMin : 'Ai_Sm_Mo_Bu_Br_Su_Sn'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'A h:mm [vazta]',\n            LTS : 'A h:mm:ss [vazta]',\n            L : 'DD-MM-YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY A h:mm [vazta]',\n            LLLL : 'dddd, MMMM[achea] Do, YYYY, A h:mm [vazta]',\n            llll: 'ddd, D MMM YYYY, A h:mm [vazta]'\n        },\n        calendar : {\n            sameDay: '[Aiz] LT',\n            nextDay: '[Faleam] LT',\n            nextWeek: '[Ieta to] dddd[,] LT',\n            lastDay: '[Kal] LT',\n            lastWeek: '[Fatlo] dddd[,] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : '%s',\n            past : '%s adim',\n            s : processRelativeTime,\n            ss : processRelativeTime,\n            m : processRelativeTime,\n            mm : processRelativeTime,\n            h : processRelativeTime,\n            hh : processRelativeTime,\n            d : processRelativeTime,\n            dd : processRelativeTime,\n            M : processRelativeTime,\n            MM : processRelativeTime,\n            y : processRelativeTime,\n            yy : processRelativeTime\n        },\n        dayOfMonthOrdinalParse : /\\d{1,2}(er)/,\n        ordinal : function (number, period) {\n            switch (period) {\n                // the ordinal 'er' only applies to day of the month\n                case 'D':\n                    return number + 'er';\n                default:\n                case 'M':\n                case 'Q':\n                case 'DDD':\n                case 'd':\n                case 'w':\n                case 'W':\n                    return number;\n            }\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        },\n        meridiemParse: /rati|sokalli|donparam|sanje/,\n        meridiemHour : function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'rati') {\n                return hour < 4 ? hour : hour + 12;\n            } else if (meridiem === 'sokalli') {\n                return hour;\n            } else if (meridiem === 'donparam') {\n                return hour > 12 ? hour : hour + 12;\n            } else if (meridiem === 'sanje') {\n                return hour + 12;\n            }\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'rati';\n            } else if (hour < 12) {\n                return 'sokalli';\n            } else if (hour < 16) {\n                return 'donparam';\n            } else if (hour < 20) {\n                return 'sanje';\n            } else {\n                return 'rati';\n            }\n        }\n    });\n\n    return gomLatn;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var symbolMap = {\n            '1': '૧',\n            '2': '૨',\n            '3': '૩',\n            '4': '૪',\n            '5': '૫',\n            '6': '૬',\n            '7': '૭',\n            '8': '૮',\n            '9': '૯',\n            '0': '૦'\n        },\n        numberMap = {\n            '૧': '1',\n            '૨': '2',\n            '૩': '3',\n            '૪': '4',\n            '૫': '5',\n            '૬': '6',\n            '૭': '7',\n            '૮': '8',\n            '૯': '9',\n            '૦': '0'\n        };\n\n    var gu = moment.defineLocale('gu', {\n        months: 'જાન્યુઆરી_ફેબ્રુઆરી_માર્ચ_એપ્રિલ_મે_જૂન_જુલાઈ_ઑગસ્ટ_સપ્ટેમ્બર_ઑક્ટ્બર_નવેમ્બર_ડિસેમ્બર'.split('_'),\n        monthsShort: 'જાન્યુ._ફેબ્રુ._માર્ચ_એપ્રિ._મે_જૂન_જુલા._ઑગ._સપ્ટે._ઑક્ટ્._નવે._ડિસે.'.split('_'),\n        monthsParseExact: true,\n        weekdays: 'રવિવાર_સોમવાર_મંગળવાર_બુધ્વાર_ગુરુવાર_શુક્રવાર_શનિવાર'.split('_'),\n        weekdaysShort: 'રવિ_સોમ_મંગળ_બુધ્_ગુરુ_શુક્ર_શનિ'.split('_'),\n        weekdaysMin: 'ર_સો_મં_બુ_ગુ_શુ_શ'.split('_'),\n        longDateFormat: {\n            LT: 'A h:mm વાગ્યે',\n            LTS: 'A h:mm:ss વાગ્યે',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY, A h:mm વાગ્યે',\n            LLLL: 'dddd, D MMMM YYYY, A h:mm વાગ્યે'\n        },\n        calendar: {\n            sameDay: '[આજ] LT',\n            nextDay: '[કાલે] LT',\n            nextWeek: 'dddd, LT',\n            lastDay: '[ગઇકાલે] LT',\n            lastWeek: '[પાછલા] dddd, LT',\n            sameElse: 'L'\n        },\n        relativeTime: {\n            future: '%s મા',\n            past: '%s પેહલા',\n            s: 'અમુક પળો',\n            ss: '%d સેકંડ',\n            m: 'એક મિનિટ',\n            mm: '%d મિનિટ',\n            h: 'એક કલાક',\n            hh: '%d કલાક',\n            d: 'એક દિવસ',\n            dd: '%d દિવસ',\n            M: 'એક મહિનો',\n            MM: '%d મહિનો',\n            y: 'એક વર્ષ',\n            yy: '%d વર્ષ'\n        },\n        preparse: function (string) {\n            return string.replace(/[૧૨૩૪૫૬૭૮૯૦]/g, function (match) {\n                return numberMap[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap[match];\n            });\n        },\n        // Gujarati notation for meridiems are quite fuzzy in practice. While there exists\n        // a rigid notion of a 'Pahar' it is not used as rigidly in modern Gujarati.\n        meridiemParse: /રાત|બપોર|સવાર|સાંજ/,\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'રાત') {\n                return hour < 4 ? hour : hour + 12;\n            } else if (meridiem === 'સવાર') {\n                return hour;\n            } else if (meridiem === 'બપોર') {\n                return hour >= 10 ? hour : hour + 12;\n            } else if (meridiem === 'સાંજ') {\n                return hour + 12;\n            }\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'રાત';\n            } else if (hour < 10) {\n                return 'સવાર';\n            } else if (hour < 17) {\n                return 'બપોર';\n            } else if (hour < 20) {\n                return 'સાંજ';\n            } else {\n                return 'રાત';\n            }\n        },\n        week: {\n            dow: 0, // Sunday is the first day of the week.\n            doy: 6 // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n\n    return gu;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var he = moment.defineLocale('he', {\n        months : 'ינואר_פברואר_מרץ_אפריל_מאי_יוני_יולי_אוגוסט_ספטמבר_אוקטובר_נובמבר_דצמבר'.split('_'),\n        monthsShort : 'ינו׳_פבר׳_מרץ_אפר׳_מאי_יוני_יולי_אוג׳_ספט׳_אוק׳_נוב׳_דצמ׳'.split('_'),\n        weekdays : 'ראשון_שני_שלישי_רביעי_חמישי_שישי_שבת'.split('_'),\n        weekdaysShort : 'א׳_ב׳_ג׳_ד׳_ה׳_ו׳_ש׳'.split('_'),\n        weekdaysMin : 'א_ב_ג_ד_ה_ו_ש'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D [ב]MMMM YYYY',\n            LLL : 'D [ב]MMMM YYYY HH:mm',\n            LLLL : 'dddd, D [ב]MMMM YYYY HH:mm',\n            l : 'D/M/YYYY',\n            ll : 'D MMM YYYY',\n            lll : 'D MMM YYYY HH:mm',\n            llll : 'ddd, D MMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay : '[היום ב־]LT',\n            nextDay : '[מחר ב־]LT',\n            nextWeek : 'dddd [בשעה] LT',\n            lastDay : '[אתמול ב־]LT',\n            lastWeek : '[ביום] dddd [האחרון בשעה] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'בעוד %s',\n            past : 'לפני %s',\n            s : 'מספר שניות',\n            ss : '%d שניות',\n            m : 'דקה',\n            mm : '%d דקות',\n            h : 'שעה',\n            hh : function (number) {\n                if (number === 2) {\n                    return 'שעתיים';\n                }\n                return number + ' שעות';\n            },\n            d : 'יום',\n            dd : function (number) {\n                if (number === 2) {\n                    return 'יומיים';\n                }\n                return number + ' ימים';\n            },\n            M : 'חודש',\n            MM : function (number) {\n                if (number === 2) {\n                    return 'חודשיים';\n                }\n                return number + ' חודשים';\n            },\n            y : 'שנה',\n            yy : function (number) {\n                if (number === 2) {\n                    return 'שנתיים';\n                } else if (number % 10 === 0 && number !== 10) {\n                    return number + ' שנה';\n                }\n                return number + ' שנים';\n            }\n        },\n        meridiemParse: /אחה\"צ|לפנה\"צ|אחרי הצהריים|לפני הצהריים|לפנות בוקר|בבוקר|בערב/i,\n        isPM : function (input) {\n            return /^(אחה\"צ|אחרי הצהריים|בערב)$/.test(input);\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 5) {\n                return 'לפנות בוקר';\n            } else if (hour < 10) {\n                return 'בבוקר';\n            } else if (hour < 12) {\n                return isLower ? 'לפנה\"צ' : 'לפני הצהריים';\n            } else if (hour < 18) {\n                return isLower ? 'אחה\"צ' : 'אחרי הצהריים';\n            } else {\n                return 'בערב';\n            }\n        }\n    });\n\n    return he;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var symbolMap = {\n        '1': '१',\n        '2': '२',\n        '3': '३',\n        '4': '४',\n        '5': '५',\n        '6': '६',\n        '7': '७',\n        '8': '८',\n        '9': '९',\n        '0': '०'\n    },\n    numberMap = {\n        '१': '1',\n        '२': '2',\n        '३': '3',\n        '४': '4',\n        '५': '5',\n        '६': '6',\n        '७': '7',\n        '८': '8',\n        '९': '9',\n        '०': '0'\n    };\n\n    var hi = moment.defineLocale('hi', {\n        months : 'जनवरी_फ़रवरी_मार्च_अप्रैल_मई_जून_जुलाई_अगस्त_सितम्बर_अक्टूबर_नवम्बर_दिसम्बर'.split('_'),\n        monthsShort : 'जन._फ़र._मार्च_अप्रै._मई_जून_जुल._अग._सित._अक्टू._नव._दिस.'.split('_'),\n        monthsParseExact: true,\n        weekdays : 'रविवार_सोमवार_मंगलवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),\n        weekdaysShort : 'रवि_सोम_मंगल_बुध_गुरू_शुक्र_शनि'.split('_'),\n        weekdaysMin : 'र_सो_मं_बु_गु_शु_श'.split('_'),\n        longDateFormat : {\n            LT : 'A h:mm बजे',\n            LTS : 'A h:mm:ss बजे',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY, A h:mm बजे',\n            LLLL : 'dddd, D MMMM YYYY, A h:mm बजे'\n        },\n        calendar : {\n            sameDay : '[आज] LT',\n            nextDay : '[कल] LT',\n            nextWeek : 'dddd, LT',\n            lastDay : '[कल] LT',\n            lastWeek : '[पिछले] dddd, LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s में',\n            past : '%s पहले',\n            s : 'कुछ ही क्षण',\n            ss : '%d सेकंड',\n            m : 'एक मिनट',\n            mm : '%d मिनट',\n            h : 'एक घंटा',\n            hh : '%d घंटे',\n            d : 'एक दिन',\n            dd : '%d दिन',\n            M : 'एक महीने',\n            MM : '%d महीने',\n            y : 'एक वर्ष',\n            yy : '%d वर्ष'\n        },\n        preparse: function (string) {\n            return string.replace(/[१२३४५६७८९०]/g, function (match) {\n                return numberMap[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap[match];\n            });\n        },\n        // Hindi notation for meridiems are quite fuzzy in practice. While there exists\n        // a rigid notion of a 'Pahar' it is not used as rigidly in modern Hindi.\n        meridiemParse: /रात|सुबह|दोपहर|शाम/,\n        meridiemHour : function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'रात') {\n                return hour < 4 ? hour : hour + 12;\n            } else if (meridiem === 'सुबह') {\n                return hour;\n            } else if (meridiem === 'दोपहर') {\n                return hour >= 10 ? hour : hour + 12;\n            } else if (meridiem === 'शाम') {\n                return hour + 12;\n            }\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'रात';\n            } else if (hour < 10) {\n                return 'सुबह';\n            } else if (hour < 17) {\n                return 'दोपहर';\n            } else if (hour < 20) {\n                return 'शाम';\n            } else {\n                return 'रात';\n            }\n        },\n        week : {\n            dow : 0, // Sunday is the first day of the week.\n            doy : 6  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n\n    return hi;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    function translate(number, withoutSuffix, key) {\n        var result = number + ' ';\n        switch (key) {\n            case 'ss':\n                if (number === 1) {\n                    result += 'sekunda';\n                } else if (number === 2 || number === 3 || number === 4) {\n                    result += 'sekunde';\n                } else {\n                    result += 'sekundi';\n                }\n                return result;\n            case 'm':\n                return withoutSuffix ? 'jedna minuta' : 'jedne minute';\n            case 'mm':\n                if (number === 1) {\n                    result += 'minuta';\n                } else if (number === 2 || number === 3 || number === 4) {\n                    result += 'minute';\n                } else {\n                    result += 'minuta';\n                }\n                return result;\n            case 'h':\n                return withoutSuffix ? 'jedan sat' : 'jednog sata';\n            case 'hh':\n                if (number === 1) {\n                    result += 'sat';\n                } else if (number === 2 || number === 3 || number === 4) {\n                    result += 'sata';\n                } else {\n                    result += 'sati';\n                }\n                return result;\n            case 'dd':\n                if (number === 1) {\n                    result += 'dan';\n                } else {\n                    result += 'dana';\n                }\n                return result;\n            case 'MM':\n                if (number === 1) {\n                    result += 'mjesec';\n                } else if (number === 2 || number === 3 || number === 4) {\n                    result += 'mjeseca';\n                } else {\n                    result += 'mjeseci';\n                }\n                return result;\n            case 'yy':\n                if (number === 1) {\n                    result += 'godina';\n                } else if (number === 2 || number === 3 || number === 4) {\n                    result += 'godine';\n                } else {\n                    result += 'godina';\n                }\n                return result;\n        }\n    }\n\n    var hr = moment.defineLocale('hr', {\n        months : {\n            format: 'siječnja_veljače_ožujka_travnja_svibnja_lipnja_srpnja_kolovoza_rujna_listopada_studenoga_prosinca'.split('_'),\n            standalone: 'siječanj_veljača_ožujak_travanj_svibanj_lipanj_srpanj_kolovoz_rujan_listopad_studeni_prosinac'.split('_')\n        },\n        monthsShort : 'sij._velj._ožu._tra._svi._lip._srp._kol._ruj._lis._stu._pro.'.split('_'),\n        monthsParseExact: true,\n        weekdays : 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),\n        weekdaysShort : 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),\n        weekdaysMin : 'ne_po_ut_sr_če_pe_su'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'H:mm',\n            LTS : 'H:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D. MMMM YYYY',\n            LLL : 'D. MMMM YYYY H:mm',\n            LLLL : 'dddd, D. MMMM YYYY H:mm'\n        },\n        calendar : {\n            sameDay  : '[danas u] LT',\n            nextDay  : '[sutra u] LT',\n            nextWeek : function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[u] [nedjelju] [u] LT';\n                    case 3:\n                        return '[u] [srijedu] [u] LT';\n                    case 6:\n                        return '[u] [subotu] [u] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 5:\n                        return '[u] dddd [u] LT';\n                }\n            },\n            lastDay  : '[jučer u] LT',\n            lastWeek : function () {\n                switch (this.day()) {\n                    case 0:\n                    case 3:\n                        return '[prošlu] dddd [u] LT';\n                    case 6:\n                        return '[prošle] [subote] [u] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 5:\n                        return '[prošli] dddd [u] LT';\n                }\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'za %s',\n            past   : 'prije %s',\n            s      : 'par sekundi',\n            ss     : translate,\n            m      : translate,\n            mm     : translate,\n            h      : translate,\n            hh     : translate,\n            d      : 'dan',\n            dd     : translate,\n            M      : 'mjesec',\n            MM     : translate,\n            y      : 'godinu',\n            yy     : translate\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n\n    return hr;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var weekEndings = 'vasárnap hétfőn kedden szerdán csütörtökön pénteken szombaton'.split(' ');\n    function translate(number, withoutSuffix, key, isFuture) {\n        var num = number;\n        switch (key) {\n            case 's':\n                return (isFuture || withoutSuffix) ? 'néhány másodperc' : 'néhány másodperce';\n            case 'ss':\n                return num + (isFuture || withoutSuffix) ? ' másodperc' : ' másodperce';\n            case 'm':\n                return 'egy' + (isFuture || withoutSuffix ? ' perc' : ' perce');\n            case 'mm':\n                return num + (isFuture || withoutSuffix ? ' perc' : ' perce');\n            case 'h':\n                return 'egy' + (isFuture || withoutSuffix ? ' óra' : ' órája');\n            case 'hh':\n                return num + (isFuture || withoutSuffix ? ' óra' : ' órája');\n            case 'd':\n                return 'egy' + (isFuture || withoutSuffix ? ' nap' : ' napja');\n            case 'dd':\n                return num + (isFuture || withoutSuffix ? ' nap' : ' napja');\n            case 'M':\n                return 'egy' + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');\n            case 'MM':\n                return num + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');\n            case 'y':\n                return 'egy' + (isFuture || withoutSuffix ? ' év' : ' éve');\n            case 'yy':\n                return num + (isFuture || withoutSuffix ? ' év' : ' éve');\n        }\n        return '';\n    }\n    function week(isFuture) {\n        return (isFuture ? '' : '[múlt] ') + '[' + weekEndings[this.day()] + '] LT[-kor]';\n    }\n\n    var hu = moment.defineLocale('hu', {\n        months : 'január_február_március_április_május_június_július_augusztus_szeptember_október_november_december'.split('_'),\n        monthsShort : 'jan_feb_márc_ápr_máj_jún_júl_aug_szept_okt_nov_dec'.split('_'),\n        weekdays : 'vasárnap_hétfő_kedd_szerda_csütörtök_péntek_szombat'.split('_'),\n        weekdaysShort : 'vas_hét_kedd_sze_csüt_pén_szo'.split('_'),\n        weekdaysMin : 'v_h_k_sze_cs_p_szo'.split('_'),\n        longDateFormat : {\n            LT : 'H:mm',\n            LTS : 'H:mm:ss',\n            L : 'YYYY.MM.DD.',\n            LL : 'YYYY. MMMM D.',\n            LLL : 'YYYY. MMMM D. H:mm',\n            LLLL : 'YYYY. MMMM D., dddd H:mm'\n        },\n        meridiemParse: /de|du/i,\n        isPM: function (input) {\n            return input.charAt(1).toLowerCase() === 'u';\n        },\n        meridiem : function (hours, minutes, isLower) {\n            if (hours < 12) {\n                return isLower === true ? 'de' : 'DE';\n            } else {\n                return isLower === true ? 'du' : 'DU';\n            }\n        },\n        calendar : {\n            sameDay : '[ma] LT[-kor]',\n            nextDay : '[holnap] LT[-kor]',\n            nextWeek : function () {\n                return week.call(this, true);\n            },\n            lastDay : '[tegnap] LT[-kor]',\n            lastWeek : function () {\n                return week.call(this, false);\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s múlva',\n            past : '%s',\n            s : translate,\n            ss : translate,\n            m : translate,\n            mm : translate,\n            h : translate,\n            hh : translate,\n            d : translate,\n            dd : translate,\n            M : translate,\n            MM : translate,\n            y : translate,\n            yy : translate\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return hu;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var hyAm = moment.defineLocale('hy-am', {\n        months : {\n            format: 'հունվարի_փետրվարի_մարտի_ապրիլի_մայիսի_հունիսի_հուլիսի_օգոստոսի_սեպտեմբերի_հոկտեմբերի_նոյեմբերի_դեկտեմբերի'.split('_'),\n            standalone: 'հունվար_փետրվար_մարտ_ապրիլ_մայիս_հունիս_հուլիս_օգոստոս_սեպտեմբեր_հոկտեմբեր_նոյեմբեր_դեկտեմբեր'.split('_')\n        },\n        monthsShort : 'հնվ_փտր_մրտ_ապր_մյս_հնս_հլս_օգս_սպտ_հկտ_նմբ_դկտ'.split('_'),\n        weekdays : 'կիրակի_երկուշաբթի_երեքշաբթի_չորեքշաբթի_հինգշաբթի_ուրբաթ_շաբաթ'.split('_'),\n        weekdaysShort : 'կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ'.split('_'),\n        weekdaysMin : 'կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D MMMM YYYY թ.',\n            LLL : 'D MMMM YYYY թ., HH:mm',\n            LLLL : 'dddd, D MMMM YYYY թ., HH:mm'\n        },\n        calendar : {\n            sameDay: '[այսօր] LT',\n            nextDay: '[վաղը] LT',\n            lastDay: '[երեկ] LT',\n            nextWeek: function () {\n                return 'dddd [օրը ժամը] LT';\n            },\n            lastWeek: function () {\n                return '[անցած] dddd [օրը ժամը] LT';\n            },\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : '%s հետո',\n            past : '%s առաջ',\n            s : 'մի քանի վայրկյան',\n            ss : '%d վայրկյան',\n            m : 'րոպե',\n            mm : '%d րոպե',\n            h : 'ժամ',\n            hh : '%d ժամ',\n            d : 'օր',\n            dd : '%d օր',\n            M : 'ամիս',\n            MM : '%d ամիս',\n            y : 'տարի',\n            yy : '%d տարի'\n        },\n        meridiemParse: /գիշերվա|առավոտվա|ցերեկվա|երեկոյան/,\n        isPM: function (input) {\n            return /^(ցերեկվա|երեկոյան)$/.test(input);\n        },\n        meridiem : function (hour) {\n            if (hour < 4) {\n                return 'գիշերվա';\n            } else if (hour < 12) {\n                return 'առավոտվա';\n            } else if (hour < 17) {\n                return 'ցերեկվա';\n            } else {\n                return 'երեկոյան';\n            }\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}|\\d{1,2}-(ին|րդ)/,\n        ordinal: function (number, period) {\n            switch (period) {\n                case 'DDD':\n                case 'w':\n                case 'W':\n                case 'DDDo':\n                    if (number === 1) {\n                        return number + '-ին';\n                    }\n                    return number + '-րդ';\n                default:\n                    return number;\n            }\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n\n    return hyAm;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var id = moment.defineLocale('id', {\n        months : 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_November_Desember'.split('_'),\n        monthsShort : 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Agt_Sep_Okt_Nov_Des'.split('_'),\n        weekdays : 'Minggu_Senin_Selasa_Rabu_Kamis_Jumat_Sabtu'.split('_'),\n        weekdaysShort : 'Min_Sen_Sel_Rab_Kam_Jum_Sab'.split('_'),\n        weekdaysMin : 'Mg_Sn_Sl_Rb_Km_Jm_Sb'.split('_'),\n        longDateFormat : {\n            LT : 'HH.mm',\n            LTS : 'HH.mm.ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY [pukul] HH.mm',\n            LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'\n        },\n        meridiemParse: /pagi|siang|sore|malam/,\n        meridiemHour : function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'pagi') {\n                return hour;\n            } else if (meridiem === 'siang') {\n                return hour >= 11 ? hour : hour + 12;\n            } else if (meridiem === 'sore' || meridiem === 'malam') {\n                return hour + 12;\n            }\n        },\n        meridiem : function (hours, minutes, isLower) {\n            if (hours < 11) {\n                return 'pagi';\n            } else if (hours < 15) {\n                return 'siang';\n            } else if (hours < 19) {\n                return 'sore';\n            } else {\n                return 'malam';\n            }\n        },\n        calendar : {\n            sameDay : '[Hari ini pukul] LT',\n            nextDay : '[Besok pukul] LT',\n            nextWeek : 'dddd [pukul] LT',\n            lastDay : '[Kemarin pukul] LT',\n            lastWeek : 'dddd [lalu pukul] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'dalam %s',\n            past : '%s yang lalu',\n            s : 'beberapa detik',\n            ss : '%d detik',\n            m : 'semenit',\n            mm : '%d menit',\n            h : 'sejam',\n            hh : '%d jam',\n            d : 'sehari',\n            dd : '%d hari',\n            M : 'sebulan',\n            MM : '%d bulan',\n            y : 'setahun',\n            yy : '%d tahun'\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n\n    return id;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    function plural(n) {\n        if (n % 100 === 11) {\n            return true;\n        } else if (n % 10 === 1) {\n            return false;\n        }\n        return true;\n    }\n    function translate(number, withoutSuffix, key, isFuture) {\n        var result = number + ' ';\n        switch (key) {\n            case 's':\n                return withoutSuffix || isFuture ? 'nokkrar sekúndur' : 'nokkrum sekúndum';\n            case 'ss':\n                if (plural(number)) {\n                    return result + (withoutSuffix || isFuture ? 'sekúndur' : 'sekúndum');\n                }\n                return result + 'sekúnda';\n            case 'm':\n                return withoutSuffix ? 'mínúta' : 'mínútu';\n            case 'mm':\n                if (plural(number)) {\n                    return result + (withoutSuffix || isFuture ? 'mínútur' : 'mínútum');\n                } else if (withoutSuffix) {\n                    return result + 'mínúta';\n                }\n                return result + 'mínútu';\n            case 'hh':\n                if (plural(number)) {\n                    return result + (withoutSuffix || isFuture ? 'klukkustundir' : 'klukkustundum');\n                }\n                return result + 'klukkustund';\n            case 'd':\n                if (withoutSuffix) {\n                    return 'dagur';\n                }\n                return isFuture ? 'dag' : 'degi';\n            case 'dd':\n                if (plural(number)) {\n                    if (withoutSuffix) {\n                        return result + 'dagar';\n                    }\n                    return result + (isFuture ? 'daga' : 'dögum');\n                } else if (withoutSuffix) {\n                    return result + 'dagur';\n                }\n                return result + (isFuture ? 'dag' : 'degi');\n            case 'M':\n                if (withoutSuffix) {\n                    return 'mánuður';\n                }\n                return isFuture ? 'mánuð' : 'mánuði';\n            case 'MM':\n                if (plural(number)) {\n                    if (withoutSuffix) {\n                        return result + 'mánuðir';\n                    }\n                    return result + (isFuture ? 'mánuði' : 'mánuðum');\n                } else if (withoutSuffix) {\n                    return result + 'mánuður';\n                }\n                return result + (isFuture ? 'mánuð' : 'mánuði');\n            case 'y':\n                return withoutSuffix || isFuture ? 'ár' : 'ári';\n            case 'yy':\n                if (plural(number)) {\n                    return result + (withoutSuffix || isFuture ? 'ár' : 'árum');\n                }\n                return result + (withoutSuffix || isFuture ? 'ár' : 'ári');\n        }\n    }\n\n    var is = moment.defineLocale('is', {\n        months : 'janúar_febrúar_mars_apríl_maí_júní_júlí_ágúst_september_október_nóvember_desember'.split('_'),\n        monthsShort : 'jan_feb_mar_apr_maí_jún_júl_ágú_sep_okt_nóv_des'.split('_'),\n        weekdays : 'sunnudagur_mánudagur_þriðjudagur_miðvikudagur_fimmtudagur_föstudagur_laugardagur'.split('_'),\n        weekdaysShort : 'sun_mán_þri_mið_fim_fös_lau'.split('_'),\n        weekdaysMin : 'Su_Má_Þr_Mi_Fi_Fö_La'.split('_'),\n        longDateFormat : {\n            LT : 'H:mm',\n            LTS : 'H:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D. MMMM YYYY',\n            LLL : 'D. MMMM YYYY [kl.] H:mm',\n            LLLL : 'dddd, D. MMMM YYYY [kl.] H:mm'\n        },\n        calendar : {\n            sameDay : '[í dag kl.] LT',\n            nextDay : '[á morgun kl.] LT',\n            nextWeek : 'dddd [kl.] LT',\n            lastDay : '[í gær kl.] LT',\n            lastWeek : '[síðasta] dddd [kl.] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'eftir %s',\n            past : 'fyrir %s síðan',\n            s : translate,\n            ss : translate,\n            m : translate,\n            mm : translate,\n            h : 'klukkustund',\n            hh : translate,\n            d : translate,\n            dd : translate,\n            M : translate,\n            MM : translate,\n            y : translate,\n            yy : translate\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return is;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var it = moment.defineLocale('it', {\n        months : 'gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre'.split('_'),\n        monthsShort : 'gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic'.split('_'),\n        weekdays : 'domenica_lunedì_martedì_mercoledì_giovedì_venerdì_sabato'.split('_'),\n        weekdaysShort : 'dom_lun_mar_mer_gio_ven_sab'.split('_'),\n        weekdaysMin : 'do_lu_ma_me_gi_ve_sa'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: '[Oggi alle] LT',\n            nextDay: '[Domani alle] LT',\n            nextWeek: 'dddd [alle] LT',\n            lastDay: '[Ieri alle] LT',\n            lastWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[la scorsa] dddd [alle] LT';\n                    default:\n                        return '[lo scorso] dddd [alle] LT';\n                }\n            },\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : function (s) {\n                return ((/^[0-9].+$/).test(s) ? 'tra' : 'in') + ' ' + s;\n            },\n            past : '%s fa',\n            s : 'alcuni secondi',\n            ss : '%d secondi',\n            m : 'un minuto',\n            mm : '%d minuti',\n            h : 'un\\'ora',\n            hh : '%d ore',\n            d : 'un giorno',\n            dd : '%d giorni',\n            M : 'un mese',\n            MM : '%d mesi',\n            y : 'un anno',\n            yy : '%d anni'\n        },\n        dayOfMonthOrdinalParse : /\\d{1,2}º/,\n        ordinal: '%dº',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return it;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var ja = moment.defineLocale('ja', {\n        months : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),\n        monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),\n        weekdays : '日曜日_月曜日_火曜日_水曜日_木曜日_金曜日_土曜日'.split('_'),\n        weekdaysShort : '日_月_火_水_木_金_土'.split('_'),\n        weekdaysMin : '日_月_火_水_木_金_土'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'YYYY/MM/DD',\n            LL : 'YYYY年M月D日',\n            LLL : 'YYYY年M月D日 HH:mm',\n            LLLL : 'YYYY年M月D日 dddd HH:mm',\n            l : 'YYYY/MM/DD',\n            ll : 'YYYY年M月D日',\n            lll : 'YYYY年M月D日 HH:mm',\n            llll : 'YYYY年M月D日(ddd) HH:mm'\n        },\n        meridiemParse: /午前|午後/i,\n        isPM : function (input) {\n            return input === '午後';\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 12) {\n                return '午前';\n            } else {\n                return '午後';\n            }\n        },\n        calendar : {\n            sameDay : '[今日] LT',\n            nextDay : '[明日] LT',\n            nextWeek : function (now) {\n                if (now.week() < this.week()) {\n                    return '[来週]dddd LT';\n                } else {\n                    return 'dddd LT';\n                }\n            },\n            lastDay : '[昨日] LT',\n            lastWeek : function (now) {\n                if (this.week() < now.week()) {\n                    return '[先週]dddd LT';\n                } else {\n                    return 'dddd LT';\n                }\n            },\n            sameElse : 'L'\n        },\n        dayOfMonthOrdinalParse : /\\d{1,2}日/,\n        ordinal : function (number, period) {\n            switch (period) {\n                case 'd':\n                case 'D':\n                case 'DDD':\n                    return number + '日';\n                default:\n                    return number;\n            }\n        },\n        relativeTime : {\n            future : '%s後',\n            past : '%s前',\n            s : '数秒',\n            ss : '%d秒',\n            m : '1分',\n            mm : '%d分',\n            h : '1時間',\n            hh : '%d時間',\n            d : '1日',\n            dd : '%d日',\n            M : '1ヶ月',\n            MM : '%dヶ月',\n            y : '1年',\n            yy : '%d年'\n        }\n    });\n\n    return ja;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var jv = moment.defineLocale('jv', {\n        months : 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_Nopember_Desember'.split('_'),\n        monthsShort : 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nop_Des'.split('_'),\n        weekdays : 'Minggu_Senen_Seloso_Rebu_Kemis_Jemuwah_Septu'.split('_'),\n        weekdaysShort : 'Min_Sen_Sel_Reb_Kem_Jem_Sep'.split('_'),\n        weekdaysMin : 'Mg_Sn_Sl_Rb_Km_Jm_Sp'.split('_'),\n        longDateFormat : {\n            LT : 'HH.mm',\n            LTS : 'HH.mm.ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY [pukul] HH.mm',\n            LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'\n        },\n        meridiemParse: /enjing|siyang|sonten|ndalu/,\n        meridiemHour : function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'enjing') {\n                return hour;\n            } else if (meridiem === 'siyang') {\n                return hour >= 11 ? hour : hour + 12;\n            } else if (meridiem === 'sonten' || meridiem === 'ndalu') {\n                return hour + 12;\n            }\n        },\n        meridiem : function (hours, minutes, isLower) {\n            if (hours < 11) {\n                return 'enjing';\n            } else if (hours < 15) {\n                return 'siyang';\n            } else if (hours < 19) {\n                return 'sonten';\n            } else {\n                return 'ndalu';\n            }\n        },\n        calendar : {\n            sameDay : '[Dinten puniko pukul] LT',\n            nextDay : '[Mbenjang pukul] LT',\n            nextWeek : 'dddd [pukul] LT',\n            lastDay : '[Kala wingi pukul] LT',\n            lastWeek : 'dddd [kepengker pukul] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'wonten ing %s',\n            past : '%s ingkang kepengker',\n            s : 'sawetawis detik',\n            ss : '%d detik',\n            m : 'setunggal menit',\n            mm : '%d menit',\n            h : 'setunggal jam',\n            hh : '%d jam',\n            d : 'sedinten',\n            dd : '%d dinten',\n            M : 'sewulan',\n            MM : '%d wulan',\n            y : 'setaun',\n            yy : '%d taun'\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n\n    return jv;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var ka = moment.defineLocale('ka', {\n        months : {\n            standalone: 'იანვარი_თებერვალი_მარტი_აპრილი_მაისი_ივნისი_ივლისი_აგვისტო_სექტემბერი_ოქტომბერი_ნოემბერი_დეკემბერი'.split('_'),\n            format: 'იანვარს_თებერვალს_მარტს_აპრილის_მაისს_ივნისს_ივლისს_აგვისტს_სექტემბერს_ოქტომბერს_ნოემბერს_დეკემბერს'.split('_')\n        },\n        monthsShort : 'იან_თებ_მარ_აპრ_მაი_ივნ_ივლ_აგვ_სექ_ოქტ_ნოე_დეკ'.split('_'),\n        weekdays : {\n            standalone: 'კვირა_ორშაბათი_სამშაბათი_ოთხშაბათი_ხუთშაბათი_პარასკევი_შაბათი'.split('_'),\n            format: 'კვირას_ორშაბათს_სამშაბათს_ოთხშაბათს_ხუთშაბათს_პარასკევს_შაბათს'.split('_'),\n            isFormat: /(წინა|შემდეგ)/\n        },\n        weekdaysShort : 'კვი_ორშ_სამ_ოთხ_ხუთ_პარ_შაბ'.split('_'),\n        weekdaysMin : 'კვ_ორ_სა_ოთ_ხუ_პა_შა'.split('_'),\n        longDateFormat : {\n            LT : 'h:mm A',\n            LTS : 'h:mm:ss A',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY h:mm A',\n            LLLL : 'dddd, D MMMM YYYY h:mm A'\n        },\n        calendar : {\n            sameDay : '[დღეს] LT[-ზე]',\n            nextDay : '[ხვალ] LT[-ზე]',\n            lastDay : '[გუშინ] LT[-ზე]',\n            nextWeek : '[შემდეგ] dddd LT[-ზე]',\n            lastWeek : '[წინა] dddd LT-ზე',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : function (s) {\n                return (/(წამი|წუთი|საათი|წელი)/).test(s) ?\n                    s.replace(/ი$/, 'ში') :\n                    s + 'ში';\n            },\n            past : function (s) {\n                if ((/(წამი|წუთი|საათი|დღე|თვე)/).test(s)) {\n                    return s.replace(/(ი|ე)$/, 'ის წინ');\n                }\n                if ((/წელი/).test(s)) {\n                    return s.replace(/წელი$/, 'წლის წინ');\n                }\n            },\n            s : 'რამდენიმე წამი',\n            ss : '%d წამი',\n            m : 'წუთი',\n            mm : '%d წუთი',\n            h : 'საათი',\n            hh : '%d საათი',\n            d : 'დღე',\n            dd : '%d დღე',\n            M : 'თვე',\n            MM : '%d თვე',\n            y : 'წელი',\n            yy : '%d წელი'\n        },\n        dayOfMonthOrdinalParse: /0|1-ლი|მე-\\d{1,2}|\\d{1,2}-ე/,\n        ordinal : function (number) {\n            if (number === 0) {\n                return number;\n            }\n            if (number === 1) {\n                return number + '-ლი';\n            }\n            if ((number < 20) || (number <= 100 && (number % 20 === 0)) || (number % 100 === 0)) {\n                return 'მე-' + number;\n            }\n            return number + '-ე';\n        },\n        week : {\n            dow : 1,\n            doy : 7\n        }\n    });\n\n    return ka;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var suffixes = {\n        0: '-ші',\n        1: '-ші',\n        2: '-ші',\n        3: '-ші',\n        4: '-ші',\n        5: '-ші',\n        6: '-шы',\n        7: '-ші',\n        8: '-ші',\n        9: '-шы',\n        10: '-шы',\n        20: '-шы',\n        30: '-шы',\n        40: '-шы',\n        50: '-ші',\n        60: '-шы',\n        70: '-ші',\n        80: '-ші',\n        90: '-шы',\n        100: '-ші'\n    };\n\n    var kk = moment.defineLocale('kk', {\n        months : 'қаңтар_ақпан_наурыз_сәуір_мамыр_маусым_шілде_тамыз_қыркүйек_қазан_қараша_желтоқсан'.split('_'),\n        monthsShort : 'қаң_ақп_нау_сәу_мам_мау_шіл_там_қыр_қаз_қар_жел'.split('_'),\n        weekdays : 'жексенбі_дүйсенбі_сейсенбі_сәрсенбі_бейсенбі_жұма_сенбі'.split('_'),\n        weekdaysShort : 'жек_дүй_сей_сәр_бей_жұм_сен'.split('_'),\n        weekdaysMin : 'жк_дй_сй_ср_бй_жм_сн'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd, D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay : '[Бүгін сағат] LT',\n            nextDay : '[Ертең сағат] LT',\n            nextWeek : 'dddd [сағат] LT',\n            lastDay : '[Кеше сағат] LT',\n            lastWeek : '[Өткен аптаның] dddd [сағат] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s ішінде',\n            past : '%s бұрын',\n            s : 'бірнеше секунд',\n            ss : '%d секунд',\n            m : 'бір минут',\n            mm : '%d минут',\n            h : 'бір сағат',\n            hh : '%d сағат',\n            d : 'бір күн',\n            dd : '%d күн',\n            M : 'бір ай',\n            MM : '%d ай',\n            y : 'бір жыл',\n            yy : '%d жыл'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}-(ші|шы)/,\n        ordinal : function (number) {\n            var a = number % 10,\n                b = number >= 100 ? 100 : null;\n            return number + (suffixes[number] || suffixes[a] || suffixes[b]);\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n\n    return kk;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var symbolMap = {\n        '1': '១',\n        '2': '២',\n        '3': '៣',\n        '4': '៤',\n        '5': '៥',\n        '6': '៦',\n        '7': '៧',\n        '8': '៨',\n        '9': '៩',\n        '0': '០'\n    }, numberMap = {\n        '១': '1',\n        '២': '2',\n        '៣': '3',\n        '៤': '4',\n        '៥': '5',\n        '៦': '6',\n        '៧': '7',\n        '៨': '8',\n        '៩': '9',\n        '០': '0'\n    };\n\n    var km = moment.defineLocale('km', {\n        months: 'មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ'.split(\n            '_'\n        ),\n        monthsShort: 'មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ'.split(\n            '_'\n        ),\n        weekdays: 'អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍'.split('_'),\n        weekdaysShort: 'អា_ច_អ_ព_ព្រ_សុ_ស'.split('_'),\n        weekdaysMin: 'អា_ច_អ_ព_ព្រ_សុ_ស'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd, D MMMM YYYY HH:mm'\n        },\n        meridiemParse: /ព្រឹក|ល្ងាច/,\n        isPM: function (input) {\n            return input === 'ល្ងាច';\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'ព្រឹក';\n            } else {\n                return 'ល្ងាច';\n            }\n        },\n        calendar: {\n            sameDay: '[ថ្ងៃនេះ ម៉ោង] LT',\n            nextDay: '[ស្អែក ម៉ោង] LT',\n            nextWeek: 'dddd [ម៉ោង] LT',\n            lastDay: '[ម្សិលមិញ ម៉ោង] LT',\n            lastWeek: 'dddd [សប្តាហ៍មុន] [ម៉ោង] LT',\n            sameElse: 'L'\n        },\n        relativeTime: {\n            future: '%sទៀត',\n            past: '%sមុន',\n            s: 'ប៉ុន្មានវិនាទី',\n            ss: '%d វិនាទី',\n            m: 'មួយនាទី',\n            mm: '%d នាទី',\n            h: 'មួយម៉ោង',\n            hh: '%d ម៉ោង',\n            d: 'មួយថ្ងៃ',\n            dd: '%d ថ្ងៃ',\n            M: 'មួយខែ',\n            MM: '%d ខែ',\n            y: 'មួយឆ្នាំ',\n            yy: '%d ឆ្នាំ'\n        },\n        dayOfMonthOrdinalParse : /ទី\\d{1,2}/,\n        ordinal : 'ទី%d',\n        preparse: function (string) {\n            return string.replace(/[១២៣៤៥៦៧៨៩០]/g, function (match) {\n                return numberMap[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap[match];\n            });\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4 // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return km;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var symbolMap = {\n        '1': '೧',\n        '2': '೨',\n        '3': '೩',\n        '4': '೪',\n        '5': '೫',\n        '6': '೬',\n        '7': '೭',\n        '8': '೮',\n        '9': '೯',\n        '0': '೦'\n    },\n    numberMap = {\n        '೧': '1',\n        '೨': '2',\n        '೩': '3',\n        '೪': '4',\n        '೫': '5',\n        '೬': '6',\n        '೭': '7',\n        '೮': '8',\n        '೯': '9',\n        '೦': '0'\n    };\n\n    var kn = moment.defineLocale('kn', {\n        months : 'ಜನವರಿ_ಫೆಬ್ರವರಿ_ಮಾರ್ಚ್_ಏಪ್ರಿಲ್_ಮೇ_ಜೂನ್_ಜುಲೈ_ಆಗಸ್ಟ್_ಸೆಪ್ಟೆಂಬರ್_ಅಕ್ಟೋಬರ್_ನವೆಂಬರ್_ಡಿಸೆಂಬರ್'.split('_'),\n        monthsShort : 'ಜನ_ಫೆಬ್ರ_ಮಾರ್ಚ್_ಏಪ್ರಿಲ್_ಮೇ_ಜೂನ್_ಜುಲೈ_ಆಗಸ್ಟ್_ಸೆಪ್ಟೆಂ_ಅಕ್ಟೋ_ನವೆಂ_ಡಿಸೆಂ'.split('_'),\n        monthsParseExact: true,\n        weekdays : 'ಭಾನುವಾರ_ಸೋಮವಾರ_ಮಂಗಳವಾರ_ಬುಧವಾರ_ಗುರುವಾರ_ಶುಕ್ರವಾರ_ಶನಿವಾರ'.split('_'),\n        weekdaysShort : 'ಭಾನು_ಸೋಮ_ಮಂಗಳ_ಬುಧ_ಗುರು_ಶುಕ್ರ_ಶನಿ'.split('_'),\n        weekdaysMin : 'ಭಾ_ಸೋ_ಮಂ_ಬು_ಗು_ಶು_ಶ'.split('_'),\n        longDateFormat : {\n            LT : 'A h:mm',\n            LTS : 'A h:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY, A h:mm',\n            LLLL : 'dddd, D MMMM YYYY, A h:mm'\n        },\n        calendar : {\n            sameDay : '[ಇಂದು] LT',\n            nextDay : '[ನಾಳೆ] LT',\n            nextWeek : 'dddd, LT',\n            lastDay : '[ನಿನ್ನೆ] LT',\n            lastWeek : '[ಕೊನೆಯ] dddd, LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s ನಂತರ',\n            past : '%s ಹಿಂದೆ',\n            s : 'ಕೆಲವು ಕ್ಷಣಗಳು',\n            ss : '%d ಸೆಕೆಂಡುಗಳು',\n            m : 'ಒಂದು ನಿಮಿಷ',\n            mm : '%d ನಿಮಿಷ',\n            h : 'ಒಂದು ಗಂಟೆ',\n            hh : '%d ಗಂಟೆ',\n            d : 'ಒಂದು ದಿನ',\n            dd : '%d ದಿನ',\n            M : 'ಒಂದು ತಿಂಗಳು',\n            MM : '%d ತಿಂಗಳು',\n            y : 'ಒಂದು ವರ್ಷ',\n            yy : '%d ವರ್ಷ'\n        },\n        preparse: function (string) {\n            return string.replace(/[೧೨೩೪೫೬೭೮೯೦]/g, function (match) {\n                return numberMap[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap[match];\n            });\n        },\n        meridiemParse: /ರಾತ್ರಿ|ಬೆಳಿಗ್ಗೆ|ಮಧ್ಯಾಹ್ನ|ಸಂಜೆ/,\n        meridiemHour : function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'ರಾತ್ರಿ') {\n                return hour < 4 ? hour : hour + 12;\n            } else if (meridiem === 'ಬೆಳಿಗ್ಗೆ') {\n                return hour;\n            } else if (meridiem === 'ಮಧ್ಯಾಹ್ನ') {\n                return hour >= 10 ? hour : hour + 12;\n            } else if (meridiem === 'ಸಂಜೆ') {\n                return hour + 12;\n            }\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'ರಾತ್ರಿ';\n            } else if (hour < 10) {\n                return 'ಬೆಳಿಗ್ಗೆ';\n            } else if (hour < 17) {\n                return 'ಮಧ್ಯಾಹ್ನ';\n            } else if (hour < 20) {\n                return 'ಸಂಜೆ';\n            } else {\n                return 'ರಾತ್ರಿ';\n            }\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(ನೇ)/,\n        ordinal : function (number) {\n            return number + 'ನೇ';\n        },\n        week : {\n            dow : 0, // Sunday is the first day of the week.\n            doy : 6  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n\n    return kn;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var ko = moment.defineLocale('ko', {\n        months : '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),\n        monthsShort : '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),\n        weekdays : '일요일_월요일_화요일_수요일_목요일_금요일_토요일'.split('_'),\n        weekdaysShort : '일_월_화_수_목_금_토'.split('_'),\n        weekdaysMin : '일_월_화_수_목_금_토'.split('_'),\n        longDateFormat : {\n            LT : 'A h:mm',\n            LTS : 'A h:mm:ss',\n            L : 'YYYY.MM.DD.',\n            LL : 'YYYY년 MMMM D일',\n            LLL : 'YYYY년 MMMM D일 A h:mm',\n            LLLL : 'YYYY년 MMMM D일 dddd A h:mm',\n            l : 'YYYY.MM.DD.',\n            ll : 'YYYY년 MMMM D일',\n            lll : 'YYYY년 MMMM D일 A h:mm',\n            llll : 'YYYY년 MMMM D일 dddd A h:mm'\n        },\n        calendar : {\n            sameDay : '오늘 LT',\n            nextDay : '내일 LT',\n            nextWeek : 'dddd LT',\n            lastDay : '어제 LT',\n            lastWeek : '지난주 dddd LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s 후',\n            past : '%s 전',\n            s : '몇 초',\n            ss : '%d초',\n            m : '1분',\n            mm : '%d분',\n            h : '한 시간',\n            hh : '%d시간',\n            d : '하루',\n            dd : '%d일',\n            M : '한 달',\n            MM : '%d달',\n            y : '일 년',\n            yy : '%d년'\n        },\n        dayOfMonthOrdinalParse : /\\d{1,2}(일|월|주)/,\n        ordinal : function (number, period) {\n            switch (period) {\n                case 'd':\n                case 'D':\n                case 'DDD':\n                    return number + '일';\n                case 'M':\n                    return number + '월';\n                case 'w':\n                case 'W':\n                    return number + '주';\n                default:\n                    return number;\n            }\n        },\n        meridiemParse : /오전|오후/,\n        isPM : function (token) {\n            return token === '오후';\n        },\n        meridiem : function (hour, minute, isUpper) {\n            return hour < 12 ? '오전' : '오후';\n        }\n    });\n\n    return ko;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var suffixes = {\n        0: '-чү',\n        1: '-чи',\n        2: '-чи',\n        3: '-чү',\n        4: '-чү',\n        5: '-чи',\n        6: '-чы',\n        7: '-чи',\n        8: '-чи',\n        9: '-чу',\n        10: '-чу',\n        20: '-чы',\n        30: '-чу',\n        40: '-чы',\n        50: '-чү',\n        60: '-чы',\n        70: '-чи',\n        80: '-чи',\n        90: '-чу',\n        100: '-чү'\n    };\n\n    var ky = moment.defineLocale('ky', {\n        months : 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_'),\n        monthsShort : 'янв_фев_март_апр_май_июнь_июль_авг_сен_окт_ноя_дек'.split('_'),\n        weekdays : 'Жекшемби_Дүйшөмбү_Шейшемби_Шаршемби_Бейшемби_Жума_Ишемби'.split('_'),\n        weekdaysShort : 'Жек_Дүй_Шей_Шар_Бей_Жум_Ише'.split('_'),\n        weekdaysMin : 'Жк_Дй_Шй_Шр_Бй_Жм_Иш'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd, D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay : '[Бүгүн саат] LT',\n            nextDay : '[Эртең саат] LT',\n            nextWeek : 'dddd [саат] LT',\n            lastDay : '[Кече саат] LT',\n            lastWeek : '[Өткен аптанын] dddd [күнү] [саат] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s ичинде',\n            past : '%s мурун',\n            s : 'бирнече секунд',\n            ss : '%d секунд',\n            m : 'бир мүнөт',\n            mm : '%d мүнөт',\n            h : 'бир саат',\n            hh : '%d саат',\n            d : 'бир күн',\n            dd : '%d күн',\n            M : 'бир ай',\n            MM : '%d ай',\n            y : 'бир жыл',\n            yy : '%d жыл'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}-(чи|чы|чү|чу)/,\n        ordinal : function (number) {\n            var a = number % 10,\n                b = number >= 100 ? 100 : null;\n            return number + (suffixes[number] || suffixes[a] || suffixes[b]);\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n\n    return ky;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    function processRelativeTime(number, withoutSuffix, key, isFuture) {\n        var format = {\n            'm': ['eng Minutt', 'enger Minutt'],\n            'h': ['eng Stonn', 'enger Stonn'],\n            'd': ['een Dag', 'engem Dag'],\n            'M': ['ee Mount', 'engem Mount'],\n            'y': ['ee Joer', 'engem Joer']\n        };\n        return withoutSuffix ? format[key][0] : format[key][1];\n    }\n    function processFutureTime(string) {\n        var number = string.substr(0, string.indexOf(' '));\n        if (eifelerRegelAppliesToNumber(number)) {\n            return 'a ' + string;\n        }\n        return 'an ' + string;\n    }\n    function processPastTime(string) {\n        var number = string.substr(0, string.indexOf(' '));\n        if (eifelerRegelAppliesToNumber(number)) {\n            return 'viru ' + string;\n        }\n        return 'virun ' + string;\n    }\n    /**\n     * Returns true if the word before the given number loses the '-n' ending.\n     * e.g. 'an 10 Deeg' but 'a 5 Deeg'\n     *\n     * @param number {integer}\n     * @returns {boolean}\n     */\n    function eifelerRegelAppliesToNumber(number) {\n        number = parseInt(number, 10);\n        if (isNaN(number)) {\n            return false;\n        }\n        if (number < 0) {\n            // Negative Number --> always true\n            return true;\n        } else if (number < 10) {\n            // Only 1 digit\n            if (4 <= number && number <= 7) {\n                return true;\n            }\n            return false;\n        } else if (number < 100) {\n            // 2 digits\n            var lastDigit = number % 10, firstDigit = number / 10;\n            if (lastDigit === 0) {\n                return eifelerRegelAppliesToNumber(firstDigit);\n            }\n            return eifelerRegelAppliesToNumber(lastDigit);\n        } else if (number < 10000) {\n            // 3 or 4 digits --> recursively check first digit\n            while (number >= 10) {\n                number = number / 10;\n            }\n            return eifelerRegelAppliesToNumber(number);\n        } else {\n            // Anything larger than 4 digits: recursively check first n-3 digits\n            number = number / 1000;\n            return eifelerRegelAppliesToNumber(number);\n        }\n    }\n\n    var lb = moment.defineLocale('lb', {\n        months: 'Januar_Februar_Mäerz_Abrëll_Mee_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),\n        monthsShort: 'Jan._Febr._Mrz._Abr._Mee_Jun._Jul._Aug._Sept._Okt._Nov._Dez.'.split('_'),\n        monthsParseExact : true,\n        weekdays: 'Sonndeg_Méindeg_Dënschdeg_Mëttwoch_Donneschdeg_Freideg_Samschdeg'.split('_'),\n        weekdaysShort: 'So._Mé._Dë._Më._Do._Fr._Sa.'.split('_'),\n        weekdaysMin: 'So_Mé_Dë_Më_Do_Fr_Sa'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat: {\n            LT: 'H:mm [Auer]',\n            LTS: 'H:mm:ss [Auer]',\n            L: 'DD.MM.YYYY',\n            LL: 'D. MMMM YYYY',\n            LLL: 'D. MMMM YYYY H:mm [Auer]',\n            LLLL: 'dddd, D. MMMM YYYY H:mm [Auer]'\n        },\n        calendar: {\n            sameDay: '[Haut um] LT',\n            sameElse: 'L',\n            nextDay: '[Muer um] LT',\n            nextWeek: 'dddd [um] LT',\n            lastDay: '[Gëschter um] LT',\n            lastWeek: function () {\n                // Different date string for 'Dënschdeg' (Tuesday) and 'Donneschdeg' (Thursday) due to phonological rule\n                switch (this.day()) {\n                    case 2:\n                    case 4:\n                        return '[Leschten] dddd [um] LT';\n                    default:\n                        return '[Leschte] dddd [um] LT';\n                }\n            }\n        },\n        relativeTime : {\n            future : processFutureTime,\n            past : processPastTime,\n            s : 'e puer Sekonnen',\n            ss : '%d Sekonnen',\n            m : processRelativeTime,\n            mm : '%d Minutten',\n            h : processRelativeTime,\n            hh : '%d Stonnen',\n            d : processRelativeTime,\n            dd : '%d Deeg',\n            M : processRelativeTime,\n            MM : '%d Méint',\n            y : processRelativeTime,\n            yy : '%d Joer'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal: '%d.',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return lb;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var lo = moment.defineLocale('lo', {\n        months : 'ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ'.split('_'),\n        monthsShort : 'ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ'.split('_'),\n        weekdays : 'ອາທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ'.split('_'),\n        weekdaysShort : 'ທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ'.split('_'),\n        weekdaysMin : 'ທ_ຈ_ອຄ_ພ_ພຫ_ສກ_ສ'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'ວັນdddd D MMMM YYYY HH:mm'\n        },\n        meridiemParse: /ຕອນເຊົ້າ|ຕອນແລງ/,\n        isPM: function (input) {\n            return input === 'ຕອນແລງ';\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'ຕອນເຊົ້າ';\n            } else {\n                return 'ຕອນແລງ';\n            }\n        },\n        calendar : {\n            sameDay : '[ມື້ນີ້ເວລາ] LT',\n            nextDay : '[ມື້ອື່ນເວລາ] LT',\n            nextWeek : '[ວັນ]dddd[ໜ້າເວລາ] LT',\n            lastDay : '[ມື້ວານນີ້ເວລາ] LT',\n            lastWeek : '[ວັນ]dddd[ແລ້ວນີ້ເວລາ] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'ອີກ %s',\n            past : '%sຜ່ານມາ',\n            s : 'ບໍ່ເທົ່າໃດວິນາທີ',\n            ss : '%d ວິນາທີ' ,\n            m : '1 ນາທີ',\n            mm : '%d ນາທີ',\n            h : '1 ຊົ່ວໂມງ',\n            hh : '%d ຊົ່ວໂມງ',\n            d : '1 ມື້',\n            dd : '%d ມື້',\n            M : '1 ເດືອນ',\n            MM : '%d ເດືອນ',\n            y : '1 ປີ',\n            yy : '%d ປີ'\n        },\n        dayOfMonthOrdinalParse: /(ທີ່)\\d{1,2}/,\n        ordinal : function (number) {\n            return 'ທີ່' + number;\n        }\n    });\n\n    return lo;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var units = {\n        'ss' : 'sekundė_sekundžių_sekundes',\n        'm' : 'minutė_minutės_minutę',\n        'mm': 'minutės_minučių_minutes',\n        'h' : 'valanda_valandos_valandą',\n        'hh': 'valandos_valandų_valandas',\n        'd' : 'diena_dienos_dieną',\n        'dd': 'dienos_dienų_dienas',\n        'M' : 'mėnuo_mėnesio_mėnesį',\n        'MM': 'mėnesiai_mėnesių_mėnesius',\n        'y' : 'metai_metų_metus',\n        'yy': 'metai_metų_metus'\n    };\n    function translateSeconds(number, withoutSuffix, key, isFuture) {\n        if (withoutSuffix) {\n            return 'kelios sekundės';\n        } else {\n            return isFuture ? 'kelių sekundžių' : 'kelias sekundes';\n        }\n    }\n    function translateSingular(number, withoutSuffix, key, isFuture) {\n        return withoutSuffix ? forms(key)[0] : (isFuture ? forms(key)[1] : forms(key)[2]);\n    }\n    function special(number) {\n        return number % 10 === 0 || (number > 10 && number < 20);\n    }\n    function forms(key) {\n        return units[key].split('_');\n    }\n    function translate(number, withoutSuffix, key, isFuture) {\n        var result = number + ' ';\n        if (number === 1) {\n            return result + translateSingular(number, withoutSuffix, key[0], isFuture);\n        } else if (withoutSuffix) {\n            return result + (special(number) ? forms(key)[1] : forms(key)[0]);\n        } else {\n            if (isFuture) {\n                return result + forms(key)[1];\n            } else {\n                return result + (special(number) ? forms(key)[1] : forms(key)[2]);\n            }\n        }\n    }\n    var lt = moment.defineLocale('lt', {\n        months : {\n            format: 'sausio_vasario_kovo_balandžio_gegužės_birželio_liepos_rugpjūčio_rugsėjo_spalio_lapkričio_gruodžio'.split('_'),\n            standalone: 'sausis_vasaris_kovas_balandis_gegužė_birželis_liepa_rugpjūtis_rugsėjis_spalis_lapkritis_gruodis'.split('_'),\n            isFormat: /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?|MMMM?(\\[[^\\[\\]]*\\]|\\s)+D[oD]?/\n        },\n        monthsShort : 'sau_vas_kov_bal_geg_bir_lie_rgp_rgs_spa_lap_grd'.split('_'),\n        weekdays : {\n            format: 'sekmadienį_pirmadienį_antradienį_trečiadienį_ketvirtadienį_penktadienį_šeštadienį'.split('_'),\n            standalone: 'sekmadienis_pirmadienis_antradienis_trečiadienis_ketvirtadienis_penktadienis_šeštadienis'.split('_'),\n            isFormat: /dddd HH:mm/\n        },\n        weekdaysShort : 'Sek_Pir_Ant_Tre_Ket_Pen_Šeš'.split('_'),\n        weekdaysMin : 'S_P_A_T_K_Pn_Š'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'YYYY-MM-DD',\n            LL : 'YYYY [m.] MMMM D [d.]',\n            LLL : 'YYYY [m.] MMMM D [d.], HH:mm [val.]',\n            LLLL : 'YYYY [m.] MMMM D [d.], dddd, HH:mm [val.]',\n            l : 'YYYY-MM-DD',\n            ll : 'YYYY [m.] MMMM D [d.]',\n            lll : 'YYYY [m.] MMMM D [d.], HH:mm [val.]',\n            llll : 'YYYY [m.] MMMM D [d.], ddd, HH:mm [val.]'\n        },\n        calendar : {\n            sameDay : '[Šiandien] LT',\n            nextDay : '[Rytoj] LT',\n            nextWeek : 'dddd LT',\n            lastDay : '[Vakar] LT',\n            lastWeek : '[Praėjusį] dddd LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'po %s',\n            past : 'prieš %s',\n            s : translateSeconds,\n            ss : translate,\n            m : translateSingular,\n            mm : translate,\n            h : translateSingular,\n            hh : translate,\n            d : translateSingular,\n            dd : translate,\n            M : translateSingular,\n            MM : translate,\n            y : translateSingular,\n            yy : translate\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}-oji/,\n        ordinal : function (number) {\n            return number + '-oji';\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return lt;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var units = {\n        'ss': 'sekundes_sekundēm_sekunde_sekundes'.split('_'),\n        'm': 'minūtes_minūtēm_minūte_minūtes'.split('_'),\n        'mm': 'minūtes_minūtēm_minūte_minūtes'.split('_'),\n        'h': 'stundas_stundām_stunda_stundas'.split('_'),\n        'hh': 'stundas_stundām_stunda_stundas'.split('_'),\n        'd': 'dienas_dienām_diena_dienas'.split('_'),\n        'dd': 'dienas_dienām_diena_dienas'.split('_'),\n        'M': 'mēneša_mēnešiem_mēnesis_mēneši'.split('_'),\n        'MM': 'mēneša_mēnešiem_mēnesis_mēneši'.split('_'),\n        'y': 'gada_gadiem_gads_gadi'.split('_'),\n        'yy': 'gada_gadiem_gads_gadi'.split('_')\n    };\n    /**\n     * @param withoutSuffix boolean true = a length of time; false = before/after a period of time.\n     */\n    function format(forms, number, withoutSuffix) {\n        if (withoutSuffix) {\n            // E.g. \"21 minūte\", \"3 minūtes\".\n            return number % 10 === 1 && number % 100 !== 11 ? forms[2] : forms[3];\n        } else {\n            // E.g. \"21 minūtes\" as in \"pēc 21 minūtes\".\n            // E.g. \"3 minūtēm\" as in \"pēc 3 minūtēm\".\n            return number % 10 === 1 && number % 100 !== 11 ? forms[0] : forms[1];\n        }\n    }\n    function relativeTimeWithPlural(number, withoutSuffix, key) {\n        return number + ' ' + format(units[key], number, withoutSuffix);\n    }\n    function relativeTimeWithSingular(number, withoutSuffix, key) {\n        return format(units[key], number, withoutSuffix);\n    }\n    function relativeSeconds(number, withoutSuffix) {\n        return withoutSuffix ? 'dažas sekundes' : 'dažām sekundēm';\n    }\n\n    var lv = moment.defineLocale('lv', {\n        months : 'janvāris_februāris_marts_aprīlis_maijs_jūnijs_jūlijs_augusts_septembris_oktobris_novembris_decembris'.split('_'),\n        monthsShort : 'jan_feb_mar_apr_mai_jūn_jūl_aug_sep_okt_nov_dec'.split('_'),\n        weekdays : 'svētdiena_pirmdiena_otrdiena_trešdiena_ceturtdiena_piektdiena_sestdiena'.split('_'),\n        weekdaysShort : 'Sv_P_O_T_C_Pk_S'.split('_'),\n        weekdaysMin : 'Sv_P_O_T_C_Pk_S'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD.MM.YYYY.',\n            LL : 'YYYY. [gada] D. MMMM',\n            LLL : 'YYYY. [gada] D. MMMM, HH:mm',\n            LLLL : 'YYYY. [gada] D. MMMM, dddd, HH:mm'\n        },\n        calendar : {\n            sameDay : '[Šodien pulksten] LT',\n            nextDay : '[Rīt pulksten] LT',\n            nextWeek : 'dddd [pulksten] LT',\n            lastDay : '[Vakar pulksten] LT',\n            lastWeek : '[Pagājušā] dddd [pulksten] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'pēc %s',\n            past : 'pirms %s',\n            s : relativeSeconds,\n            ss : relativeTimeWithPlural,\n            m : relativeTimeWithSingular,\n            mm : relativeTimeWithPlural,\n            h : relativeTimeWithSingular,\n            hh : relativeTimeWithPlural,\n            d : relativeTimeWithSingular,\n            dd : relativeTimeWithPlural,\n            M : relativeTimeWithSingular,\n            MM : relativeTimeWithPlural,\n            y : relativeTimeWithSingular,\n            yy : relativeTimeWithPlural\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return lv;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var translator = {\n        words: { //Different grammatical cases\n            ss: ['sekund', 'sekunda', 'sekundi'],\n            m: ['jedan minut', 'jednog minuta'],\n            mm: ['minut', 'minuta', 'minuta'],\n            h: ['jedan sat', 'jednog sata'],\n            hh: ['sat', 'sata', 'sati'],\n            dd: ['dan', 'dana', 'dana'],\n            MM: ['mjesec', 'mjeseca', 'mjeseci'],\n            yy: ['godina', 'godine', 'godina']\n        },\n        correctGrammaticalCase: function (number, wordKey) {\n            return number === 1 ? wordKey[0] : (number >= 2 && number <= 4 ? wordKey[1] : wordKey[2]);\n        },\n        translate: function (number, withoutSuffix, key) {\n            var wordKey = translator.words[key];\n            if (key.length === 1) {\n                return withoutSuffix ? wordKey[0] : wordKey[1];\n            } else {\n                return number + ' ' + translator.correctGrammaticalCase(number, wordKey);\n            }\n        }\n    };\n\n    var me = moment.defineLocale('me', {\n        months: 'januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar'.split('_'),\n        monthsShort: 'jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.'.split('_'),\n        monthsParseExact : true,\n        weekdays: 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),\n        weekdaysShort: 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),\n        weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat: {\n            LT: 'H:mm',\n            LTS : 'H:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D. MMMM YYYY',\n            LLL: 'D. MMMM YYYY H:mm',\n            LLLL: 'dddd, D. MMMM YYYY H:mm'\n        },\n        calendar: {\n            sameDay: '[danas u] LT',\n            nextDay: '[sjutra u] LT',\n\n            nextWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[u] [nedjelju] [u] LT';\n                    case 3:\n                        return '[u] [srijedu] [u] LT';\n                    case 6:\n                        return '[u] [subotu] [u] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 5:\n                        return '[u] dddd [u] LT';\n                }\n            },\n            lastDay  : '[juče u] LT',\n            lastWeek : function () {\n                var lastWeekDays = [\n                    '[prošle] [nedjelje] [u] LT',\n                    '[prošlog] [ponedjeljka] [u] LT',\n                    '[prošlog] [utorka] [u] LT',\n                    '[prošle] [srijede] [u] LT',\n                    '[prošlog] [četvrtka] [u] LT',\n                    '[prošlog] [petka] [u] LT',\n                    '[prošle] [subote] [u] LT'\n                ];\n                return lastWeekDays[this.day()];\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'za %s',\n            past   : 'prije %s',\n            s      : 'nekoliko sekundi',\n            ss     : translator.translate,\n            m      : translator.translate,\n            mm     : translator.translate,\n            h      : translator.translate,\n            hh     : translator.translate,\n            d      : 'dan',\n            dd     : translator.translate,\n            M      : 'mjesec',\n            MM     : translator.translate,\n            y      : 'godinu',\n            yy     : translator.translate\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n\n    return me;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var mi = moment.defineLocale('mi', {\n        months: 'Kohi-tāte_Hui-tanguru_Poutū-te-rangi_Paenga-whāwhā_Haratua_Pipiri_Hōngoingoi_Here-turi-kōkā_Mahuru_Whiringa-ā-nuku_Whiringa-ā-rangi_Hakihea'.split('_'),\n        monthsShort: 'Kohi_Hui_Pou_Pae_Hara_Pipi_Hōngoi_Here_Mahu_Whi-nu_Whi-ra_Haki'.split('_'),\n        monthsRegex: /(?:['a-z\\u0101\\u014D\\u016B]+\\-?){1,3}/i,\n        monthsStrictRegex: /(?:['a-z\\u0101\\u014D\\u016B]+\\-?){1,3}/i,\n        monthsShortRegex: /(?:['a-z\\u0101\\u014D\\u016B]+\\-?){1,3}/i,\n        monthsShortStrictRegex: /(?:['a-z\\u0101\\u014D\\u016B]+\\-?){1,2}/i,\n        weekdays: 'Rātapu_Mane_Tūrei_Wenerei_Tāite_Paraire_Hātarei'.split('_'),\n        weekdaysShort: 'Ta_Ma_Tū_We_Tāi_Pa_Hā'.split('_'),\n        weekdaysMin: 'Ta_Ma_Tū_We_Tāi_Pa_Hā'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY [i] HH:mm',\n            LLLL: 'dddd, D MMMM YYYY [i] HH:mm'\n        },\n        calendar: {\n            sameDay: '[i teie mahana, i] LT',\n            nextDay: '[apopo i] LT',\n            nextWeek: 'dddd [i] LT',\n            lastDay: '[inanahi i] LT',\n            lastWeek: 'dddd [whakamutunga i] LT',\n            sameElse: 'L'\n        },\n        relativeTime: {\n            future: 'i roto i %s',\n            past: '%s i mua',\n            s: 'te hēkona ruarua',\n            ss: '%d hēkona',\n            m: 'he meneti',\n            mm: '%d meneti',\n            h: 'te haora',\n            hh: '%d haora',\n            d: 'he ra',\n            dd: '%d ra',\n            M: 'he marama',\n            MM: '%d marama',\n            y: 'he tau',\n            yy: '%d tau'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}º/,\n        ordinal: '%dº',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return mi;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var mk = moment.defineLocale('mk', {\n        months : 'јануари_февруари_март_април_мај_јуни_јули_август_септември_октомври_ноември_декември'.split('_'),\n        monthsShort : 'јан_фев_мар_апр_мај_јун_јул_авг_сеп_окт_ное_дек'.split('_'),\n        weekdays : 'недела_понеделник_вторник_среда_четврток_петок_сабота'.split('_'),\n        weekdaysShort : 'нед_пон_вто_сре_чет_пет_саб'.split('_'),\n        weekdaysMin : 'нe_пo_вт_ср_че_пе_сa'.split('_'),\n        longDateFormat : {\n            LT : 'H:mm',\n            LTS : 'H:mm:ss',\n            L : 'D.MM.YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY H:mm',\n            LLLL : 'dddd, D MMMM YYYY H:mm'\n        },\n        calendar : {\n            sameDay : '[Денес во] LT',\n            nextDay : '[Утре во] LT',\n            nextWeek : '[Во] dddd [во] LT',\n            lastDay : '[Вчера во] LT',\n            lastWeek : function () {\n                switch (this.day()) {\n                    case 0:\n                    case 3:\n                    case 6:\n                        return '[Изминатата] dddd [во] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 5:\n                        return '[Изминатиот] dddd [во] LT';\n                }\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'после %s',\n            past : 'пред %s',\n            s : 'неколку секунди',\n            ss : '%d секунди',\n            m : 'минута',\n            mm : '%d минути',\n            h : 'час',\n            hh : '%d часа',\n            d : 'ден',\n            dd : '%d дена',\n            M : 'месец',\n            MM : '%d месеци',\n            y : 'година',\n            yy : '%d години'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}-(ев|ен|ти|ви|ри|ми)/,\n        ordinal : function (number) {\n            var lastDigit = number % 10,\n                last2Digits = number % 100;\n            if (number === 0) {\n                return number + '-ев';\n            } else if (last2Digits === 0) {\n                return number + '-ен';\n            } else if (last2Digits > 10 && last2Digits < 20) {\n                return number + '-ти';\n            } else if (lastDigit === 1) {\n                return number + '-ви';\n            } else if (lastDigit === 2) {\n                return number + '-ри';\n            } else if (lastDigit === 7 || lastDigit === 8) {\n                return number + '-ми';\n            } else {\n                return number + '-ти';\n            }\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n\n    return mk;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var ml = moment.defineLocale('ml', {\n        months : 'ജനുവരി_ഫെബ്രുവരി_മാർച്ച്_ഏപ്രിൽ_മേയ്_ജൂൺ_ജൂലൈ_ഓഗസ്റ്റ്_സെപ്റ്റംബർ_ഒക്ടോബർ_നവംബർ_ഡിസംബർ'.split('_'),\n        monthsShort : 'ജനു._ഫെബ്രു._മാർ._ഏപ്രി._മേയ്_ജൂൺ_ജൂലൈ._ഓഗ._സെപ്റ്റ._ഒക്ടോ._നവം._ഡിസം.'.split('_'),\n        monthsParseExact : true,\n        weekdays : 'ഞായറാഴ്ച_തിങ്കളാഴ്ച_ചൊവ്വാഴ്ച_ബുധനാഴ്ച_വ്യാഴാഴ്ച_വെള്ളിയാഴ്ച_ശനിയാഴ്ച'.split('_'),\n        weekdaysShort : 'ഞായർ_തിങ്കൾ_ചൊവ്വ_ബുധൻ_വ്യാഴം_വെള്ളി_ശനി'.split('_'),\n        weekdaysMin : 'ഞാ_തി_ചൊ_ബു_വ്യാ_വെ_ശ'.split('_'),\n        longDateFormat : {\n            LT : 'A h:mm -നു',\n            LTS : 'A h:mm:ss -നു',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY, A h:mm -നു',\n            LLLL : 'dddd, D MMMM YYYY, A h:mm -നു'\n        },\n        calendar : {\n            sameDay : '[ഇന്ന്] LT',\n            nextDay : '[നാളെ] LT',\n            nextWeek : 'dddd, LT',\n            lastDay : '[ഇന്നലെ] LT',\n            lastWeek : '[കഴിഞ്ഞ] dddd, LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s കഴിഞ്ഞ്',\n            past : '%s മുൻപ്',\n            s : 'അൽപ നിമിഷങ്ങൾ',\n            ss : '%d സെക്കൻഡ്',\n            m : 'ഒരു മിനിറ്റ്',\n            mm : '%d മിനിറ്റ്',\n            h : 'ഒരു മണിക്കൂർ',\n            hh : '%d മണിക്കൂർ',\n            d : 'ഒരു ദിവസം',\n            dd : '%d ദിവസം',\n            M : 'ഒരു മാസം',\n            MM : '%d മാസം',\n            y : 'ഒരു വർഷം',\n            yy : '%d വർഷം'\n        },\n        meridiemParse: /രാത്രി|രാവിലെ|ഉച്ച കഴിഞ്ഞ്|വൈകുന്നേരം|രാത്രി/i,\n        meridiemHour : function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if ((meridiem === 'രാത്രി' && hour >= 4) ||\n                    meridiem === 'ഉച്ച കഴിഞ്ഞ്' ||\n                    meridiem === 'വൈകുന്നേരം') {\n                return hour + 12;\n            } else {\n                return hour;\n            }\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'രാത്രി';\n            } else if (hour < 12) {\n                return 'രാവിലെ';\n            } else if (hour < 17) {\n                return 'ഉച്ച കഴിഞ്ഞ്';\n            } else if (hour < 20) {\n                return 'വൈകുന്നേരം';\n            } else {\n                return 'രാത്രി';\n            }\n        }\n    });\n\n    return ml;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    function translate(number, withoutSuffix, key, isFuture) {\n        switch (key) {\n            case 's':\n                return withoutSuffix ? 'хэдхэн секунд' : 'хэдхэн секундын';\n            case 'ss':\n                return number + (withoutSuffix ? ' секунд' : ' секундын');\n            case 'm':\n            case 'mm':\n                return number + (withoutSuffix ? ' минут' : ' минутын');\n            case 'h':\n            case 'hh':\n                return number + (withoutSuffix ? ' цаг' : ' цагийн');\n            case 'd':\n            case 'dd':\n                return number + (withoutSuffix ? ' өдөр' : ' өдрийн');\n            case 'M':\n            case 'MM':\n                return number + (withoutSuffix ? ' сар' : ' сарын');\n            case 'y':\n            case 'yy':\n                return number + (withoutSuffix ? ' жил' : ' жилийн');\n            default:\n                return number;\n        }\n    }\n\n    var mn = moment.defineLocale('mn', {\n        months : 'Нэгдүгээр сар_Хоёрдугаар сар_Гуравдугаар сар_Дөрөвдүгээр сар_Тавдугаар сар_Зургадугаар сар_Долдугаар сар_Наймдугаар сар_Есдүгээр сар_Аравдугаар сар_Арван нэгдүгээр сар_Арван хоёрдугаар сар'.split('_'),\n        monthsShort : '1 сар_2 сар_3 сар_4 сар_5 сар_6 сар_7 сар_8 сар_9 сар_10 сар_11 сар_12 сар'.split('_'),\n        monthsParseExact : true,\n        weekdays : 'Ням_Даваа_Мягмар_Лхагва_Пүрэв_Баасан_Бямба'.split('_'),\n        weekdaysShort : 'Ням_Дав_Мяг_Лха_Пүр_Баа_Бям'.split('_'),\n        weekdaysMin : 'Ня_Да_Мя_Лх_Пү_Ба_Бя'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'YYYY-MM-DD',\n            LL : 'YYYY оны MMMMын D',\n            LLL : 'YYYY оны MMMMын D HH:mm',\n            LLLL : 'dddd, YYYY оны MMMMын D HH:mm'\n        },\n        meridiemParse: /ҮӨ|ҮХ/i,\n        isPM : function (input) {\n            return input === 'ҮХ';\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'ҮӨ';\n            } else {\n                return 'ҮХ';\n            }\n        },\n        calendar : {\n            sameDay : '[Өнөөдөр] LT',\n            nextDay : '[Маргааш] LT',\n            nextWeek : '[Ирэх] dddd LT',\n            lastDay : '[Өчигдөр] LT',\n            lastWeek : '[Өнгөрсөн] dddd LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s дараа',\n            past : '%s өмнө',\n            s : translate,\n            ss : translate,\n            m : translate,\n            mm : translate,\n            h : translate,\n            hh : translate,\n            d : translate,\n            dd : translate,\n            M : translate,\n            MM : translate,\n            y : translate,\n            yy : translate\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2} өдөр/,\n        ordinal : function (number, period) {\n            switch (period) {\n                case 'd':\n                case 'D':\n                case 'DDD':\n                    return number + ' өдөр';\n                default:\n                    return number;\n            }\n        }\n    });\n\n    return mn;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var symbolMap = {\n        '1': '१',\n        '2': '२',\n        '3': '३',\n        '4': '४',\n        '5': '५',\n        '6': '६',\n        '7': '७',\n        '8': '८',\n        '9': '९',\n        '0': '०'\n    },\n    numberMap = {\n        '१': '1',\n        '२': '2',\n        '३': '3',\n        '४': '4',\n        '५': '5',\n        '६': '6',\n        '७': '7',\n        '८': '8',\n        '९': '9',\n        '०': '0'\n    };\n\n    function relativeTimeMr(number, withoutSuffix, string, isFuture)\n    {\n        var output = '';\n        if (withoutSuffix) {\n            switch (string) {\n                case 's': output = 'काही सेकंद'; break;\n                case 'ss': output = '%d सेकंद'; break;\n                case 'm': output = 'एक मिनिट'; break;\n                case 'mm': output = '%d मिनिटे'; break;\n                case 'h': output = 'एक तास'; break;\n                case 'hh': output = '%d तास'; break;\n                case 'd': output = 'एक दिवस'; break;\n                case 'dd': output = '%d दिवस'; break;\n                case 'M': output = 'एक महिना'; break;\n                case 'MM': output = '%d महिने'; break;\n                case 'y': output = 'एक वर्ष'; break;\n                case 'yy': output = '%d वर्षे'; break;\n            }\n        }\n        else {\n            switch (string) {\n                case 's': output = 'काही सेकंदां'; break;\n                case 'ss': output = '%d सेकंदां'; break;\n                case 'm': output = 'एका मिनिटा'; break;\n                case 'mm': output = '%d मिनिटां'; break;\n                case 'h': output = 'एका तासा'; break;\n                case 'hh': output = '%d तासां'; break;\n                case 'd': output = 'एका दिवसा'; break;\n                case 'dd': output = '%d दिवसां'; break;\n                case 'M': output = 'एका महिन्या'; break;\n                case 'MM': output = '%d महिन्यां'; break;\n                case 'y': output = 'एका वर्षा'; break;\n                case 'yy': output = '%d वर्षां'; break;\n            }\n        }\n        return output.replace(/%d/i, number);\n    }\n\n    var mr = moment.defineLocale('mr', {\n        months : 'जानेवारी_फेब्रुवारी_मार्च_एप्रिल_मे_जून_जुलै_ऑगस्ट_सप्टेंबर_ऑक्टोबर_नोव्हेंबर_डिसेंबर'.split('_'),\n        monthsShort: 'जाने._फेब्रु._मार्च._एप्रि._मे._जून._जुलै._ऑग._सप्टें._ऑक्टो._नोव्हें._डिसें.'.split('_'),\n        monthsParseExact : true,\n        weekdays : 'रविवार_सोमवार_मंगळवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),\n        weekdaysShort : 'रवि_सोम_मंगळ_बुध_गुरू_शुक्र_शनि'.split('_'),\n        weekdaysMin : 'र_सो_मं_बु_गु_शु_श'.split('_'),\n        longDateFormat : {\n            LT : 'A h:mm वाजता',\n            LTS : 'A h:mm:ss वाजता',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY, A h:mm वाजता',\n            LLLL : 'dddd, D MMMM YYYY, A h:mm वाजता'\n        },\n        calendar : {\n            sameDay : '[आज] LT',\n            nextDay : '[उद्या] LT',\n            nextWeek : 'dddd, LT',\n            lastDay : '[काल] LT',\n            lastWeek: '[मागील] dddd, LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future: '%sमध्ये',\n            past: '%sपूर्वी',\n            s: relativeTimeMr,\n            ss: relativeTimeMr,\n            m: relativeTimeMr,\n            mm: relativeTimeMr,\n            h: relativeTimeMr,\n            hh: relativeTimeMr,\n            d: relativeTimeMr,\n            dd: relativeTimeMr,\n            M: relativeTimeMr,\n            MM: relativeTimeMr,\n            y: relativeTimeMr,\n            yy: relativeTimeMr\n        },\n        preparse: function (string) {\n            return string.replace(/[१२३४५६७८९०]/g, function (match) {\n                return numberMap[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap[match];\n            });\n        },\n        meridiemParse: /रात्री|सकाळी|दुपारी|सायंकाळी/,\n        meridiemHour : function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'रात्री') {\n                return hour < 4 ? hour : hour + 12;\n            } else if (meridiem === 'सकाळी') {\n                return hour;\n            } else if (meridiem === 'दुपारी') {\n                return hour >= 10 ? hour : hour + 12;\n            } else if (meridiem === 'सायंकाळी') {\n                return hour + 12;\n            }\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'रात्री';\n            } else if (hour < 10) {\n                return 'सकाळी';\n            } else if (hour < 17) {\n                return 'दुपारी';\n            } else if (hour < 20) {\n                return 'सायंकाळी';\n            } else {\n                return 'रात्री';\n            }\n        },\n        week : {\n            dow : 0, // Sunday is the first day of the week.\n            doy : 6  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n\n    return mr;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var ms = moment.defineLocale('ms', {\n        months : 'Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember'.split('_'),\n        monthsShort : 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis'.split('_'),\n        weekdays : 'Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu'.split('_'),\n        weekdaysShort : 'Ahd_Isn_Sel_Rab_Kha_Jum_Sab'.split('_'),\n        weekdaysMin : 'Ah_Is_Sl_Rb_Km_Jm_Sb'.split('_'),\n        longDateFormat : {\n            LT : 'HH.mm',\n            LTS : 'HH.mm.ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY [pukul] HH.mm',\n            LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'\n        },\n        meridiemParse: /pagi|tengahari|petang|malam/,\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'pagi') {\n                return hour;\n            } else if (meridiem === 'tengahari') {\n                return hour >= 11 ? hour : hour + 12;\n            } else if (meridiem === 'petang' || meridiem === 'malam') {\n                return hour + 12;\n            }\n        },\n        meridiem : function (hours, minutes, isLower) {\n            if (hours < 11) {\n                return 'pagi';\n            } else if (hours < 15) {\n                return 'tengahari';\n            } else if (hours < 19) {\n                return 'petang';\n            } else {\n                return 'malam';\n            }\n        },\n        calendar : {\n            sameDay : '[Hari ini pukul] LT',\n            nextDay : '[Esok pukul] LT',\n            nextWeek : 'dddd [pukul] LT',\n            lastDay : '[Kelmarin pukul] LT',\n            lastWeek : 'dddd [lepas pukul] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'dalam %s',\n            past : '%s yang lepas',\n            s : 'beberapa saat',\n            ss : '%d saat',\n            m : 'seminit',\n            mm : '%d minit',\n            h : 'sejam',\n            hh : '%d jam',\n            d : 'sehari',\n            dd : '%d hari',\n            M : 'sebulan',\n            MM : '%d bulan',\n            y : 'setahun',\n            yy : '%d tahun'\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n\n    return ms;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var msMy = moment.defineLocale('ms-my', {\n        months : 'Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember'.split('_'),\n        monthsShort : 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis'.split('_'),\n        weekdays : 'Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu'.split('_'),\n        weekdaysShort : 'Ahd_Isn_Sel_Rab_Kha_Jum_Sab'.split('_'),\n        weekdaysMin : 'Ah_Is_Sl_Rb_Km_Jm_Sb'.split('_'),\n        longDateFormat : {\n            LT : 'HH.mm',\n            LTS : 'HH.mm.ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY [pukul] HH.mm',\n            LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'\n        },\n        meridiemParse: /pagi|tengahari|petang|malam/,\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'pagi') {\n                return hour;\n            } else if (meridiem === 'tengahari') {\n                return hour >= 11 ? hour : hour + 12;\n            } else if (meridiem === 'petang' || meridiem === 'malam') {\n                return hour + 12;\n            }\n        },\n        meridiem : function (hours, minutes, isLower) {\n            if (hours < 11) {\n                return 'pagi';\n            } else if (hours < 15) {\n                return 'tengahari';\n            } else if (hours < 19) {\n                return 'petang';\n            } else {\n                return 'malam';\n            }\n        },\n        calendar : {\n            sameDay : '[Hari ini pukul] LT',\n            nextDay : '[Esok pukul] LT',\n            nextWeek : 'dddd [pukul] LT',\n            lastDay : '[Kelmarin pukul] LT',\n            lastWeek : 'dddd [lepas pukul] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'dalam %s',\n            past : '%s yang lepas',\n            s : 'beberapa saat',\n            ss : '%d saat',\n            m : 'seminit',\n            mm : '%d minit',\n            h : 'sejam',\n            hh : '%d jam',\n            d : 'sehari',\n            dd : '%d hari',\n            M : 'sebulan',\n            MM : '%d bulan',\n            y : 'setahun',\n            yy : '%d tahun'\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n\n    return msMy;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var mt = moment.defineLocale('mt', {\n        months : 'Jannar_Frar_Marzu_April_Mejju_Ġunju_Lulju_Awwissu_Settembru_Ottubru_Novembru_Diċembru'.split('_'),\n        monthsShort : 'Jan_Fra_Mar_Apr_Mej_Ġun_Lul_Aww_Set_Ott_Nov_Diċ'.split('_'),\n        weekdays : 'Il-Ħadd_It-Tnejn_It-Tlieta_L-Erbgħa_Il-Ħamis_Il-Ġimgħa_Is-Sibt'.split('_'),\n        weekdaysShort : 'Ħad_Tne_Tli_Erb_Ħam_Ġim_Sib'.split('_'),\n        weekdaysMin : 'Ħa_Tn_Tl_Er_Ħa_Ġi_Si'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd, D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay : '[Illum fil-]LT',\n            nextDay : '[Għada fil-]LT',\n            nextWeek : 'dddd [fil-]LT',\n            lastDay : '[Il-bieraħ fil-]LT',\n            lastWeek : 'dddd [li għadda] [fil-]LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'f’ %s',\n            past : '%s ilu',\n            s : 'ftit sekondi',\n            ss : '%d sekondi',\n            m : 'minuta',\n            mm : '%d minuti',\n            h : 'siegħa',\n            hh : '%d siegħat',\n            d : 'ġurnata',\n            dd : '%d ġranet',\n            M : 'xahar',\n            MM : '%d xhur',\n            y : 'sena',\n            yy : '%d sni'\n        },\n        dayOfMonthOrdinalParse : /\\d{1,2}º/,\n        ordinal: '%dº',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return mt;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var symbolMap = {\n        '1': '၁',\n        '2': '၂',\n        '3': '၃',\n        '4': '၄',\n        '5': '၅',\n        '6': '၆',\n        '7': '၇',\n        '8': '၈',\n        '9': '၉',\n        '0': '၀'\n    }, numberMap = {\n        '၁': '1',\n        '၂': '2',\n        '၃': '3',\n        '၄': '4',\n        '၅': '5',\n        '၆': '6',\n        '၇': '7',\n        '၈': '8',\n        '၉': '9',\n        '၀': '0'\n    };\n\n    var my = moment.defineLocale('my', {\n        months: 'ဇန်နဝါရီ_ဖေဖော်ဝါရီ_မတ်_ဧပြီ_မေ_ဇွန်_ဇူလိုင်_သြဂုတ်_စက်တင်ဘာ_အောက်တိုဘာ_နိုဝင်ဘာ_ဒီဇင်ဘာ'.split('_'),\n        monthsShort: 'ဇန်_ဖေ_မတ်_ပြီ_မေ_ဇွန်_လိုင်_သြ_စက်_အောက်_နို_ဒီ'.split('_'),\n        weekdays: 'တနင်္ဂနွေ_တနင်္လာ_အင်္ဂါ_ဗုဒ္ဓဟူး_ကြာသပတေး_သောကြာ_စနေ'.split('_'),\n        weekdaysShort: 'နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ'.split('_'),\n        weekdaysMin: 'နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ'.split('_'),\n\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd D MMMM YYYY HH:mm'\n        },\n        calendar: {\n            sameDay: '[ယနေ.] LT [မှာ]',\n            nextDay: '[မနက်ဖြန်] LT [မှာ]',\n            nextWeek: 'dddd LT [မှာ]',\n            lastDay: '[မနေ.က] LT [မှာ]',\n            lastWeek: '[ပြီးခဲ့သော] dddd LT [မှာ]',\n            sameElse: 'L'\n        },\n        relativeTime: {\n            future: 'လာမည့် %s မှာ',\n            past: 'လွန်ခဲ့သော %s က',\n            s: 'စက္ကန်.အနည်းငယ်',\n            ss : '%d စက္ကန့်',\n            m: 'တစ်မိနစ်',\n            mm: '%d မိနစ်',\n            h: 'တစ်နာရီ',\n            hh: '%d နာရီ',\n            d: 'တစ်ရက်',\n            dd: '%d ရက်',\n            M: 'တစ်လ',\n            MM: '%d လ',\n            y: 'တစ်နှစ်',\n            yy: '%d နှစ်'\n        },\n        preparse: function (string) {\n            return string.replace(/[၁၂၃၄၅၆၇၈၉၀]/g, function (match) {\n                return numberMap[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap[match];\n            });\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4 // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n\n    return my;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var nb = moment.defineLocale('nb', {\n        months : 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split('_'),\n        monthsShort : 'jan._feb._mars_april_mai_juni_juli_aug._sep._okt._nov._des.'.split('_'),\n        monthsParseExact : true,\n        weekdays : 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),\n        weekdaysShort : 'sø._ma._ti._on._to._fr._lø.'.split('_'),\n        weekdaysMin : 'sø_ma_ti_on_to_fr_lø'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D. MMMM YYYY',\n            LLL : 'D. MMMM YYYY [kl.] HH:mm',\n            LLLL : 'dddd D. MMMM YYYY [kl.] HH:mm'\n        },\n        calendar : {\n            sameDay: '[i dag kl.] LT',\n            nextDay: '[i morgen kl.] LT',\n            nextWeek: 'dddd [kl.] LT',\n            lastDay: '[i går kl.] LT',\n            lastWeek: '[forrige] dddd [kl.] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'om %s',\n            past : '%s siden',\n            s : 'noen sekunder',\n            ss : '%d sekunder',\n            m : 'ett minutt',\n            mm : '%d minutter',\n            h : 'en time',\n            hh : '%d timer',\n            d : 'en dag',\n            dd : '%d dager',\n            M : 'en måned',\n            MM : '%d måneder',\n            y : 'ett år',\n            yy : '%d år'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return nb;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var symbolMap = {\n        '1': '१',\n        '2': '२',\n        '3': '३',\n        '4': '४',\n        '5': '५',\n        '6': '६',\n        '7': '७',\n        '8': '८',\n        '9': '९',\n        '0': '०'\n    },\n    numberMap = {\n        '१': '1',\n        '२': '2',\n        '३': '3',\n        '४': '4',\n        '५': '5',\n        '६': '6',\n        '७': '7',\n        '८': '8',\n        '९': '9',\n        '०': '0'\n    };\n\n    var ne = moment.defineLocale('ne', {\n        months : 'जनवरी_फेब्रुवरी_मार्च_अप्रिल_मई_जुन_जुलाई_अगष्ट_सेप्टेम्बर_अक्टोबर_नोभेम्बर_डिसेम्बर'.split('_'),\n        monthsShort : 'जन._फेब्रु._मार्च_अप्रि._मई_जुन_जुलाई._अग._सेप्ट._अक्टो._नोभे._डिसे.'.split('_'),\n        monthsParseExact : true,\n        weekdays : 'आइतबार_सोमबार_मङ्गलबार_बुधबार_बिहिबार_शुक्रबार_शनिबार'.split('_'),\n        weekdaysShort : 'आइत._सोम._मङ्गल._बुध._बिहि._शुक्र._शनि.'.split('_'),\n        weekdaysMin : 'आ._सो._मं._बु._बि._शु._श.'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'Aको h:mm बजे',\n            LTS : 'Aको h:mm:ss बजे',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY, Aको h:mm बजे',\n            LLLL : 'dddd, D MMMM YYYY, Aको h:mm बजे'\n        },\n        preparse: function (string) {\n            return string.replace(/[१२३४५६७८९०]/g, function (match) {\n                return numberMap[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap[match];\n            });\n        },\n        meridiemParse: /राति|बिहान|दिउँसो|साँझ/,\n        meridiemHour : function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'राति') {\n                return hour < 4 ? hour : hour + 12;\n            } else if (meridiem === 'बिहान') {\n                return hour;\n            } else if (meridiem === 'दिउँसो') {\n                return hour >= 10 ? hour : hour + 12;\n            } else if (meridiem === 'साँझ') {\n                return hour + 12;\n            }\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 3) {\n                return 'राति';\n            } else if (hour < 12) {\n                return 'बिहान';\n            } else if (hour < 16) {\n                return 'दिउँसो';\n            } else if (hour < 20) {\n                return 'साँझ';\n            } else {\n                return 'राति';\n            }\n        },\n        calendar : {\n            sameDay : '[आज] LT',\n            nextDay : '[भोलि] LT',\n            nextWeek : '[आउँदो] dddd[,] LT',\n            lastDay : '[हिजो] LT',\n            lastWeek : '[गएको] dddd[,] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%sमा',\n            past : '%s अगाडि',\n            s : 'केही क्षण',\n            ss : '%d सेकेण्ड',\n            m : 'एक मिनेट',\n            mm : '%d मिनेट',\n            h : 'एक घण्टा',\n            hh : '%d घण्टा',\n            d : 'एक दिन',\n            dd : '%d दिन',\n            M : 'एक महिना',\n            MM : '%d महिना',\n            y : 'एक बर्ष',\n            yy : '%d बर्ष'\n        },\n        week : {\n            dow : 0, // Sunday is the first day of the week.\n            doy : 6  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n\n    return ne;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var monthsShortWithDots = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_'),\n        monthsShortWithoutDots = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_');\n\n    var monthsParse = [/^jan/i, /^feb/i, /^maart|mrt.?$/i, /^apr/i, /^mei$/i, /^jun[i.]?$/i, /^jul[i.]?$/i, /^aug/i, /^sep/i, /^okt/i, /^nov/i, /^dec/i];\n    var monthsRegex = /^(januari|februari|maart|april|mei|april|ju[nl]i|augustus|september|oktober|november|december|jan\\.?|feb\\.?|mrt\\.?|apr\\.?|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i;\n\n    var nl = moment.defineLocale('nl', {\n        months : 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split('_'),\n        monthsShort : function (m, format) {\n            if (!m) {\n                return monthsShortWithDots;\n            } else if (/-MMM-/.test(format)) {\n                return monthsShortWithoutDots[m.month()];\n            } else {\n                return monthsShortWithDots[m.month()];\n            }\n        },\n\n        monthsRegex: monthsRegex,\n        monthsShortRegex: monthsRegex,\n        monthsStrictRegex: /^(januari|februari|maart|mei|ju[nl]i|april|augustus|september|oktober|november|december)/i,\n        monthsShortStrictRegex: /^(jan\\.?|feb\\.?|mrt\\.?|apr\\.?|mei|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i,\n\n        monthsParse : monthsParse,\n        longMonthsParse : monthsParse,\n        shortMonthsParse : monthsParse,\n\n        weekdays : 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),\n        weekdaysShort : 'zo._ma._di._wo._do._vr._za.'.split('_'),\n        weekdaysMin : 'zo_ma_di_wo_do_vr_za'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD-MM-YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: '[vandaag om] LT',\n            nextDay: '[morgen om] LT',\n            nextWeek: 'dddd [om] LT',\n            lastDay: '[gisteren om] LT',\n            lastWeek: '[afgelopen] dddd [om] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'over %s',\n            past : '%s geleden',\n            s : 'een paar seconden',\n            ss : '%d seconden',\n            m : 'één minuut',\n            mm : '%d minuten',\n            h : 'één uur',\n            hh : '%d uur',\n            d : 'één dag',\n            dd : '%d dagen',\n            M : 'één maand',\n            MM : '%d maanden',\n            y : 'één jaar',\n            yy : '%d jaar'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(ste|de)/,\n        ordinal : function (number) {\n            return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de');\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return nl;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var monthsShortWithDots = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_'),\n        monthsShortWithoutDots = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_');\n\n    var monthsParse = [/^jan/i, /^feb/i, /^maart|mrt.?$/i, /^apr/i, /^mei$/i, /^jun[i.]?$/i, /^jul[i.]?$/i, /^aug/i, /^sep/i, /^okt/i, /^nov/i, /^dec/i];\n    var monthsRegex = /^(januari|februari|maart|april|mei|april|ju[nl]i|augustus|september|oktober|november|december|jan\\.?|feb\\.?|mrt\\.?|apr\\.?|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i;\n\n    var nlBe = moment.defineLocale('nl-be', {\n        months : 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split('_'),\n        monthsShort : function (m, format) {\n            if (!m) {\n                return monthsShortWithDots;\n            } else if (/-MMM-/.test(format)) {\n                return monthsShortWithoutDots[m.month()];\n            } else {\n                return monthsShortWithDots[m.month()];\n            }\n        },\n\n        monthsRegex: monthsRegex,\n        monthsShortRegex: monthsRegex,\n        monthsStrictRegex: /^(januari|februari|maart|mei|ju[nl]i|april|augustus|september|oktober|november|december)/i,\n        monthsShortStrictRegex: /^(jan\\.?|feb\\.?|mrt\\.?|apr\\.?|mei|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i,\n\n        monthsParse : monthsParse,\n        longMonthsParse : monthsParse,\n        shortMonthsParse : monthsParse,\n\n        weekdays : 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),\n        weekdaysShort : 'zo._ma._di._wo._do._vr._za.'.split('_'),\n        weekdaysMin : 'zo_ma_di_wo_do_vr_za'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: '[vandaag om] LT',\n            nextDay: '[morgen om] LT',\n            nextWeek: 'dddd [om] LT',\n            lastDay: '[gisteren om] LT',\n            lastWeek: '[afgelopen] dddd [om] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'over %s',\n            past : '%s geleden',\n            s : 'een paar seconden',\n            ss : '%d seconden',\n            m : 'één minuut',\n            mm : '%d minuten',\n            h : 'één uur',\n            hh : '%d uur',\n            d : 'één dag',\n            dd : '%d dagen',\n            M : 'één maand',\n            MM : '%d maanden',\n            y : 'één jaar',\n            yy : '%d jaar'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(ste|de)/,\n        ordinal : function (number) {\n            return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de');\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return nlBe;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var nn = moment.defineLocale('nn', {\n        months : 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split('_'),\n        monthsShort : 'jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_'),\n        weekdays : 'sundag_måndag_tysdag_onsdag_torsdag_fredag_laurdag'.split('_'),\n        weekdaysShort : 'sun_mån_tys_ons_tor_fre_lau'.split('_'),\n        weekdaysMin : 'su_må_ty_on_to_fr_lø'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D. MMMM YYYY',\n            LLL : 'D. MMMM YYYY [kl.] H:mm',\n            LLLL : 'dddd D. MMMM YYYY [kl.] HH:mm'\n        },\n        calendar : {\n            sameDay: '[I dag klokka] LT',\n            nextDay: '[I morgon klokka] LT',\n            nextWeek: 'dddd [klokka] LT',\n            lastDay: '[I går klokka] LT',\n            lastWeek: '[Føregåande] dddd [klokka] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'om %s',\n            past : '%s sidan',\n            s : 'nokre sekund',\n            ss : '%d sekund',\n            m : 'eit minutt',\n            mm : '%d minutt',\n            h : 'ein time',\n            hh : '%d timar',\n            d : 'ein dag',\n            dd : '%d dagar',\n            M : 'ein månad',\n            MM : '%d månader',\n            y : 'eit år',\n            yy : '%d år'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return nn;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var symbolMap = {\n        '1': '੧',\n        '2': '੨',\n        '3': '੩',\n        '4': '੪',\n        '5': '੫',\n        '6': '੬',\n        '7': '੭',\n        '8': '੮',\n        '9': '੯',\n        '0': '੦'\n    },\n    numberMap = {\n        '੧': '1',\n        '੨': '2',\n        '੩': '3',\n        '੪': '4',\n        '੫': '5',\n        '੬': '6',\n        '੭': '7',\n        '੮': '8',\n        '੯': '9',\n        '੦': '0'\n    };\n\n    var paIn = moment.defineLocale('pa-in', {\n        // There are months name as per Nanakshahi Calender but they are not used as rigidly in modern Punjabi.\n        months : 'ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ'.split('_'),\n        monthsShort : 'ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ'.split('_'),\n        weekdays : 'ਐਤਵਾਰ_ਸੋਮਵਾਰ_ਮੰਗਲਵਾਰ_ਬੁਧਵਾਰ_ਵੀਰਵਾਰ_ਸ਼ੁੱਕਰਵਾਰ_ਸ਼ਨੀਚਰਵਾਰ'.split('_'),\n        weekdaysShort : 'ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ'.split('_'),\n        weekdaysMin : 'ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ'.split('_'),\n        longDateFormat : {\n            LT : 'A h:mm ਵਜੇ',\n            LTS : 'A h:mm:ss ਵਜੇ',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY, A h:mm ਵਜੇ',\n            LLLL : 'dddd, D MMMM YYYY, A h:mm ਵਜੇ'\n        },\n        calendar : {\n            sameDay : '[ਅਜ] LT',\n            nextDay : '[ਕਲ] LT',\n            nextWeek : '[ਅਗਲਾ] dddd, LT',\n            lastDay : '[ਕਲ] LT',\n            lastWeek : '[ਪਿਛਲੇ] dddd, LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s ਵਿੱਚ',\n            past : '%s ਪਿਛਲੇ',\n            s : 'ਕੁਝ ਸਕਿੰਟ',\n            ss : '%d ਸਕਿੰਟ',\n            m : 'ਇਕ ਮਿੰਟ',\n            mm : '%d ਮਿੰਟ',\n            h : 'ਇੱਕ ਘੰਟਾ',\n            hh : '%d ਘੰਟੇ',\n            d : 'ਇੱਕ ਦਿਨ',\n            dd : '%d ਦਿਨ',\n            M : 'ਇੱਕ ਮਹੀਨਾ',\n            MM : '%d ਮਹੀਨੇ',\n            y : 'ਇੱਕ ਸਾਲ',\n            yy : '%d ਸਾਲ'\n        },\n        preparse: function (string) {\n            return string.replace(/[੧੨੩੪੫੬੭੮੯੦]/g, function (match) {\n                return numberMap[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap[match];\n            });\n        },\n        // Punjabi notation for meridiems are quite fuzzy in practice. While there exists\n        // a rigid notion of a 'Pahar' it is not used as rigidly in modern Punjabi.\n        meridiemParse: /ਰਾਤ|ਸਵੇਰ|ਦੁਪਹਿਰ|ਸ਼ਾਮ/,\n        meridiemHour : function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'ਰਾਤ') {\n                return hour < 4 ? hour : hour + 12;\n            } else if (meridiem === 'ਸਵੇਰ') {\n                return hour;\n            } else if (meridiem === 'ਦੁਪਹਿਰ') {\n                return hour >= 10 ? hour : hour + 12;\n            } else if (meridiem === 'ਸ਼ਾਮ') {\n                return hour + 12;\n            }\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'ਰਾਤ';\n            } else if (hour < 10) {\n                return 'ਸਵੇਰ';\n            } else if (hour < 17) {\n                return 'ਦੁਪਹਿਰ';\n            } else if (hour < 20) {\n                return 'ਸ਼ਾਮ';\n            } else {\n                return 'ਰਾਤ';\n            }\n        },\n        week : {\n            dow : 0, // Sunday is the first day of the week.\n            doy : 6  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n\n    return paIn;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var monthsNominative = 'styczeń_luty_marzec_kwiecień_maj_czerwiec_lipiec_sierpień_wrzesień_październik_listopad_grudzień'.split('_'),\n        monthsSubjective = 'stycznia_lutego_marca_kwietnia_maja_czerwca_lipca_sierpnia_września_października_listopada_grudnia'.split('_');\n    function plural(n) {\n        return (n % 10 < 5) && (n % 10 > 1) && ((~~(n / 10) % 10) !== 1);\n    }\n    function translate(number, withoutSuffix, key) {\n        var result = number + ' ';\n        switch (key) {\n            case 'ss':\n                return result + (plural(number) ? 'sekundy' : 'sekund');\n            case 'm':\n                return withoutSuffix ? 'minuta' : 'minutę';\n            case 'mm':\n                return result + (plural(number) ? 'minuty' : 'minut');\n            case 'h':\n                return withoutSuffix  ? 'godzina'  : 'godzinę';\n            case 'hh':\n                return result + (plural(number) ? 'godziny' : 'godzin');\n            case 'MM':\n                return result + (plural(number) ? 'miesiące' : 'miesięcy');\n            case 'yy':\n                return result + (plural(number) ? 'lata' : 'lat');\n        }\n    }\n\n    var pl = moment.defineLocale('pl', {\n        months : function (momentToFormat, format) {\n            if (!momentToFormat) {\n                return monthsNominative;\n            } else if (format === '') {\n                // Hack: if format empty we know this is used to generate\n                // RegExp by moment. Give then back both valid forms of months\n                // in RegExp ready format.\n                return '(' + monthsSubjective[momentToFormat.month()] + '|' + monthsNominative[momentToFormat.month()] + ')';\n            } else if (/D MMMM/.test(format)) {\n                return monthsSubjective[momentToFormat.month()];\n            } else {\n                return monthsNominative[momentToFormat.month()];\n            }\n        },\n        monthsShort : 'sty_lut_mar_kwi_maj_cze_lip_sie_wrz_paź_lis_gru'.split('_'),\n        weekdays : 'niedziela_poniedziałek_wtorek_środa_czwartek_piątek_sobota'.split('_'),\n        weekdaysShort : 'ndz_pon_wt_śr_czw_pt_sob'.split('_'),\n        weekdaysMin : 'Nd_Pn_Wt_Śr_Cz_Pt_So'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd, D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: '[Dziś o] LT',\n            nextDay: '[Jutro o] LT',\n            nextWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[W niedzielę o] LT';\n\n                    case 2:\n                        return '[We wtorek o] LT';\n\n                    case 3:\n                        return '[W środę o] LT';\n\n                    case 6:\n                        return '[W sobotę o] LT';\n\n                    default:\n                        return '[W] dddd [o] LT';\n                }\n            },\n            lastDay: '[Wczoraj o] LT',\n            lastWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[W zeszłą niedzielę o] LT';\n                    case 3:\n                        return '[W zeszłą środę o] LT';\n                    case 6:\n                        return '[W zeszłą sobotę o] LT';\n                    default:\n                        return '[W zeszły] dddd [o] LT';\n                }\n            },\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'za %s',\n            past : '%s temu',\n            s : 'kilka sekund',\n            ss : translate,\n            m : translate,\n            mm : translate,\n            h : translate,\n            hh : translate,\n            d : '1 dzień',\n            dd : '%d dni',\n            M : 'miesiąc',\n            MM : translate,\n            y : 'rok',\n            yy : translate\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return pl;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var pt = moment.defineLocale('pt', {\n        months : 'janeiro_fevereiro_março_abril_maio_junho_julho_agosto_setembro_outubro_novembro_dezembro'.split('_'),\n        monthsShort : 'jan_fev_mar_abr_mai_jun_jul_ago_set_out_nov_dez'.split('_'),\n        weekdays : 'Domingo_Segunda-feira_Terça-feira_Quarta-feira_Quinta-feira_Sexta-feira_Sábado'.split('_'),\n        weekdaysShort : 'Dom_Seg_Ter_Qua_Qui_Sex_Sáb'.split('_'),\n        weekdaysMin : 'Do_2ª_3ª_4ª_5ª_6ª_Sá'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D [de] MMMM [de] YYYY',\n            LLL : 'D [de] MMMM [de] YYYY HH:mm',\n            LLLL : 'dddd, D [de] MMMM [de] YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: '[Hoje às] LT',\n            nextDay: '[Amanhã às] LT',\n            nextWeek: 'dddd [às] LT',\n            lastDay: '[Ontem às] LT',\n            lastWeek: function () {\n                return (this.day() === 0 || this.day() === 6) ?\n                    '[Último] dddd [às] LT' : // Saturday + Sunday\n                    '[Última] dddd [às] LT'; // Monday - Friday\n            },\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'em %s',\n            past : 'há %s',\n            s : 'segundos',\n            ss : '%d segundos',\n            m : 'um minuto',\n            mm : '%d minutos',\n            h : 'uma hora',\n            hh : '%d horas',\n            d : 'um dia',\n            dd : '%d dias',\n            M : 'um mês',\n            MM : '%d meses',\n            y : 'um ano',\n            yy : '%d anos'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}º/,\n        ordinal : '%dº',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return pt;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var ptBr = moment.defineLocale('pt-br', {\n        months : 'janeiro_fevereiro_março_abril_maio_junho_julho_agosto_setembro_outubro_novembro_dezembro'.split('_'),\n        monthsShort : 'jan_fev_mar_abr_mai_jun_jul_ago_set_out_nov_dez'.split('_'),\n        weekdays : 'Domingo_Segunda-feira_Terça-feira_Quarta-feira_Quinta-feira_Sexta-feira_Sábado'.split('_'),\n        weekdaysShort : 'Dom_Seg_Ter_Qua_Qui_Sex_Sáb'.split('_'),\n        weekdaysMin : 'Do_2ª_3ª_4ª_5ª_6ª_Sá'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D [de] MMMM [de] YYYY',\n            LLL : 'D [de] MMMM [de] YYYY [às] HH:mm',\n            LLLL : 'dddd, D [de] MMMM [de] YYYY [às] HH:mm'\n        },\n        calendar : {\n            sameDay: '[Hoje às] LT',\n            nextDay: '[Amanhã às] LT',\n            nextWeek: 'dddd [às] LT',\n            lastDay: '[Ontem às] LT',\n            lastWeek: function () {\n                return (this.day() === 0 || this.day() === 6) ?\n                    '[Último] dddd [às] LT' : // Saturday + Sunday\n                    '[Última] dddd [às] LT'; // Monday - Friday\n            },\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'em %s',\n            past : 'há %s',\n            s : 'poucos segundos',\n            ss : '%d segundos',\n            m : 'um minuto',\n            mm : '%d minutos',\n            h : 'uma hora',\n            hh : '%d horas',\n            d : 'um dia',\n            dd : '%d dias',\n            M : 'um mês',\n            MM : '%d meses',\n            y : 'um ano',\n            yy : '%d anos'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}º/,\n        ordinal : '%dº'\n    });\n\n    return ptBr;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    function relativeTimeWithPlural(number, withoutSuffix, key) {\n        var format = {\n                'ss': 'secunde',\n                'mm': 'minute',\n                'hh': 'ore',\n                'dd': 'zile',\n                'MM': 'luni',\n                'yy': 'ani'\n            },\n            separator = ' ';\n        if (number % 100 >= 20 || (number >= 100 && number % 100 === 0)) {\n            separator = ' de ';\n        }\n        return number + separator + format[key];\n    }\n\n    var ro = moment.defineLocale('ro', {\n        months : 'ianuarie_februarie_martie_aprilie_mai_iunie_iulie_august_septembrie_octombrie_noiembrie_decembrie'.split('_'),\n        monthsShort : 'ian._febr._mart._apr._mai_iun._iul._aug._sept._oct._nov._dec.'.split('_'),\n        monthsParseExact: true,\n        weekdays : 'duminică_luni_marți_miercuri_joi_vineri_sâmbătă'.split('_'),\n        weekdaysShort : 'Dum_Lun_Mar_Mie_Joi_Vin_Sâm'.split('_'),\n        weekdaysMin : 'Du_Lu_Ma_Mi_Jo_Vi_Sâ'.split('_'),\n        longDateFormat : {\n            LT : 'H:mm',\n            LTS : 'H:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY H:mm',\n            LLLL : 'dddd, D MMMM YYYY H:mm'\n        },\n        calendar : {\n            sameDay: '[azi la] LT',\n            nextDay: '[mâine la] LT',\n            nextWeek: 'dddd [la] LT',\n            lastDay: '[ieri la] LT',\n            lastWeek: '[fosta] dddd [la] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'peste %s',\n            past : '%s în urmă',\n            s : 'câteva secunde',\n            ss : relativeTimeWithPlural,\n            m : 'un minut',\n            mm : relativeTimeWithPlural,\n            h : 'o oră',\n            hh : relativeTimeWithPlural,\n            d : 'o zi',\n            dd : relativeTimeWithPlural,\n            M : 'o lună',\n            MM : relativeTimeWithPlural,\n            y : 'un an',\n            yy : relativeTimeWithPlural\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n\n    return ro;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    function plural(word, num) {\n        var forms = word.split('_');\n        return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);\n    }\n    function relativeTimeWithPlural(number, withoutSuffix, key) {\n        var format = {\n            'ss': withoutSuffix ? 'секунда_секунды_секунд' : 'секунду_секунды_секунд',\n            'mm': withoutSuffix ? 'минута_минуты_минут' : 'минуту_минуты_минут',\n            'hh': 'час_часа_часов',\n            'dd': 'день_дня_дней',\n            'MM': 'месяц_месяца_месяцев',\n            'yy': 'год_года_лет'\n        };\n        if (key === 'm') {\n            return withoutSuffix ? 'минута' : 'минуту';\n        }\n        else {\n            return number + ' ' + plural(format[key], +number);\n        }\n    }\n    var monthsParse = [/^янв/i, /^фев/i, /^мар/i, /^апр/i, /^ма[йя]/i, /^июн/i, /^июл/i, /^авг/i, /^сен/i, /^окт/i, /^ноя/i, /^дек/i];\n\n    // http://new.gramota.ru/spravka/rules/139-prop : § 103\n    // Сокращения месяцев: http://new.gramota.ru/spravka/buro/search-answer?s=242637\n    // CLDR data:          http://www.unicode.org/cldr/charts/28/summary/ru.html#1753\n    var ru = moment.defineLocale('ru', {\n        months : {\n            format: 'января_февраля_марта_апреля_мая_июня_июля_августа_сентября_октября_ноября_декабря'.split('_'),\n            standalone: 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_')\n        },\n        monthsShort : {\n            // по CLDR именно \"июл.\" и \"июн.\", но какой смысл менять букву на точку ?\n            format: 'янв._февр._мар._апр._мая_июня_июля_авг._сент._окт._нояб._дек.'.split('_'),\n            standalone: 'янв._февр._март_апр._май_июнь_июль_авг._сент._окт._нояб._дек.'.split('_')\n        },\n        weekdays : {\n            standalone: 'воскресенье_понедельник_вторник_среда_четверг_пятница_суббота'.split('_'),\n            format: 'воскресенье_понедельник_вторник_среду_четверг_пятницу_субботу'.split('_'),\n            isFormat: /\\[ ?[Вв] ?(?:прошлую|следующую|эту)? ?\\] ?dddd/\n        },\n        weekdaysShort : 'вс_пн_вт_ср_чт_пт_сб'.split('_'),\n        weekdaysMin : 'вс_пн_вт_ср_чт_пт_сб'.split('_'),\n        monthsParse : monthsParse,\n        longMonthsParse : monthsParse,\n        shortMonthsParse : monthsParse,\n\n        // полные названия с падежами, по три буквы, для некоторых, по 4 буквы, сокращения с точкой и без точки\n        monthsRegex: /^(январ[ья]|янв\\.?|феврал[ья]|февр?\\.?|марта?|мар\\.?|апрел[ья]|апр\\.?|ма[йя]|июн[ья]|июн\\.?|июл[ья]|июл\\.?|августа?|авг\\.?|сентябр[ья]|сент?\\.?|октябр[ья]|окт\\.?|ноябр[ья]|нояб?\\.?|декабр[ья]|дек\\.?)/i,\n\n        // копия предыдущего\n        monthsShortRegex: /^(январ[ья]|янв\\.?|феврал[ья]|февр?\\.?|марта?|мар\\.?|апрел[ья]|апр\\.?|ма[йя]|июн[ья]|июн\\.?|июл[ья]|июл\\.?|августа?|авг\\.?|сентябр[ья]|сент?\\.?|октябр[ья]|окт\\.?|ноябр[ья]|нояб?\\.?|декабр[ья]|дек\\.?)/i,\n\n        // полные названия с падежами\n        monthsStrictRegex: /^(январ[яь]|феврал[яь]|марта?|апрел[яь]|ма[яй]|июн[яь]|июл[яь]|августа?|сентябр[яь]|октябр[яь]|ноябр[яь]|декабр[яь])/i,\n\n        // Выражение, которое соотвествует только сокращённым формам\n        monthsShortStrictRegex: /^(янв\\.|февр?\\.|мар[т.]|апр\\.|ма[яй]|июн[ья.]|июл[ья.]|авг\\.|сент?\\.|окт\\.|нояб?\\.|дек\\.)/i,\n        longDateFormat : {\n            LT : 'H:mm',\n            LTS : 'H:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D MMMM YYYY г.',\n            LLL : 'D MMMM YYYY г., H:mm',\n            LLLL : 'dddd, D MMMM YYYY г., H:mm'\n        },\n        calendar : {\n            sameDay: '[Сегодня, в] LT',\n            nextDay: '[Завтра, в] LT',\n            lastDay: '[Вчера, в] LT',\n            nextWeek: function (now) {\n                if (now.week() !== this.week()) {\n                    switch (this.day()) {\n                        case 0:\n                            return '[В следующее] dddd, [в] LT';\n                        case 1:\n                        case 2:\n                        case 4:\n                            return '[В следующий] dddd, [в] LT';\n                        case 3:\n                        case 5:\n                        case 6:\n                            return '[В следующую] dddd, [в] LT';\n                    }\n                } else {\n                    if (this.day() === 2) {\n                        return '[Во] dddd, [в] LT';\n                    } else {\n                        return '[В] dddd, [в] LT';\n                    }\n                }\n            },\n            lastWeek: function (now) {\n                if (now.week() !== this.week()) {\n                    switch (this.day()) {\n                        case 0:\n                            return '[В прошлое] dddd, [в] LT';\n                        case 1:\n                        case 2:\n                        case 4:\n                            return '[В прошлый] dddd, [в] LT';\n                        case 3:\n                        case 5:\n                        case 6:\n                            return '[В прошлую] dddd, [в] LT';\n                    }\n                } else {\n                    if (this.day() === 2) {\n                        return '[Во] dddd, [в] LT';\n                    } else {\n                        return '[В] dddd, [в] LT';\n                    }\n                }\n            },\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'через %s',\n            past : '%s назад',\n            s : 'несколько секунд',\n            ss : relativeTimeWithPlural,\n            m : relativeTimeWithPlural,\n            mm : relativeTimeWithPlural,\n            h : 'час',\n            hh : relativeTimeWithPlural,\n            d : 'день',\n            dd : relativeTimeWithPlural,\n            M : 'месяц',\n            MM : relativeTimeWithPlural,\n            y : 'год',\n            yy : relativeTimeWithPlural\n        },\n        meridiemParse: /ночи|утра|дня|вечера/i,\n        isPM : function (input) {\n            return /^(дня|вечера)$/.test(input);\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'ночи';\n            } else if (hour < 12) {\n                return 'утра';\n            } else if (hour < 17) {\n                return 'дня';\n            } else {\n                return 'вечера';\n            }\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}-(й|го|я)/,\n        ordinal: function (number, period) {\n            switch (period) {\n                case 'M':\n                case 'd':\n                case 'DDD':\n                    return number + '-й';\n                case 'D':\n                    return number + '-го';\n                case 'w':\n                case 'W':\n                    return number + '-я';\n                default:\n                    return number;\n            }\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return ru;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var months = [\n        'جنوري',\n        'فيبروري',\n        'مارچ',\n        'اپريل',\n        'مئي',\n        'جون',\n        'جولاءِ',\n        'آگسٽ',\n        'سيپٽمبر',\n        'آڪٽوبر',\n        'نومبر',\n        'ڊسمبر'\n    ];\n    var days = [\n        'آچر',\n        'سومر',\n        'اڱارو',\n        'اربع',\n        'خميس',\n        'جمع',\n        'ڇنڇر'\n    ];\n\n    var sd = moment.defineLocale('sd', {\n        months : months,\n        monthsShort : months,\n        weekdays : days,\n        weekdaysShort : days,\n        weekdaysMin : days,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd، D MMMM YYYY HH:mm'\n        },\n        meridiemParse: /صبح|شام/,\n        isPM : function (input) {\n            return 'شام' === input;\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'صبح';\n            }\n            return 'شام';\n        },\n        calendar : {\n            sameDay : '[اڄ] LT',\n            nextDay : '[سڀاڻي] LT',\n            nextWeek : 'dddd [اڳين هفتي تي] LT',\n            lastDay : '[ڪالهه] LT',\n            lastWeek : '[گزريل هفتي] dddd [تي] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s پوء',\n            past : '%s اڳ',\n            s : 'چند سيڪنڊ',\n            ss : '%d سيڪنڊ',\n            m : 'هڪ منٽ',\n            mm : '%d منٽ',\n            h : 'هڪ ڪلاڪ',\n            hh : '%d ڪلاڪ',\n            d : 'هڪ ڏينهن',\n            dd : '%d ڏينهن',\n            M : 'هڪ مهينو',\n            MM : '%d مهينا',\n            y : 'هڪ سال',\n            yy : '%d سال'\n        },\n        preparse: function (string) {\n            return string.replace(/،/g, ',');\n        },\n        postformat: function (string) {\n            return string.replace(/,/g, '،');\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return sd;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var se = moment.defineLocale('se', {\n        months : 'ođđajagemánnu_guovvamánnu_njukčamánnu_cuoŋománnu_miessemánnu_geassemánnu_suoidnemánnu_borgemánnu_čakčamánnu_golggotmánnu_skábmamánnu_juovlamánnu'.split('_'),\n        monthsShort : 'ođđj_guov_njuk_cuo_mies_geas_suoi_borg_čakč_golg_skáb_juov'.split('_'),\n        weekdays : 'sotnabeaivi_vuossárga_maŋŋebárga_gaskavahkku_duorastat_bearjadat_lávvardat'.split('_'),\n        weekdaysShort : 'sotn_vuos_maŋ_gask_duor_bear_láv'.split('_'),\n        weekdaysMin : 's_v_m_g_d_b_L'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'MMMM D. [b.] YYYY',\n            LLL : 'MMMM D. [b.] YYYY [ti.] HH:mm',\n            LLLL : 'dddd, MMMM D. [b.] YYYY [ti.] HH:mm'\n        },\n        calendar : {\n            sameDay: '[otne ti] LT',\n            nextDay: '[ihttin ti] LT',\n            nextWeek: 'dddd [ti] LT',\n            lastDay: '[ikte ti] LT',\n            lastWeek: '[ovddit] dddd [ti] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : '%s geažes',\n            past : 'maŋit %s',\n            s : 'moadde sekunddat',\n            ss: '%d sekunddat',\n            m : 'okta minuhta',\n            mm : '%d minuhtat',\n            h : 'okta diimmu',\n            hh : '%d diimmut',\n            d : 'okta beaivi',\n            dd : '%d beaivvit',\n            M : 'okta mánnu',\n            MM : '%d mánut',\n            y : 'okta jahki',\n            yy : '%d jagit'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return se;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    /*jshint -W100*/\n    var si = moment.defineLocale('si', {\n        months : 'ජනවාරි_පෙබරවාරි_මාර්තු_අප්‍රේල්_මැයි_ජූනි_ජූලි_අගෝස්තු_සැප්තැම්බර්_ඔක්තෝබර්_නොවැම්බර්_දෙසැම්බර්'.split('_'),\n        monthsShort : 'ජන_පෙබ_මාර්_අප්_මැයි_ජූනි_ජූලි_අගෝ_සැප්_ඔක්_නොවැ_දෙසැ'.split('_'),\n        weekdays : 'ඉරිදා_සඳුදා_අඟහරුවාදා_බදාදා_බ්‍රහස්පතින්දා_සිකුරාදා_සෙනසුරාදා'.split('_'),\n        weekdaysShort : 'ඉරි_සඳු_අඟ_බදා_බ්‍රහ_සිකු_සෙන'.split('_'),\n        weekdaysMin : 'ඉ_ස_අ_බ_බ්‍ර_සි_සෙ'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'a h:mm',\n            LTS : 'a h:mm:ss',\n            L : 'YYYY/MM/DD',\n            LL : 'YYYY MMMM D',\n            LLL : 'YYYY MMMM D, a h:mm',\n            LLLL : 'YYYY MMMM D [වැනි] dddd, a h:mm:ss'\n        },\n        calendar : {\n            sameDay : '[අද] LT[ට]',\n            nextDay : '[හෙට] LT[ට]',\n            nextWeek : 'dddd LT[ට]',\n            lastDay : '[ඊයේ] LT[ට]',\n            lastWeek : '[පසුගිය] dddd LT[ට]',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%sකින්',\n            past : '%sකට පෙර',\n            s : 'තත්පර කිහිපය',\n            ss : 'තත්පර %d',\n            m : 'මිනිත්තුව',\n            mm : 'මිනිත්තු %d',\n            h : 'පැය',\n            hh : 'පැය %d',\n            d : 'දිනය',\n            dd : 'දින %d',\n            M : 'මාසය',\n            MM : 'මාස %d',\n            y : 'වසර',\n            yy : 'වසර %d'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2} වැනි/,\n        ordinal : function (number) {\n            return number + ' වැනි';\n        },\n        meridiemParse : /පෙර වරු|පස් වරු|පෙ.ව|ප.ව./,\n        isPM : function (input) {\n            return input === 'ප.ව.' || input === 'පස් වරු';\n        },\n        meridiem : function (hours, minutes, isLower) {\n            if (hours > 11) {\n                return isLower ? 'ප.ව.' : 'පස් වරු';\n            } else {\n                return isLower ? 'පෙ.ව.' : 'පෙර වරු';\n            }\n        }\n    });\n\n    return si;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var months = 'január_február_marec_apríl_máj_jún_júl_august_september_október_november_december'.split('_'),\n        monthsShort = 'jan_feb_mar_apr_máj_jún_júl_aug_sep_okt_nov_dec'.split('_');\n    function plural(n) {\n        return (n > 1) && (n < 5);\n    }\n    function translate(number, withoutSuffix, key, isFuture) {\n        var result = number + ' ';\n        switch (key) {\n            case 's':  // a few seconds / in a few seconds / a few seconds ago\n                return (withoutSuffix || isFuture) ? 'pár sekúnd' : 'pár sekundami';\n            case 'ss': // 9 seconds / in 9 seconds / 9 seconds ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural(number) ? 'sekundy' : 'sekúnd');\n                } else {\n                    return result + 'sekundami';\n                }\n                break;\n            case 'm':  // a minute / in a minute / a minute ago\n                return withoutSuffix ? 'minúta' : (isFuture ? 'minútu' : 'minútou');\n            case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural(number) ? 'minúty' : 'minút');\n                } else {\n                    return result + 'minútami';\n                }\n                break;\n            case 'h':  // an hour / in an hour / an hour ago\n                return withoutSuffix ? 'hodina' : (isFuture ? 'hodinu' : 'hodinou');\n            case 'hh': // 9 hours / in 9 hours / 9 hours ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural(number) ? 'hodiny' : 'hodín');\n                } else {\n                    return result + 'hodinami';\n                }\n                break;\n            case 'd':  // a day / in a day / a day ago\n                return (withoutSuffix || isFuture) ? 'deň' : 'dňom';\n            case 'dd': // 9 days / in 9 days / 9 days ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural(number) ? 'dni' : 'dní');\n                } else {\n                    return result + 'dňami';\n                }\n                break;\n            case 'M':  // a month / in a month / a month ago\n                return (withoutSuffix || isFuture) ? 'mesiac' : 'mesiacom';\n            case 'MM': // 9 months / in 9 months / 9 months ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural(number) ? 'mesiace' : 'mesiacov');\n                } else {\n                    return result + 'mesiacmi';\n                }\n                break;\n            case 'y':  // a year / in a year / a year ago\n                return (withoutSuffix || isFuture) ? 'rok' : 'rokom';\n            case 'yy': // 9 years / in 9 years / 9 years ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural(number) ? 'roky' : 'rokov');\n                } else {\n                    return result + 'rokmi';\n                }\n                break;\n        }\n    }\n\n    var sk = moment.defineLocale('sk', {\n        months : months,\n        monthsShort : monthsShort,\n        weekdays : 'nedeľa_pondelok_utorok_streda_štvrtok_piatok_sobota'.split('_'),\n        weekdaysShort : 'ne_po_ut_st_št_pi_so'.split('_'),\n        weekdaysMin : 'ne_po_ut_st_št_pi_so'.split('_'),\n        longDateFormat : {\n            LT: 'H:mm',\n            LTS : 'H:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D. MMMM YYYY',\n            LLL : 'D. MMMM YYYY H:mm',\n            LLLL : 'dddd D. MMMM YYYY H:mm'\n        },\n        calendar : {\n            sameDay: '[dnes o] LT',\n            nextDay: '[zajtra o] LT',\n            nextWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[v nedeľu o] LT';\n                    case 1:\n                    case 2:\n                        return '[v] dddd [o] LT';\n                    case 3:\n                        return '[v stredu o] LT';\n                    case 4:\n                        return '[vo štvrtok o] LT';\n                    case 5:\n                        return '[v piatok o] LT';\n                    case 6:\n                        return '[v sobotu o] LT';\n                }\n            },\n            lastDay: '[včera o] LT',\n            lastWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[minulú nedeľu o] LT';\n                    case 1:\n                    case 2:\n                        return '[minulý] dddd [o] LT';\n                    case 3:\n                        return '[minulú stredu o] LT';\n                    case 4:\n                    case 5:\n                        return '[minulý] dddd [o] LT';\n                    case 6:\n                        return '[minulú sobotu o] LT';\n                }\n            },\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'za %s',\n            past : 'pred %s',\n            s : translate,\n            ss : translate,\n            m : translate,\n            mm : translate,\n            h : translate,\n            hh : translate,\n            d : translate,\n            dd : translate,\n            M : translate,\n            MM : translate,\n            y : translate,\n            yy : translate\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return sk;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    function processRelativeTime(number, withoutSuffix, key, isFuture) {\n        var result = number + ' ';\n        switch (key) {\n            case 's':\n                return withoutSuffix || isFuture ? 'nekaj sekund' : 'nekaj sekundami';\n            case 'ss':\n                if (number === 1) {\n                    result += withoutSuffix ? 'sekundo' : 'sekundi';\n                } else if (number === 2) {\n                    result += withoutSuffix || isFuture ? 'sekundi' : 'sekundah';\n                } else if (number < 5) {\n                    result += withoutSuffix || isFuture ? 'sekunde' : 'sekundah';\n                } else {\n                    result += withoutSuffix || isFuture ? 'sekund' : 'sekund';\n                }\n                return result;\n            case 'm':\n                return withoutSuffix ? 'ena minuta' : 'eno minuto';\n            case 'mm':\n                if (number === 1) {\n                    result += withoutSuffix ? 'minuta' : 'minuto';\n                } else if (number === 2) {\n                    result += withoutSuffix || isFuture ? 'minuti' : 'minutama';\n                } else if (number < 5) {\n                    result += withoutSuffix || isFuture ? 'minute' : 'minutami';\n                } else {\n                    result += withoutSuffix || isFuture ? 'minut' : 'minutami';\n                }\n                return result;\n            case 'h':\n                return withoutSuffix ? 'ena ura' : 'eno uro';\n            case 'hh':\n                if (number === 1) {\n                    result += withoutSuffix ? 'ura' : 'uro';\n                } else if (number === 2) {\n                    result += withoutSuffix || isFuture ? 'uri' : 'urama';\n                } else if (number < 5) {\n                    result += withoutSuffix || isFuture ? 'ure' : 'urami';\n                } else {\n                    result += withoutSuffix || isFuture ? 'ur' : 'urami';\n                }\n                return result;\n            case 'd':\n                return withoutSuffix || isFuture ? 'en dan' : 'enim dnem';\n            case 'dd':\n                if (number === 1) {\n                    result += withoutSuffix || isFuture ? 'dan' : 'dnem';\n                } else if (number === 2) {\n                    result += withoutSuffix || isFuture ? 'dni' : 'dnevoma';\n                } else {\n                    result += withoutSuffix || isFuture ? 'dni' : 'dnevi';\n                }\n                return result;\n            case 'M':\n                return withoutSuffix || isFuture ? 'en mesec' : 'enim mesecem';\n            case 'MM':\n                if (number === 1) {\n                    result += withoutSuffix || isFuture ? 'mesec' : 'mesecem';\n                } else if (number === 2) {\n                    result += withoutSuffix || isFuture ? 'meseca' : 'mesecema';\n                } else if (number < 5) {\n                    result += withoutSuffix || isFuture ? 'mesece' : 'meseci';\n                } else {\n                    result += withoutSuffix || isFuture ? 'mesecev' : 'meseci';\n                }\n                return result;\n            case 'y':\n                return withoutSuffix || isFuture ? 'eno leto' : 'enim letom';\n            case 'yy':\n                if (number === 1) {\n                    result += withoutSuffix || isFuture ? 'leto' : 'letom';\n                } else if (number === 2) {\n                    result += withoutSuffix || isFuture ? 'leti' : 'letoma';\n                } else if (number < 5) {\n                    result += withoutSuffix || isFuture ? 'leta' : 'leti';\n                } else {\n                    result += withoutSuffix || isFuture ? 'let' : 'leti';\n                }\n                return result;\n        }\n    }\n\n    var sl = moment.defineLocale('sl', {\n        months : 'januar_februar_marec_april_maj_junij_julij_avgust_september_oktober_november_december'.split('_'),\n        monthsShort : 'jan._feb._mar._apr._maj._jun._jul._avg._sep._okt._nov._dec.'.split('_'),\n        monthsParseExact: true,\n        weekdays : 'nedelja_ponedeljek_torek_sreda_četrtek_petek_sobota'.split('_'),\n        weekdaysShort : 'ned._pon._tor._sre._čet._pet._sob.'.split('_'),\n        weekdaysMin : 'ne_po_to_sr_če_pe_so'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'H:mm',\n            LTS : 'H:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D. MMMM YYYY',\n            LLL : 'D. MMMM YYYY H:mm',\n            LLLL : 'dddd, D. MMMM YYYY H:mm'\n        },\n        calendar : {\n            sameDay  : '[danes ob] LT',\n            nextDay  : '[jutri ob] LT',\n\n            nextWeek : function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[v] [nedeljo] [ob] LT';\n                    case 3:\n                        return '[v] [sredo] [ob] LT';\n                    case 6:\n                        return '[v] [soboto] [ob] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 5:\n                        return '[v] dddd [ob] LT';\n                }\n            },\n            lastDay  : '[včeraj ob] LT',\n            lastWeek : function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[prejšnjo] [nedeljo] [ob] LT';\n                    case 3:\n                        return '[prejšnjo] [sredo] [ob] LT';\n                    case 6:\n                        return '[prejšnjo] [soboto] [ob] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 5:\n                        return '[prejšnji] dddd [ob] LT';\n                }\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'čez %s',\n            past   : 'pred %s',\n            s      : processRelativeTime,\n            ss     : processRelativeTime,\n            m      : processRelativeTime,\n            mm     : processRelativeTime,\n            h      : processRelativeTime,\n            hh     : processRelativeTime,\n            d      : processRelativeTime,\n            dd     : processRelativeTime,\n            M      : processRelativeTime,\n            MM     : processRelativeTime,\n            y      : processRelativeTime,\n            yy     : processRelativeTime\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n\n    return sl;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var sq = moment.defineLocale('sq', {\n        months : 'Janar_Shkurt_Mars_Prill_Maj_Qershor_Korrik_Gusht_Shtator_Tetor_Nëntor_Dhjetor'.split('_'),\n        monthsShort : 'Jan_Shk_Mar_Pri_Maj_Qer_Kor_Gus_Sht_Tet_Nën_Dhj'.split('_'),\n        weekdays : 'E Diel_E Hënë_E Martë_E Mërkurë_E Enjte_E Premte_E Shtunë'.split('_'),\n        weekdaysShort : 'Die_Hën_Mar_Mër_Enj_Pre_Sht'.split('_'),\n        weekdaysMin : 'D_H_Ma_Më_E_P_Sh'.split('_'),\n        weekdaysParseExact : true,\n        meridiemParse: /PD|MD/,\n        isPM: function (input) {\n            return input.charAt(0) === 'M';\n        },\n        meridiem : function (hours, minutes, isLower) {\n            return hours < 12 ? 'PD' : 'MD';\n        },\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd, D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay : '[Sot në] LT',\n            nextDay : '[Nesër në] LT',\n            nextWeek : 'dddd [në] LT',\n            lastDay : '[Dje në] LT',\n            lastWeek : 'dddd [e kaluar në] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'në %s',\n            past : '%s më parë',\n            s : 'disa sekonda',\n            ss : '%d sekonda',\n            m : 'një minutë',\n            mm : '%d minuta',\n            h : 'një orë',\n            hh : '%d orë',\n            d : 'një ditë',\n            dd : '%d ditë',\n            M : 'një muaj',\n            MM : '%d muaj',\n            y : 'një vit',\n            yy : '%d vite'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return sq;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var translator = {\n        words: { //Different grammatical cases\n            ss: ['sekunda', 'sekunde', 'sekundi'],\n            m: ['jedan minut', 'jedne minute'],\n            mm: ['minut', 'minute', 'minuta'],\n            h: ['jedan sat', 'jednog sata'],\n            hh: ['sat', 'sata', 'sati'],\n            dd: ['dan', 'dana', 'dana'],\n            MM: ['mesec', 'meseca', 'meseci'],\n            yy: ['godina', 'godine', 'godina']\n        },\n        correctGrammaticalCase: function (number, wordKey) {\n            return number === 1 ? wordKey[0] : (number >= 2 && number <= 4 ? wordKey[1] : wordKey[2]);\n        },\n        translate: function (number, withoutSuffix, key) {\n            var wordKey = translator.words[key];\n            if (key.length === 1) {\n                return withoutSuffix ? wordKey[0] : wordKey[1];\n            } else {\n                return number + ' ' + translator.correctGrammaticalCase(number, wordKey);\n            }\n        }\n    };\n\n    var sr = moment.defineLocale('sr', {\n        months: 'januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar'.split('_'),\n        monthsShort: 'jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.'.split('_'),\n        monthsParseExact: true,\n        weekdays: 'nedelja_ponedeljak_utorak_sreda_četvrtak_petak_subota'.split('_'),\n        weekdaysShort: 'ned._pon._uto._sre._čet._pet._sub.'.split('_'),\n        weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat: {\n            LT: 'H:mm',\n            LTS : 'H:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D. MMMM YYYY',\n            LLL: 'D. MMMM YYYY H:mm',\n            LLLL: 'dddd, D. MMMM YYYY H:mm'\n        },\n        calendar: {\n            sameDay: '[danas u] LT',\n            nextDay: '[sutra u] LT',\n            nextWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[u] [nedelju] [u] LT';\n                    case 3:\n                        return '[u] [sredu] [u] LT';\n                    case 6:\n                        return '[u] [subotu] [u] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 5:\n                        return '[u] dddd [u] LT';\n                }\n            },\n            lastDay  : '[juče u] LT',\n            lastWeek : function () {\n                var lastWeekDays = [\n                    '[prošle] [nedelje] [u] LT',\n                    '[prošlog] [ponedeljka] [u] LT',\n                    '[prošlog] [utorka] [u] LT',\n                    '[prošle] [srede] [u] LT',\n                    '[prošlog] [četvrtka] [u] LT',\n                    '[prošlog] [petka] [u] LT',\n                    '[prošle] [subote] [u] LT'\n                ];\n                return lastWeekDays[this.day()];\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'za %s',\n            past   : 'pre %s',\n            s      : 'nekoliko sekundi',\n            ss     : translator.translate,\n            m      : translator.translate,\n            mm     : translator.translate,\n            h      : translator.translate,\n            hh     : translator.translate,\n            d      : 'dan',\n            dd     : translator.translate,\n            M      : 'mesec',\n            MM     : translator.translate,\n            y      : 'godinu',\n            yy     : translator.translate\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n\n    return sr;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var translator = {\n        words: { //Different grammatical cases\n            ss: ['секунда', 'секунде', 'секунди'],\n            m: ['један минут', 'једне минуте'],\n            mm: ['минут', 'минуте', 'минута'],\n            h: ['један сат', 'једног сата'],\n            hh: ['сат', 'сата', 'сати'],\n            dd: ['дан', 'дана', 'дана'],\n            MM: ['месец', 'месеца', 'месеци'],\n            yy: ['година', 'године', 'година']\n        },\n        correctGrammaticalCase: function (number, wordKey) {\n            return number === 1 ? wordKey[0] : (number >= 2 && number <= 4 ? wordKey[1] : wordKey[2]);\n        },\n        translate: function (number, withoutSuffix, key) {\n            var wordKey = translator.words[key];\n            if (key.length === 1) {\n                return withoutSuffix ? wordKey[0] : wordKey[1];\n            } else {\n                return number + ' ' + translator.correctGrammaticalCase(number, wordKey);\n            }\n        }\n    };\n\n    var srCyrl = moment.defineLocale('sr-cyrl', {\n        months: 'јануар_фебруар_март_април_мај_јун_јул_август_септембар_октобар_новембар_децембар'.split('_'),\n        monthsShort: 'јан._феб._мар._апр._мај_јун_јул_авг._сеп._окт._нов._дец.'.split('_'),\n        monthsParseExact: true,\n        weekdays: 'недеља_понедељак_уторак_среда_четвртак_петак_субота'.split('_'),\n        weekdaysShort: 'нед._пон._уто._сре._чет._пет._суб.'.split('_'),\n        weekdaysMin: 'не_по_ут_ср_че_пе_су'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat: {\n            LT: 'H:mm',\n            LTS : 'H:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D. MMMM YYYY',\n            LLL: 'D. MMMM YYYY H:mm',\n            LLLL: 'dddd, D. MMMM YYYY H:mm'\n        },\n        calendar: {\n            sameDay: '[данас у] LT',\n            nextDay: '[сутра у] LT',\n            nextWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[у] [недељу] [у] LT';\n                    case 3:\n                        return '[у] [среду] [у] LT';\n                    case 6:\n                        return '[у] [суботу] [у] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 5:\n                        return '[у] dddd [у] LT';\n                }\n            },\n            lastDay  : '[јуче у] LT',\n            lastWeek : function () {\n                var lastWeekDays = [\n                    '[прошле] [недеље] [у] LT',\n                    '[прошлог] [понедељка] [у] LT',\n                    '[прошлог] [уторка] [у] LT',\n                    '[прошле] [среде] [у] LT',\n                    '[прошлог] [четвртка] [у] LT',\n                    '[прошлог] [петка] [у] LT',\n                    '[прошле] [суботе] [у] LT'\n                ];\n                return lastWeekDays[this.day()];\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'за %s',\n            past   : 'пре %s',\n            s      : 'неколико секунди',\n            ss     : translator.translate,\n            m      : translator.translate,\n            mm     : translator.translate,\n            h      : translator.translate,\n            hh     : translator.translate,\n            d      : 'дан',\n            dd     : translator.translate,\n            M      : 'месец',\n            MM     : translator.translate,\n            y      : 'годину',\n            yy     : translator.translate\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n\n    return srCyrl;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var ss = moment.defineLocale('ss', {\n        months : \"Bhimbidvwane_Indlovana_Indlov'lenkhulu_Mabasa_Inkhwekhweti_Inhlaba_Kholwane_Ingci_Inyoni_Imphala_Lweti_Ingongoni\".split('_'),\n        monthsShort : 'Bhi_Ina_Inu_Mab_Ink_Inh_Kho_Igc_Iny_Imp_Lwe_Igo'.split('_'),\n        weekdays : 'Lisontfo_Umsombuluko_Lesibili_Lesitsatfu_Lesine_Lesihlanu_Umgcibelo'.split('_'),\n        weekdaysShort : 'Lis_Umb_Lsb_Les_Lsi_Lsh_Umg'.split('_'),\n        weekdaysMin : 'Li_Us_Lb_Lt_Ls_Lh_Ug'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'h:mm A',\n            LTS : 'h:mm:ss A',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY h:mm A',\n            LLLL : 'dddd, D MMMM YYYY h:mm A'\n        },\n        calendar : {\n            sameDay : '[Namuhla nga] LT',\n            nextDay : '[Kusasa nga] LT',\n            nextWeek : 'dddd [nga] LT',\n            lastDay : '[Itolo nga] LT',\n            lastWeek : 'dddd [leliphelile] [nga] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'nga %s',\n            past : 'wenteka nga %s',\n            s : 'emizuzwana lomcane',\n            ss : '%d mzuzwana',\n            m : 'umzuzu',\n            mm : '%d emizuzu',\n            h : 'lihora',\n            hh : '%d emahora',\n            d : 'lilanga',\n            dd : '%d emalanga',\n            M : 'inyanga',\n            MM : '%d tinyanga',\n            y : 'umnyaka',\n            yy : '%d iminyaka'\n        },\n        meridiemParse: /ekuseni|emini|entsambama|ebusuku/,\n        meridiem : function (hours, minutes, isLower) {\n            if (hours < 11) {\n                return 'ekuseni';\n            } else if (hours < 15) {\n                return 'emini';\n            } else if (hours < 19) {\n                return 'entsambama';\n            } else {\n                return 'ebusuku';\n            }\n        },\n        meridiemHour : function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'ekuseni') {\n                return hour;\n            } else if (meridiem === 'emini') {\n                return hour >= 11 ? hour : hour + 12;\n            } else if (meridiem === 'entsambama' || meridiem === 'ebusuku') {\n                if (hour === 0) {\n                    return 0;\n                }\n                return hour + 12;\n            }\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}/,\n        ordinal : '%d',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return ss;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var sv = moment.defineLocale('sv', {\n        months : 'januari_februari_mars_april_maj_juni_juli_augusti_september_oktober_november_december'.split('_'),\n        monthsShort : 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),\n        weekdays : 'söndag_måndag_tisdag_onsdag_torsdag_fredag_lördag'.split('_'),\n        weekdaysShort : 'sön_mån_tis_ons_tor_fre_lör'.split('_'),\n        weekdaysMin : 'sö_må_ti_on_to_fr_lö'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'YYYY-MM-DD',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY [kl.] HH:mm',\n            LLLL : 'dddd D MMMM YYYY [kl.] HH:mm',\n            lll : 'D MMM YYYY HH:mm',\n            llll : 'ddd D MMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: '[Idag] LT',\n            nextDay: '[Imorgon] LT',\n            lastDay: '[Igår] LT',\n            nextWeek: '[På] dddd LT',\n            lastWeek: '[I] dddd[s] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'om %s',\n            past : 'för %s sedan',\n            s : 'några sekunder',\n            ss : '%d sekunder',\n            m : 'en minut',\n            mm : '%d minuter',\n            h : 'en timme',\n            hh : '%d timmar',\n            d : 'en dag',\n            dd : '%d dagar',\n            M : 'en månad',\n            MM : '%d månader',\n            y : 'ett år',\n            yy : '%d år'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(e|a)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (~~(number % 100 / 10) === 1) ? 'e' :\n                (b === 1) ? 'a' :\n                (b === 2) ? 'a' :\n                (b === 3) ? 'e' : 'e';\n            return number + output;\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return sv;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var sw = moment.defineLocale('sw', {\n        months : 'Januari_Februari_Machi_Aprili_Mei_Juni_Julai_Agosti_Septemba_Oktoba_Novemba_Desemba'.split('_'),\n        monthsShort : 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ago_Sep_Okt_Nov_Des'.split('_'),\n        weekdays : 'Jumapili_Jumatatu_Jumanne_Jumatano_Alhamisi_Ijumaa_Jumamosi'.split('_'),\n        weekdaysShort : 'Jpl_Jtat_Jnne_Jtan_Alh_Ijm_Jmos'.split('_'),\n        weekdaysMin : 'J2_J3_J4_J5_Al_Ij_J1'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd, D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay : '[leo saa] LT',\n            nextDay : '[kesho saa] LT',\n            nextWeek : '[wiki ijayo] dddd [saat] LT',\n            lastDay : '[jana] LT',\n            lastWeek : '[wiki iliyopita] dddd [saat] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s baadaye',\n            past : 'tokea %s',\n            s : 'hivi punde',\n            ss : 'sekunde %d',\n            m : 'dakika moja',\n            mm : 'dakika %d',\n            h : 'saa limoja',\n            hh : 'masaa %d',\n            d : 'siku moja',\n            dd : 'masiku %d',\n            M : 'mwezi mmoja',\n            MM : 'miezi %d',\n            y : 'mwaka mmoja',\n            yy : 'miaka %d'\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n\n    return sw;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var symbolMap = {\n        '1': '௧',\n        '2': '௨',\n        '3': '௩',\n        '4': '௪',\n        '5': '௫',\n        '6': '௬',\n        '7': '௭',\n        '8': '௮',\n        '9': '௯',\n        '0': '௦'\n    }, numberMap = {\n        '௧': '1',\n        '௨': '2',\n        '௩': '3',\n        '௪': '4',\n        '௫': '5',\n        '௬': '6',\n        '௭': '7',\n        '௮': '8',\n        '௯': '9',\n        '௦': '0'\n    };\n\n    var ta = moment.defineLocale('ta', {\n        months : 'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split('_'),\n        monthsShort : 'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split('_'),\n        weekdays : 'ஞாயிற்றுக்கிழமை_திங்கட்கிழமை_செவ்வாய்கிழமை_புதன்கிழமை_வியாழக்கிழமை_வெள்ளிக்கிழமை_சனிக்கிழமை'.split('_'),\n        weekdaysShort : 'ஞாயிறு_திங்கள்_செவ்வாய்_புதன்_வியாழன்_வெள்ளி_சனி'.split('_'),\n        weekdaysMin : 'ஞா_தி_செ_பு_வி_வெ_ச'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY, HH:mm',\n            LLLL : 'dddd, D MMMM YYYY, HH:mm'\n        },\n        calendar : {\n            sameDay : '[இன்று] LT',\n            nextDay : '[நாளை] LT',\n            nextWeek : 'dddd, LT',\n            lastDay : '[நேற்று] LT',\n            lastWeek : '[கடந்த வாரம்] dddd, LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s இல்',\n            past : '%s முன்',\n            s : 'ஒரு சில விநாடிகள்',\n            ss : '%d விநாடிகள்',\n            m : 'ஒரு நிமிடம்',\n            mm : '%d நிமிடங்கள்',\n            h : 'ஒரு மணி நேரம்',\n            hh : '%d மணி நேரம்',\n            d : 'ஒரு நாள்',\n            dd : '%d நாட்கள்',\n            M : 'ஒரு மாதம்',\n            MM : '%d மாதங்கள்',\n            y : 'ஒரு வருடம்',\n            yy : '%d ஆண்டுகள்'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}வது/,\n        ordinal : function (number) {\n            return number + 'வது';\n        },\n        preparse: function (string) {\n            return string.replace(/[௧௨௩௪௫௬௭௮௯௦]/g, function (match) {\n                return numberMap[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap[match];\n            });\n        },\n        // refer http://ta.wikipedia.org/s/1er1\n        meridiemParse: /யாமம்|வைகறை|காலை|நண்பகல்|எற்பாடு|மாலை/,\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 2) {\n                return ' யாமம்';\n            } else if (hour < 6) {\n                return ' வைகறை';  // வைகறை\n            } else if (hour < 10) {\n                return ' காலை'; // காலை\n            } else if (hour < 14) {\n                return ' நண்பகல்'; // நண்பகல்\n            } else if (hour < 18) {\n                return ' எற்பாடு'; // எற்பாடு\n            } else if (hour < 22) {\n                return ' மாலை'; // மாலை\n            } else {\n                return ' யாமம்';\n            }\n        },\n        meridiemHour : function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'யாமம்') {\n                return hour < 2 ? hour : hour + 12;\n            } else if (meridiem === 'வைகறை' || meridiem === 'காலை') {\n                return hour;\n            } else if (meridiem === 'நண்பகல்') {\n                return hour >= 10 ? hour : hour + 12;\n            } else {\n                return hour + 12;\n            }\n        },\n        week : {\n            dow : 0, // Sunday is the first day of the week.\n            doy : 6  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n\n    return ta;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var te = moment.defineLocale('te', {\n        months : 'జనవరి_ఫిబ్రవరి_మార్చి_ఏప్రిల్_మే_జూన్_జూలై_ఆగస్టు_సెప్టెంబర్_అక్టోబర్_నవంబర్_డిసెంబర్'.split('_'),\n        monthsShort : 'జన._ఫిబ్ర._మార్చి_ఏప్రి._మే_జూన్_జూలై_ఆగ._సెప్._అక్టో._నవ._డిసె.'.split('_'),\n        monthsParseExact : true,\n        weekdays : 'ఆదివారం_సోమవారం_మంగళవారం_బుధవారం_గురువారం_శుక్రవారం_శనివారం'.split('_'),\n        weekdaysShort : 'ఆది_సోమ_మంగళ_బుధ_గురు_శుక్ర_శని'.split('_'),\n        weekdaysMin : 'ఆ_సో_మం_బు_గు_శు_శ'.split('_'),\n        longDateFormat : {\n            LT : 'A h:mm',\n            LTS : 'A h:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY, A h:mm',\n            LLLL : 'dddd, D MMMM YYYY, A h:mm'\n        },\n        calendar : {\n            sameDay : '[నేడు] LT',\n            nextDay : '[రేపు] LT',\n            nextWeek : 'dddd, LT',\n            lastDay : '[నిన్న] LT',\n            lastWeek : '[గత] dddd, LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s లో',\n            past : '%s క్రితం',\n            s : 'కొన్ని క్షణాలు',\n            ss : '%d సెకన్లు',\n            m : 'ఒక నిమిషం',\n            mm : '%d నిమిషాలు',\n            h : 'ఒక గంట',\n            hh : '%d గంటలు',\n            d : 'ఒక రోజు',\n            dd : '%d రోజులు',\n            M : 'ఒక నెల',\n            MM : '%d నెలలు',\n            y : 'ఒక సంవత్సరం',\n            yy : '%d సంవత్సరాలు'\n        },\n        dayOfMonthOrdinalParse : /\\d{1,2}వ/,\n        ordinal : '%dవ',\n        meridiemParse: /రాత్రి|ఉదయం|మధ్యాహ్నం|సాయంత్రం/,\n        meridiemHour : function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'రాత్రి') {\n                return hour < 4 ? hour : hour + 12;\n            } else if (meridiem === 'ఉదయం') {\n                return hour;\n            } else if (meridiem === 'మధ్యాహ్నం') {\n                return hour >= 10 ? hour : hour + 12;\n            } else if (meridiem === 'సాయంత్రం') {\n                return hour + 12;\n            }\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'రాత్రి';\n            } else if (hour < 10) {\n                return 'ఉదయం';\n            } else if (hour < 17) {\n                return 'మధ్యాహ్నం';\n            } else if (hour < 20) {\n                return 'సాయంత్రం';\n            } else {\n                return 'రాత్రి';\n            }\n        },\n        week : {\n            dow : 0, // Sunday is the first day of the week.\n            doy : 6  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n\n    return te;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var tet = moment.defineLocale('tet', {\n        months : 'Janeiru_Fevereiru_Marsu_Abril_Maiu_Juñu_Jullu_Agustu_Setembru_Outubru_Novembru_Dezembru'.split('_'),\n        monthsShort : 'Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez'.split('_'),\n        weekdays : 'Domingu_Segunda_Tersa_Kuarta_Kinta_Sesta_Sabadu'.split('_'),\n        weekdaysShort : 'Dom_Seg_Ters_Kua_Kint_Sest_Sab'.split('_'),\n        weekdaysMin : 'Do_Seg_Te_Ku_Ki_Ses_Sa'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd, D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: '[Ohin iha] LT',\n            nextDay: '[Aban iha] LT',\n            nextWeek: 'dddd [iha] LT',\n            lastDay: '[Horiseik iha] LT',\n            lastWeek: 'dddd [semana kotuk] [iha] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'iha %s',\n            past : '%s liuba',\n            s : 'minutu balun',\n            ss : 'minutu %d',\n            m : 'minutu ida',\n            mm : 'minutu %d',\n            h : 'oras ida',\n            hh : 'oras %d',\n            d : 'loron ida',\n            dd : 'loron %d',\n            M : 'fulan ida',\n            MM : 'fulan %d',\n            y : 'tinan ida',\n            yy : 'tinan %d'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (~~(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n            return number + output;\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return tet;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var suffixes = {\n        0: '-ум',\n        1: '-ум',\n        2: '-юм',\n        3: '-юм',\n        4: '-ум',\n        5: '-ум',\n        6: '-ум',\n        7: '-ум',\n        8: '-ум',\n        9: '-ум',\n        10: '-ум',\n        12: '-ум',\n        13: '-ум',\n        20: '-ум',\n        30: '-юм',\n        40: '-ум',\n        50: '-ум',\n        60: '-ум',\n        70: '-ум',\n        80: '-ум',\n        90: '-ум',\n        100: '-ум'\n    };\n\n    var tg = moment.defineLocale('tg', {\n        months : 'январ_феврал_март_апрел_май_июн_июл_август_сентябр_октябр_ноябр_декабр'.split('_'),\n        monthsShort : 'янв_фев_мар_апр_май_июн_июл_авг_сен_окт_ноя_дек'.split('_'),\n        weekdays : 'якшанбе_душанбе_сешанбе_чоршанбе_панҷшанбе_ҷумъа_шанбе'.split('_'),\n        weekdaysShort : 'яшб_дшб_сшб_чшб_пшб_ҷум_шнб'.split('_'),\n        weekdaysMin : 'яш_дш_сш_чш_пш_ҷм_шб'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd, D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay : '[Имрӯз соати] LT',\n            nextDay : '[Пагоҳ соати] LT',\n            lastDay : '[Дирӯз соати] LT',\n            nextWeek : 'dddd[и] [ҳафтаи оянда соати] LT',\n            lastWeek : 'dddd[и] [ҳафтаи гузашта соати] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'баъди %s',\n            past : '%s пеш',\n            s : 'якчанд сония',\n            m : 'як дақиқа',\n            mm : '%d дақиқа',\n            h : 'як соат',\n            hh : '%d соат',\n            d : 'як рӯз',\n            dd : '%d рӯз',\n            M : 'як моҳ',\n            MM : '%d моҳ',\n            y : 'як сол',\n            yy : '%d сол'\n        },\n        meridiemParse: /шаб|субҳ|рӯз|бегоҳ/,\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'шаб') {\n                return hour < 4 ? hour : hour + 12;\n            } else if (meridiem === 'субҳ') {\n                return hour;\n            } else if (meridiem === 'рӯз') {\n                return hour >= 11 ? hour : hour + 12;\n            } else if (meridiem === 'бегоҳ') {\n                return hour + 12;\n            }\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'шаб';\n            } else if (hour < 11) {\n                return 'субҳ';\n            } else if (hour < 16) {\n                return 'рӯз';\n            } else if (hour < 19) {\n                return 'бегоҳ';\n            } else {\n                return 'шаб';\n            }\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}-(ум|юм)/,\n        ordinal: function (number) {\n            var a = number % 10,\n                b = number >= 100 ? 100 : null;\n            return number + (suffixes[number] || suffixes[a] || suffixes[b]);\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1th is the first week of the year.\n        }\n    });\n\n    return tg;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var th = moment.defineLocale('th', {\n        months : 'มกราคม_กุมภาพันธ์_มีนาคม_เมษายน_พฤษภาคม_มิถุนายน_กรกฎาคม_สิงหาคม_กันยายน_ตุลาคม_พฤศจิกายน_ธันวาคม'.split('_'),\n        monthsShort : 'ม.ค._ก.พ._มี.ค._เม.ย._พ.ค._มิ.ย._ก.ค._ส.ค._ก.ย._ต.ค._พ.ย._ธ.ค.'.split('_'),\n        monthsParseExact: true,\n        weekdays : 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัสบดี_ศุกร์_เสาร์'.split('_'),\n        weekdaysShort : 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัส_ศุกร์_เสาร์'.split('_'), // yes, three characters difference\n        weekdaysMin : 'อา._จ._อ._พ._พฤ._ศ._ส.'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'H:mm',\n            LTS : 'H:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY เวลา H:mm',\n            LLLL : 'วันddddที่ D MMMM YYYY เวลา H:mm'\n        },\n        meridiemParse: /ก่อนเที่ยง|หลังเที่ยง/,\n        isPM: function (input) {\n            return input === 'หลังเที่ยง';\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'ก่อนเที่ยง';\n            } else {\n                return 'หลังเที่ยง';\n            }\n        },\n        calendar : {\n            sameDay : '[วันนี้ เวลา] LT',\n            nextDay : '[พรุ่งนี้ เวลา] LT',\n            nextWeek : 'dddd[หน้า เวลา] LT',\n            lastDay : '[เมื่อวานนี้ เวลา] LT',\n            lastWeek : '[วัน]dddd[ที่แล้ว เวลา] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'อีก %s',\n            past : '%sที่แล้ว',\n            s : 'ไม่กี่วินาที',\n            ss : '%d วินาที',\n            m : '1 นาที',\n            mm : '%d นาที',\n            h : '1 ชั่วโมง',\n            hh : '%d ชั่วโมง',\n            d : '1 วัน',\n            dd : '%d วัน',\n            M : '1 เดือน',\n            MM : '%d เดือน',\n            y : '1 ปี',\n            yy : '%d ปี'\n        }\n    });\n\n    return th;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var tlPh = moment.defineLocale('tl-ph', {\n        months : 'Enero_Pebrero_Marso_Abril_Mayo_Hunyo_Hulyo_Agosto_Setyembre_Oktubre_Nobyembre_Disyembre'.split('_'),\n        monthsShort : 'Ene_Peb_Mar_Abr_May_Hun_Hul_Ago_Set_Okt_Nob_Dis'.split('_'),\n        weekdays : 'Linggo_Lunes_Martes_Miyerkules_Huwebes_Biyernes_Sabado'.split('_'),\n        weekdaysShort : 'Lin_Lun_Mar_Miy_Huw_Biy_Sab'.split('_'),\n        weekdaysMin : 'Li_Lu_Ma_Mi_Hu_Bi_Sab'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'MM/D/YYYY',\n            LL : 'MMMM D, YYYY',\n            LLL : 'MMMM D, YYYY HH:mm',\n            LLLL : 'dddd, MMMM DD, YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: 'LT [ngayong araw]',\n            nextDay: '[Bukas ng] LT',\n            nextWeek: 'LT [sa susunod na] dddd',\n            lastDay: 'LT [kahapon]',\n            lastWeek: 'LT [noong nakaraang] dddd',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'sa loob ng %s',\n            past : '%s ang nakalipas',\n            s : 'ilang segundo',\n            ss : '%d segundo',\n            m : 'isang minuto',\n            mm : '%d minuto',\n            h : 'isang oras',\n            hh : '%d oras',\n            d : 'isang araw',\n            dd : '%d araw',\n            M : 'isang buwan',\n            MM : '%d buwan',\n            y : 'isang taon',\n            yy : '%d taon'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}/,\n        ordinal : function (number) {\n            return number;\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return tlPh;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var numbersNouns = 'pagh_wa’_cha’_wej_loS_vagh_jav_Soch_chorgh_Hut'.split('_');\n\n    function translateFuture(output) {\n        var time = output;\n        time = (output.indexOf('jaj') !== -1) ?\n        time.slice(0, -3) + 'leS' :\n        (output.indexOf('jar') !== -1) ?\n        time.slice(0, -3) + 'waQ' :\n        (output.indexOf('DIS') !== -1) ?\n        time.slice(0, -3) + 'nem' :\n        time + ' pIq';\n        return time;\n    }\n\n    function translatePast(output) {\n        var time = output;\n        time = (output.indexOf('jaj') !== -1) ?\n        time.slice(0, -3) + 'Hu’' :\n        (output.indexOf('jar') !== -1) ?\n        time.slice(0, -3) + 'wen' :\n        (output.indexOf('DIS') !== -1) ?\n        time.slice(0, -3) + 'ben' :\n        time + ' ret';\n        return time;\n    }\n\n    function translate(number, withoutSuffix, string, isFuture) {\n        var numberNoun = numberAsNoun(number);\n        switch (string) {\n            case 'ss':\n                return numberNoun + ' lup';\n            case 'mm':\n                return numberNoun + ' tup';\n            case 'hh':\n                return numberNoun + ' rep';\n            case 'dd':\n                return numberNoun + ' jaj';\n            case 'MM':\n                return numberNoun + ' jar';\n            case 'yy':\n                return numberNoun + ' DIS';\n        }\n    }\n\n    function numberAsNoun(number) {\n        var hundred = Math.floor((number % 1000) / 100),\n        ten = Math.floor((number % 100) / 10),\n        one = number % 10,\n        word = '';\n        if (hundred > 0) {\n            word += numbersNouns[hundred] + 'vatlh';\n        }\n        if (ten > 0) {\n            word += ((word !== '') ? ' ' : '') + numbersNouns[ten] + 'maH';\n        }\n        if (one > 0) {\n            word += ((word !== '') ? ' ' : '') + numbersNouns[one];\n        }\n        return (word === '') ? 'pagh' : word;\n    }\n\n    var tlh = moment.defineLocale('tlh', {\n        months : 'tera’ jar wa’_tera’ jar cha’_tera’ jar wej_tera’ jar loS_tera’ jar vagh_tera’ jar jav_tera’ jar Soch_tera’ jar chorgh_tera’ jar Hut_tera’ jar wa’maH_tera’ jar wa’maH wa’_tera’ jar wa’maH cha’'.split('_'),\n        monthsShort : 'jar wa’_jar cha’_jar wej_jar loS_jar vagh_jar jav_jar Soch_jar chorgh_jar Hut_jar wa’maH_jar wa’maH wa’_jar wa’maH cha’'.split('_'),\n        monthsParseExact : true,\n        weekdays : 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'),\n        weekdaysShort : 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'),\n        weekdaysMin : 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd, D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: '[DaHjaj] LT',\n            nextDay: '[wa’leS] LT',\n            nextWeek: 'LLL',\n            lastDay: '[wa’Hu’] LT',\n            lastWeek: 'LLL',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : translateFuture,\n            past : translatePast,\n            s : 'puS lup',\n            ss : translate,\n            m : 'wa’ tup',\n            mm : translate,\n            h : 'wa’ rep',\n            hh : translate,\n            d : 'wa’ jaj',\n            dd : translate,\n            M : 'wa’ jar',\n            MM : translate,\n            y : 'wa’ DIS',\n            yy : translate\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return tlh;\n\n})));\n","\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n    var suffixes = {\n        1: '\\'inci',\n        5: '\\'inci',\n        8: '\\'inci',\n        70: '\\'inci',\n        80: '\\'inci',\n        2: '\\'nci',\n        7: '\\'nci',\n        20: '\\'nci',\n        50: '\\'nci',\n        3: '\\'üncü',\n        4: '\\'üncü',\n        100: '\\'üncü',\n        6: '\\'ncı',\n        9: '\\'uncu',\n        10: '\\'uncu',\n        30: '\\'uncu',\n        60: '\\'ıncı',\n        90: '\\'ıncı'\n    };\n\n    var tr = moment.defineLocale('tr', {\n        months : 'Ocak_Şubat_Mart_Nisan_Mayıs_Haziran_Temmuz_Ağustos_Eylül_Ekim_Kasım_Aralık'.split('_'),\n        monthsShort : 'Oca_Şub_Mar_Nis_May_Haz_Tem_Ağu_Eyl_Eki_Kas_Ara'.split('_'),\n        weekdays : 'Pazar_Pazartesi_Salı_Çarşamba_Perşembe_Cuma_Cumartesi'.split('_'),\n        weekdaysShort : 'Paz_Pts_Sal_Çar_Per_Cum_Cts'.split('_'),\n        weekdaysMin : 'Pz_Pt_Sa_Ça_Pe_Cu_Ct'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd, D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay : '[bugün saat] LT',\n            nextDay : '[yarın saat] LT',\n            nextWeek : '[gelecek] dddd [saat] LT',\n            lastDay : '[dün] LT',\n            lastWeek : '[geçen] dddd [saat] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s sonra',\n            past : '%s önce',\n            s : 'birkaç saniye',\n            ss : '%d saniye',\n            m : 'bir dakika',\n            mm : '%d dakika',\n            h : 'bir saat',\n            hh : '%d saat',\n            d : 'bir gün',\n            dd : '%d gün',\n            M : 'bir ay',\n            MM : '%d ay',\n            y : 'bir yıl',\n            yy : '%d yıl'\n        },\n        ordinal: function (number, period) {\n            switch (period) {\n                case 'd':\n                case 'D':\n                case 'Do':\n                case 'DD':\n                    return number;\n                default:\n                    if (number === 0) {  // special case for zero\n                        return number + '\\'ıncı';\n                    }\n                    var a = number % 10,\n                        b = number % 100 - a,\n                        c = number >= 100 ? 100 : null;\n                    return number + (suffixes[a] || suffixes[b] || suffixes[c]);\n            }\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n\n    return tr;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    // After the year there should be a slash and the amount of years since December 26, 1979 in Roman numerals.\n    // This is currently too difficult (maybe even impossible) to add.\n    var tzl = moment.defineLocale('tzl', {\n        months : 'Januar_Fevraglh_Març_Avrïu_Mai_Gün_Julia_Guscht_Setemvar_Listopäts_Noemvar_Zecemvar'.split('_'),\n        monthsShort : 'Jan_Fev_Mar_Avr_Mai_Gün_Jul_Gus_Set_Lis_Noe_Zec'.split('_'),\n        weekdays : 'Súladi_Lúneçi_Maitzi_Márcuri_Xhúadi_Viénerçi_Sáturi'.split('_'),\n        weekdaysShort : 'Súl_Lún_Mai_Már_Xhú_Vié_Sát'.split('_'),\n        weekdaysMin : 'Sú_Lú_Ma_Má_Xh_Vi_Sá'.split('_'),\n        longDateFormat : {\n            LT : 'HH.mm',\n            LTS : 'HH.mm.ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D. MMMM [dallas] YYYY',\n            LLL : 'D. MMMM [dallas] YYYY HH.mm',\n            LLLL : 'dddd, [li] D. MMMM [dallas] YYYY HH.mm'\n        },\n        meridiemParse: /d\\'o|d\\'a/i,\n        isPM : function (input) {\n            return 'd\\'o' === input.toLowerCase();\n        },\n        meridiem : function (hours, minutes, isLower) {\n            if (hours > 11) {\n                return isLower ? 'd\\'o' : 'D\\'O';\n            } else {\n                return isLower ? 'd\\'a' : 'D\\'A';\n            }\n        },\n        calendar : {\n            sameDay : '[oxhi à] LT',\n            nextDay : '[demà à] LT',\n            nextWeek : 'dddd [à] LT',\n            lastDay : '[ieiri à] LT',\n            lastWeek : '[sür el] dddd [lasteu à] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'osprei %s',\n            past : 'ja%s',\n            s : processRelativeTime,\n            ss : processRelativeTime,\n            m : processRelativeTime,\n            mm : processRelativeTime,\n            h : processRelativeTime,\n            hh : processRelativeTime,\n            d : processRelativeTime,\n            dd : processRelativeTime,\n            M : processRelativeTime,\n            MM : processRelativeTime,\n            y : processRelativeTime,\n            yy : processRelativeTime\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    function processRelativeTime(number, withoutSuffix, key, isFuture) {\n        var format = {\n            's': ['viensas secunds', '\\'iensas secunds'],\n            'ss': [number + ' secunds', '' + number + ' secunds'],\n            'm': ['\\'n míut', '\\'iens míut'],\n            'mm': [number + ' míuts', '' + number + ' míuts'],\n            'h': ['\\'n þora', '\\'iensa þora'],\n            'hh': [number + ' þoras', '' + number + ' þoras'],\n            'd': ['\\'n ziua', '\\'iensa ziua'],\n            'dd': [number + ' ziuas', '' + number + ' ziuas'],\n            'M': ['\\'n mes', '\\'iens mes'],\n            'MM': [number + ' mesen', '' + number + ' mesen'],\n            'y': ['\\'n ar', '\\'iens ar'],\n            'yy': [number + ' ars', '' + number + ' ars']\n        };\n        return isFuture ? format[key][0] : (withoutSuffix ? format[key][0] : format[key][1]);\n    }\n\n    return tzl;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var tzm = moment.defineLocale('tzm', {\n        months : 'ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ'.split('_'),\n        monthsShort : 'ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ'.split('_'),\n        weekdays : 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),\n        weekdaysShort : 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),\n        weekdaysMin : 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: '[ⴰⵙⴷⵅ ⴴ] LT',\n            nextDay: '[ⴰⵙⴽⴰ ⴴ] LT',\n            nextWeek: 'dddd [ⴴ] LT',\n            lastDay: '[ⴰⵚⴰⵏⵜ ⴴ] LT',\n            lastWeek: 'dddd [ⴴ] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'ⴷⴰⴷⵅ ⵙ ⵢⴰⵏ %s',\n            past : 'ⵢⴰⵏ %s',\n            s : 'ⵉⵎⵉⴽ',\n            ss : '%d ⵉⵎⵉⴽ',\n            m : 'ⵎⵉⵏⵓⴺ',\n            mm : '%d ⵎⵉⵏⵓⴺ',\n            h : 'ⵙⴰⵄⴰ',\n            hh : '%d ⵜⴰⵙⵙⴰⵄⵉⵏ',\n            d : 'ⴰⵙⵙ',\n            dd : '%d oⵙⵙⴰⵏ',\n            M : 'ⴰⵢoⵓⵔ',\n            MM : '%d ⵉⵢⵢⵉⵔⵏ',\n            y : 'ⴰⵙⴳⴰⵙ',\n            yy : '%d ⵉⵙⴳⴰⵙⵏ'\n        },\n        week : {\n            dow : 6, // Saturday is the first day of the week.\n            doy : 12  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n\n    return tzm;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var tzmLatn = moment.defineLocale('tzm-latn', {\n        months : 'innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir'.split('_'),\n        monthsShort : 'innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir'.split('_'),\n        weekdays : 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),\n        weekdaysShort : 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),\n        weekdaysMin : 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: '[asdkh g] LT',\n            nextDay: '[aska g] LT',\n            nextWeek: 'dddd [g] LT',\n            lastDay: '[assant g] LT',\n            lastWeek: 'dddd [g] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'dadkh s yan %s',\n            past : 'yan %s',\n            s : 'imik',\n            ss : '%d imik',\n            m : 'minuḍ',\n            mm : '%d minuḍ',\n            h : 'saɛa',\n            hh : '%d tassaɛin',\n            d : 'ass',\n            dd : '%d ossan',\n            M : 'ayowr',\n            MM : '%d iyyirn',\n            y : 'asgas',\n            yy : '%d isgasn'\n        },\n        week : {\n            dow : 6, // Saturday is the first day of the week.\n            doy : 12  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n\n    return tzmLatn;\n\n})));\n","//! moment.js language configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var ugCn = moment.defineLocale('ug-cn', {\n        months: 'يانۋار_فېۋرال_مارت_ئاپرېل_ماي_ئىيۇن_ئىيۇل_ئاۋغۇست_سېنتەبىر_ئۆكتەبىر_نويابىر_دېكابىر'.split(\n            '_'\n        ),\n        monthsShort: 'يانۋار_فېۋرال_مارت_ئاپرېل_ماي_ئىيۇن_ئىيۇل_ئاۋغۇست_سېنتەبىر_ئۆكتەبىر_نويابىر_دېكابىر'.split(\n            '_'\n        ),\n        weekdays: 'يەكشەنبە_دۈشەنبە_سەيشەنبە_چارشەنبە_پەيشەنبە_جۈمە_شەنبە'.split(\n            '_'\n        ),\n        weekdaysShort: 'يە_دۈ_سە_چا_پە_جۈ_شە'.split('_'),\n        weekdaysMin: 'يە_دۈ_سە_چا_پە_جۈ_شە'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'YYYY-MM-DD',\n            LL: 'YYYY-يىلىM-ئاينىڭD-كۈنى',\n            LLL: 'YYYY-يىلىM-ئاينىڭD-كۈنى، HH:mm',\n            LLLL: 'dddd، YYYY-يىلىM-ئاينىڭD-كۈنى، HH:mm'\n        },\n        meridiemParse: /يېرىم كېچە|سەھەر|چۈشتىن بۇرۇن|چۈش|چۈشتىن كېيىن|كەچ/,\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (\n                meridiem === 'يېرىم كېچە' ||\n                meridiem === 'سەھەر' ||\n                meridiem === 'چۈشتىن بۇرۇن'\n            ) {\n                return hour;\n            } else if (meridiem === 'چۈشتىن كېيىن' || meridiem === 'كەچ') {\n                return hour + 12;\n            } else {\n                return hour >= 11 ? hour : hour + 12;\n            }\n        },\n        meridiem: function (hour, minute, isLower) {\n            var hm = hour * 100 + minute;\n            if (hm < 600) {\n                return 'يېرىم كېچە';\n            } else if (hm < 900) {\n                return 'سەھەر';\n            } else if (hm < 1130) {\n                return 'چۈشتىن بۇرۇن';\n            } else if (hm < 1230) {\n                return 'چۈش';\n            } else if (hm < 1800) {\n                return 'چۈشتىن كېيىن';\n            } else {\n                return 'كەچ';\n            }\n        },\n        calendar: {\n            sameDay: '[بۈگۈن سائەت] LT',\n            nextDay: '[ئەتە سائەت] LT',\n            nextWeek: '[كېلەركى] dddd [سائەت] LT',\n            lastDay: '[تۆنۈگۈن] LT',\n            lastWeek: '[ئالدىنقى] dddd [سائەت] LT',\n            sameElse: 'L'\n        },\n        relativeTime: {\n            future: '%s كېيىن',\n            past: '%s بۇرۇن',\n            s: 'نەچچە سېكونت',\n            ss: '%d سېكونت',\n            m: 'بىر مىنۇت',\n            mm: '%d مىنۇت',\n            h: 'بىر سائەت',\n            hh: '%d سائەت',\n            d: 'بىر كۈن',\n            dd: '%d كۈن',\n            M: 'بىر ئاي',\n            MM: '%d ئاي',\n            y: 'بىر يىل',\n            yy: '%d يىل'\n        },\n\n        dayOfMonthOrdinalParse: /\\d{1,2}(-كۈنى|-ئاي|-ھەپتە)/,\n        ordinal: function (number, period) {\n            switch (period) {\n                case 'd':\n                case 'D':\n                case 'DDD':\n                    return number + '-كۈنى';\n                case 'w':\n                case 'W':\n                    return number + '-ھەپتە';\n                default:\n                    return number;\n            }\n        },\n        preparse: function (string) {\n            return string.replace(/،/g, ',');\n        },\n        postformat: function (string) {\n            return string.replace(/,/g, '،');\n        },\n        week: {\n            // GB/T 7408-1994《数据元和交换格式·信息交换·日期和时间表示法》与ISO 8601:1988等效\n            dow: 1, // Monday is the first day of the week.\n            doy: 7 // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n\n    return ugCn;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    function plural(word, num) {\n        var forms = word.split('_');\n        return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);\n    }\n    function relativeTimeWithPlural(number, withoutSuffix, key) {\n        var format = {\n            'ss': withoutSuffix ? 'секунда_секунди_секунд' : 'секунду_секунди_секунд',\n            'mm': withoutSuffix ? 'хвилина_хвилини_хвилин' : 'хвилину_хвилини_хвилин',\n            'hh': withoutSuffix ? 'година_години_годин' : 'годину_години_годин',\n            'dd': 'день_дні_днів',\n            'MM': 'місяць_місяці_місяців',\n            'yy': 'рік_роки_років'\n        };\n        if (key === 'm') {\n            return withoutSuffix ? 'хвилина' : 'хвилину';\n        }\n        else if (key === 'h') {\n            return withoutSuffix ? 'година' : 'годину';\n        }\n        else {\n            return number + ' ' + plural(format[key], +number);\n        }\n    }\n    function weekdaysCaseReplace(m, format) {\n        var weekdays = {\n            'nominative': 'неділя_понеділок_вівторок_середа_четвер_п’ятниця_субота'.split('_'),\n            'accusative': 'неділю_понеділок_вівторок_середу_четвер_п’ятницю_суботу'.split('_'),\n            'genitive': 'неділі_понеділка_вівторка_середи_четверга_п’ятниці_суботи'.split('_')\n        };\n\n        if (!m) {\n            return weekdays['nominative'];\n        }\n\n        var nounCase = (/(\\[[ВвУу]\\]) ?dddd/).test(format) ?\n            'accusative' :\n            ((/\\[?(?:минулої|наступної)? ?\\] ?dddd/).test(format) ?\n                'genitive' :\n                'nominative');\n        return weekdays[nounCase][m.day()];\n    }\n    function processHoursFunction(str) {\n        return function () {\n            return str + 'о' + (this.hours() === 11 ? 'б' : '') + '] LT';\n        };\n    }\n\n    var uk = moment.defineLocale('uk', {\n        months : {\n            'format': 'січня_лютого_березня_квітня_травня_червня_липня_серпня_вересня_жовтня_листопада_грудня'.split('_'),\n            'standalone': 'січень_лютий_березень_квітень_травень_червень_липень_серпень_вересень_жовтень_листопад_грудень'.split('_')\n        },\n        monthsShort : 'січ_лют_бер_квіт_трав_черв_лип_серп_вер_жовт_лист_груд'.split('_'),\n        weekdays : weekdaysCaseReplace,\n        weekdaysShort : 'нд_пн_вт_ср_чт_пт_сб'.split('_'),\n        weekdaysMin : 'нд_пн_вт_ср_чт_пт_сб'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D MMMM YYYY р.',\n            LLL : 'D MMMM YYYY р., HH:mm',\n            LLLL : 'dddd, D MMMM YYYY р., HH:mm'\n        },\n        calendar : {\n            sameDay: processHoursFunction('[Сьогодні '),\n            nextDay: processHoursFunction('[Завтра '),\n            lastDay: processHoursFunction('[Вчора '),\n            nextWeek: processHoursFunction('[У] dddd ['),\n            lastWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                    case 3:\n                    case 5:\n                    case 6:\n                        return processHoursFunction('[Минулої] dddd [').call(this);\n                    case 1:\n                    case 2:\n                    case 4:\n                        return processHoursFunction('[Минулого] dddd [').call(this);\n                }\n            },\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'за %s',\n            past : '%s тому',\n            s : 'декілька секунд',\n            ss : relativeTimeWithPlural,\n            m : relativeTimeWithPlural,\n            mm : relativeTimeWithPlural,\n            h : 'годину',\n            hh : relativeTimeWithPlural,\n            d : 'день',\n            dd : relativeTimeWithPlural,\n            M : 'місяць',\n            MM : relativeTimeWithPlural,\n            y : 'рік',\n            yy : relativeTimeWithPlural\n        },\n        // M. E.: those two are virtually unused but a user might want to implement them for his/her website for some reason\n        meridiemParse: /ночі|ранку|дня|вечора/,\n        isPM: function (input) {\n            return /^(дня|вечора)$/.test(input);\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'ночі';\n            } else if (hour < 12) {\n                return 'ранку';\n            } else if (hour < 17) {\n                return 'дня';\n            } else {\n                return 'вечора';\n            }\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}-(й|го)/,\n        ordinal: function (number, period) {\n            switch (period) {\n                case 'M':\n                case 'd':\n                case 'DDD':\n                case 'w':\n                case 'W':\n                    return number + '-й';\n                case 'D':\n                    return number + '-го';\n                default:\n                    return number;\n            }\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n\n    return uk;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var months = [\n        'جنوری',\n        'فروری',\n        'مارچ',\n        'اپریل',\n        'مئی',\n        'جون',\n        'جولائی',\n        'اگست',\n        'ستمبر',\n        'اکتوبر',\n        'نومبر',\n        'دسمبر'\n    ];\n    var days = [\n        'اتوار',\n        'پیر',\n        'منگل',\n        'بدھ',\n        'جمعرات',\n        'جمعہ',\n        'ہفتہ'\n    ];\n\n    var ur = moment.defineLocale('ur', {\n        months : months,\n        monthsShort : months,\n        weekdays : days,\n        weekdaysShort : days,\n        weekdaysMin : days,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd، D MMMM YYYY HH:mm'\n        },\n        meridiemParse: /صبح|شام/,\n        isPM : function (input) {\n            return 'شام' === input;\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'صبح';\n            }\n            return 'شام';\n        },\n        calendar : {\n            sameDay : '[آج بوقت] LT',\n            nextDay : '[کل بوقت] LT',\n            nextWeek : 'dddd [بوقت] LT',\n            lastDay : '[گذشتہ روز بوقت] LT',\n            lastWeek : '[گذشتہ] dddd [بوقت] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s بعد',\n            past : '%s قبل',\n            s : 'چند سیکنڈ',\n            ss : '%d سیکنڈ',\n            m : 'ایک منٹ',\n            mm : '%d منٹ',\n            h : 'ایک گھنٹہ',\n            hh : '%d گھنٹے',\n            d : 'ایک دن',\n            dd : '%d دن',\n            M : 'ایک ماہ',\n            MM : '%d ماہ',\n            y : 'ایک سال',\n            yy : '%d سال'\n        },\n        preparse: function (string) {\n            return string.replace(/،/g, ',');\n        },\n        postformat: function (string) {\n            return string.replace(/,/g, '،');\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return ur;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var uz = moment.defineLocale('uz', {\n        months : 'январ_феврал_март_апрел_май_июн_июл_август_сентябр_октябр_ноябр_декабр'.split('_'),\n        monthsShort : 'янв_фев_мар_апр_май_июн_июл_авг_сен_окт_ноя_дек'.split('_'),\n        weekdays : 'Якшанба_Душанба_Сешанба_Чоршанба_Пайшанба_Жума_Шанба'.split('_'),\n        weekdaysShort : 'Якш_Душ_Сеш_Чор_Пай_Жум_Шан'.split('_'),\n        weekdaysMin : 'Як_Ду_Се_Чо_Па_Жу_Ша'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'D MMMM YYYY, dddd HH:mm'\n        },\n        calendar : {\n            sameDay : '[Бугун соат] LT [да]',\n            nextDay : '[Эртага] LT [да]',\n            nextWeek : 'dddd [куни соат] LT [да]',\n            lastDay : '[Кеча соат] LT [да]',\n            lastWeek : '[Утган] dddd [куни соат] LT [да]',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'Якин %s ичида',\n            past : 'Бир неча %s олдин',\n            s : 'фурсат',\n            ss : '%d фурсат',\n            m : 'бир дакика',\n            mm : '%d дакика',\n            h : 'бир соат',\n            hh : '%d соат',\n            d : 'бир кун',\n            dd : '%d кун',\n            M : 'бир ой',\n            MM : '%d ой',\n            y : 'бир йил',\n            yy : '%d йил'\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return uz;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var uzLatn = moment.defineLocale('uz-latn', {\n        months : 'Yanvar_Fevral_Mart_Aprel_May_Iyun_Iyul_Avgust_Sentabr_Oktabr_Noyabr_Dekabr'.split('_'),\n        monthsShort : 'Yan_Fev_Mar_Apr_May_Iyun_Iyul_Avg_Sen_Okt_Noy_Dek'.split('_'),\n        weekdays : 'Yakshanba_Dushanba_Seshanba_Chorshanba_Payshanba_Juma_Shanba'.split('_'),\n        weekdaysShort : 'Yak_Dush_Sesh_Chor_Pay_Jum_Shan'.split('_'),\n        weekdaysMin : 'Ya_Du_Se_Cho_Pa_Ju_Sha'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'D MMMM YYYY, dddd HH:mm'\n        },\n        calendar : {\n            sameDay : '[Bugun soat] LT [da]',\n            nextDay : '[Ertaga] LT [da]',\n            nextWeek : 'dddd [kuni soat] LT [da]',\n            lastDay : '[Kecha soat] LT [da]',\n            lastWeek : '[O\\'tgan] dddd [kuni soat] LT [da]',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'Yaqin %s ichida',\n            past : 'Bir necha %s oldin',\n            s : 'soniya',\n            ss : '%d soniya',\n            m : 'bir daqiqa',\n            mm : '%d daqiqa',\n            h : 'bir soat',\n            hh : '%d soat',\n            d : 'bir kun',\n            dd : '%d kun',\n            M : 'bir oy',\n            MM : '%d oy',\n            y : 'bir yil',\n            yy : '%d yil'\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n\n    return uzLatn;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var vi = moment.defineLocale('vi', {\n        months : 'tháng 1_tháng 2_tháng 3_tháng 4_tháng 5_tháng 6_tháng 7_tháng 8_tháng 9_tháng 10_tháng 11_tháng 12'.split('_'),\n        monthsShort : 'Th01_Th02_Th03_Th04_Th05_Th06_Th07_Th08_Th09_Th10_Th11_Th12'.split('_'),\n        monthsParseExact : true,\n        weekdays : 'chủ nhật_thứ hai_thứ ba_thứ tư_thứ năm_thứ sáu_thứ bảy'.split('_'),\n        weekdaysShort : 'CN_T2_T3_T4_T5_T6_T7'.split('_'),\n        weekdaysMin : 'CN_T2_T3_T4_T5_T6_T7'.split('_'),\n        weekdaysParseExact : true,\n        meridiemParse: /sa|ch/i,\n        isPM : function (input) {\n            return /^ch$/i.test(input);\n        },\n        meridiem : function (hours, minutes, isLower) {\n            if (hours < 12) {\n                return isLower ? 'sa' : 'SA';\n            } else {\n                return isLower ? 'ch' : 'CH';\n            }\n        },\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM [năm] YYYY',\n            LLL : 'D MMMM [năm] YYYY HH:mm',\n            LLLL : 'dddd, D MMMM [năm] YYYY HH:mm',\n            l : 'DD/M/YYYY',\n            ll : 'D MMM YYYY',\n            lll : 'D MMM YYYY HH:mm',\n            llll : 'ddd, D MMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: '[Hôm nay lúc] LT',\n            nextDay: '[Ngày mai lúc] LT',\n            nextWeek: 'dddd [tuần tới lúc] LT',\n            lastDay: '[Hôm qua lúc] LT',\n            lastWeek: 'dddd [tuần rồi lúc] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : '%s tới',\n            past : '%s trước',\n            s : 'vài giây',\n            ss : '%d giây' ,\n            m : 'một phút',\n            mm : '%d phút',\n            h : 'một giờ',\n            hh : '%d giờ',\n            d : 'một ngày',\n            dd : '%d ngày',\n            M : 'một tháng',\n            MM : '%d tháng',\n            y : 'một năm',\n            yy : '%d năm'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}/,\n        ordinal : function (number) {\n            return number;\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return vi;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var xPseudo = moment.defineLocale('x-pseudo', {\n        months : 'J~áñúá~rý_F~ébrú~árý_~Márc~h_Áp~ríl_~Máý_~Júñé~_Júl~ý_Áú~gúst~_Sép~témb~ér_Ó~ctób~ér_Ñ~óvém~bér_~Décé~mbér'.split('_'),\n        monthsShort : 'J~áñ_~Féb_~Már_~Ápr_~Máý_~Júñ_~Júl_~Áúg_~Sép_~Óct_~Ñóv_~Déc'.split('_'),\n        monthsParseExact : true,\n        weekdays : 'S~úñdá~ý_Mó~ñdáý~_Túé~sdáý~_Wéd~ñésd~áý_T~húrs~dáý_~Fríd~áý_S~átúr~dáý'.split('_'),\n        weekdaysShort : 'S~úñ_~Móñ_~Túé_~Wéd_~Thú_~Frí_~Sát'.split('_'),\n        weekdaysMin : 'S~ú_Mó~_Tú_~Wé_T~h_Fr~_Sá'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd, D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay : '[T~ódá~ý át] LT',\n            nextDay : '[T~ómó~rró~w át] LT',\n            nextWeek : 'dddd [át] LT',\n            lastDay : '[Ý~ést~érdá~ý át] LT',\n            lastWeek : '[L~ást] dddd [át] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'í~ñ %s',\n            past : '%s á~gó',\n            s : 'á ~féw ~sécó~ñds',\n            ss : '%d s~écóñ~ds',\n            m : 'á ~míñ~úté',\n            mm : '%d m~íñú~tés',\n            h : 'á~ñ hó~úr',\n            hh : '%d h~óúrs',\n            d : 'á ~dáý',\n            dd : '%d d~áýs',\n            M : 'á ~móñ~th',\n            MM : '%d m~óñt~hs',\n            y : 'á ~ýéár',\n            yy : '%d ý~éárs'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (~~(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n            return number + output;\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return xPseudo;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var yo = moment.defineLocale('yo', {\n        months : 'Sẹ́rẹ́_Èrèlè_Ẹrẹ̀nà_Ìgbé_Èbibi_Òkùdu_Agẹmo_Ògún_Owewe_Ọ̀wàrà_Bélú_Ọ̀pẹ̀̀'.split('_'),\n        monthsShort : 'Sẹ́r_Èrl_Ẹrn_Ìgb_Èbi_Òkù_Agẹ_Ògú_Owe_Ọ̀wà_Bél_Ọ̀pẹ̀̀'.split('_'),\n        weekdays : 'Àìkú_Ajé_Ìsẹ́gun_Ọjọ́rú_Ọjọ́bọ_Ẹtì_Àbámẹ́ta'.split('_'),\n        weekdaysShort : 'Àìk_Ajé_Ìsẹ́_Ọjr_Ọjb_Ẹtì_Àbá'.split('_'),\n        weekdaysMin : 'Àì_Aj_Ìs_Ọr_Ọb_Ẹt_Àb'.split('_'),\n        longDateFormat : {\n            LT : 'h:mm A',\n            LTS : 'h:mm:ss A',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY h:mm A',\n            LLLL : 'dddd, D MMMM YYYY h:mm A'\n        },\n        calendar : {\n            sameDay : '[Ònì ni] LT',\n            nextDay : '[Ọ̀la ni] LT',\n            nextWeek : 'dddd [Ọsẹ̀ tón\\'bọ] [ni] LT',\n            lastDay : '[Àna ni] LT',\n            lastWeek : 'dddd [Ọsẹ̀ tólọ́] [ni] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'ní %s',\n            past : '%s kọjá',\n            s : 'ìsẹjú aayá die',\n            ss :'aayá %d',\n            m : 'ìsẹjú kan',\n            mm : 'ìsẹjú %d',\n            h : 'wákati kan',\n            hh : 'wákati %d',\n            d : 'ọjọ́ kan',\n            dd : 'ọjọ́ %d',\n            M : 'osù kan',\n            MM : 'osù %d',\n            y : 'ọdún kan',\n            yy : 'ọdún %d'\n        },\n        dayOfMonthOrdinalParse : /ọjọ́\\s\\d{1,2}/,\n        ordinal : 'ọjọ́ %d',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4 // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return yo;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var zhCn = moment.defineLocale('zh-cn', {\n        months : '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),\n        monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),\n        weekdays : '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),\n        weekdaysShort : '周日_周一_周二_周三_周四_周五_周六'.split('_'),\n        weekdaysMin : '日_一_二_三_四_五_六'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'YYYY/MM/DD',\n            LL : 'YYYY年M月D日',\n            LLL : 'YYYY年M月D日Ah点mm分',\n            LLLL : 'YYYY年M月D日ddddAh点mm分',\n            l : 'YYYY/M/D',\n            ll : 'YYYY年M月D日',\n            lll : 'YYYY年M月D日 HH:mm',\n            llll : 'YYYY年M月D日dddd HH:mm'\n        },\n        meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === '凌晨' || meridiem === '早上' ||\n                    meridiem === '上午') {\n                return hour;\n            } else if (meridiem === '下午' || meridiem === '晚上') {\n                return hour + 12;\n            } else {\n                // '中午'\n                return hour >= 11 ? hour : hour + 12;\n            }\n        },\n        meridiem : function (hour, minute, isLower) {\n            var hm = hour * 100 + minute;\n            if (hm < 600) {\n                return '凌晨';\n            } else if (hm < 900) {\n                return '早上';\n            } else if (hm < 1130) {\n                return '上午';\n            } else if (hm < 1230) {\n                return '中午';\n            } else if (hm < 1800) {\n                return '下午';\n            } else {\n                return '晚上';\n            }\n        },\n        calendar : {\n            sameDay : '[今天]LT',\n            nextDay : '[明天]LT',\n            nextWeek : '[下]ddddLT',\n            lastDay : '[昨天]LT',\n            lastWeek : '[上]ddddLT',\n            sameElse : 'L'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(日|月|周)/,\n        ordinal : function (number, period) {\n            switch (period) {\n                case 'd':\n                case 'D':\n                case 'DDD':\n                    return number + '日';\n                case 'M':\n                    return number + '月';\n                case 'w':\n                case 'W':\n                    return number + '周';\n                default:\n                    return number;\n            }\n        },\n        relativeTime : {\n            future : '%s内',\n            past : '%s前',\n            s : '几秒',\n            ss : '%d 秒',\n            m : '1 分钟',\n            mm : '%d 分钟',\n            h : '1 小时',\n            hh : '%d 小时',\n            d : '1 天',\n            dd : '%d 天',\n            M : '1 个月',\n            MM : '%d 个月',\n            y : '1 年',\n            yy : '%d 年'\n        },\n        week : {\n            // GB/T 7408-1994《数据元和交换格式·信息交换·日期和时间表示法》与ISO 8601:1988等效\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return zhCn;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var zhHk = moment.defineLocale('zh-hk', {\n        months : '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),\n        monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),\n        weekdays : '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),\n        weekdaysShort : '週日_週一_週二_週三_週四_週五_週六'.split('_'),\n        weekdaysMin : '日_一_二_三_四_五_六'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'YYYY/MM/DD',\n            LL : 'YYYY年M月D日',\n            LLL : 'YYYY年M月D日 HH:mm',\n            LLLL : 'YYYY年M月D日dddd HH:mm',\n            l : 'YYYY/M/D',\n            ll : 'YYYY年M月D日',\n            lll : 'YYYY年M月D日 HH:mm',\n            llll : 'YYYY年M月D日dddd HH:mm'\n        },\n        meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,\n        meridiemHour : function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === '凌晨' || meridiem === '早上' || meridiem === '上午') {\n                return hour;\n            } else if (meridiem === '中午') {\n                return hour >= 11 ? hour : hour + 12;\n            } else if (meridiem === '下午' || meridiem === '晚上') {\n                return hour + 12;\n            }\n        },\n        meridiem : function (hour, minute, isLower) {\n            var hm = hour * 100 + minute;\n            if (hm < 600) {\n                return '凌晨';\n            } else if (hm < 900) {\n                return '早上';\n            } else if (hm < 1130) {\n                return '上午';\n            } else if (hm < 1230) {\n                return '中午';\n            } else if (hm < 1800) {\n                return '下午';\n            } else {\n                return '晚上';\n            }\n        },\n        calendar : {\n            sameDay : '[今天]LT',\n            nextDay : '[明天]LT',\n            nextWeek : '[下]ddddLT',\n            lastDay : '[昨天]LT',\n            lastWeek : '[上]ddddLT',\n            sameElse : 'L'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(日|月|週)/,\n        ordinal : function (number, period) {\n            switch (period) {\n                case 'd' :\n                case 'D' :\n                case 'DDD' :\n                    return number + '日';\n                case 'M' :\n                    return number + '月';\n                case 'w' :\n                case 'W' :\n                    return number + '週';\n                default :\n                    return number;\n            }\n        },\n        relativeTime : {\n            future : '%s內',\n            past : '%s前',\n            s : '幾秒',\n            ss : '%d 秒',\n            m : '1 分鐘',\n            mm : '%d 分鐘',\n            h : '1 小時',\n            hh : '%d 小時',\n            d : '1 天',\n            dd : '%d 天',\n            M : '1 個月',\n            MM : '%d 個月',\n            y : '1 年',\n            yy : '%d 年'\n        }\n    });\n\n    return zhHk;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var zhTw = moment.defineLocale('zh-tw', {\n        months : '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),\n        monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),\n        weekdays : '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),\n        weekdaysShort : '週日_週一_週二_週三_週四_週五_週六'.split('_'),\n        weekdaysMin : '日_一_二_三_四_五_六'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'YYYY/MM/DD',\n            LL : 'YYYY年M月D日',\n            LLL : 'YYYY年M月D日 HH:mm',\n            LLLL : 'YYYY年M月D日dddd HH:mm',\n            l : 'YYYY/M/D',\n            ll : 'YYYY年M月D日',\n            lll : 'YYYY年M月D日 HH:mm',\n            llll : 'YYYY年M月D日dddd HH:mm'\n        },\n        meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,\n        meridiemHour : function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === '凌晨' || meridiem === '早上' || meridiem === '上午') {\n                return hour;\n            } else if (meridiem === '中午') {\n                return hour >= 11 ? hour : hour + 12;\n            } else if (meridiem === '下午' || meridiem === '晚上') {\n                return hour + 12;\n            }\n        },\n        meridiem : function (hour, minute, isLower) {\n            var hm = hour * 100 + minute;\n            if (hm < 600) {\n                return '凌晨';\n            } else if (hm < 900) {\n                return '早上';\n            } else if (hm < 1130) {\n                return '上午';\n            } else if (hm < 1230) {\n                return '中午';\n            } else if (hm < 1800) {\n                return '下午';\n            } else {\n                return '晚上';\n            }\n        },\n        calendar : {\n            sameDay : '[今天] LT',\n            nextDay : '[明天] LT',\n            nextWeek : '[下]dddd LT',\n            lastDay : '[昨天] LT',\n            lastWeek : '[上]dddd LT',\n            sameElse : 'L'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(日|月|週)/,\n        ordinal : function (number, period) {\n            switch (period) {\n                case 'd' :\n                case 'D' :\n                case 'DDD' :\n                    return number + '日';\n                case 'M' :\n                    return number + '月';\n                case 'w' :\n                case 'W' :\n                    return number + '週';\n                default :\n                    return number;\n            }\n        },\n        relativeTime : {\n            future : '%s內',\n            past : '%s前',\n            s : '幾秒',\n            ss : '%d 秒',\n            m : '1 分鐘',\n            mm : '%d 分鐘',\n            h : '1 小時',\n            hh : '%d 小時',\n            d : '1 天',\n            dd : '%d 天',\n            M : '1 個月',\n            MM : '%d 個月',\n            y : '1 年',\n            yy : '%d 年'\n        }\n    });\n\n    return zhTw;\n\n})));\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Transformation from './transformation';\n\n/**\n * passthough the data\n */\nexport default class PassthroughTransformation extends Transformation {\n  // eslint-disable-next-line no-useless-constructor\n  constructor(config) {\n    super(config);\n  }\n\n  /**\n   * Method will be invoked when tableData or config changes\n   */\n  transform(tableData) {\n    return tableData;\n  }\n}\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Transformation from './transformation';\n\n/**\n * select columns\n * - columnSelectorProp\n *   [\n *     {\n *       \"name\":\n *       \"tooltip\":\n *     },\n *     ...\n *   ]\n */\nexport default class ColumnselectorTransformation extends Transformation {\n  constructor(config, columnSelectorProp) {\n    super(config);\n    this.props = columnSelectorProp;\n  }\n\n  getSetting() {\n    let self = this;\n    let configObj = self.config;\n    return {\n      template: 'app/tabledata/columnselector_settings.html',\n      scope: {\n        config: self.config,\n        props: self.props,\n        tableDataColumns: self.tableDataColumns,\n        save: function() {\n          self.emitConfig(configObj);\n        },\n        remove: function(selectorName) {\n          configObj[selectorName] = null;\n          self.emitConfig(configObj);\n        },\n      },\n    };\n  }\n\n  /**\n   * Method will be invoked when tableData or config changes\n   */\n  transform(tableData) {\n    this.tableDataColumns = tableData.columns;\n    this.removeUnknown();\n    return tableData;\n  }\n\n  removeUnknown() {\n    let fields = this.config;\n    for (let f in fields) {\n      if (fields[f]) {\n        let found = false;\n        for (let i = 0; i < this.tableDataColumns.length; i++) {\n          let a = fields[f];\n          let b = this.tableDataColumns[i];\n          if (a.index === b.index && a.name === b.name) {\n            found = true;\n            break;\n          }\n        }\n        if (!found && (fields[f] instanceof Object) && !(fields[f] instanceof Array)) {\n          fields[f] = null;\n        }\n      }\n    }\n  }\n}\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Visualization from '../visualization';\nimport PassthroughTransformation from '../../tabledata/passthrough';\n\nimport {\n  DefaultTableColumnType,\n  initializeTableConfig,\n  isBtnGroupWidget,\n  isCheckboxWidget,\n  isInputWidget,\n  isOptionWidget,\n  isTextareaWidget,\n  parseTableOption,\n  resetTableOptionConfig,\n  TableColumnType,\n  updateColumnTypeState,\n  ValueType,\n  Widget,\n} from './visualization-util';\n\nconst SETTING_TEMPLATE = require('./visualization-table-setting.html');\n\nconst TABLE_OPTION_SPECS = [\n  {\n    name: 'useFilter',\n    valueType: ValueType.BOOLEAN,\n    defaultValue: false,\n    widget: Widget.CHECKBOX,\n    description: 'Enable filter for columns',\n  },\n  {\n    name: 'showPagination',\n    valueType: ValueType.BOOLEAN,\n    defaultValue: false,\n    widget: Widget.CHECKBOX,\n    description: 'Enable pagination for better navigation',\n  },\n  {\n    name: 'showAggregationFooter',\n    valueType: ValueType.BOOLEAN,\n    defaultValue: false,\n    widget: Widget.CHECKBOX,\n    description: 'Enable a footer for displaying aggregated values',\n  },\n];\n\n/**\n * Visualize data in table format\n */\nexport default class TableVisualization extends Visualization {\n  constructor(targetEl, config) {\n    super(targetEl, config);\n    this.passthrough = new PassthroughTransformation(config);\n    this.emitTimeout = null;\n    this.isRestoring = false;\n    this.isUpdated = false;\n\n    initializeTableConfig(config, TABLE_OPTION_SPECS);\n  }\n\n  getColumnMinWidth(colName) {\n    let width = 150; // default\n    const calculatedWidth = colName.length * 10;\n\n    // use the broad one\n    if (calculatedWidth > width) {\n      width = calculatedWidth;\n    }\n\n    return width;\n  }\n\n  getSortedValue(a, b) {\n    return a > b ? 1 : a === b ? 0 : -1;\n  }\n\n  createGridOptions(tableData, onRegisterApiCallback, config) {\n    const rows = tableData.rows;\n    const columnNames = tableData.columns.map((c) => c.name);\n\n    const gridData = rows.map((r) => {\n      return columnNames.reduce((acc, colName, index) => {\n        acc[colName + index] = r[index];\n        return acc;\n      }, {});\n    });\n\n    const gridOptions = {\n      data: gridData,\n      enableGridMenu: true,\n      modifierKeysToMultiSelectCells: true,\n      exporterMenuCsv: true,\n      exporterMenuPdf: false,\n      flatEntityAccess: true,\n      fastWatch: false,\n      treeRowHeaderAlwaysVisible: false,\n      exporterExcelFilename: 'myFile.xlsx',\n\n      columnDefs: columnNames.map((colName, index) => {\n        const self = this;\n        return {\n          displayName: colName,\n          name: colName + index,\n          type: DefaultTableColumnType,\n          cellTemplate: `\n            <div ng-if=\"!grid.getCellValue(row, col).startsWith('%html')\"\n                 class=\"ui-grid-cell-contents\"><span>{{grid.getCellValue(row, col)}}</span></div>\n            <div ng-if=\"grid.getCellValue(row, col).startsWith('%html')\"\n                 ng-bind-html=\"grid.getCellValue(row, col).split('%html')[1]\"\n                 class=\"ui-grid-cell-contents\">\n            </div>`,\n          editableCellTemplate:\n            `<div>\n               <form\n                 name=\"inputForm\">\n                 <textarea\n                   class=\"ui-grid-zeppelin-special-textarea\"\n                   type=\"INPUT_TYPE\"\n                   ng-class=\"'colt' + col.uid\"\n                   ui-grid-editor\n                   ng-model=\"MODEL_COL_FIELD\" />\n               </form>\n             </div>\n             `,\n          minWidth: this.getColumnMinWidth(colName),\n          width: '*',\n          sortingAlgorithm: function(a, b, row1, row2, sortType, gridCol) {\n            const colType = gridCol.colDef.type.toLowerCase();\n            if (colType === TableColumnType.NUMBER) {\n              return self.getSortedValue(Number(a), Number(b));\n            } else if (colType === TableColumnType.STRING) {\n              return self.getSortedValue(a.toString(), b.toString());\n            } else if (colType === TableColumnType.DATE) {\n              return self.getSortedValue(new Date(a), new Date(b));\n            } else {\n              return self.getSortedValue(a, b);\n            }\n          },\n        };\n      }),\n      rowEditWaitInterval: -1, /** disable saveRow event */\n      enableRowHashing: true,\n      saveFocus: false,\n      saveScroll: false,\n      saveSort: true,\n      savePinning: true,\n      saveGrouping: true,\n      saveGroupingExpandedStates: true,\n      saveOrder: true, // column order\n      saveVisible: true, // column visibility\n      saveTreeView: true,\n      saveFilter: true,\n      saveSelection: false,\n    };\n\n    return gridOptions;\n  }\n\n  getGridElemId() {\n    // angular doesn't allow `-` in scope variable name\n    const gridElemId = `${this.targetEl[0].id}_grid`.replace('-', '_');\n    return gridElemId;\n  }\n\n  getGridApiId() {\n    // angular doesn't allow `-` in scope variable name\n    const gridApiId = `${this.targetEl[0].id}_gridApi`.replace('-', '_');\n    return gridApiId;\n  }\n\n  refresh() {\n    const gridElemId = this.getGridElemId();\n    const gridElem = angular.element(`#${gridElemId}`);\n\n    if (gridElem) {\n      gridElem.css('height', this.targetEl.height() - 10);\n      const gridApiId = this.getGridApiId();\n      const scope = this.getScope();\n      if(scope[gridApiId]!==undefined) {\n        scope[gridApiId].core.handleWindowResize();\n      }\n    }\n  }\n\n  refreshGrid() {\n    const gridElemId = this.getGridElemId();\n    const gridElem = angular.element(`#${gridElemId}`);\n\n    if (gridElem) {\n      const scope = this.getScope();\n      const gridApiId = this.getGridApiId();\n      scope[gridApiId].core.notifyDataChange(this._uiGridConstants.dataChange.ALL);\n    }\n  }\n\n  updateColDefType(colDef, type) {\n    if (type === colDef.type) {\n      return;\n    }\n\n    colDef.type = type;\n    const colName = colDef.name;\n    const config = this.config;\n    if (config.tableColumnTypeState.names && config.tableColumnTypeState.names[colName]) {\n      config.tableColumnTypeState.names[colName] = type;\n      this.persistConfigWithGridState(this.config);\n    }\n  }\n\n  addColumnMenus(gridOptions) {\n    if (!gridOptions || !gridOptions.columnDefs) {\n      return;\n    }\n\n    const self = this; // for closure\n\n    // SHOULD use `function() { ... }` syntax for each action to get `this`\n    gridOptions.columnDefs.map((colDef) => {\n      colDef.menuItems = [\n        {\n          title: 'Copy Column Name',\n          action: function() {\n            self.copyStringToClipboard(this.context.col.displayName);\n          },\n          active: function() {\n            return false;\n          },\n        },\n        {\n          title: 'Type: String',\n          action: function() {\n            self.updateColDefType(this.context.col.colDef, TableColumnType.STRING);\n          },\n          active: function() {\n            return this.context.col.colDef.type === TableColumnType.STRING;\n          },\n        },\n        {\n          title: 'Type: Number',\n          action: function() {\n            self.updateColDefType(this.context.col.colDef, TableColumnType.NUMBER);\n          },\n          active: function() {\n            return this.context.col.colDef.type === TableColumnType.NUMBER;\n          },\n        },\n        {\n          title: 'Type: Date',\n          action: function() {\n            self.updateColDefType(this.context.col.colDef, TableColumnType.DATE);\n          },\n          active: function() {\n            return this.context.col.colDef.type === TableColumnType.DATE;\n          },\n        },\n      ];\n    });\n  }\n\n  setDynamicGridOptions(gridOptions, config) {\n    // parse based on their type definitions\n    const parsed = parseTableOption(TABLE_OPTION_SPECS, config.tableOptionValue);\n\n    const {showAggregationFooter, useFilter, showPagination} = parsed;\n\n    gridOptions.showGridFooter = false;\n    gridOptions.showColumnFooter = showAggregationFooter;\n    gridOptions.enableFiltering = useFilter;\n\n    gridOptions.enablePagination = showPagination;\n    gridOptions.enablePaginationControls = showPagination;\n\n    if (showPagination) {\n      gridOptions.paginationPageSize = 50;\n      gridOptions.paginationPageSizes = [25, 50, 100, 250, 1000];\n    }\n\n    // selection can't be rendered dynamically in ui-grid 4.0.4\n    gridOptions.enableRowSelection = false;\n    gridOptions.enableRowHeaderSelection = false;\n    gridOptions.enableFullRowSelection = false;\n    gridOptions.enableSelectAll = false;\n    gridOptions.enableGroupHeaderSelection = false;\n    gridOptions.enableSelectionBatchEvent = false;\n  }\n\n  append(row, columns) {\n    const gridOptions = this.getGridOptions();\n    this.setDynamicGridOptions(gridOptions, this.config);\n    // this.refreshGrid()\n    const gridElemId = this.getGridElemId();\n    const gridElem = angular.element(`#${gridElemId}`);\n\n    if (gridElem) {\n      const scope = this.getScope();\n\n      const columnNames = columns.map((c) => c.name);\n      let gridData = row.map((r) => {\n        return columnNames.reduce((acc, colName, index) => {\n          acc[colName + index] = r[index];\n          return acc;\n        }, {});\n      });\n      gridData.map((data) => {\n        scope[gridElemId].data.push(data);\n      });\n    }\n  }\n\n  render(tableData) {\n    const gridElemId = this.getGridElemId();\n    let gridElem = document.getElementById(gridElemId);\n\n    const config = this.config;\n    const self = this; // for closure\n    const scope = this.getScope();\n    // set gridApi for this elem\n    const gridApiId = this.getGridApiId();\n    const gridOptions = this.createGridOptions(tableData, onRegisterApiCallback, config);\n\n    const onRegisterApiCallback = (gridApi) => {\n      scope[gridApiId] = gridApi;\n      // should restore state before registering APIs\n\n      // register callbacks for change evens\n      // should persist `self.config` instead `config` (closure issue)\n      gridApi.core.on.columnVisibilityChanged(scope, () => {\n        self.persistConfigWithGridState(self.config);\n      });\n      gridApi.colMovable.on.columnPositionChanged(scope, () => {\n        self.persistConfigWithGridState(self.config);\n      });\n      gridApi.core.on.sortChanged(scope, () => {\n        self.persistConfigWithGridState(self.config);\n      });\n      gridApi.core.on.filterChanged(scope, () => {\n        self.persistConfigWithGridState(self.config);\n      });\n      gridApi.grouping.on.aggregationChanged(scope, () => {\n        self.persistConfigWithGridState(self.config);\n      });\n      gridApi.grouping.on.groupingChanged(scope, () => {\n        self.persistConfigWithGridState(self.config);\n      });\n      gridApi.treeBase.on.rowCollapsed(scope, () => {\n        self.persistConfigWithGridState(self.config);\n      });\n      gridApi.treeBase.on.rowExpanded(scope, () => {\n        self.persistConfigWithGridState(self.config);\n      });\n      gridApi.colResizable.on.columnSizeChanged(scope, () => {\n        self.persistConfigWithGridState(self.config);\n      });\n      gridApi.edit.on.beginCellEdit(scope, function(rowEntity, colDef, triggerEvent) {\n        let textArea = triggerEvent.currentTarget.children[1].children[0].children[0];\n        textArea.style.height = textArea.scrollHeight + 'px';\n        textArea.addEventListener('keydown', function() {\n          let elem = this;\n          setTimeout(function() {\n            elem.style.height = 'auto';\n            elem.style.height = elem.scrollHeight + 'px';\n          });\n        }, 0);\n      });\n\n      // pagination doesn't follow usual life-cycle in ui-grid v4.0.4\n      // gridApi.pagination.on.paginationChanged(scope, () => { self.persistConfigWithGridState(self.config) })\n      // TBD: do we need to propagate row selection?\n      // gridApi.selection.on.rowSelectionChanged(scope, () => { self.persistConfigWithGridState(self.config) })\n      // gridApi.selection.on.rowSelectionChangedBatch(scope, () => { self.persistConfigWithGridState(self.config) })\n    };\n\n    if (!gridElem || this.isUpdated) {\n      if (this.isUpdated) {\n        this.targetEl.find(gridElem).off();\n        this.targetEl.find(gridElem).detach();\n        this.isUpdated = false;\n      }\n      // create, compile and append grid elem\n      gridElem = angular.element(\n        `<div id=\"${gridElemId}\" ui-grid=\"${gridElemId}\"\n              ui-grid-edit ui-grid-row-edit\n              ui-grid-pagination\n              ui-grid-selection\n              ui-grid-cellNav ui-grid-pinning\n              ui-grid-empty-base-layer\n              ui-grid-resize-columns\n              ui-grid-move-columns\n              ui-grid-grouping\n              ui-grid-save-state\n              ui-grid-exporter></div>`);\n\n      gridElem.css('height', this.targetEl.height() - 10);\n      gridElem = this._compile(gridElem)(scope);\n      this.targetEl.append(gridElem);\n      this.setDynamicGridOptions(gridOptions, config);\n      this.addColumnMenus(gridOptions);\n      scope[gridElemId] = gridOptions;\n      gridOptions.onRegisterApi = onRegisterApiCallback;\n    } else {\n      scope[gridElemId] = gridOptions;\n      this.setDynamicGridOptions(gridOptions, config);\n      this.refreshGrid();\n    }\n\n    const columnDefs = this.getGridOptions().columnDefs;\n    updateColumnTypeState(tableData.columns, config, columnDefs);\n    // SHOULD restore grid state after columnDefs are updated\n    this.restoreGridState(config.tableGridState);\n  }\n\n  restoreGridState(gridState) {\n    if (!gridState) {\n      return;\n    }\n\n    // should set isRestoring to avoid that changed* events are triggered while restoring\n    this.isRestoring = true;\n    const gridApi = this.getGridApi();\n\n    // restore grid state when gridApi is available\n    if (!gridApi) {\n      setTimeout(() => this.restoreGridState(gridState), 100);\n    } else {\n      gridApi.saveState.restore(this.getScope(), gridState);\n      this.isRestoring = false;\n    }\n  }\n\n  destroy() {\n  }\n\n  getTransformation() {\n    return this.passthrough;\n  }\n\n  getScope() {\n    const scope = this.targetEl.scope();\n    return scope;\n  }\n\n  getGridOptions() {\n    const scope = this.getScope();\n    const gridElemId = this.getGridElemId();\n    return scope[gridElemId];\n  }\n\n  getGridApi() {\n    const scope = this.targetEl.scope();\n    const gridApiId = this.getGridApiId();\n    return scope[gridApiId];\n  }\n\n  persistConfigImmediatelyWithGridState(config) {\n    this.persistConfigWithGridState(config);\n  }\n\n  persistConfigWithGridState(config) {\n    if (this.isRestoring) {\n      return;\n    }\n\n    const gridApi = this.getGridApi();\n    config.tableGridState = gridApi.saveState.save();\n    this.emitConfig(config);\n  }\n\n  persistConfig(config) {\n    this.emitConfig(config);\n  }\n\n  getSetting(chart) {\n    const self = this; // for closure in scope\n    const configObj = self.config;\n\n    // emit config if it's updated in `render`\n    if (configObj.initialized) {\n      configObj.initialized = false;\n      this.persistConfig(configObj); // should persist w/o state\n    } else if (configObj.tableColumnTypeState &&\n      configObj.tableColumnTypeState.updated) {\n      configObj.tableColumnTypeState.updated = false;\n      this.persistConfig(configObj); // should persist w/o state\n    }\n\n    return {\n      template: SETTING_TEMPLATE,\n      scope: {\n        config: configObj,\n        tableOptionSpecs: TABLE_OPTION_SPECS,\n        isInputWidget: isInputWidget,\n        isOptionWidget: isOptionWidget,\n        isCheckboxWidget: isCheckboxWidget,\n        isTextareaWidget: isTextareaWidget,\n        isBtnGroupWidget: isBtnGroupWidget,\n        tableOptionValueChanged: () => {\n          self.persistConfigWithGridState(configObj);\n        },\n        saveTableOption: () => {\n          self.persistConfigWithGridState(configObj);\n        },\n        resetTableOption: () => {\n          resetTableOptionConfig(configObj);\n          initializeTableConfig(configObj, TABLE_OPTION_SPECS);\n          self.persistConfigWithGridState(configObj);\n        },\n        applyTableOption: () => {\n          this.isUpdated = true;\n          // emit config to re-render table\n          configObj.initialized = true;\n          self.persistConfig(configObj);\n        },\n        tableWidgetOnKeyDown: (event, optSpec) => {\n          const code = event.keyCode || event.which;\n          if (code === 13 && isInputWidget(optSpec)) {\n            self.persistConfigWithGridState(configObj);\n          } else if (code === 13 && event.shiftKey && isTextareaWidget(optSpec)) {\n            self.persistConfigWithGridState(configObj);\n          }\n\n          event.stopPropagation(); /** avoid to conflict with paragraph shortcuts */\n        },\n      },\n    };\n  }\n\n  copyStringToClipboard(copyString) {\n    const strToClipboard = document.createElement('textarea');\n    strToClipboard.value = copyString;\n    document.body.appendChild(strToClipboard);\n    strToClipboard.select();\n    document.execCommand('copy');\n    document.body.removeChild(strToClipboard);\n    return;\n  }\n}\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Nvd3ChartVisualization from './visualization-nvd3chart';\nimport PivotTransformation from '../../tabledata/pivot';\n\n/**\n * Visualize data in bar char\n */\nexport default class BarchartVisualization extends Nvd3ChartVisualization {\n  constructor(targetEl, config) {\n    super(targetEl, config);\n\n    this.pivot = new PivotTransformation(config);\n\n    try {\n      this.config.rotate = {degree: config.rotate.degree};\n    } catch (e) {\n      this.config.rotate = {degree: '-45'};\n    }\n  }\n\n  type() {\n    return 'multiBarChart';\n  }\n\n  getTransformation() {\n    return this.pivot;\n  }\n\n  render(pivot) {\n    let d3Data = this.d3DataFromPivot(\n      pivot.schema,\n      pivot.rows,\n      pivot.keys,\n      pivot.groups,\n      pivot.values,\n      true,\n      true,\n      true);\n\n    super.render(d3Data);\n    this.config.changeXLabel(this.config.xLabelStatus);\n  }\n\n  /**\n   * Set new config\n   */\n  setConfig(config) {\n    super.setConfig(config);\n    this.pivot.setConfig(config);\n  }\n\n  configureChart(chart) {\n    let self = this;\n    let configObj = self.config;\n\n    chart.yAxis.axisLabelDistance(50);\n    chart.yAxis.tickFormat(function(d) {\n      return self.yAxisTickFormat(d);\n    });\n\n    self.chart.stacked(this.config.stacked);\n\n    self.config.changeXLabel = function(type) {\n      switch (type) {\n        case 'default':\n          self.chart._options['showXAxis'] = true;\n          self.chart._options['margin'] = {bottom: 50};\n          self.chart.xAxis.rotateLabels(0);\n          configObj.xLabelStatus = 'default';\n          break;\n        case 'rotate':\n          self.chart._options['showXAxis'] = true;\n          self.chart._options['margin'] = {bottom: 140};\n          self.chart.xAxis.rotateLabels(configObj.rotate.degree);\n          configObj.xLabelStatus = 'rotate';\n          break;\n        case 'hide':\n          self.chart._options['showXAxis'] = false;\n          self.chart._options['margin'] = {bottom: 50};\n          d3.select('#' + self.targetEl[0].id + '> svg').select('g.nv-axis.nv-x').selectAll('*').remove();\n          configObj.xLabelStatus = 'hide';\n          break;\n      }\n      self.emitConfig(configObj);\n    };\n\n    self.config.isXLabelStatus = function(type) {\n      if (configObj.xLabelStatus === type) {\n        return true;\n      } else {\n        return false;\n      }\n    };\n\n    self.config.setDegree = function(type) {\n      configObj.rotate.degree = type;\n      self.chart.xAxis.rotateLabels(type);\n      self.emitConfig(configObj);\n    };\n\n    this.chart.dispatch.on('stateChange', function(s) {\n      configObj.stacked = s.stacked;\n\n      // give some time to animation finish\n      setTimeout(function() {\n        self.emitConfig(configObj);\n      }, 500);\n    });\n  }\n\n  getSetting(chart) {\n    let self = this;\n    let configObj = self.config;\n\n    // default to visualize xLabel\n    if (typeof (configObj.xLabelStatus) === 'undefined') {\n      configObj.changeXLabel('default');\n    }\n\n    if (typeof (configObj.rotate.degree) === 'undefined' || configObj.rotate.degree === '') {\n      configObj.rotate.degree = '-45';\n      self.emitConfig(configObj);\n    }\n\n    return {\n      template: 'app/visualization/builtins/visualization-displayXAxis.html',\n      scope: {\n        config: configObj,\n      },\n    };\n  }\n}\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Nvd3ChartVisualization from './visualization-nvd3chart';\nimport PivotTransformation from '../../tabledata/pivot';\n\n/**\n * Visualize data in pie chart\n */\nexport default class PiechartVisualization extends Nvd3ChartVisualization {\n  constructor(targetEl, config) {\n    super(targetEl, config);\n    this.pivot = new PivotTransformation(config);\n  }\n\n  type() {\n    return 'pieChart';\n  }\n\n  getTransformation() {\n    return this.pivot;\n  }\n\n  render(pivot) {\n    // [ZEPPELIN-2253] New chart function will be created each time inside super.render()\n    this.chart = null;\n    const d3Data = this.d3DataFromPivot(\n      pivot.schema,\n      pivot.rows,\n      pivot.keys,\n      pivot.groups,\n      pivot.values,\n      true,\n      false,\n      false);\n    const d = d3Data.d3g;\n\n    let generateLabel;\n    // data is grouped\n    if (pivot.groups && pivot.groups.length > 0) {\n      generateLabel = (suffix, prefix) => `${prefix}.${suffix}`;\n    } else { // data isn't grouped\n      generateLabel = (suffix) => suffix;\n    }\n\n    let d3g = d.map((group) => {\n      return group.values.map((row) => ({\n        label: generateLabel(row.x, group.key),\n        value: row.y,\n      }));\n    });\n    // the map function returns d3g as a nested array\n    // [].concat flattens it, http://stackoverflow.com/a/10865042/5154397\n    d3g = [].concat.apply([], d3g); // eslint-disable-line prefer-spread\n    super.render({d3g: d3g});\n  }\n\n  /**\n   * Set new config\n   */\n  setConfig(config) {\n    super.setConfig(config);\n    this.pivot.setConfig(config);\n  }\n\n  configureChart(chart) {\n    chart.x(function(d) {\n      return d.label;\n    })\n    .y(function(d) {\n      return d.value;\n    })\n    .showLabels(false)\n    .showTooltipPercent(true);\n  }\n}\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Nvd3ChartVisualization from './visualization-nvd3chart';\nimport PivotTransformation from '../../tabledata/pivot';\n\n/**\n * Visualize data in area chart\n */\nexport default class AreachartVisualization extends Nvd3ChartVisualization {\n  constructor(targetEl, config) {\n    super(targetEl, config);\n\n    this.pivot = new PivotTransformation(config);\n\n    try {\n      this.config.rotate = {degree: config.rotate.degree};\n    } catch (e) {\n      this.config.rotate = {degree: '-45'};\n    }\n  }\n\n  type() {\n    return 'stackedAreaChart';\n  }\n\n  getTransformation() {\n    return this.pivot;\n  }\n\n  render(pivot) {\n    let d3Data = this.d3DataFromPivot(\n      pivot.schema,\n      pivot.rows,\n      pivot.keys,\n      pivot.groups,\n      pivot.values,\n      false,\n      true,\n      false);\n\n    this.xLabels = d3Data.xLabels;\n    super.render(d3Data);\n    this.config.changeXLabel(this.config.xLabelStatus);\n  }\n\n  /**\n   * Set new config\n   */\n  setConfig(config) {\n    super.setConfig(config);\n    this.pivot.setConfig(config);\n  }\n\n  configureChart(chart) {\n    let self = this;\n    let configObj = self.config;\n\n    chart.xAxis.tickFormat(function(d) {\n      return self.xAxisTickFormat(d, self.xLabels);\n    });\n    chart.yAxis.tickFormat(function(d) {\n      return self.yAxisTickFormat(d);\n    });\n    chart.yAxis.axisLabelDistance(50);\n    chart.useInteractiveGuideline(true); // for better UX and performance issue. (https://github.com/novus/nvd3/issues/691)\n\n    self.config.changeXLabel = function(type) {\n      switch (type) {\n        case 'default':\n          self.chart._options['showXAxis'] = true;\n          self.chart._options['margin'] = {bottom: 50};\n          self.chart.xAxis.rotateLabels(0);\n          configObj.xLabelStatus = 'default';\n          break;\n        case 'rotate':\n          self.chart._options['showXAxis'] = true;\n          self.chart._options['margin'] = {bottom: 140};\n          self.chart.xAxis.rotateLabels(configObj.rotate.degree);\n          configObj.xLabelStatus = 'rotate';\n          break;\n        case 'hide':\n          self.chart._options['showXAxis'] = false;\n          self.chart._options['margin'] = {bottom: 50};\n          d3.select('#' + self.targetEl[0].id + '> svg').select('g.nv-axis.nv-x').selectAll('*').remove();\n          configObj.xLabelStatus = 'hide';\n          break;\n      }\n      self.emitConfig(configObj);\n    };\n\n    self.config.isXLabelStatus = function(type) {\n      if (configObj.xLabelStatus === type) {\n        return true;\n      } else {\n        return false;\n      }\n    };\n\n    self.config.setDegree = function(type) {\n      configObj.rotate.degree = type;\n      self.chart.xAxis.rotateLabels(type);\n      self.emitConfig(configObj);\n    };\n\n    self.config.isDegreeEmpty = function() {\n      if (configObj.rotate.degree.length > 0) {\n        return true;\n      } else {\n        configObj.rotate.degree = '-45';\n        self.emitConfig(configObj);\n        return false;\n      }\n    };\n\n    this.chart.style(this.config.style || 'stack');\n\n    this.chart.dispatch.on('stateChange', function(s) {\n      self.config.style = s.style;\n\n      // give some time to animation finish\n      setTimeout(function() {\n        self.emitConfig(self.config);\n      }, 500);\n    });\n  }\n  getSetting(chart) {\n    let self = this;\n    let configObj = self.config;\n\n    // default to visualize xLabel\n    if (typeof (configObj.xLabelStatus) === 'undefined') {\n      configObj.changeXLabel('default');\n    }\n\n    if (typeof (configObj.rotate.degree) === 'undefined' || configObj.rotate.degree === '') {\n      configObj.rotate.degree = '-45';\n      self.emitConfig(configObj);\n    }\n\n    return {\n      template: 'app/visualization/builtins/visualization-displayXAxis.html',\n      scope: {\n        config: configObj,\n      },\n    };\n  }\n}\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Nvd3ChartVisualization from './visualization-nvd3chart';\nimport PivotTransformation from '../../tabledata/pivot';\nimport moment from 'moment';\n\n/**\n * Visualize data in line chart\n */\nexport default class LinechartVisualization extends Nvd3ChartVisualization {\n  constructor(targetEl, config) {\n    super(targetEl, config);\n\n    this.pivot = new PivotTransformation(config);\n\n    try {\n      this.config.rotate = {degree: config.rotate.degree};\n    } catch (e) {\n      this.config.rotate = {degree: '-45'};\n    }\n  }\n\n  type() {\n    if (this.config.lineWithFocus) {\n      return 'lineWithFocusChart';\n    } else {\n      return 'lineChart';\n    }\n  }\n\n  getTransformation() {\n    return this.pivot;\n  }\n\n  render(pivot) {\n    let d3Data = this.d3DataFromPivot(\n      pivot.schema,\n      pivot.rows,\n      pivot.keys,\n      pivot.groups,\n      pivot.values,\n      false,\n      true,\n      false);\n\n    this.xLabels = d3Data.xLabels;\n    super.render(d3Data);\n    this.config.changeXLabel(this.config.xLabelStatus);\n  }\n\n  /**\n   * Set new config\n   */\n  setConfig(config) {\n    super.setConfig(config);\n    this.pivot.setConfig(config);\n\n    // change mode\n    if (this.currentMode !== config.lineWithFocus) {\n      super.destroy();\n      this.currentMode = config.lineWithFocus;\n    }\n  }\n\n  configureChart(chart) {\n    let self = this;\n    let configObj = self.config;\n\n    chart.xAxis.tickFormat(function(d) {\n      if (self.config.isDateFormat) {\n        if (self.config.dateFormat) {\n          return moment(new Date(self.xAxisTickFormat(d, self.xLabels))).format(self.config.dateFormat);\n        } else {\n          return moment(new Date(self.xAxisTickFormat(d, self.xLabels))).format('YYYY-MM-DD HH:mm:ss');\n        }\n      }\n      return self.xAxisTickFormat(d, self.xLabels);\n    });\n    chart.yAxis.tickFormat(function(d) {\n      if (d === undefined) {\n        return 'N/A';\n      }\n      return self.yAxisTickFormat(d, self.xLabels);\n    });\n    chart.yAxis.axisLabelDistance(50);\n    if (chart.useInteractiveGuideline) {   // lineWithFocusChart hasn't got useInteractiveGuideline\n      chart.useInteractiveGuideline(true); // for better UX and performance issue. (https://github.com/novus/nvd3/issues/691)\n    }\n    if (this.config.forceY) {\n      chart.forceY([0]); // force y-axis minimum to 0 for line chart.\n    } else {\n      chart.forceY([]);\n    }\n\n    self.config.changeXLabel = function(type) {\n      switch (type) {\n        case 'default':\n          self.chart._options['showXAxis'] = true;\n          self.chart._options['margin'] = {bottom: 50};\n          self.chart.xAxis.rotateLabels(0);\n          configObj.xLabelStatus = 'default';\n          break;\n        case 'rotate':\n          self.chart._options['showXAxis'] = true;\n          self.chart._options['margin'] = {bottom: 140};\n          self.chart.xAxis.rotateLabels(configObj.rotate.degree);\n          configObj.xLabelStatus = 'rotate';\n          break;\n        case 'hide':\n          self.chart._options['showXAxis'] = false;\n          self.chart._options['margin'] = {bottom: 50};\n          d3.select('#' + self.targetEl[0].id + '> svg').select('g.nv-axis.nv-x').selectAll('*').remove();\n          configObj.xLabelStatus = 'hide';\n          break;\n      }\n      self.emitConfig(configObj);\n    };\n\n    self.config.isXLabelStatus = function(type) {\n      if (configObj.xLabelStatus === type) {\n        return true;\n      } else {\n        return false;\n      }\n    };\n\n    self.config.setDegree = function(type) {\n      configObj.rotate.degree = type;\n      self.chart.xAxis.rotateLabels(type);\n      self.emitConfig(configObj);\n    };\n\n    self.config.setDateFormat = function(format) {\n      configObj.dateFormat = format;\n      self.emitConfig(configObj);\n    };\n  }\n\n  getSetting(chart) {\n    let self = this;\n    let configObj = self.config;\n\n    // default to visualize xLabel\n    if (typeof (configObj.xLabelStatus) === 'undefined') {\n      configObj.changeXLabel('default');\n    }\n\n    if (typeof (configObj.rotate.degree) === 'undefined' || configObj.rotate.degree === '') {\n      configObj.rotate.degree = '-45';\n      self.emitConfig(configObj);\n    }\n\n    return {\n      template: `<div>\n        <label>\n          <input type=\"checkbox\"\n               ng-model=\"config.forceY\"\n               ng-click=\"save()\" />\n          force Y to 0\n        </label>\n        <br/>\n\n        <label>\n          <input type=\"checkbox\"\n               ng-model=\"config.lineWithFocus\"\n               ng-click=\"save()\" />\n          zoom\n        </label>\n        \n        <br/>        \n        <label>\n          <input type=\"checkbox\"\n               ng-model=\"config.isDateFormat\"\n               ng-click=\"save()\" />\n          Date format\n        </label>\n        <span ng-show=\"config.isDateFormat\">\n          <input type=\"text\"\n           placeholder=\"YYYY-MM-DD HH:mm:ss\"\n           ng-model=\"config.dateFormat\"\n           ng-enter=\"config.setDateFormat(config.dateFormat)\"\n           ng-blur=\"config.setDateFormat(config.dateFormat)\"\n            />\n        </span>\n      </div>\n      <ng-include src=\"'app/visualization/builtins/visualization-displayXAxis.html'\">\n      </ng-include>`,\n      scope: {\n        config: configObj,\n        save: function() {\n          self.emitConfig(configObj);\n        },\n      },\n    };\n  }\n\n  defaultY() {\n    return undefined;\n  }\n}\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Nvd3ChartVisualization from './visualization-nvd3chart';\nimport ColumnselectorTransformation from '../../tabledata/columnselector';\n\n/**\n * Visualize data in scatter char\n */\nexport default class ScatterchartVisualization extends Nvd3ChartVisualization {\n  constructor(targetEl, config) {\n    super(targetEl, config);\n\n    this.columnselectorProps = [\n      {\n        name: 'xAxis',\n      },\n      {\n        name: 'yAxis',\n      },\n      {\n        name: 'group',\n      },\n      {\n        name: 'size',\n        tooltip: `This option is only valid for numeric fields.\n          When data in each axis is discrete, \n          'number of values in corresponding coordinate' will be used.\n          Zeppelin considers values as discrete when input values contain a string\n          or the number of distinct values is greater than 5% of the total number of values.\n          This field turns grey when the selected option is invalid.`,\n      },\n    ];\n    this.columnselector = new ColumnselectorTransformation(config, this.columnselectorProps);\n  }\n\n  type() {\n    return 'scatterChart';\n  }\n\n  getTransformation() {\n    return this.columnselector;\n  }\n\n  render(tableData) {\n    this.tableData = tableData;\n    this.selectDefault();\n    let d3Data = this.setScatterChart(tableData, true);\n    this.xLabels = d3Data.xLabels;\n    this.yLabels = d3Data.yLabels;\n\n    super.render(d3Data);\n  }\n\n  configureChart(chart) {\n    let self = this;\n\n    chart.xAxis.tickFormat(function(d) { // TODO remove round after bump to nvd3 > 1.8.5\n      return self.xAxisTickFormat(Math.round(d * 1e3) / 1e3, self.xLabels);\n    });\n\n    chart.yAxis.tickFormat(function(d) { // TODO remove round after bump to nvd3 > 1.8.5\n      return self.yAxisTickFormat(Math.round(d * 1e3) / 1e3, self.yLabels);\n    });\n\n    chart.showDistX(true).showDistY(true);\n    // handle the problem of tooltip not showing when muliple points have same value.\n  }\n\n  yAxisTickFormat(d, yLabels) {\n    if (yLabels[d] && (isNaN(parseFloat(yLabels[d])) || !isFinite(yLabels[d]))) { // to handle string type xlabel\n      return yLabels[d];\n    } else {\n      return super.yAxisTickFormat(d);\n    }\n  }\n\n  selectDefault() {\n    if (!this.config.xAxis && !this.config.yAxis) {\n      if (this.tableData.columns.length > 1) {\n        this.config.xAxis = this.tableData.columns[0];\n        this.config.yAxis = this.tableData.columns[1];\n      } else if (this.tableData.columns.length === 1) {\n        this.config.xAxis = this.tableData.columns[0];\n      }\n    }\n  }\n\n  setScatterChart(data, refresh) {\n    let xAxis = this.config.xAxis;\n    let yAxis = this.config.yAxis;\n    let group = this.config.group;\n    let size = this.config.size;\n\n    let xValues = [];\n    let yValues = [];\n    let rows = {};\n    let d3g = [];\n\n    let rowNameIndex = {};\n    let colNameIndex = {};\n    let grpNameIndex = {};\n    let rowIndexValue = {};\n    let colIndexValue = {};\n    let grpIndexValue = {};\n    let rowIdx = 0;\n    let colIdx = 0;\n    let grpIdx = 0;\n    let grpName = '';\n\n    let xValue;\n    let yValue;\n    let row;\n\n    if (!xAxis && !yAxis) {\n      return {\n        d3g: [],\n      };\n    }\n\n    for (let i = 0; i < data.rows.length; i++) {\n      row = data.rows[i];\n      if (xAxis) {\n        xValue = row[xAxis.index];\n        xValues[i] = xValue;\n      }\n      if (yAxis) {\n        yValue = row[yAxis.index];\n        yValues[i] = yValue;\n      }\n    }\n\n    let isAllDiscrete = ((xAxis && yAxis && this.isDiscrete(xValues) && this.isDiscrete(yValues)) ||\n    (!xAxis && this.isDiscrete(yValues)) ||\n    (!yAxis && this.isDiscrete(xValues)));\n\n    if (isAllDiscrete) {\n      rows = this.setDiscreteScatterData(data);\n    } else {\n      rows = data.rows;\n    }\n\n    if (!group && isAllDiscrete) {\n      grpName = 'count';\n    } else if (!group && !size) {\n      if (xAxis && yAxis) {\n        grpName = '(' + xAxis.name + ', ' + yAxis.name + ')';\n      } else if (xAxis && !yAxis) {\n        grpName = xAxis.name;\n      } else if (!xAxis && yAxis) {\n        grpName = yAxis.name;\n      }\n    } else if (!group && size) {\n      grpName = size.name;\n    }\n\n    let epsilon = 1e-4; // TODO remove after bump to nvd3 > 1.8.5\n\n    for (let i = 0; i < rows.length; i++) {\n      row = rows[i];\n      if (xAxis) {\n        xValue = row[xAxis.index];\n      }\n      if (yAxis) {\n        yValue = row[yAxis.index];\n      }\n      if (group) {\n        grpName = row[group.index];\n      }\n      let sz = (isAllDiscrete) ? row[row.length - 1] : ((size) ? row[size.index] : 1);\n\n      if (grpNameIndex[grpName] === undefined) {\n        grpIndexValue[grpIdx] = grpName;\n        grpNameIndex[grpName] = grpIdx++;\n      }\n\n      if (xAxis && rowNameIndex[xValue] === undefined) {\n        rowIndexValue[rowIdx] = xValue;\n        rowNameIndex[xValue] = rowIdx++;\n      }\n\n      if (yAxis && colNameIndex[yValue] === undefined) {\n        colIndexValue[colIdx] = yValue;\n        colNameIndex[yValue] = colIdx++;\n      }\n\n      if (!d3g[grpNameIndex[grpName]]) {\n        d3g[grpNameIndex[grpName]] = {\n          key: grpName,\n          values: [],\n        };\n      }\n\n      // TODO remove epsilon jitter after bump to nvd3 > 1.8.5\n      let xval = 0;\n      let yval = 0;\n      if (xAxis) {\n        xval = (isNaN(xValue) ? rowNameIndex[xValue] : parseFloat(xValue)) + Math.random() * epsilon;\n      }\n      if (yAxis) {\n        yval = (isNaN(yValue) ? colNameIndex[yValue] : parseFloat(yValue)) + Math.random() * epsilon;\n      }\n\n      d3g[grpNameIndex[grpName]].values.push({\n        x: xval,\n        y: yval,\n        size: isNaN(parseFloat(sz)) ? 1 : parseFloat(sz),\n      });\n    }\n\n    // TODO remove sort and dedup after bump to nvd3 > 1.8.5\n    let d3gvalues = d3g[grpNameIndex[grpName]].values;\n    d3gvalues.sort(function(a, b) {\n      return ((a['x'] - b['x']) || (a['y'] - b['y']));\n    });\n\n    for (let i = 0; i < d3gvalues.length - 1;) {\n      if ((Math.abs(d3gvalues[i]['x'] - d3gvalues[i + 1]['x']) < epsilon) &&\n           (Math.abs(d3gvalues[i]['y'] - d3gvalues[i + 1]['y']) < epsilon)) {\n        d3gvalues.splice(i + 1, 1);\n      } else {\n        i++;\n      }\n    }\n\n    return {\n      xLabels: rowIndexValue,\n      yLabels: colIndexValue,\n      d3g: d3g,\n    };\n  }\n\n  setDiscreteScatterData(data) {\n    let xAxis = this.config.xAxis;\n    let yAxis = this.config.yAxis;\n    let group = this.config.group;\n\n    let xValue;\n    let yValue;\n    let grp;\n\n    let rows = {};\n\n    for (let i = 0; i < data.rows.length; i++) {\n      let row = data.rows[i];\n      if (xAxis) {\n        xValue = row[xAxis.index];\n      }\n      if (yAxis) {\n        yValue = row[yAxis.index];\n      }\n      if (group) {\n        grp = row[group.index];\n      }\n\n      let key = xValue + ',' + yValue + ',' + grp;\n\n      if (!rows[key]) {\n        rows[key] = {\n          x: xValue,\n          y: yValue,\n          group: grp,\n          size: 1,\n        };\n      } else {\n        rows[key].size++;\n      }\n    }\n\n    // change object into array\n    let newRows = [];\n    for (let r in rows) {\n      if (rows.hasOwnProperty(r)) {\n        let newRow = [];\n        if (xAxis) {\n          newRow[xAxis.index] = rows[r].x;\n        }\n        if (yAxis) {\n          newRow[yAxis.index] = rows[r].y;\n        }\n        if (group) {\n          newRow[group.index] = rows[r].group;\n        }\n        newRow[data.rows[0].length] = rows[r].size;\n        newRows.push(newRow);\n      }\n    }\n    return newRows;\n  }\n\n  isDiscrete(field) {\n    let getUnique = function(f) {\n      let uniqObj = {};\n      let uniqArr = [];\n      let j = 0;\n      for (let i = 0; i < f.length; i++) {\n        let item = f[i];\n        if (uniqObj[item] !== 1) {\n          uniqObj[item] = 1;\n          uniqArr[j++] = item;\n        }\n      }\n      return uniqArr;\n    };\n\n    for (let i = 0; i < field.length; i++) {\n      if (isNaN(parseFloat(field[i])) &&\n        (typeof field[i] === 'string' || field[i] instanceof String)) {\n        return true;\n      }\n    }\n\n    let threshold = 0.05;\n    let unique = getUnique(field);\n    if (unique.length / field.length < threshold) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  isValidSizeOption(options) {\n    let xValues = [];\n    let yValues = [];\n    let rows = this.tableData.rows;\n\n    for (let i = 0; i < rows.length; i++) {\n      let row = rows[i];\n      let size = row[options.size.index];\n\n      // check if the field is numeric\n      if (isNaN(parseFloat(size)) || !isFinite(size)) {\n        return false;\n      }\n\n      if (options.xAxis) {\n        let x = row[options.xAxis.index];\n        xValues[i] = x;\n      }\n      if (options.yAxis) {\n        let y = row[options.yAxis.index];\n        yValues[i] = y;\n      }\n    }\n\n    // check if all existing fields are discrete\n    let isAllDiscrete = ((options.xAxis && options.yAxis && this.isDiscrete(xValues) && this.isDiscrete(yValues)) ||\n    (!options.xAxis && this.isDiscrete(yValues)) ||\n    (!options.yAxis && this.isDiscrete(xValues)));\n\n    if (isAllDiscrete) {\n      return false;\n    }\n\n    return true;\n  }\n}\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const JobStatus = {\n  READY: 'READY',\n  FINISHED: 'FINISHED',\n  ABORT: 'ABORT',\n  ERROR: 'ERROR',\n  PENDING: 'PENDING',\n  RUNNING: 'RUNNING',\n};\n\nexport function getJobIconByStatus(jobStatus) {\n  if (jobStatus === JobStatus.READY) {\n    return 'fa fa-circle-o';\n  } else if (jobStatus === JobStatus.FINISHED) {\n    return 'fa fa-circle';\n  } else if (jobStatus === JobStatus.ABORT) {\n    return 'fa fa-circle';\n  } else if (jobStatus === JobStatus.ERROR) {\n    return 'fa fa-circle';\n  } else if (jobStatus === JobStatus.PENDING) {\n    return 'fa fa-circle';\n  } else if (jobStatus === JobStatus.RUNNING) {\n    return 'fa fa-spinner';\n  }\n}\n\nexport function getJobColorByStatus(jobStatus) {\n  if (jobStatus === JobStatus.READY) {\n    return 'green';\n  } else if (jobStatus === JobStatus.FINISHED) {\n    return 'green';\n  } else if (jobStatus === JobStatus.ABORT) {\n    return 'orange';\n  } else if (jobStatus === JobStatus.ERROR) {\n    return 'red';\n  } else if (jobStatus === JobStatus.PENDING) {\n    return 'gray';\n  } else if (jobStatus === JobStatus.RUNNING) {\n    return 'blue';\n  }\n}\n","/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport {\n  DefaultDisplayType,\n  SpellResult,\n} from './spell-result';\n\nexport {\n  SpellBase,\n} from './spell-base';\n","/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const DefaultDisplayType = {\n  ELEMENT: 'ELEMENT',\n  TABLE: 'TABLE',\n  HTML: 'HTML',\n  ANGULAR: 'ANGULAR',\n  TEXT: 'TEXT',\n  NETWORK: 'NETWORK',\n};\n\nexport const DefaultDisplayMagic = {\n  '%element': DefaultDisplayType.ELEMENT,\n  '%table': DefaultDisplayType.TABLE,\n  '%html': DefaultDisplayType.HTML,\n  '%angular': DefaultDisplayType.ANGULAR,\n  '%text': DefaultDisplayType.TEXT,\n  '%network': DefaultDisplayType.NETWORK,\n};\n\nexport class DataWithType {\n  constructor(data, type, magic, text) {\n    this.data = data;\n    this.type = type;\n\n    /**\n     * keep for `DefaultDisplayType.ELEMENT` (function data type)\n     * to propagate a result to other client.\n     *\n     * otherwise we will send function as `data` and it will not work\n     * since they don't have context where they are created.\n     */\n\n    this.magic = magic;\n    this.text = text;\n  }\n\n  static handleDefaultMagic(m) {\n    // let's use default display type instead of magic in case of default\n    // to keep consistency with backend interpreter\n    if (DefaultDisplayMagic[m]) {\n      return DefaultDisplayMagic[m];\n    } else {\n      return m;\n    }\n  }\n\n  static createPropagable(dataWithType) {\n    if (!SpellResult.isFunction(dataWithType.data)) {\n      return dataWithType;\n    }\n\n    const data = dataWithType.getText();\n    const type = dataWithType.getMagic();\n\n    return new DataWithType(data, type);\n  }\n\n  /**\n   * consume 1 data and produce multiple\n   * @param data {string}\n   * @param customDisplayType\n   * @return {Array<DataWithType>}\n   */\n  static parseStringData(data, customDisplayMagic) {\n    function availableMagic(magic) {\n      return magic && (DefaultDisplayMagic[magic] || customDisplayMagic[magic]);\n    }\n\n    const splited = data.split('\\n');\n\n    const gensWithTypes = [];\n    let mergedGens = [];\n    let previousMagic = DefaultDisplayType.TEXT;\n\n    // create `DataWithType` whenever see available display type.\n    for (let i = 0; i < splited.length; i++) {\n      const g = splited[i];\n      const magic = SpellResult.extractMagic(g);\n\n      // create `DataWithType` only if see new magic\n      if (availableMagic(magic) && mergedGens.length > 0) {\n        gensWithTypes.push(new DataWithType(mergedGens.join(''), previousMagic));\n        mergedGens = [];\n      }\n\n      // accumulate `data` to mergedGens\n      if (availableMagic(magic)) {\n        const withoutMagic = g.split(magic)[1];\n        mergedGens.push(`${withoutMagic}\\n`);\n        previousMagic = DataWithType.handleDefaultMagic(magic);\n      } else {\n        mergedGens.push(`${g}\\n`);\n      }\n    }\n\n    // cleanup the last `DataWithType`\n    if (mergedGens.length > 0) {\n      previousMagic = DataWithType.handleDefaultMagic(previousMagic);\n      gensWithTypes.push(new DataWithType(mergedGens.join(''), previousMagic));\n    }\n\n    return gensWithTypes;\n  }\n\n  /**\n   * get 1 `DataWithType` and produce multiples using available displays\n   * return an wrapped with a promise to generalize result output which can be\n   * object, function or promise\n   * @param dataWithType {DataWithType}\n   * @param availableDisplays {Object} Map for available displays\n   * @param magic\n   * @param textWithoutMagic\n   * @return {Promise<Array<DataWithType>>}\n   */\n  static produceMultipleData(dataWithType, customDisplayType,\n                             magic, textWithoutMagic) {\n    const data = dataWithType.getData();\n    const type = dataWithType.getType();\n\n    // if the type is specified, just return it\n    // handle non-specified dataWithTypes only\n    if (type) {\n      return new Promise((resolve) => {\n        resolve([dataWithType]);\n      });\n    }\n\n    let wrapped;\n\n    if (SpellResult.isFunction(data)) {\n      // if data is a function, we consider it as ELEMENT type.\n      wrapped = new Promise((resolve) => {\n        const dt = new DataWithType(\n          data, DefaultDisplayType.ELEMENT, magic, textWithoutMagic);\n        const result = [dt];\n        return resolve(result);\n      });\n    } else if (SpellResult.isPromise(data)) {\n      // if data is a promise,\n      wrapped = data.then((generated) => {\n        const result =\n          DataWithType.parseStringData(generated, customDisplayType);\n        return result;\n      });\n    } else {\n      // if data is a object, parse it to multiples\n      wrapped = new Promise((resolve) => {\n        const result =\n          DataWithType.parseStringData(data, customDisplayType);\n        return resolve(result);\n      });\n    }\n\n    return wrapped;\n  }\n\n  /**\n   * `data` can be promise, function or just object\n   * - if data is an object, it will be used directly.\n   * - if data is a function, it will be called with DOM element id\n   *   where the final output is rendered.\n   * - if data is a promise, the post processing logic\n   *   will be called in `then()` of this promise.\n   * @returns {*} `data` which can be object, function or promise.\n   */\n  getData() {\n    return this.data;\n  }\n\n  /**\n   * Value of `type` might be empty which means\n   * data can be separated into multiples\n   * by `SpellResult.parseStringData()`\n   * @returns {string}\n   */\n  getType() {\n    return this.type;\n  }\n\n  getMagic() {\n    return this.magic;\n  }\n\n  getText() {\n    return this.text;\n  }\n}\n\nexport class SpellResult {\n  constructor(resultData, resultType) {\n    this.dataWithTypes = [];\n    this.add(resultData, resultType);\n  }\n\n  static isFunction(data) {\n    return (data && typeof data === 'function');\n  }\n\n  static isPromise(data) {\n    return (data && typeof data.then === 'function');\n  }\n\n  static isObject(data) {\n    return (typeof data !== 'undefined' &&\n      !SpellResult.isFunction(data) &&\n      !SpellResult.isPromise(data));\n  }\n\n  static extractMagic(allParagraphText) {\n    const pattern = /^\\s*%(\\S+)\\s*/g;\n    try {\n      let match = pattern.exec(allParagraphText);\n      if (match) {\n        return `%${match[1].trim()}`;\n      }\n    } catch (error) {\n      // failed to parse, ignore\n    }\n\n    return undefined;\n  }\n\n  static createPropagable(resultMsg) {\n    return resultMsg.map((dt) => {\n      return DataWithType.createPropagable(dt);\n    });\n  }\n\n  add(resultData, resultType) {\n    if (resultData) {\n      this.dataWithTypes.push(\n        new DataWithType(resultData, resultType));\n    }\n\n    return this;\n  }\n\n  /**\n   * @param customDisplayType\n   * @param textWithoutMagic\n   * @return {Promise<Array<DataWithType>>}\n   */\n  getAllParsedDataWithTypes(customDisplayType, magic, textWithoutMagic) {\n    const promises = this.dataWithTypes.map((dt) => {\n      return DataWithType.produceMultipleData(\n        dt, customDisplayType, magic, textWithoutMagic);\n    });\n\n    // some promises can include an array so we need to flatten them\n    const flatten = Promise.all(promises).then((values) => {\n      return values.reduce((acc, cur) => {\n        if (Array.isArray(cur)) {\n          return acc.concat(cur);\n        } else {\n          return acc.concat([cur]);\n        }\n      });\n    });\n\n    return flatten;\n  }\n}\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const HeliumType = {\n  VISUALIZATION: 'VISUALIZATION',\n  SPELL: 'SPELL',\n  INTERPRETER: 'INTERPRETER',\n  APPLICATION: 'APPLICATION',\n};\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// import globally uses css here\nimport 'github-markdown-css/github-markdown.css';\n\nimport './app/app.js';\nimport './app/app.controller.js';\nimport './app/home/home.controller.js';\nimport './app/notebook/notebook.controller.js';\n\nimport './app/tabledata/tabledata.js';\nimport './app/tabledata/transformation.js';\nimport './app/tabledata/pivot.js';\nimport './app/tabledata/passthrough.js';\nimport './app/tabledata/columnselector.js';\nimport './app/tabledata/advanced-transformation.js';\nimport './app/visualization/visualization.js';\nimport './app/visualization/builtins/visualization-table.js';\nimport './app/visualization/builtins/visualization-nvd3chart.js';\nimport './app/visualization/builtins/visualization-barchart.js';\nimport './app/visualization/builtins/visualization-piechart.js';\nimport './app/visualization/builtins/visualization-areachart.js';\nimport './app/visualization/builtins/visualization-linechart.js';\nimport './app/visualization/builtins/visualization-scatterchart.js';\n\nimport './app/jobmanager/jobmanager.component.js';\nimport './app/cluster/cluster.controller.js';\nimport './app/cluster/node.controller.js';\nimport './app/interpreter/interpreter.controller.js';\nimport './app/interpreter/interpreter.filter.js';\nimport './app/interpreter/interpreter-item.directive.js';\nimport './app/interpreter/widget/number-widget.directive.js';\nimport './app/credential/credential.controller.js';\nimport './app/configuration/configuration.controller.js';\nimport './app/notebook/revisions-comparator/revisions-comparator.component.js';\nimport './app/notebook/paragraph/paragraph.controller.js';\nimport './app/notebook/paragraph/clipboard.controller.js';\nimport './app/notebook/paragraph/resizable.directive.js';\nimport './app/notebook/paragraph/result/result.controller.js';\nimport './app/notebook/paragraph/code-editor/code-editor.directive.js';\nimport './app/notebook/save-as/save-as.service.js';\nimport './app/notebook/save-as/browser-detect.service.js';\nimport './app/notebook/elastic-input/elastic-input.controller.js';\nimport './app/notebook/dropdown-input/dropdown-input.directive.js';\nimport './app/notebook/note-var-share.service.js';\nimport './app/notebook-repository/notebook-repository.controller.js';\nimport './app/search/result-list.controller.js';\nimport './app/search/search.service.js';\nimport './app/helium';\nimport './app/helium/helium.service.js';\nimport './app/notebook/dynamic-forms/dynamic-forms.directive.js';\nimport './components/array-ordering/array-ordering.service.js';\nimport './components/navbar/navbar.controller.js';\nimport './components/navbar/expand-collapse/expand-collapse.directive.js';\nimport './components/note-create/note-create.controller.js';\nimport './components/note-create/visible.directive.js';\nimport './components/note-import/note-import.controller.js';\nimport './components/ng-enter/ng-enter.directive.js';\nimport './components/ng-escape/ng-escape.directive.js';\nimport './components/websocket/websocket-message.service.js';\nimport './components/websocket/websocket-event.factory.js';\nimport './components/note-list/note-list.factory.js';\nimport './components/base-url/base-url.service.js';\nimport './components/loader/loader.service';\nimport './components/login/login.controller.js';\nimport './components/note-action/note-action.service.js';\nimport './components/note-rename/note-rename.controller.js';\nimport './components/note-rename/note-rename.service.js';\n","/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport 'headroom.js';\nimport 'headroom.js/dist/angular.headroom';\n\nimport 'scrollmonitor/scrollMonitor.js';\nimport 'angular-viewport-watch/angular-viewport-watch.js';\n\nimport 'angular-ui-grid/ui-grid.css';\nimport 'angular-ui-grid';\n\nconst requiredModules = [\n  'ngCookies',\n  'ngAnimate',\n  'ngRoute',\n  'ngSanitize',\n  'angular-websocket',\n  'ui.ace',\n  'ui.bootstrap',\n  'as.sortable',\n  'ngTouch',\n  'ngDragDrop',\n  'angular.filter',\n  'monospaced.elastic',\n  'puElasticInput',\n  'xeditable',\n  'ngToast',\n  'focus-if',\n  'ngResource',\n  'ngclipboard',\n  'angularViewportWatch',\n  'infinite-scroll',\n  'ui.grid',\n  'ui.grid.exporter',\n  'ui.grid.edit', 'ui.grid.rowEdit',\n  'ui.grid.selection',\n  'ui.grid.cellNav', 'ui.grid.pinning',\n  'ui.grid.grouping',\n  'ui.grid.emptyBaseLayer',\n  'ui.grid.resizeColumns',\n  'ui.grid.moveColumns',\n  'ui.grid.pagination',\n  'ui.grid.saveState',\n];\n\n// headroom should not be used for CI, since we have to execute some integration tests.\n// otherwise, they will fail.\nif (!process.env.BUILD_CI) {\n  requiredModules.push('headroom');\n}\n\nlet zeppelinWebApp = angular.module('zeppelinWebApp', requiredModules)\n  .filter('breakFilter', function() {\n    return function(text) {\n      // eslint-disable-next-line no-extra-boolean-cast\n      if (!!text) {\n        return text.replace(/\\n/g, '<br />');\n      }\n    };\n  })\n  .config(function($httpProvider, $routeProvider, ngToastProvider) {\n    // withCredentials when running locally via grunt\n    $httpProvider.defaults.withCredentials = true;\n\n    let visBundleLoad = {\n      load: ['heliumService', function(heliumService) {\n        return heliumService.load;\n      }],\n    };\n\n    $routeProvider\n      .when('/', {\n        templateUrl: 'app/home/home.html',\n      })\n      .when('/notebook/:noteId', {\n        templateUrl: 'app/notebook/notebook.html',\n        controller: 'NotebookCtrl',\n        resolve: visBundleLoad,\n      })\n      .when('/notebook/:noteId/paragraph?=:paragraphId', {\n        templateUrl: 'app/notebook/notebook.html',\n        controller: 'NotebookCtrl',\n        resolve: visBundleLoad,\n      })\n      .when('/notebook/:noteId/paragraph/:paragraphId?', {\n        templateUrl: 'app/notebook/notebook.html',\n        controller: 'NotebookCtrl',\n        resolve: visBundleLoad,\n      })\n      .when('/notebook/:noteId/revision/:revisionId', {\n        templateUrl: 'app/notebook/notebook.html',\n        controller: 'NotebookCtrl',\n        resolve: visBundleLoad,\n      })\n      .when('/jobmanager', {\n        templateUrl: 'app/jobmanager/jobmanager.html',\n        controller: 'JobManagerCtrl',\n      })\n      .when('/interpreter', {\n        templateUrl: 'app/interpreter/interpreter.html',\n        controller: 'InterpreterCtrl',\n      })\n      .when('/notebookRepos', {\n        templateUrl: 'app/notebook-repository/notebook-repository.html',\n        controller: 'NotebookRepositoryCtrl',\n        controllerAs: 'noterepo',\n      })\n      .when('/credential', {\n        templateUrl: 'app/credential/credential.html',\n        controller: 'CredentialCtrl',\n      })\n      .when('/helium', {\n        templateUrl: 'app/helium/helium.html',\n        controller: 'HeliumCtrl',\n      })\n      .when('/configuration', {\n        templateUrl: 'app/configuration/configuration.html',\n        controller: 'ConfigurationCtrl',\n      })\n      .when('/search/:searchTerm', {\n        templateUrl: 'app/search/result-list.html',\n        controller: 'SearchResultCtrl',\n      })\n      .when('/cluster', {\n        templateUrl: 'app/cluster/cluster.html',\n        controller: 'ClusterCtrl',\n      })\n      .when('/cluster/:nodeName/:intpName', {\n        templateUrl: 'app/cluster/node.html',\n        controller: 'NodeCtrl',\n      })\n      .otherwise({\n        redirectTo: '/',\n      });\n\n    ngToastProvider.configure({\n      dismissButton: true,\n      dismissOnClick: false,\n      combineDuplications: true,\n      timeout: 6000,\n    });\n  })\n\n  // handel logout on API failure\n    .config(function($httpProvider, $provide) {\n      if (process.env.PROD) {\n        $httpProvider.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest';\n      }\n      $provide.factory('httpInterceptor', function($q, $rootScope) {\n        return {\n          'responseError': function(rejection) {\n            if (rejection.status === 405) {\n              let data = {};\n              data.info = '';\n              $rootScope.$broadcast('session_logout', data);\n            }\n            $rootScope.$broadcast('httpResponseError', rejection);\n            return $q.reject(rejection);\n          },\n        };\n      });\n      $httpProvider.interceptors.push('httpInterceptor');\n    })\n  .constant('TRASH_FOLDER_ID', '~Trash');\n\nfunction auth() {\n  let $http = angular.injector(['ng']).get('$http');\n  let baseUrlSrv = angular.injector(['zeppelinWebApp']).get('baseUrlSrv');\n  angular.injector(['zeppelinWebApp']).get('loaderSrv').hideLoader();\n  // withCredentials when running locally via grunt\n  $http.defaults.withCredentials = true;\n  jQuery.ajaxSetup({\n    dataType: 'json',\n    xhrFields: {\n      withCredentials: true,\n    },\n    crossDomain: true,\n  });\n  let config = (process.env.PROD) ? {headers: {'X-Requested-With': 'XMLHttpRequest'}} : {};\n  return $http.get(baseUrlSrv.getRestApiBase() + '/security/ticket', config).then(function(response) {\n    zeppelinWebApp.run(function($rootScope) {\n      let res = angular.fromJson(response.data).body;\n      if (res['redirectURL']) {\n        window.location.href = res['redirectURL'] + window.location.href;\n      } else {\n        $rootScope.ticket = res;\n        $rootScope.ticket.screenUsername = $rootScope.ticket.principal;\n        if ($rootScope.ticket.principal.indexOf('#Pac4j') === 0) {\n          let re = ', name=(.*?),';\n          $rootScope.ticket.screenUsername = $rootScope.ticket.principal.match(re)[1];\n        }\n      }\n    });\n  }, function(errorResponse) {\n    // Handle error case\n    let redirect = errorResponse.headers('Location');\n    if (errorResponse.status === 401 && redirect !== undefined) {\n      // Handle page redirect\n      window.location.href = redirect;\n    }\n  });\n}\n\nfunction bootstrapApplication() {\n  zeppelinWebApp.run(function($rootScope, $location) {\n    $rootScope.$on('$routeChangeStart', function(event, next, current) {\n      $rootScope.pageTitle = 'Zeppelin';\n      if (!$rootScope.ticket && next.$$route && !next.$$route.publicAccess) {\n        const oldPath = ($location.search() && $location.search()['ref']) || $location.path();\n        $location.path('/').search('ref', oldPath);\n      }\n    });\n  });\n  angular.bootstrap(document, ['zeppelinWebApp']);\n}\n\nangular.element(document).ready(function() {\n  auth().then(bootstrapApplication);\n});\n","/*** IMPORTS FROM imports-loader ***/\n(function() {\nvar define = false;\nvar exports = false;\n\n/*!\n * headroom.js v0.9.4 - Give your page some headroom. Hide your header until you need it\n * Copyright (c) 2017 Nick Williams - http://wicky.nillia.ms/headroom.js\n * License: MIT\n */\n\n(function(root, factory) {\n  'use strict';\n\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([], factory);\n  }\n  else if (typeof exports === 'object') {\n    // COMMONJS\n    module.exports = factory();\n  }\n  else {\n    // BROWSER\n    root.Headroom = factory();\n  }\n}(this, function() {\n  'use strict';\n\n  /* exported features */\n  \n  var features = {\n    bind : !!(function(){}.bind),\n    classList : 'classList' in document.documentElement,\n    rAF : !!(window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame)\n  };\n  window.requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame;\n  \n  /**\n   * Handles debouncing of events via requestAnimationFrame\n   * @see http://www.html5rocks.com/en/tutorials/speed/animations/\n   * @param {Function} callback The callback to handle whichever event\n   */\n  function Debouncer (callback) {\n    this.callback = callback;\n    this.ticking = false;\n  }\n  Debouncer.prototype = {\n    constructor : Debouncer,\n  \n    /**\n     * dispatches the event to the supplied callback\n     * @private\n     */\n    update : function() {\n      this.callback && this.callback();\n      this.ticking = false;\n    },\n  \n    /**\n     * ensures events don't get stacked\n     * @private\n     */\n    requestTick : function() {\n      if(!this.ticking) {\n        requestAnimationFrame(this.rafCallback || (this.rafCallback = this.update.bind(this)));\n        this.ticking = true;\n      }\n    },\n  \n    /**\n     * Attach this as the event listeners\n     */\n    handleEvent : function() {\n      this.requestTick();\n    }\n  };\n  /**\n   * Check if object is part of the DOM\n   * @constructor\n   * @param {Object} obj element to check\n   */\n  function isDOMElement(obj) {\n    return obj && typeof window !== 'undefined' && (obj === window || obj.nodeType);\n  }\n  \n  /**\n   * Helper function for extending objects\n   */\n  function extend (object /*, objectN ... */) {\n    if(arguments.length <= 0) {\n      throw new Error('Missing arguments in extend function');\n    }\n  \n    var result = object || {},\n        key,\n        i;\n  \n    for (i = 1; i < arguments.length; i++) {\n      var replacement = arguments[i] || {};\n  \n      for (key in replacement) {\n        // Recurse into object except if the object is a DOM element\n        if(typeof result[key] === 'object' && ! isDOMElement(result[key])) {\n          result[key] = extend(result[key], replacement[key]);\n        }\n        else {\n          result[key] = result[key] || replacement[key];\n        }\n      }\n    }\n  \n    return result;\n  }\n  \n  /**\n   * Helper function for normalizing tolerance option to object format\n   */\n  function normalizeTolerance (t) {\n    return t === Object(t) ? t : { down : t, up : t };\n  }\n  \n  /**\n   * UI enhancement for fixed headers.\n   * Hides header when scrolling down\n   * Shows header when scrolling up\n   * @constructor\n   * @param {DOMElement} elem the header element\n   * @param {Object} options options for the widget\n   */\n  function Headroom (elem, options) {\n    options = extend(options, Headroom.options);\n  \n    this.lastKnownScrollY = 0;\n    this.elem             = elem;\n    this.tolerance        = normalizeTolerance(options.tolerance);\n    this.classes          = options.classes;\n    this.offset           = options.offset;\n    this.scroller         = options.scroller;\n    this.initialised      = false;\n    this.onPin            = options.onPin;\n    this.onUnpin          = options.onUnpin;\n    this.onTop            = options.onTop;\n    this.onNotTop         = options.onNotTop;\n    this.onBottom         = options.onBottom;\n    this.onNotBottom      = options.onNotBottom;\n  }\n  Headroom.prototype = {\n    constructor : Headroom,\n  \n    /**\n     * Initialises the widget\n     */\n    init : function() {\n      if(!Headroom.cutsTheMustard) {\n        return;\n      }\n  \n      this.debouncer = new Debouncer(this.update.bind(this));\n      this.elem.classList.add(this.classes.initial);\n  \n      // defer event registration to handle browser\n      // potentially restoring previous scroll position\n      setTimeout(this.attachEvent.bind(this), 100);\n  \n      return this;\n    },\n  \n    /**\n     * Unattaches events and removes any classes that were added\n     */\n    destroy : function() {\n      var classes = this.classes;\n  \n      this.initialised = false;\n  \n      for (var key in classes) {\n        if(classes.hasOwnProperty(key)) {\n          this.elem.classList.remove(classes[key]);\n        }\n      }\n  \n      this.scroller.removeEventListener('scroll', this.debouncer, false);\n    },\n  \n    /**\n     * Attaches the scroll event\n     * @private\n     */\n    attachEvent : function() {\n      if(!this.initialised){\n        this.lastKnownScrollY = this.getScrollY();\n        this.initialised = true;\n        this.scroller.addEventListener('scroll', this.debouncer, false);\n  \n        this.debouncer.handleEvent();\n      }\n    },\n  \n    /**\n     * Unpins the header if it's currently pinned\n     */\n    unpin : function() {\n      var classList = this.elem.classList,\n        classes = this.classes;\n  \n      if(classList.contains(classes.pinned) || !classList.contains(classes.unpinned)) {\n        classList.add(classes.unpinned);\n        classList.remove(classes.pinned);\n        this.onUnpin && this.onUnpin.call(this);\n      }\n    },\n  \n    /**\n     * Pins the header if it's currently unpinned\n     */\n    pin : function() {\n      var classList = this.elem.classList,\n        classes = this.classes;\n  \n      if(classList.contains(classes.unpinned)) {\n        classList.remove(classes.unpinned);\n        classList.add(classes.pinned);\n        this.onPin && this.onPin.call(this);\n      }\n    },\n  \n    /**\n     * Handles the top states\n     */\n    top : function() {\n      var classList = this.elem.classList,\n        classes = this.classes;\n  \n      if(!classList.contains(classes.top)) {\n        classList.add(classes.top);\n        classList.remove(classes.notTop);\n        this.onTop && this.onTop.call(this);\n      }\n    },\n  \n    /**\n     * Handles the not top state\n     */\n    notTop : function() {\n      var classList = this.elem.classList,\n        classes = this.classes;\n  \n      if(!classList.contains(classes.notTop)) {\n        classList.add(classes.notTop);\n        classList.remove(classes.top);\n        this.onNotTop && this.onNotTop.call(this);\n      }\n    },\n  \n    bottom : function() {\n      var classList = this.elem.classList,\n        classes = this.classes;\n  \n      if(!classList.contains(classes.bottom)) {\n        classList.add(classes.bottom);\n        classList.remove(classes.notBottom);\n        this.onBottom && this.onBottom.call(this);\n      }\n    },\n  \n    /**\n     * Handles the not top state\n     */\n    notBottom : function() {\n      var classList = this.elem.classList,\n        classes = this.classes;\n  \n      if(!classList.contains(classes.notBottom)) {\n        classList.add(classes.notBottom);\n        classList.remove(classes.bottom);\n        this.onNotBottom && this.onNotBottom.call(this);\n      }\n    },\n  \n    /**\n     * Gets the Y scroll position\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Window.scrollY\n     * @return {Number} pixels the page has scrolled along the Y-axis\n     */\n    getScrollY : function() {\n      return (this.scroller.pageYOffset !== undefined)\n        ? this.scroller.pageYOffset\n        : (this.scroller.scrollTop !== undefined)\n          ? this.scroller.scrollTop\n          : (document.documentElement || document.body.parentNode || document.body).scrollTop;\n    },\n  \n    /**\n     * Gets the height of the viewport\n     * @see http://andylangton.co.uk/blog/development/get-viewport-size-width-and-height-javascript\n     * @return {int} the height of the viewport in pixels\n     */\n    getViewportHeight : function () {\n      return window.innerHeight\n        || document.documentElement.clientHeight\n        || document.body.clientHeight;\n    },\n  \n    /**\n     * Gets the physical height of the DOM element\n     * @param  {Object}  elm the element to calculate the physical height of which\n     * @return {int}     the physical height of the element in pixels\n     */\n    getElementPhysicalHeight : function (elm) {\n      return Math.max(\n        elm.offsetHeight,\n        elm.clientHeight\n      );\n    },\n  \n    /**\n     * Gets the physical height of the scroller element\n     * @return {int} the physical height of the scroller element in pixels\n     */\n    getScrollerPhysicalHeight : function () {\n      return (this.scroller === window || this.scroller === document.body)\n        ? this.getViewportHeight()\n        : this.getElementPhysicalHeight(this.scroller);\n    },\n  \n    /**\n     * Gets the height of the document\n     * @see http://james.padolsey.com/javascript/get-document-height-cross-browser/\n     * @return {int} the height of the document in pixels\n     */\n    getDocumentHeight : function () {\n      var body = document.body,\n        documentElement = document.documentElement;\n  \n      return Math.max(\n        body.scrollHeight, documentElement.scrollHeight,\n        body.offsetHeight, documentElement.offsetHeight,\n        body.clientHeight, documentElement.clientHeight\n      );\n    },\n  \n    /**\n     * Gets the height of the DOM element\n     * @param  {Object}  elm the element to calculate the height of which\n     * @return {int}     the height of the element in pixels\n     */\n    getElementHeight : function (elm) {\n      return Math.max(\n        elm.scrollHeight,\n        elm.offsetHeight,\n        elm.clientHeight\n      );\n    },\n  \n    /**\n     * Gets the height of the scroller element\n     * @return {int} the height of the scroller element in pixels\n     */\n    getScrollerHeight : function () {\n      return (this.scroller === window || this.scroller === document.body)\n        ? this.getDocumentHeight()\n        : this.getElementHeight(this.scroller);\n    },\n  \n    /**\n     * determines if the scroll position is outside of document boundaries\n     * @param  {int}  currentScrollY the current y scroll position\n     * @return {bool} true if out of bounds, false otherwise\n     */\n    isOutOfBounds : function (currentScrollY) {\n      var pastTop  = currentScrollY < 0,\n        pastBottom = currentScrollY + this.getScrollerPhysicalHeight() > this.getScrollerHeight();\n  \n      return pastTop || pastBottom;\n    },\n  \n    /**\n     * determines if the tolerance has been exceeded\n     * @param  {int} currentScrollY the current scroll y position\n     * @return {bool} true if tolerance exceeded, false otherwise\n     */\n    toleranceExceeded : function (currentScrollY, direction) {\n      return Math.abs(currentScrollY-this.lastKnownScrollY) >= this.tolerance[direction];\n    },\n  \n    /**\n     * determine if it is appropriate to unpin\n     * @param  {int} currentScrollY the current y scroll position\n     * @param  {bool} toleranceExceeded has the tolerance been exceeded?\n     * @return {bool} true if should unpin, false otherwise\n     */\n    shouldUnpin : function (currentScrollY, toleranceExceeded) {\n      var scrollingDown = currentScrollY > this.lastKnownScrollY,\n        pastOffset = currentScrollY >= this.offset;\n  \n      return scrollingDown && pastOffset && toleranceExceeded;\n    },\n  \n    /**\n     * determine if it is appropriate to pin\n     * @param  {int} currentScrollY the current y scroll position\n     * @param  {bool} toleranceExceeded has the tolerance been exceeded?\n     * @return {bool} true if should pin, false otherwise\n     */\n    shouldPin : function (currentScrollY, toleranceExceeded) {\n      var scrollingUp  = currentScrollY < this.lastKnownScrollY,\n        pastOffset = currentScrollY <= this.offset;\n  \n      return (scrollingUp && toleranceExceeded) || pastOffset;\n    },\n  \n    /**\n     * Handles updating the state of the widget\n     */\n    update : function() {\n      var currentScrollY  = this.getScrollY(),\n        scrollDirection = currentScrollY > this.lastKnownScrollY ? 'down' : 'up',\n        toleranceExceeded = this.toleranceExceeded(currentScrollY, scrollDirection);\n  \n      if(this.isOutOfBounds(currentScrollY)) { // Ignore bouncy scrolling in OSX\n        return;\n      }\n  \n      if (currentScrollY <= this.offset ) {\n        this.top();\n      } else {\n        this.notTop();\n      }\n  \n      if(currentScrollY + this.getViewportHeight() >= this.getScrollerHeight()) {\n        this.bottom();\n      }\n      else {\n        this.notBottom();\n      }\n  \n      if(this.shouldUnpin(currentScrollY, toleranceExceeded)) {\n        this.unpin();\n      }\n      else if(this.shouldPin(currentScrollY, toleranceExceeded)) {\n        this.pin();\n      }\n  \n      this.lastKnownScrollY = currentScrollY;\n    }\n  };\n  /**\n   * Default options\n   * @type {Object}\n   */\n  Headroom.options = {\n    tolerance : {\n      up : 0,\n      down : 0\n    },\n    offset : 0,\n    scroller: window,\n    classes : {\n      pinned : 'headroom--pinned',\n      unpinned : 'headroom--unpinned',\n      top : 'headroom--top',\n      notTop : 'headroom--not-top',\n      bottom : 'headroom--bottom',\n      notBottom : 'headroom--not-bottom',\n      initial : 'headroom'\n    }\n  };\n  Headroom.cutsTheMustard = typeof features !== 'undefined' && features.rAF && features.bind && features.classList;\n\n  return Headroom;\n}));\n}.call(window));","/*!\n * headroom.js v0.9.4 - Give your page some headroom. Hide your header until you need it\n * Copyright (c) 2017 Nick Williams - http://wicky.nillia.ms/headroom.js\n * License: MIT\n */\n\n(function (angular, Headroom) {\n\n  if(!angular) {\n    return;\n  }\n  \n  function headroom(HeadroomService) {\n    return {\n      scope: {\n        tolerance: '=',\n        offset: '=',\n        classes: '=',\n        scroller: '@'\n      },\n      link: function ($scope, $element) {\n        var options = {};\n        var opts = HeadroomService.options;\n        for (var prop in opts) {\n          options[prop] = $scope[prop] || opts[prop];\n        }\n        if ($scope.scroller) {\n          options.scroller = document.querySelector($scope.scroller);\n        }\n        var headroom = new HeadroomService($element[0], options).init();\n        $scope.$on('$destroy', function(){\n          headroom.destroy();\n        });\n      }\n    };\n  }\n  \n  headroom.$inject = ['HeadroomService'];\n\n  function HeadroomService() {\n    return Headroom;\n  }\n\n  angular\n    .module('headroom', [])\n    .directive('headroom', headroom)\n    .factory('HeadroomService', HeadroomService);\n  \n})(window.angular, window.Headroom);","!function(t,e){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(\"scrollMonitor\",[],e):\"object\"==typeof exports?exports.scrollMonitor=e():t.scrollMonitor=e()}(this,function(){return function(t){function e(o){if(i[o])return i[o].exports;var s=i[o]={exports:{},id:o,loaded:!1};return t[o].call(s.exports,s,s.exports,e),s.loaded=!0,s.exports}var i={};return e.m=t,e.c=i,e.p=\"\",e(0)}([function(t,e,i){\"use strict\";var o=i(1),s=o.isInBrowser,n=i(2),r=new n(s?document.body:null);r.setStateFromDOM(null),r.listenToDOM(),s&&(window.scrollMonitor=r),t.exports=r},function(t,e){\"use strict\";e.VISIBILITYCHANGE=\"visibilityChange\",e.ENTERVIEWPORT=\"enterViewport\",e.FULLYENTERVIEWPORT=\"fullyEnterViewport\",e.EXITVIEWPORT=\"exitViewport\",e.PARTIALLYEXITVIEWPORT=\"partiallyExitViewport\",e.LOCATIONCHANGE=\"locationChange\",e.STATECHANGE=\"stateChange\",e.eventTypes=[e.VISIBILITYCHANGE,e.ENTERVIEWPORT,e.FULLYENTERVIEWPORT,e.EXITVIEWPORT,e.PARTIALLYEXITVIEWPORT,e.LOCATIONCHANGE,e.STATECHANGE],e.isOnServer=\"undefined\"==typeof window,e.isInBrowser=!e.isOnServer,e.defaultOffsets={top:0,bottom:0}},function(t,e,i){\"use strict\";function o(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}function s(t){return c?0:t===document.body?window.innerHeight||document.documentElement.clientHeight:t.clientHeight}function n(t){return c?0:t===document.body?Math.max(document.body.scrollHeight,document.documentElement.scrollHeight,document.body.offsetHeight,document.documentElement.offsetHeight,document.documentElement.clientHeight):t.scrollHeight}function r(t){return c?0:t===document.body?window.pageYOffset||document.documentElement&&document.documentElement.scrollTop||document.body.scrollTop:t.scrollTop}var h=i(1),c=h.isOnServer,a=h.isInBrowser,l=h.eventTypes,p=i(3),u=!1;if(a)try{var w=Object.defineProperty({},\"passive\",{get:function(){u=!0}});window.addEventListener(\"test\",null,w)}catch(t){}var d=!!u&&{capture:!1,passive:!0},f=function(){function t(e,i){function h(){if(a.viewportTop=r(e),a.viewportBottom=a.viewportTop+a.viewportHeight,a.documentHeight=n(e),a.documentHeight!==p){for(u=a.watchers.length;u--;)a.watchers[u].recalculateLocation();p=a.documentHeight}}function c(){for(w=a.watchers.length;w--;)a.watchers[w].update();for(w=a.watchers.length;w--;)a.watchers[w].triggerCallbacks()}o(this,t);var a=this;this.item=e,this.watchers=[],this.viewportTop=null,this.viewportBottom=null,this.documentHeight=n(e),this.viewportHeight=s(e),this.DOMListener=function(){t.prototype.DOMListener.apply(a,arguments)},this.eventTypes=l,i&&(this.containerWatcher=i.create(e));var p,u,w;this.update=function(){h(),c()},this.recalculateLocations=function(){this.documentHeight=0,this.update()}}return t.prototype.listenToDOM=function(){a&&(window.addEventListener?(this.item===document.body?window.addEventListener(\"scroll\",this.DOMListener,d):this.item.addEventListener(\"scroll\",this.DOMListener,d),window.addEventListener(\"resize\",this.DOMListener)):(this.item===document.body?window.attachEvent(\"onscroll\",this.DOMListener):this.item.attachEvent(\"onscroll\",this.DOMListener),window.attachEvent(\"onresize\",this.DOMListener)),this.destroy=function(){window.addEventListener?(this.item===document.body?(window.removeEventListener(\"scroll\",this.DOMListener,d),this.containerWatcher.destroy()):this.item.removeEventListener(\"scroll\",this.DOMListener,d),window.removeEventListener(\"resize\",this.DOMListener)):(this.item===document.body?(window.detachEvent(\"onscroll\",this.DOMListener),this.containerWatcher.destroy()):this.item.detachEvent(\"onscroll\",this.DOMListener),window.detachEvent(\"onresize\",this.DOMListener))})},t.prototype.destroy=function(){},t.prototype.DOMListener=function(t){this.setStateFromDOM(t)},t.prototype.setStateFromDOM=function(t){var e=r(this.item),i=s(this.item),o=n(this.item);this.setState(e,i,o,t)},t.prototype.setState=function(t,e,i,o){var s=e!==this.viewportHeight||i!==this.contentHeight;if(this.latestEvent=o,this.viewportTop=t,this.viewportHeight=e,this.viewportBottom=t+e,this.contentHeight=i,s)for(var n=this.watchers.length;n--;)this.watchers[n].recalculateLocation();this.updateAndTriggerWatchers(o)},t.prototype.updateAndTriggerWatchers=function(t){for(var e=this.watchers.length;e--;)this.watchers[e].update();for(e=this.watchers.length;e--;)this.watchers[e].triggerCallbacks(t)},t.prototype.createCustomContainer=function(){return new t},t.prototype.createContainer=function(e){\"string\"==typeof e?e=document.querySelector(e):e&&e.length>0&&(e=e[0]);var i=new t(e,this);return i.setStateFromDOM(),i.listenToDOM(),i},t.prototype.create=function(t,e){\"string\"==typeof t?t=document.querySelector(t):t&&t.length>0&&(t=t[0]);var i=new p(this,t,e);return this.watchers.push(i),i},t.prototype.beget=function(t,e){return this.create(t,e)},t}();t.exports=f},function(t,e,i){\"use strict\";function o(t,e,i){function o(t,e){if(0!==t.length)for(E=t.length;E--;)y=t[E],y.callback.call(s,e,s),y.isOne&&t.splice(E,1)}var s=this;this.watchItem=e,this.container=t,i?i===+i?this.offsets={top:i,bottom:i}:this.offsets={top:i.top||w.top,bottom:i.bottom||w.bottom}:this.offsets=w,this.callbacks={};for(var d=0,f=u.length;d<f;d++)s.callbacks[u[d]]=[];this.locked=!1;var m,v,b,I,E,y;this.triggerCallbacks=function(t){switch(this.isInViewport&&!m&&o(this.callbacks[r],t),this.isFullyInViewport&&!v&&o(this.callbacks[h],t),this.isAboveViewport!==b&&this.isBelowViewport!==I&&(o(this.callbacks[n],t),v||this.isFullyInViewport||(o(this.callbacks[h],t),o(this.callbacks[a],t)),m||this.isInViewport||(o(this.callbacks[r],t),o(this.callbacks[c],t))),!this.isFullyInViewport&&v&&o(this.callbacks[a],t),!this.isInViewport&&m&&o(this.callbacks[c],t),this.isInViewport!==m&&o(this.callbacks[n],t),!0){case m!==this.isInViewport:case v!==this.isFullyInViewport:case b!==this.isAboveViewport:case I!==this.isBelowViewport:o(this.callbacks[p],t)}m=this.isInViewport,v=this.isFullyInViewport,b=this.isAboveViewport,I=this.isBelowViewport},this.recalculateLocation=function(){if(!this.locked){var t=this.top,e=this.bottom;if(this.watchItem.nodeName){var i=this.watchItem.style.display;\"none\"===i&&(this.watchItem.style.display=\"\");for(var s=0,n=this.container;n.containerWatcher;)s+=n.containerWatcher.top-n.containerWatcher.container.viewportTop,n=n.containerWatcher.container;var r=this.watchItem.getBoundingClientRect();this.top=r.top+this.container.viewportTop-s,this.bottom=r.bottom+this.container.viewportTop-s,\"none\"===i&&(this.watchItem.style.display=i)}else this.watchItem===+this.watchItem?this.watchItem>0?this.top=this.bottom=this.watchItem:this.top=this.bottom=this.container.documentHeight-this.watchItem:(this.top=this.watchItem.top,this.bottom=this.watchItem.bottom);this.top-=this.offsets.top,this.bottom+=this.offsets.bottom,this.height=this.bottom-this.top,void 0===t&&void 0===e||this.top===t&&this.bottom===e||o(this.callbacks[l],null)}},this.recalculateLocation(),this.update(),m=this.isInViewport,v=this.isFullyInViewport,b=this.isAboveViewport,I=this.isBelowViewport}var s=i(1),n=s.VISIBILITYCHANGE,r=s.ENTERVIEWPORT,h=s.FULLYENTERVIEWPORT,c=s.EXITVIEWPORT,a=s.PARTIALLYEXITVIEWPORT,l=s.LOCATIONCHANGE,p=s.STATECHANGE,u=s.eventTypes,w=s.defaultOffsets;o.prototype={on:function(t,e,i){switch(!0){case t===n&&!this.isInViewport&&this.isAboveViewport:case t===r&&this.isInViewport:case t===h&&this.isFullyInViewport:case t===c&&this.isAboveViewport&&!this.isInViewport:case t===a&&this.isInViewport&&this.isAboveViewport:if(e.call(this,this.container.latestEvent,this),i)return}if(!this.callbacks[t])throw new Error(\"Tried to add a scroll monitor listener of type \"+t+\". Your options are: \"+u.join(\", \"));this.callbacks[t].push({callback:e,isOne:i||!1})},off:function(t,e){if(!this.callbacks[t])throw new Error(\"Tried to remove a scroll monitor listener of type \"+t+\". Your options are: \"+u.join(\", \"));for(var i,o=0;i=this.callbacks[t][o];o++)if(i.callback===e){this.callbacks[t].splice(o,1);break}},one:function(t,e){this.on(t,e,!0)},recalculateSize:function(){this.height=this.watchItem.offsetHeight+this.offsets.top+this.offsets.bottom,this.bottom=this.top+this.height},update:function(){this.isAboveViewport=this.top<this.container.viewportTop,this.isBelowViewport=this.bottom>this.container.viewportBottom,this.isInViewport=this.top<this.container.viewportBottom&&this.bottom>this.container.viewportTop,this.isFullyInViewport=this.top>=this.container.viewportTop&&this.bottom<=this.container.viewportBottom||this.isAboveViewport&&this.isBelowViewport},destroy:function(){var t=this.container.watchers.indexOf(this),e=this;this.container.watchers.splice(t,1);for(var i=0,o=u.length;i<o;i++)e.callbacks[u[i]].length=0},lock:function(){this.locked=!0},unlock:function(){this.locked=!1}};for(var d=function(t){return function(e,i){this.on.call(this,t,e,i)}},f=0,m=u.length;f<m;f++){var v=u[f];o.prototype[v]=d(v)}t.exports=o}])});\n//# sourceMappingURL=scrollMonitor.js.map","\"use strict\";\n\n(function() {\n    viewportWatch.$inject = [ \"scrollMonitor\", \"$timeout\" ];\n    function viewportWatch(scrollMonitor, $timeout) {\n        var viewportUpdateTimeout;\n        function debouncedViewportUpdate() {\n            $timeout.cancel(viewportUpdateTimeout);\n            viewportUpdateTimeout = $timeout(function() {\n                scrollMonitor.update();\n            }, 10);\n        }\n        return {\n            restrict: \"AE\",\n            link: function(scope, element, attr) {\n                var elementWatcher = scrollMonitor.create(element, scope.$eval(attr.viewportWatch || \"0\"));\n                function watchDuringDisable() {\n                    this.$$watchersBackup = this.$$watchersBackup || [];\n                    this.$$watchers = this.$$watchersBackup;\n                    var unwatch = this.constructor.prototype.$watch.apply(this, arguments);\n                    this.$$watchers = null;\n                    return unwatch;\n                }\n                function toggleWatchers(scope, enable) {\n                    var digest, current, next = scope;\n                    do {\n                        current = next;\n                        if (enable) {\n                            if (current.hasOwnProperty(\"$$watchersBackup\")) {\n                                current.$$watchers = current.$$watchersBackup;\n                                delete current.$$watchersBackup;\n                                delete current.$watch;\n                                digest = !scope.$root.$$phase;\n                            }\n                        } else {\n                            if (!current.hasOwnProperty(\"$$watchersBackup\")) {\n                                current.$$watchersBackup = current.$$watchers;\n                                current.$$watchers = null;\n                                current.$watch = watchDuringDisable;\n                            }\n                        }\n                        next = current.$$childHead;\n                        while (!next && current !== scope) {\n                            if (current.$$nextSibling) {\n                                next = current.$$nextSibling;\n                            } else {\n                                current = current.$parent;\n                            }\n                        }\n                    } while (next);\n                    if (digest) {\n                        scope.$digest();\n                    }\n                }\n                function disableDigest() {\n                    toggleWatchers(scope, false);\n                }\n                function enableDigest() {\n                    toggleWatchers(scope, true);\n                }\n                if (!elementWatcher.isInViewport) {\n                    scope.$evalAsync(disableDigest);\n                    debouncedViewportUpdate();\n                }\n                elementWatcher.enterViewport(enableDigest);\n                elementWatcher.exitViewport(disableDigest);\n                scope.$on(\"toggleWatchers\", function(event, enable) {\n                    toggleWatchers(scope, enable);\n                });\n                scope.$on(\"$destroy\", function() {\n                    elementWatcher.destroy();\n                    debouncedViewportUpdate();\n                });\n            }\n        };\n    }\n    angular.module(\"angularViewportWatch\", []).directive(\"viewportWatch\", viewportWatch).value(\"scrollMonitor\", window.scrollMonitor);\n})();","require('./ui-grid');\nmodule.exports = 'ui.grid';\n","/*!\n * ui-grid - v4.4.6 - 2018-04-06\n * Copyright (c) 2018 ; License: MIT \n */\n\n(function () {\n  'use strict';\n  angular.module('ui.grid.i18n', []);\n  angular.module('ui.grid', ['ui.grid.i18n']);\n})();\n(function () {\n  'use strict';\n\n  /**\n   * @ngdoc object\n   * @name ui.grid.service:uiGridConstants\n   * @description Constants for use across many grid features\n   *\n   */\n\n\n  angular.module('ui.grid').constant('uiGridConstants', {\n    LOG_DEBUG_MESSAGES: true,\n    LOG_WARN_MESSAGES: true,\n    LOG_ERROR_MESSAGES: true,\n    CUSTOM_FILTERS: /CUSTOM_FILTERS/g,\n    COL_FIELD: /COL_FIELD/g,\n    MODEL_COL_FIELD: /MODEL_COL_FIELD/g,\n    TOOLTIP: /title=\\\"TOOLTIP\\\"/g,\n    DISPLAY_CELL_TEMPLATE: /DISPLAY_CELL_TEMPLATE/g,\n    TEMPLATE_REGEXP: /<.+>/,\n    FUNC_REGEXP: /(\\([^)]*\\))?$/,\n    DOT_REGEXP: /\\./g,\n    APOS_REGEXP: /'/g,\n    BRACKET_REGEXP: /^(.*)((?:\\s*\\[\\s*\\d+\\s*\\]\\s*)|(?:\\s*\\[\\s*\"(?:[^\"\\\\]|\\\\.)*\"\\s*\\]\\s*)|(?:\\s*\\[\\s*'(?:[^'\\\\]|\\\\.)*'\\s*\\]\\s*))(.*)$/,\n    COL_CLASS_PREFIX: 'ui-grid-col',\n    ENTITY_BINDING: '$$this',\n    events: {\n      GRID_SCROLL: 'uiGridScroll',\n      COLUMN_MENU_SHOWN: 'uiGridColMenuShown',\n      ITEM_DRAGGING: 'uiGridItemDragStart', // For any item being dragged\n      COLUMN_HEADER_CLICK: 'uiGridColumnHeaderClick'\n    },\n    // copied from http://www.lsauer.com/2011/08/javascript-keymap-keycodes-in-json.html\n    keymap: {\n      TAB: 9,\n      STRG: 17,\n      CAPSLOCK: 20,\n      CTRL: 17,\n      CTRLRIGHT: 18,\n      CTRLR: 18,\n      SHIFT: 16,\n      RETURN: 13,\n      ENTER: 13,\n      BACKSPACE: 8,\n      BCKSP: 8,\n      ALT: 18,\n      ALTR: 17,\n      ALTRIGHT: 17,\n      SPACE: 32,\n      WIN: 91,\n      MAC: 91,\n      FN: null,\n      PG_UP: 33,\n      PG_DOWN: 34,\n      UP: 38,\n      DOWN: 40,\n      LEFT: 37,\n      RIGHT: 39,\n      ESC: 27,\n      DEL: 46,\n      F1: 112,\n      F2: 113,\n      F3: 114,\n      F4: 115,\n      F5: 116,\n      F6: 117,\n      F7: 118,\n      F8: 119,\n      F9: 120,\n      F10: 121,\n      F11: 122,\n      F12: 123\n    },\n     /**\n     * @ngdoc object\n     * @name ASC\n     * @propertyOf ui.grid.service:uiGridConstants\n     * @description Used in {@link ui.grid.class:GridOptions.columnDef#properties_sort columnDef.sort} and\n     * {@link ui.grid.class:GridOptions.columnDef#properties_sortDirectionCycle columnDef.sortDirectionCycle}\n     * to configure the sorting direction of the column\n     */\n    ASC: 'asc',\n     /**\n     * @ngdoc object\n     * @name DESC\n     * @propertyOf ui.grid.service:uiGridConstants\n     * @description Used in {@link ui.grid.class:GridOptions.columnDef#properties_sort columnDef.sort} and\n     * {@link ui.grid.class:GridOptions.columnDef#properties_sortDirectionCycle columnDef.sortDirectionCycle}\n     * to configure the sorting direction of the column\n     */\n    DESC: 'desc',\n\n\n     /**\n     * @ngdoc object\n     * @name filter\n     * @propertyOf ui.grid.service:uiGridConstants\n     * @description Used in {@link ui.grid.class:GridOptions.columnDef#properties_filter columnDef.filter}\n     * to configure filtering on the column\n     *\n     * `SELECT` and `INPUT` are used with the `type` property of the filter, the rest are used to specify\n     * one of the built-in conditions.\n     *\n     * Available `condition` options are:\n     * - `uiGridConstants.filter.STARTS_WITH`\n     * - `uiGridConstants.filter.ENDS_WITH`\n     * - `uiGridConstants.filter.CONTAINS`\n     * - `uiGridConstants.filter.GREATER_THAN`\n     * - `uiGridConstants.filter.GREATER_THAN_OR_EQUAL`\n     * - `uiGridConstants.filter.LESS_THAN`\n     * - `uiGridConstants.filter.LESS_THAN_OR_EQUAL`\n     * - `uiGridConstants.filter.NOT_EQUAL`\n     *\n     *\n     * Available `type` options are:\n     * - `uiGridConstants.filter.SELECT` - use a dropdown box for the cell header filter field\n     * - `uiGridConstants.filter.INPUT` - use a text box for the cell header filter field\n     */\n    filter: {\n      STARTS_WITH: 2,\n      ENDS_WITH: 4,\n      EXACT: 8,\n      CONTAINS: 16,\n      GREATER_THAN: 32,\n      GREATER_THAN_OR_EQUAL: 64,\n      LESS_THAN: 128,\n      LESS_THAN_OR_EQUAL: 256,\n      NOT_EQUAL: 512,\n      SELECT: 'select',\n      INPUT: 'input'\n    },\n\n    /**\n     * @ngdoc object\n     * @name aggregationTypes\n     * @propertyOf ui.grid.service:uiGridConstants\n     * @description Used in {@link ui.grid.class:GridOptions.columnDef#properties_aggregationType columnDef.aggregationType}\n     * to specify the type of built-in aggregation the column should use.\n     *\n     * Available options are:\n     * - `uiGridConstants.aggregationTypes.sum` - add the values in this column to produce the aggregated value\n     * - `uiGridConstants.aggregationTypes.count` - count the number of rows to produce the aggregated value\n     * - `uiGridConstants.aggregationTypes.avg` - average the values in this column to produce the aggregated value\n     * - `uiGridConstants.aggregationTypes.min` - use the minimum value in this column as the aggregated value\n     * - `uiGridConstants.aggregationTypes.max` - use the maximum value in this column as the aggregated value\n     */\n    aggregationTypes: {\n      sum: 2,\n      count: 4,\n      avg: 8,\n      min: 16,\n      max: 32\n    },\n\n    /**\n     * @ngdoc array\n     * @name CURRENCY_SYMBOLS\n     * @propertyOf ui.grid.service:uiGridConstants\n     * @description A list of all presently circulating currency symbols that was copied from\n     * https://en.wikipedia.org/wiki/Currency_symbol#List_of_presently-circulating_currency_symbols\n     *\n     * Can be used on {@link ui.grid.class:rowSorter} to create a number string regex that ignores currency symbols.\n     */\n    CURRENCY_SYMBOLS: ['¤', '؋', 'Ar', 'Ƀ', '฿', 'B/.', 'Br', 'Bs.', 'Bs.F.', 'GH₵', '¢', 'c', 'Ch.', '₡', 'C$', 'D', 'ден',\n      'دج', '.د.ب', 'د.ع', 'JD', 'د.ك', 'ل.د', 'дин', 'د.ت', 'د.م.', 'د.إ', 'Db', '$', '₫', 'Esc', '€', 'ƒ', 'Ft', 'FBu',\n      'FCFA', 'CFA', 'Fr', 'FRw', 'G', 'gr', '₲', 'h', '₴', '₭', 'Kč', 'kr', 'kn', 'MK', 'ZK', 'Kz', 'K', 'L', 'Le', 'лв',\n      'E', 'lp', 'M', 'KM', 'MT', '₥', 'Nfk', '₦', 'Nu.', 'UM', 'T$', 'MOP$', '₱', 'Pt.', '£', 'ج.م.', 'LL', 'LS', 'P', 'Q',\n      'q', 'R', 'R$', 'ر.ع.', 'ر.ق', 'ر.س', '៛', 'RM', 'p', 'Rf.', '₹', '₨', 'SRe', 'Rp', '₪', 'Ksh', 'Sh.So.', 'USh', 'S/',\n      'SDR', 'сом', '৳\t', 'WS$', '₮', 'VT', '₩', '¥', 'zł'],\n\n    /**\n     * @ngdoc object\n     * @name scrollDirection\n     * @propertyOf ui.grid.service:uiGridConstants\n     * @description Set on {@link ui.grid.class:Grid#properties_scrollDirection Grid.scrollDirection},\n     * to indicate the direction the grid is currently scrolling in\n     *\n     * Available options are:\n     * - `uiGridConstants.scrollDirection.UP` - set when the grid is scrolling up\n     * - `uiGridConstants.scrollDirection.DOWN` - set when the grid is scrolling down\n     * - `uiGridConstants.scrollDirection.LEFT` - set when the grid is scrolling left\n     * - `uiGridConstants.scrollDirection.RIGHT` - set when the grid is scrolling right\n     * - `uiGridConstants.scrollDirection.NONE` - set when the grid is not scrolling, this is the default\n     */\n    scrollDirection: {\n      UP: 'up',\n      DOWN: 'down',\n      LEFT: 'left',\n      RIGHT: 'right',\n      NONE: 'none'\n\n    },\n\n    /**\n     * @ngdoc object\n     * @name dataChange\n     * @propertyOf ui.grid.service:uiGridConstants\n     * @description Used with {@link ui.grid.core.api:PublicApi#methods_notifyDataChange PublicApi.notifyDataChange},\n     * {@link ui.grid.class:Grid#methods_callDataChangeCallbacks Grid.callDataChangeCallbacks},\n     * and {@link ui.grid.class:Grid#methods_registerDataChangeCallback Grid.registerDataChangeCallback}\n     * to specify the type of the event(s).\n     *\n     * Available options are:\n     * - `uiGridConstants.dataChange.ALL` - listeners fired on any of these events, fires listeners on all events.\n     * - `uiGridConstants.dataChange.EDIT` - fired when the data in a cell is edited\n     * - `uiGridConstants.dataChange.ROW` - fired when a row is added or removed\n     * - `uiGridConstants.dataChange.COLUMN` - fired when the column definitions are modified\n     * - `uiGridConstants.dataChange.OPTIONS` - fired when the grid options are modified\n     */\n    dataChange: {\n      ALL: 'all',\n      EDIT: 'edit',\n      ROW: 'row',\n      COLUMN: 'column',\n      OPTIONS: 'options'\n    },\n\n    /**\n     * @ngdoc object\n     * @name scrollbars\n     * @propertyOf ui.grid.service:uiGridConstants\n     * @description Used with {@link ui.grid.class:GridOptions#properties_enableHorizontalScrollbar GridOptions.enableHorizontalScrollbar}\n     * and {@link ui.grid.class:GridOptions#properties_enableVerticalScrollbar GridOptions.enableVerticalScrollbar}\n     * to specify the scrollbar policy for that direction.\n     *\n     * Available options are:\n     * - `uiGridConstants.scrollbars.NEVER` - never show scrollbars in this direction\n     * - `uiGridConstants.scrollbars.ALWAYS` - always show scrollbars in this direction\n     * - `uiGridConstants.scrollbars.WHEN_NEEDED` - shows scrollbars in this direction when needed\n     */\n\n    scrollbars: {\n      NEVER: 0,\n      ALWAYS: 1,\n      WHEN_NEEDED: 2\n    }\n  });\n\n})();\n\nangular.module('ui.grid').directive('uiGridCell', ['$compile', '$parse', 'gridUtil', 'uiGridConstants', function ($compile, $parse, gridUtil, uiGridConstants) {\n  var uiGridCell = {\n    priority: 0,\n    scope: false,\n    require: '?^uiGrid',\n    compile: function() {\n      return {\n        pre: function($scope, $elm, $attrs, uiGridCtrl) {\n          function compileTemplate() {\n            var compiledElementFn = $scope.col.compiledElementFn;\n\n            compiledElementFn($scope, function(clonedElement, scope) {\n              $elm.append(clonedElement);\n            });\n          }\n\n          // If the grid controller is present, use it to get the compiled cell template function\n          if (uiGridCtrl && $scope.col.compiledElementFn) {\n             compileTemplate();\n          }\n          // No controller, compile the element manually (for unit tests)\n          else {\n            if ( uiGridCtrl && !$scope.col.compiledElementFn ){\n              // gridUtil.logError('Render has been called before precompile.  Please log a ui-grid issue');  \n\n              $scope.col.getCompiledElementFn()\n                .then(function (compiledElementFn) {\n                  compiledElementFn($scope, function(clonedElement, scope) {\n                    $elm.append(clonedElement);\n                  });\n                }).catch(angular.noop);\n            }\n            else {\n              var html = $scope.col.cellTemplate\n                .replace(uiGridConstants.MODEL_COL_FIELD, 'row.entity.' + gridUtil.preEval($scope.col.field))\n                .replace(uiGridConstants.COL_FIELD, 'grid.getCellValue(row, col)');\n\n              var cellElement = $compile(html)($scope);\n              $elm.append(cellElement);\n            }\n          }\n        },\n        post: function($scope, $elm, $attrs, uiGridCtrl) {\n          var initColClass = $scope.col.getColClass(false);\n          $elm.addClass(initColClass);\n\n          var classAdded;\n          var updateClass = function( grid ){\n            var contents = $elm;\n            if ( classAdded ){\n              contents.removeClass( classAdded );\n              classAdded = null;\n            }\n\n            if (angular.isFunction($scope.col.cellClass)) {\n              classAdded = $scope.col.cellClass($scope.grid, $scope.row, $scope.col, $scope.rowRenderIndex, $scope.colRenderIndex);\n            }\n            else {\n              classAdded = $scope.col.cellClass;\n            }\n            contents.addClass(classAdded);\n          };\n\n          if ($scope.col.cellClass) {\n            updateClass();\n          }\n          \n          // Register a data change watch that would get triggered whenever someone edits a cell or modifies column defs\n          var dataChangeDereg = $scope.grid.registerDataChangeCallback( updateClass, [uiGridConstants.dataChange.COLUMN, uiGridConstants.dataChange.EDIT]);\n          \n          // watch the col and row to see if they change - which would indicate that we've scrolled or sorted or otherwise\n          // changed the row/col that this cell relates to, and we need to re-evaluate cell classes and maybe other things\n          var cellChangeFunction = function( n, o ){\n            if ( n !== o ) {\n              if ( classAdded || $scope.col.cellClass ){\n                updateClass();\n              }\n\n              // See if the column's internal class has changed\n              var newColClass = $scope.col.getColClass(false);\n              if (newColClass !== initColClass) {\n                $elm.removeClass(initColClass);\n                $elm.addClass(newColClass);\n                initColClass = newColClass;\n              }\n            }\n          };\n\n          // TODO(c0bra): Turn this into a deep array watch\n/*        shouldn't be needed any more given track by col.name\n          var colWatchDereg = $scope.$watch( 'col', cellChangeFunction );\n*/\n          var rowWatchDereg = $scope.$watch( 'row', cellChangeFunction );\n          \n          \n          var deregisterFunction = function() {\n            dataChangeDereg();\n//            colWatchDereg();\n            rowWatchDereg(); \n          };\n          \n          $scope.$on( '$destroy', deregisterFunction );\n          $elm.on( '$destroy', deregisterFunction );\n        }\n      };\n    }\n  };\n\n  return uiGridCell;\n}]);\n\n\n(function(){\n\nangular.module('ui.grid')\n.service('uiGridColumnMenuService', [ 'i18nService', 'uiGridConstants', 'gridUtil',\nfunction ( i18nService, uiGridConstants, gridUtil ) {\n/**\n *  @ngdoc service\n *  @name ui.grid.service:uiGridColumnMenuService\n *\n *  @description Services for working with column menus, factored out\n *  to make the code easier to understand\n */\n\n  var service = {\n    /**\n     * @ngdoc method\n     * @methodOf ui.grid.service:uiGridColumnMenuService\n     * @name initialize\n     * @description  Sets defaults, puts a reference to the $scope on\n     * the uiGridController\n     * @param {$scope} $scope the $scope from the uiGridColumnMenu\n     * @param {controller} uiGridCtrl the uiGridController for the grid\n     * we're on\n     *\n     */\n    initialize: function( $scope, uiGridCtrl ){\n      $scope.grid = uiGridCtrl.grid;\n\n      // Store a reference to this link/controller in the main uiGrid controller\n      // to allow showMenu later\n      uiGridCtrl.columnMenuScope = $scope;\n\n      // Save whether we're shown or not so the columns can check\n      $scope.menuShown = false;\n    },\n\n\n    /**\n     * @ngdoc method\n     * @methodOf ui.grid.service:uiGridColumnMenuService\n     * @name setColMenuItemWatch\n     * @description  Setup a watch on $scope.col.menuItems, and update\n     * menuItems based on this.  $scope.col needs to be set by the column\n     * before calling the menu.\n     * @param {$scope} $scope the $scope from the uiGridColumnMenu\n     * @param {controller} uiGridCtrl the uiGridController for the grid\n     * we're on\n     *\n     */\n    setColMenuItemWatch: function ( $scope ){\n      var deregFunction = $scope.$watch('col.menuItems', function (n) {\n        if (typeof(n) !== 'undefined' && n && angular.isArray(n)) {\n          n.forEach(function (item) {\n            if (typeof(item.context) === 'undefined' || !item.context) {\n              item.context = {};\n            }\n            item.context.col = $scope.col;\n          });\n\n          $scope.menuItems = $scope.defaultMenuItems.concat(n);\n        }\n        else {\n          $scope.menuItems = $scope.defaultMenuItems;\n        }\n      });\n\n      $scope.$on( '$destroy', deregFunction );\n    },\n\n\n    /**\n     * @ngdoc boolean\n     * @name enableSorting\n     * @propertyOf ui.grid.class:GridOptions.columnDef\n     * @description (optional) True by default. When enabled, this setting adds sort\n     * widgets to the column header, allowing sorting of the data in the individual column.\n     */\n    /**\n     * @ngdoc method\n     * @methodOf ui.grid.service:uiGridColumnMenuService\n     * @name sortable\n     * @description  determines whether this column is sortable\n     * @param {$scope} $scope the $scope from the uiGridColumnMenu\n     *\n     */\n    sortable: function( $scope ) {\n      if ( $scope.grid.options.enableSorting && typeof($scope.col) !== 'undefined' && $scope.col && $scope.col.enableSorting) {\n        return true;\n      }\n      else {\n        return false;\n      }\n    },\n\n    /**\n     * @ngdoc method\n     * @methodOf ui.grid.service:uiGridColumnMenuService\n     * @name isActiveSort\n     * @description  determines whether the requested sort direction is current active, to\n     * allow highlighting in the menu\n     * @param {$scope} $scope the $scope from the uiGridColumnMenu\n     * @param {string} direction the direction that we'd have selected for us to be active\n     *\n     */\n    isActiveSort: function( $scope, direction ){\n      return (typeof($scope.col) !== 'undefined' && typeof($scope.col.sort) !== 'undefined' &&\n              typeof($scope.col.sort.direction) !== 'undefined' && $scope.col.sort.direction === direction);\n\n    },\n\n    /**\n     * @ngdoc method\n     * @methodOf ui.grid.service:uiGridColumnMenuService\n     * @name suppressRemoveSort\n     * @description  determines whether we should suppress the removeSort option\n     * @param {$scope} $scope the $scope from the uiGridColumnMenu\n     *\n     */\n    suppressRemoveSort: function( $scope ) {\n      if ($scope.col && $scope.col.suppressRemoveSort) {\n        return true;\n      }\n      else {\n        return false;\n      }\n    },\n\n\n    /**\n     * @ngdoc boolean\n     * @name enableHiding\n     * @propertyOf ui.grid.class:GridOptions.columnDef\n     * @description (optional) True by default. When set to false, this setting prevents a user from hiding the column\n     * using the column menu or the grid menu.\n     */\n    /**\n     * @ngdoc method\n     * @methodOf ui.grid.service:uiGridColumnMenuService\n     * @name hideable\n     * @description  determines whether a column can be hidden, by checking the enableHiding columnDef option\n     * @param {$scope} $scope the $scope from the uiGridColumnMenu\n     *\n     */\n    hideable: function( $scope ) {\n      if (typeof($scope.col) !== 'undefined' && $scope.col && $scope.col.colDef && $scope.col.colDef.enableHiding === false ) {\n        return false;\n      }\n      else {\n        return true;\n      }\n    },\n\n\n    /**\n     * @ngdoc method\n     * @methodOf ui.grid.service:uiGridColumnMenuService\n     * @name getDefaultMenuItems\n     * @description  returns the default menu items for a column menu\n     * @param {$scope} $scope the $scope from the uiGridColumnMenu\n     *\n     */\n    getDefaultMenuItems: function( $scope ){\n      return [\n        {\n          title: function(){return i18nService.getSafeText('sort.ascending');},\n          icon: 'ui-grid-icon-sort-alt-up',\n          action: function($event) {\n            $event.stopPropagation();\n            $scope.sortColumn($event, uiGridConstants.ASC);\n          },\n          shown: function () {\n            return service.sortable( $scope );\n          },\n          active: function() {\n            return service.isActiveSort( $scope, uiGridConstants.ASC);\n          }\n        },\n        {\n          title: function(){return i18nService.getSafeText('sort.descending');},\n          icon: 'ui-grid-icon-sort-alt-down',\n          action: function($event) {\n            $event.stopPropagation();\n            $scope.sortColumn($event, uiGridConstants.DESC);\n          },\n          shown: function() {\n            return service.sortable( $scope );\n          },\n          active: function() {\n            return service.isActiveSort( $scope, uiGridConstants.DESC);\n          }\n        },\n        {\n          title: function(){return i18nService.getSafeText('sort.remove');},\n          icon: 'ui-grid-icon-cancel',\n          action: function ($event) {\n            $event.stopPropagation();\n            $scope.unsortColumn();\n          },\n          shown: function() {\n            return service.sortable( $scope ) &&\n                   typeof($scope.col) !== 'undefined' && (typeof($scope.col.sort) !== 'undefined' &&\n                   typeof($scope.col.sort.direction) !== 'undefined') && $scope.col.sort.direction !== null &&\n                  !service.suppressRemoveSort( $scope );\n          }\n        },\n        {\n          title: function(){return i18nService.getSafeText('column.hide');},\n          icon: 'ui-grid-icon-cancel',\n          shown: function() {\n            return service.hideable( $scope );\n          },\n          action: function ($event) {\n            $event.stopPropagation();\n            $scope.hideColumn();\n          }\n        }\n      ];\n    },\n\n\n    /**\n     * @ngdoc method\n     * @methodOf ui.grid.service:uiGridColumnMenuService\n     * @name getColumnElementPosition\n     * @description  gets the position information needed to place the column\n     * menu below the column header\n     * @param {$scope} $scope the $scope from the uiGridColumnMenu\n     * @param {GridCol} column the column we want to position below\n     * @param {element} $columnElement the column element we want to position below\n     * @returns {hash} containing left, top, offset, height, width\n     *\n     */\n    getColumnElementPosition: function( $scope, column, $columnElement ){\n      var positionData = {};\n      positionData.left = $columnElement[0].offsetLeft;\n      positionData.top = $columnElement[0].offsetTop;\n      positionData.parentLeft = $columnElement[0].offsetParent.offsetLeft;\n\n      // Get the grid scrollLeft\n      positionData.offset = 0;\n      if (column.grid.options.offsetLeft) {\n        positionData.offset = column.grid.options.offsetLeft;\n      }\n\n      positionData.height = gridUtil.elementHeight($columnElement, true);\n      positionData.width = gridUtil.elementWidth($columnElement, true);\n\n      return positionData;\n    },\n\n\n    /**\n     * @ngdoc method\n     * @methodOf ui.grid.service:uiGridColumnMenuService\n     * @name repositionMenu\n     * @description  Reposition the menu below the new column.  If the menu has no child nodes\n     * (i.e. it's not currently visible) then we guess it's width at 100, we'll be called again\n     * later to fix it\n     * @param {$scope} $scope the $scope from the uiGridColumnMenu\n     * @param {GridCol} column the column we want to position below\n     * @param {hash} positionData a hash containing left, top, offset, height, width\n     * @param {element} $elm the column menu element that we want to reposition\n     * @param {element} $columnElement the column element that we want to reposition underneath\n     *\n     */\n    repositionMenu: function( $scope, column, positionData, $elm, $columnElement ) {\n      var menu = $elm[0].querySelectorAll('.ui-grid-menu');\n\n      // It's possible that the render container of the column we're attaching to is\n      // offset from the grid (i.e. pinned containers), we need to get the difference in the offsetLeft\n      // between the render container and the grid\n      var renderContainerElm = gridUtil.closestElm($columnElement, '.ui-grid-render-container');\n      var renderContainerOffset = renderContainerElm.getBoundingClientRect().left - $scope.grid.element[0].getBoundingClientRect().left;\n\n      var containerScrollLeft = renderContainerElm.querySelectorAll('.ui-grid-viewport')[0].scrollLeft;\n\n      // repositionMenu is now always called after it's visible in the DOM,\n      // allowing us to simply get the width every time the menu is opened\n      var myWidth = gridUtil.elementWidth(menu, true);\n      var paddingRight = column.lastMenuPaddingRight ? column.lastMenuPaddingRight : ( $scope.lastMenuPaddingRight ? $scope.lastMenuPaddingRight : 10);\n\n      if ( menu.length !== 0 ){\n        var mid = menu[0].querySelectorAll('.ui-grid-menu-mid');\n        if ( mid.length !== 0 ) {\n          // TODO(c0bra): use padding-left/padding-right based on document direction (ltr/rtl), place menu on proper side\n          // Get the column menu right padding\n          paddingRight = parseInt(gridUtil.getStyles(angular.element(menu)[0])['paddingRight'], 10);\n          $scope.lastMenuPaddingRight = paddingRight;\n          column.lastMenuPaddingRight = paddingRight;\n        }\n      }\n\n      var left = positionData.left + renderContainerOffset - containerScrollLeft + positionData.parentLeft + positionData.width + paddingRight;\n\n      if (left < positionData.offset + myWidth) {\n        left = Math.max(positionData.left - containerScrollLeft + positionData.parentLeft - paddingRight + myWidth, positionData.offset + myWidth);\n      }\n\n      $elm.css('left', left + 'px');\n      $elm.css('top', (positionData.top + positionData.height) + 'px');\n    }\n\n  };\n\n  return service;\n}])\n\n\n.directive('uiGridColumnMenu', ['$timeout', 'gridUtil', 'uiGridConstants', 'uiGridColumnMenuService', '$document',\nfunction ($timeout, gridUtil, uiGridConstants, uiGridColumnMenuService, $document) {\n/**\n * @ngdoc directive\n * @name ui.grid.directive:uiGridColumnMenu\n * @description  Provides the column menu framework, leverages uiGridMenu underneath\n *\n */\n\n  var uiGridColumnMenu = {\n    priority: 0,\n    scope: true,\n    require: '^uiGrid',\n    templateUrl: 'ui-grid/uiGridColumnMenu',\n    replace: true,\n    link: function ($scope, $elm, $attrs, uiGridCtrl) {\n      uiGridColumnMenuService.initialize( $scope, uiGridCtrl );\n\n      $scope.defaultMenuItems = uiGridColumnMenuService.getDefaultMenuItems( $scope );\n\n      // Set the menu items for use with the column menu. The user can later add additional items via the watch\n      $scope.menuItems = $scope.defaultMenuItems;\n      uiGridColumnMenuService.setColMenuItemWatch( $scope );\n\n\n      /**\n       * @ngdoc method\n       * @methodOf ui.grid.directive:uiGridColumnMenu\n       * @name showMenu\n       * @description Shows the column menu.  If the menu is already displayed it\n       * calls the menu to ask it to hide (it will animate), then it repositions the menu\n       * to the right place whilst hidden (it will make an assumption on menu width),\n       * then it asks the menu to show (it will animate), then it repositions the menu again\n       * once we can calculate it's size.\n       * @param {GridCol} column the column we want to position below\n       * @param {element} $columnElement the column element we want to position below\n       */\n      $scope.showMenu = function(column, $columnElement, event) {\n        // Swap to this column\n        $scope.col = column;\n\n        // Get the position information for the column element\n        var colElementPosition = uiGridColumnMenuService.getColumnElementPosition( $scope, column, $columnElement );\n\n        if ($scope.menuShown) {\n          // we want to hide, then reposition, then show, but we want to wait for animations\n          // we set a variable, and then rely on the menu-hidden event to call the reposition and show\n          $scope.colElement = $columnElement;\n          $scope.colElementPosition = colElementPosition;\n          $scope.hideThenShow = true;\n\n          $scope.$broadcast('hide-menu', { originalEvent: event });\n        } else {\n          $scope.menuShown = true;\n\n          $scope.colElement = $columnElement;\n          $scope.colElementPosition = colElementPosition;\n          $scope.$broadcast('show-menu', { originalEvent: event });\n\n        }\n      };\n\n\n      /**\n       * @ngdoc method\n       * @methodOf ui.grid.directive:uiGridColumnMenu\n       * @name hideMenu\n       * @description Hides the column menu.\n       * @param {boolean} broadcastTrigger true if we were triggered by a broadcast\n       * from the menu itself - in which case don't broadcast again as we'll get\n       * an infinite loop\n       */\n      $scope.hideMenu = function( broadcastTrigger ) {\n        $scope.menuShown = false;\n        if ( !broadcastTrigger ){\n          $scope.$broadcast('hide-menu');\n        }\n      };\n\n\n      $scope.$on('menu-hidden', function() {\n        var menuItems = angular.element($elm[0].querySelector('.ui-grid-menu-items'))[0];\n\n        $elm[0].removeAttribute('style');\n\n        if ( $scope.hideThenShow ){\n          delete $scope.hideThenShow;\n\n          $scope.$broadcast('show-menu');\n\n          $scope.menuShown = true;\n        } else {\n          $scope.hideMenu( true );\n\n          if ($scope.col) {\n            //Focus on the menu button\n            gridUtil.focus.bySelector($document, '.ui-grid-header-cell.' + $scope.col.getColClass()+ ' .ui-grid-column-menu-button', $scope.col.grid, false);\n          }\n        }\n\n        if (menuItems) {\n          menuItems.onkeydown = null;\n          angular.forEach(menuItems.children, function removeHandlers(item) {\n            item.onkeydown = null;\n          });\n        }\n      });\n\n      $scope.$on('menu-shown', function() {\n        $timeout( function() {\n          uiGridColumnMenuService.repositionMenu( $scope, $scope.col, $scope.colElementPosition, $elm, $scope.colElement );\n\n          //automatically set the focus to the first button element in the now open menu.\n          gridUtil.focus.bySelector($document, '.ui-grid-menu-items .ui-grid-menu-item:not(.ng-hide)', true);\n          delete $scope.colElementPosition;\n          delete $scope.columnElement;\n          addKeydownHandlersToMenu();\n        });\n      });\n\n\n      /* Column methods */\n      $scope.sortColumn = function (event, dir) {\n        event.stopPropagation();\n\n        $scope.grid.sortColumn($scope.col, dir, true)\n          .then(function () {\n            $scope.grid.refresh();\n            $scope.hideMenu();\n          }).catch(angular.noop);\n      };\n\n      $scope.unsortColumn = function () {\n        $scope.col.unsort();\n\n        $scope.grid.refresh();\n        $scope.hideMenu();\n      };\n\n      function addKeydownHandlersToMenu() {\n        var menu = angular.element($elm[0].querySelector('.ui-grid-menu-items'))[0],\n          menuItems,\n          visibleMenuItems = [];\n\n        if (menu) {\n          menu.onkeydown = function closeMenu(event) {\n            if (event.keyCode === uiGridConstants.keymap.ESC) {\n              event.preventDefault();\n              $scope.hideMenu();\n            }\n          };\n\n          menuItems = menu.querySelectorAll('.ui-grid-menu-item:not(.ng-hide)');\n          angular.forEach(menuItems, function filterVisibleItems(item) {\n            if (item.offsetParent !== null) {\n              this.push(item);\n            }\n          }, visibleMenuItems);\n\n          if (visibleMenuItems.length) {\n            if (visibleMenuItems.length === 1) {\n              visibleMenuItems[0].onkeydown = function singleItemHandler(event) {\n                circularFocusHandler(event, true);\n              };\n            } else {\n              visibleMenuItems[0].onkeydown = function firstItemHandler(event) {\n                circularFocusHandler(event, false, event.shiftKey, visibleMenuItems.length - 1);\n              };\n              visibleMenuItems[visibleMenuItems.length - 1].onkeydown = function lastItemHandler(event) {\n                circularFocusHandler(event, false, !event.shiftKey, 0);\n              };\n            }\n          }\n        }\n\n        function circularFocusHandler(event, isSingleItem, shiftKeyStatus, index) {\n          if (event.keyCode === uiGridConstants.keymap.TAB) {\n            if (isSingleItem) {\n              event.preventDefault();\n            } else if (shiftKeyStatus) {\n              event.preventDefault();\n              visibleMenuItems[index].focus();\n            }\n          }\n        }\n      }\n\n      // Since we are hiding this column the default hide action will fail so we need to focus somewhere else.\n      var setFocusOnHideColumn = function(){\n        $timeout(function() {\n          // Get the UID of the first\n          var focusToGridMenu = function(){\n            return gridUtil.focus.byId('grid-menu', $scope.grid);\n          };\n\n          var thisIndex;\n          $scope.grid.columns.some(function(element, index){\n            if (angular.equals(element, $scope.col)) {\n              thisIndex = index;\n              return true;\n            }\n          });\n\n          var previousVisibleCol;\n          // Try and find the next lower or nearest column to focus on\n          $scope.grid.columns.some(function(element, index){\n            if (!element.visible){\n              return false;\n            } // This columns index is below the current column index\n            else if ( index < thisIndex){\n              previousVisibleCol = element;\n            } // This elements index is above this column index and we haven't found one that is lower\n            else if ( index > thisIndex && !previousVisibleCol) {\n              // This is the next best thing\n              previousVisibleCol = element;\n              // We've found one so use it.\n              return true;\n            } // We've reached an element with an index above this column and the previousVisibleCol variable has been set\n            else if (index > thisIndex && previousVisibleCol) {\n              // We are done.\n              return true;\n            }\n          });\n          // If found then focus on it\n          if (previousVisibleCol){\n            var colClass = previousVisibleCol.getColClass();\n            gridUtil.focus.bySelector($document, '.ui-grid-header-cell.' + colClass+ ' .ui-grid-header-cell-primary-focus', true).then(angular.noop, function(reason){\n              if (reason !== 'canceled'){ // If this is canceled then don't perform the action\n                //The fallback action is to focus on the grid menu\n                return focusToGridMenu();\n              }\n            }).catch(angular.noop);\n          } else {\n            // Fallback action to focus on the grid menu\n            focusToGridMenu();\n          }\n        });\n      };\n\n      $scope.hideColumn = function () {\n        $scope.col.colDef.visible = false;\n        $scope.col.visible = false;\n\n        $scope.grid.queueGridRefresh();\n        $scope.hideMenu();\n        $scope.grid.api.core.notifyDataChange( uiGridConstants.dataChange.COLUMN );\n        $scope.grid.api.core.raise.columnVisibilityChanged( $scope.col );\n\n        // We are hiding so the default action of focusing on the button that opened this menu will fail.\n        setFocusOnHideColumn();\n      };\n    },\n\n\n\n    controller: ['$scope', function ($scope) {\n      var self = this;\n\n      $scope.$watch('menuItems', function (n) {\n        self.menuItems = n;\n      });\n    }]\n  };\n\n  return uiGridColumnMenu;\n\n}]);\n\n})();\n\n(function(){\n  'use strict';\n\n  angular.module('ui.grid').directive('uiGridFilter', ['$compile', '$templateCache', 'i18nService', 'gridUtil', function ($compile, $templateCache, i18nService, gridUtil) {\n\n    return {\n      compile: function() {\n        return {\n          pre: function ($scope, $elm, $attrs, controllers) {\n            $scope.col.updateFilters = function( filterable ){\n              $elm.children().remove();\n              if ( filterable ) {\n                var template = $scope.col.filterHeaderTemplate;\n                if (template === undefined && $scope.col.providedFilterHeaderTemplate !== '') {\n                  if ($scope.col.filterHeaderTemplatePromise) {\n                    $scope.col.filterHeaderTemplatePromise.then(function () {\n                      template = $scope.col.filterHeaderTemplate;\n                      $elm.append($compile(template)($scope));\n                    });\n                  }\n                }\n                else {\n                  $elm.append($compile(template)($scope));\n                }\n              }\n            };\n\n            $scope.$on( '$destroy', function() {\n              delete $scope.col.updateFilters;\n            });\n          },\n          post: function ($scope, $elm, $attrs, controllers){\n            $scope.aria = i18nService.getSafeText('headerCell.aria');\n            $scope.removeFilter = function(colFilter, index){\n              colFilter.term = null;\n              //Set the focus to the filter input after the action disables the button\n              gridUtil.focus.bySelector($elm, '.ui-grid-filter-input-' + index);\n            };\n          }\n        };\n      }\n    };\n  }]);\n})();\n\n(function () {\n  'use strict';\n\n  angular.module('ui.grid').directive('uiGridFooterCell', ['$timeout', 'gridUtil', 'uiGridConstants', '$compile',\n  function ($timeout, gridUtil, uiGridConstants, $compile) {\n    var uiGridFooterCell = {\n      priority: 0,\n      scope: {\n        col: '=',\n        row: '=',\n        renderIndex: '='\n      },\n      replace: true,\n      require: '^uiGrid',\n      compile: function compile(tElement, tAttrs, transclude) {\n        return {\n          pre: function ($scope, $elm, $attrs, uiGridCtrl) {\n            var template = $scope.col.footerCellTemplate;\n            if (template === undefined && $scope.col.providedFooterCellTemplate !== '') {\n              if ($scope.col.footerCellTemplatePromise) {\n                $scope.col.footerCellTemplatePromise.then(function () {\n                  template = $scope.col.footerCellTemplate;\n                  $elm.append($compile(template)($scope));\n                });\n              }\n            }\n            else {\n              $elm.append($compile(template)($scope));\n            }\n          },\n          post: function ($scope, $elm, $attrs, uiGridCtrl) {\n            //$elm.addClass($scope.col.getColClass(false));\n            $scope.grid = uiGridCtrl.grid;\n\n            var initColClass = $scope.col.getColClass(false);\n            $elm.addClass(initColClass);\n\n            // apply any footerCellClass\n            var classAdded;\n            var updateClass = function( grid ){\n              var contents = $elm;\n              if ( classAdded ){\n                contents.removeClass( classAdded );\n                classAdded = null;\n              }\n  \n              if (angular.isFunction($scope.col.footerCellClass)) {\n                classAdded = $scope.col.footerCellClass($scope.grid, $scope.row, $scope.col, $scope.rowRenderIndex, $scope.colRenderIndex);\n              }\n              else {\n                classAdded = $scope.col.footerCellClass;\n              }\n              contents.addClass(classAdded);\n            };\n  \n            if ($scope.col.footerCellClass) {\n              updateClass();\n            }\n\n            $scope.col.updateAggregationValue();\n\n            // Watch for column changes so we can alter the col cell class properly\n/* shouldn't be needed any more, given track by col.name\n            $scope.$watch('col', function (n, o) {\n              if (n !== o) {\n                // See if the column's internal class has changed\n                var newColClass = $scope.col.getColClass(false);\n                if (newColClass !== initColClass) {\n                  $elm.removeClass(initColClass);\n                  $elm.addClass(newColClass);\n                  initColClass = newColClass;\n                }\n              }\n            });\n*/\n\n\n            // Register a data change watch that would get triggered whenever someone edits a cell or modifies column defs\n            var dataChangeDereg = $scope.grid.registerDataChangeCallback( updateClass, [uiGridConstants.dataChange.COLUMN]);\n            // listen for visible rows change and update aggregation values\n            $scope.grid.api.core.on.rowsRendered( $scope, $scope.col.updateAggregationValue );\n            $scope.grid.api.core.on.rowsRendered( $scope, updateClass );\n            $scope.$on( '$destroy', dataChangeDereg );\n          }\n        };\n      }\n    };\n\n    return uiGridFooterCell;\n  }]);\n\n})();\n\n(function () {\n  'use strict';\n\n  angular.module('ui.grid').directive('uiGridFooter', ['$templateCache', '$compile', 'uiGridConstants', 'gridUtil', '$timeout', function ($templateCache, $compile, uiGridConstants, gridUtil, $timeout) {\n\n    return {\n      restrict: 'EA',\n      replace: true,\n      // priority: 1000,\n      require: ['^uiGrid', '^uiGridRenderContainer'],\n      scope: true,\n      compile: function ($elm, $attrs) {\n        return {\n          pre: function ($scope, $elm, $attrs, controllers) {\n            var uiGridCtrl = controllers[0];\n            var containerCtrl = controllers[1];\n\n            $scope.grid = uiGridCtrl.grid;\n            $scope.colContainer = containerCtrl.colContainer;\n\n            containerCtrl.footer = $elm;\n\n            var footerTemplate = $scope.grid.options.footerTemplate;\n            gridUtil.getTemplate(footerTemplate)\n              .then(function (contents) {\n                var template = angular.element(contents);\n\n                var newElm = $compile(template)($scope);\n                $elm.append(newElm);\n\n                if (containerCtrl) {\n                  // Inject a reference to the footer viewport (if it exists) into the grid controller for use in the horizontal scroll handler below\n                  var footerViewport = $elm[0].getElementsByClassName('ui-grid-footer-viewport')[0];\n\n                  if (footerViewport) {\n                    containerCtrl.footerViewport = footerViewport;\n                  }\n                }\n              }).catch(angular.noop);\n          },\n\n          post: function ($scope, $elm, $attrs, controllers) {\n            var uiGridCtrl = controllers[0];\n            var containerCtrl = controllers[1];\n\n            // gridUtil.logDebug('ui-grid-footer link');\n\n            var grid = uiGridCtrl.grid;\n\n            // Don't animate footer cells\n            gridUtil.disableAnimations($elm);\n\n            containerCtrl.footer = $elm;\n\n            var footerViewport = $elm[0].getElementsByClassName('ui-grid-footer-viewport')[0];\n            if (footerViewport) {\n              containerCtrl.footerViewport = footerViewport;\n            }\n          }\n        };\n      }\n    };\n  }]);\n\n})();\n\n(function () {\n  'use strict';\n\n  angular.module('ui.grid').directive('uiGridGridFooter', ['$templateCache', '$compile', 'uiGridConstants', 'gridUtil', '$timeout', function ($templateCache, $compile, uiGridConstants, gridUtil, $timeout) {\n\n    return {\n      restrict: 'EA',\n      replace: true,\n      // priority: 1000,\n      require: '^uiGrid',\n      scope: true,\n      compile: function ($elm, $attrs) {\n        return {\n          pre: function ($scope, $elm, $attrs, uiGridCtrl) {\n\n            $scope.grid = uiGridCtrl.grid;\n\n\n\n            var footerTemplate = $scope.grid.options.gridFooterTemplate;\n            gridUtil.getTemplate(footerTemplate)\n              .then(function (contents) {\n                var template = angular.element(contents);\n\n                var newElm = $compile(template)($scope);\n                $elm.append(newElm);\n              }).catch(angular.noop);\n          },\n\n          post: function ($scope, $elm, $attrs, controllers) {\n\n          }\n        };\n      }\n    };\n  }]);\n\n})();\n\n(function(){\n  'use strict';\n\n  angular.module('ui.grid').directive('uiGridHeaderCell', ['$compile', '$timeout', '$window', '$document', 'gridUtil', 'uiGridConstants', 'ScrollEvent', 'i18nService',\n  function ($compile, $timeout, $window, $document, gridUtil, uiGridConstants, ScrollEvent, i18nService) {\n    // Do stuff after mouse has been down this many ms on the header cell\n    var mousedownTimeout = 500;\n    var changeModeTimeout = 500;    // length of time between a touch event and a mouse event being recognised again, and vice versa\n\n    var uiGridHeaderCell = {\n      priority: 0,\n      scope: {\n        col: '=',\n        row: '=',\n        renderIndex: '='\n      },\n      require: ['^uiGrid', '^uiGridRenderContainer'],\n      replace: true,\n      compile: function() {\n        return {\n          pre: function ($scope, $elm, $attrs) {\n            var template = $scope.col.headerCellTemplate;\n            if (template === undefined && $scope.col.providedHeaderCellTemplate !== '') {\n              if ($scope.col.headerCellTemplatePromise) {\n                $scope.col.headerCellTemplatePromise.then(function () {\n                  template = $scope.col.headerCellTemplate;\n                  $elm.append($compile(template)($scope));\n                });\n              }\n            }\n            else {\n              $elm.append($compile(template)($scope));\n            }\n          },\n\n          post: function ($scope, $elm, $attrs, controllers) {\n            var uiGridCtrl = controllers[0];\n            var renderContainerCtrl = controllers[1];\n\n            $scope.i18n = {\n              headerCell: i18nService.getSafeText('headerCell'),\n              sort: i18nService.getSafeText('sort')\n            };\n            $scope.isSortPriorityVisible = function() {\n              //show sort priority if column is sorted and there is at least one other sorted column\n              return angular.isNumber($scope.col.sort.priority) && $scope.grid.columns.some(function(element, index){\n                  return angular.isNumber(element.sort.priority) && element !== $scope.col;\n                });\n            };\n            $scope.getSortDirectionAriaLabel = function(){\n              var col = $scope.col;\n              //Trying to recreate this sort of thing but it was getting messy having it in the template.\n              //Sort direction {{col.sort.direction == asc ? 'ascending' : ( col.sort.direction == desc ? 'descending':'none')}}. {{col.sort.priority ? {{columnPriorityText}} {{col.sort.priority}} : ''}\n              var sortDirectionText = col.sort.direction === uiGridConstants.ASC ? $scope.i18n.sort.ascending : ( col.sort.direction === uiGridConstants.DESC ? $scope.i18n.sort.descending : $scope.i18n.sort.none);\n              var label = sortDirectionText;\n\n              if ($scope.isSortPriorityVisible()) {\n                label = label + '. ' + $scope.i18n.headerCell.priority + ' ' + (col.sort.priority + 1);\n              }\n              return label;\n            };\n\n            $scope.grid = uiGridCtrl.grid;\n\n            $scope.renderContainer = uiGridCtrl.grid.renderContainers[renderContainerCtrl.containerId];\n\n            var initColClass = $scope.col.getColClass(false);\n            $elm.addClass(initColClass);\n\n            // Hide the menu by default\n            $scope.menuShown = false;\n\n            // Put asc and desc sort directions in scope\n            $scope.asc = uiGridConstants.ASC;\n            $scope.desc = uiGridConstants.DESC;\n\n            // Store a reference to menu element\n            var $colMenu = angular.element( $elm[0].querySelectorAll('.ui-grid-header-cell-menu') );\n\n            var $contentsElm = angular.element( $elm[0].querySelectorAll('.ui-grid-cell-contents') );\n\n\n            // apply any headerCellClass\n            var classAdded;\n            var previousMouseX;\n\n            // filter watchers\n            var filterDeregisters = [];\n\n\n            /*\n             * Our basic approach here for event handlers is that we listen for a down event (mousedown or touchstart).\n             * Once we have a down event, we need to work out whether we have a click, a drag, or a\n             * hold.  A click would sort the grid (if sortable).  A drag would be used by moveable, so\n             * we ignore it.  A hold would open the menu.\n             *\n             * So, on down event, we put in place handlers for move and up events, and a timer.  If the\n             * timer expires before we see a move or up, then we have a long press and hence a column menu open.\n             * If the up happens before the timer, then we have a click, and we sort if the column is sortable.\n             * If a move happens before the timer, then we are doing column move, so we do nothing, the moveable feature\n             * will handle it.\n             *\n             * To deal with touch enabled devices that also have mice, we only create our handlers when\n             * we get the down event, and we create the corresponding handlers - if we're touchstart then\n             * we get touchmove and touchend, if we're mousedown then we get mousemove and mouseup.\n             *\n             * We also suppress the click action whilst this is happening - otherwise after the mouseup there\n             * will be a click event and that can cause the column menu to close\n             *\n             */\n\n            $scope.downFn = function( event ){\n              event.stopPropagation();\n\n              if (typeof(event.originalEvent) !== 'undefined' && event.originalEvent !== undefined) {\n                event = event.originalEvent;\n              }\n\n              // Don't show the menu if it's not the left button\n              if (event.button && event.button !== 0) {\n                return;\n              }\n              previousMouseX = event.pageX;\n\n              $scope.mousedownStartTime = (new Date()).getTime();\n              $scope.mousedownTimeout = $timeout(function() { }, mousedownTimeout);\n\n              $scope.mousedownTimeout.then(function () {\n                if ( $scope.colMenu ) {\n                  uiGridCtrl.columnMenuScope.showMenu($scope.col, $elm, event);\n                }\n              }).catch(angular.noop);\n\n              uiGridCtrl.fireEvent(uiGridConstants.events.COLUMN_HEADER_CLICK, {event: event, columnName: $scope.col.colDef.name});\n\n              $scope.offAllEvents();\n              if ( event.type === 'touchstart'){\n                $document.on('touchend', $scope.upFn);\n                $document.on('touchmove', $scope.moveFn);\n              } else if ( event.type === 'mousedown' ){\n                $document.on('mouseup', $scope.upFn);\n                $document.on('mousemove', $scope.moveFn);\n              }\n            };\n\n            $scope.upFn = function( event ){\n              event.stopPropagation();\n              $timeout.cancel($scope.mousedownTimeout);\n              $scope.offAllEvents();\n              $scope.onDownEvents(event.type);\n\n              var mousedownEndTime = (new Date()).getTime();\n              var mousedownTime = mousedownEndTime - $scope.mousedownStartTime;\n\n              if (mousedownTime > mousedownTimeout) {\n                // long click, handled above with mousedown\n              }\n              else {\n                // short click\n                if ( $scope.sortable ){\n                  $scope.handleClick(event);\n                }\n              }\n            };\n\n            $scope.handleKeyDown = function(event) {\n              if (event.keyCode === 32) {\n                event.preventDefault();\n              }\n            };\n\n            $scope.moveFn = function( event ){\n              // Chrome is known to fire some bogus move events.\n              var changeValue = event.pageX - previousMouseX;\n              if ( changeValue === 0 ){ return; }\n\n              // we're a move, so do nothing and leave for column move (if enabled) to take over\n              $timeout.cancel($scope.mousedownTimeout);\n              $scope.offAllEvents();\n              $scope.onDownEvents(event.type);\n            };\n\n            $scope.clickFn = function ( event ){\n              event.stopPropagation();\n              $contentsElm.off('click', $scope.clickFn);\n            };\n\n\n            $scope.offAllEvents = function(){\n              $contentsElm.off('touchstart', $scope.downFn);\n              $contentsElm.off('mousedown', $scope.downFn);\n\n              $document.off('touchend', $scope.upFn);\n              $document.off('mouseup', $scope.upFn);\n\n              $document.off('touchmove', $scope.moveFn);\n              $document.off('mousemove', $scope.moveFn);\n\n              $contentsElm.off('click', $scope.clickFn);\n            };\n\n            $scope.onDownEvents = function( type ){\n              // If there is a previous event, then wait a while before\n              // activating the other mode - i.e. if the last event was a touch event then\n              // don't enable mouse events for a wee while (500ms or so)\n              // Avoids problems with devices that emulate mouse events when you have touch events\n\n              switch (type){\n                case 'touchmove':\n                case 'touchend':\n                  $contentsElm.on('click', $scope.clickFn);\n                  $contentsElm.on('touchstart', $scope.downFn);\n                  $timeout(function(){\n                    $contentsElm.on('mousedown', $scope.downFn);\n                  }, changeModeTimeout);\n                  break;\n                case 'mousemove':\n                case 'mouseup':\n                  $contentsElm.on('click', $scope.clickFn);\n                  $contentsElm.on('mousedown', $scope.downFn);\n                  $timeout(function(){\n                    $contentsElm.on('touchstart', $scope.downFn);\n                  }, changeModeTimeout);\n                  break;\n                default:\n                  $contentsElm.on('click', $scope.clickFn);\n                  $contentsElm.on('touchstart', $scope.downFn);\n                  $contentsElm.on('mousedown', $scope.downFn);\n              }\n            };\n\n\n            var updateHeaderOptions = function( grid ){\n              var contents = $elm;\n              if ( classAdded ){\n                contents.removeClass( classAdded );\n                classAdded = null;\n              }\n\n              if (angular.isFunction($scope.col.headerCellClass)) {\n                classAdded = $scope.col.headerCellClass($scope.grid, $scope.row, $scope.col, $scope.rowRenderIndex, $scope.colRenderIndex);\n              }\n              else {\n                classAdded = $scope.col.headerCellClass;\n              }\n              contents.addClass(classAdded);\n\n              $scope.$applyAsync(function() {\n                var rightMostContainer = $scope.grid.renderContainers['right'] && $scope.grid.renderContainers['right'].visibleColumnCache.length ?\n                $scope.grid.renderContainers['right'] : $scope.grid.renderContainers['body'];\n                $scope.isLastCol = uiGridCtrl.grid.options && uiGridCtrl.grid.options.enableGridMenu &&\n                  $scope.col === rightMostContainer.visibleColumnCache[ rightMostContainer.visibleColumnCache.length - 1 ];\n              });\n\n              // Figure out whether this column is sortable or not\n              $scope.sortable = Boolean($scope.col.enableSorting);\n\n              // Figure out whether this column is filterable or not\n              var oldFilterable = $scope.filterable;\n              $scope.filterable = Boolean(uiGridCtrl.grid.options.enableFiltering && $scope.col.enableFiltering);\n\n              if ( oldFilterable !== $scope.filterable){\n                if ( typeof($scope.col.updateFilters) !== 'undefined' ){\n                  $scope.col.updateFilters($scope.filterable);\n                }\n\n                // if column is filterable add a filter watcher\n                if ($scope.filterable) {\n                  $scope.col.filters.forEach( function(filter, i) {\n                    filterDeregisters.push($scope.$watch('col.filters[' + i + '].term', function(n, o) {\n                      if (n !== o) {\n                        uiGridCtrl.grid.api.core.raise.filterChanged();\n                        uiGridCtrl.grid.api.core.notifyDataChange( uiGridConstants.dataChange.COLUMN );\n                        uiGridCtrl.grid.queueGridRefresh();\n                      }\n                    }));\n                  });\n                  $scope.$on('$destroy', function() {\n                    filterDeregisters.forEach( function(filterDeregister) {\n                      filterDeregister();\n                    });\n                  });\n                } else {\n                  filterDeregisters.forEach( function(filterDeregister) {\n                    filterDeregister();\n                  });\n                }\n\n              }\n\n              // figure out whether we support column menus\n              if ($scope.col.grid.options && $scope.col.grid.options.enableColumnMenus !== false &&\n                      $scope.col.colDef && $scope.col.colDef.enableColumnMenu !== false){\n                $scope.colMenu = true;\n              } else {\n                $scope.colMenu = false;\n              }\n\n              /**\n               * @ngdoc property\n               * @name enableColumnMenu\n               * @propertyOf ui.grid.class:GridOptions.columnDef\n               * @description if column menus are enabled, controls the column menus for this specific\n               * column (i.e. if gridOptions.enableColumnMenus, then you can control column menus\n               * using this option. If gridOptions.enableColumnMenus === false then you get no column\n               * menus irrespective of the value of this option ).  Defaults to true.\n               *\n               * By default column menu's trigger is hidden before mouse over, but you can always force it to be visible with CSS:\n               *\n               * <pre>\n               *  .ui-grid-column-menu-button {\n               *    display: block;\n               *  }\n               * </pre>\n               */\n              /**\n              * @ngdoc property\n              * @name enableColumnMenus\n              * @propertyOf ui.grid.class:GridOptions.columnDef\n              * @description Override for column menus everywhere - if set to false then you get no\n              * column menus.  Defaults to true.\n              *\n              */\n\n              $scope.offAllEvents();\n\n              if ($scope.sortable || $scope.colMenu) {\n                $scope.onDownEvents();\n\n                $scope.$on('$destroy', function () {\n                  $scope.offAllEvents();\n                });\n              }\n            };\n\n/*\n            $scope.$watch('col', function (n, o) {\n              if (n !== o) {\n                // See if the column's internal class has changed\n                var newColClass = $scope.col.getColClass(false);\n                if (newColClass !== initColClass) {\n                  $elm.removeClass(initColClass);\n                  $elm.addClass(newColClass);\n                  initColClass = newColClass;\n                }\n              }\n            });\n*/\n            updateHeaderOptions();\n\n            // Register a data change watch that would get triggered whenever someone edits a cell or modifies column defs\n            var dataChangeDereg = $scope.grid.registerDataChangeCallback( updateHeaderOptions, [uiGridConstants.dataChange.COLUMN]);\n\n            $scope.$on( '$destroy', dataChangeDereg );\n\n            $scope.handleClick = function(event) {\n              // If the shift key is being held down, add this column to the sort\n              var add = false;\n              if (event.shiftKey) {\n                add = true;\n              }\n\n              // Sort this column then rebuild the grid's rows\n              uiGridCtrl.grid.sortColumn($scope.col, add)\n                .then(function () {\n                  if (uiGridCtrl.columnMenuScope) { uiGridCtrl.columnMenuScope.hideMenu(); }\n                  uiGridCtrl.grid.refresh();\n                }).catch(angular.noop);\n            };\n\n            $scope.headerCellArrowKeyDown = function(event) {\n              if (event.keyCode === 32 || event.keyCode === 13) {\n                event.preventDefault();\n                $scope.toggleMenu(event);\n              }\n            };\n\n            $scope.toggleMenu = function(event) {\n\n              event.stopPropagation();\n\n              // If the menu is already showing...\n              if (uiGridCtrl.columnMenuScope.menuShown) {\n                // ... and we're the column the menu is on...\n                if (uiGridCtrl.columnMenuScope.col === $scope.col) {\n                  // ... hide it\n                  uiGridCtrl.columnMenuScope.hideMenu();\n                }\n                // ... and we're NOT the column the menu is on\n                else {\n                  // ... move the menu to our column\n                  uiGridCtrl.columnMenuScope.showMenu($scope.col, $elm);\n                }\n              }\n              // If the menu is NOT showing\n              else {\n                // ... show it on our column\n                uiGridCtrl.columnMenuScope.showMenu($scope.col, $elm);\n              }\n            };\n          }\n        };\n      }\n    };\n\n    return uiGridHeaderCell;\n  }]);\n\n})();\n\n(function(){\n  'use strict';\n\n  angular.module('ui.grid').directive('uiGridHeader', ['$templateCache', '$compile', 'uiGridConstants', 'gridUtil', '$timeout', 'ScrollEvent',\n    function($templateCache, $compile, uiGridConstants, gridUtil, $timeout, ScrollEvent) {\n    var defaultTemplate = 'ui-grid/ui-grid-header';\n    var emptyTemplate = 'ui-grid/ui-grid-no-header';\n\n    return {\n      restrict: 'EA',\n      // templateUrl: 'ui-grid/ui-grid-header',\n      replace: true,\n      // priority: 1000,\n      require: ['^uiGrid', '^uiGridRenderContainer'],\n      scope: true,\n      compile: function($elm, $attrs) {\n        return {\n          pre: function ($scope, $elm, $attrs, controllers) {\n            var uiGridCtrl = controllers[0];\n            var containerCtrl = controllers[1];\n\n            $scope.grid = uiGridCtrl.grid;\n            $scope.colContainer = containerCtrl.colContainer;\n\n            updateHeaderReferences();\n            \n            var headerTemplate;\n            if (!$scope.grid.options.showHeader) {\n              headerTemplate = emptyTemplate;\n            }\n            else {\n              headerTemplate = ($scope.grid.options.headerTemplate) ? $scope.grid.options.headerTemplate : defaultTemplate;            \n            }\n\n            gridUtil.getTemplate(headerTemplate)\n              .then(function (contents) {\n                var template = angular.element(contents);\n                \n                var newElm = $compile(template)($scope);\n                $elm.replaceWith(newElm);\n\n                // And update $elm to be the new element\n                $elm = newElm;\n\n                updateHeaderReferences();\n\n                if (containerCtrl) {\n                  // Inject a reference to the header viewport (if it exists) into the grid controller for use in the horizontal scroll handler below\n                  var headerViewport = $elm[0].getElementsByClassName('ui-grid-header-viewport')[0];\n\n\n                  if (headerViewport) {\n                    containerCtrl.headerViewport = headerViewport;\n                    angular.element(headerViewport).on('scroll', scrollHandler);\n                    $scope.$on('$destroy', function () {\n                      angular.element(headerViewport).off('scroll', scrollHandler);\n                    });\n                  }\n                }\n\n                $scope.grid.queueRefresh();\n              }).catch(angular.noop);\n\n            function updateHeaderReferences() {\n              containerCtrl.header = containerCtrl.colContainer.header = $elm;\n\n              var headerCanvases = $elm[0].getElementsByClassName('ui-grid-header-canvas');\n\n              if (headerCanvases.length > 0) {\n                containerCtrl.headerCanvas = containerCtrl.colContainer.headerCanvas = headerCanvases[0];\n              }\n              else {\n                containerCtrl.headerCanvas = null;\n              }\n            }\n\n            function scrollHandler(evt) {\n              if (uiGridCtrl.grid.isScrollingHorizontally) {\n                return;\n              }\n              var newScrollLeft = gridUtil.normalizeScrollLeft(containerCtrl.headerViewport, uiGridCtrl.grid);\n              var horizScrollPercentage = containerCtrl.colContainer.scrollHorizontal(newScrollLeft);\n\n              var scrollEvent = new ScrollEvent(uiGridCtrl.grid, null, containerCtrl.colContainer, ScrollEvent.Sources.ViewPortScroll);\n              scrollEvent.newScrollLeft = newScrollLeft;\n              if ( horizScrollPercentage > -1 ){\n                scrollEvent.x = { percentage: horizScrollPercentage };\n              }\n\n              uiGridCtrl.grid.scrollContainers(null, scrollEvent);\n            }\n          },\n\n          post: function ($scope, $elm, $attrs, controllers) {\n            var uiGridCtrl = controllers[0];\n            var containerCtrl = controllers[1];\n\n            // gridUtil.logDebug('ui-grid-header link');\n\n            var grid = uiGridCtrl.grid;\n\n            // Don't animate header cells\n            gridUtil.disableAnimations($elm);\n\n            function updateColumnWidths() {\n              // this styleBuilder always runs after the renderContainer, so we can rely on the column widths\n              // already being populated correctly\n\n              var columnCache = containerCtrl.colContainer.visibleColumnCache;\n              \n              // Build the CSS\n              // uiGridCtrl.grid.columns.forEach(function (column) {\n              var ret = '';\n              var canvasWidth = 0;\n              columnCache.forEach(function (column) {\n                ret = ret + column.getColClassDefinition();\n                canvasWidth += column.drawnWidth;\n              });\n\n              containerCtrl.colContainer.canvasWidth = canvasWidth;\n              \n              // Return the styles back to buildStyles which pops them into the `customStyles` scope variable\n              return ret;\n            }\n            \n            containerCtrl.header = $elm;\n            \n            var headerViewport = $elm[0].getElementsByClassName('ui-grid-header-viewport')[0];\n            if (headerViewport) {\n              containerCtrl.headerViewport = headerViewport;\n            }\n\n            //todo: remove this if by injecting gridCtrl into unit tests\n            if (uiGridCtrl) {\n              uiGridCtrl.grid.registerStyleComputation({\n                priority: 15,\n                func: updateColumnWidths\n              });\n            }\n          }\n        };\n      }\n    };\n  }]);\n\n})();\n\n(function(){\n\nangular.module('ui.grid')\n.service('uiGridGridMenuService', [ 'gridUtil', 'i18nService', 'uiGridConstants', function( gridUtil, i18nService, uiGridConstants ) {\n  /**\n   *  @ngdoc service\n   *  @name ui.grid.uiGridGridMenuService\n   *\n   *  @description Methods for working with the grid menu\n   */\n\n  var service = {\n    /**\n     * @ngdoc method\n     * @methodOf ui.grid.uiGridGridMenuService\n     * @name initialize\n     * @description Sets up the gridMenu. Most importantly, sets our\n     * scope onto the grid object as grid.gridMenuScope, allowing us\n     * to operate when passed only the grid.  Second most importantly,\n     * we register the 'addToGridMenu' and 'removeFromGridMenu' methods\n     * on the core api.\n     * @param {$scope} $scope the scope of this gridMenu\n     * @param {Grid} grid the grid to which this gridMenu is associated\n     */\n    initialize: function( $scope, grid ){\n      grid.gridMenuScope = $scope;\n      $scope.grid = grid;\n      $scope.registeredMenuItems = [];\n\n      // not certain this is needed, but would be bad to create a memory leak\n      $scope.$on('$destroy', function() {\n        if ( $scope.grid && $scope.grid.gridMenuScope ){\n          $scope.grid.gridMenuScope = null;\n        }\n        if ( $scope.grid ){\n          $scope.grid = null;\n        }\n        if ( $scope.registeredMenuItems ){\n          $scope.registeredMenuItems = null;\n        }\n      });\n\n      $scope.registeredMenuItems = [];\n\n      /**\n       * @ngdoc function\n       * @name addToGridMenu\n       * @methodOf ui.grid.core.api:PublicApi\n       * @description add items to the grid menu.  Used by features\n       * to add their menu items if they are enabled, can also be used by\n       * end users to add menu items.  This method has the advantage of allowing\n       * remove again, which can simplify management of which items are included\n       * in the menu when.  (Noting that in most cases the shown and active functions\n       * provide a better way to handle visibility of menu items)\n       * @param {Grid} grid the grid on which we are acting\n       * @param {array} items menu items in the format as described in the tutorial, with\n       * the added note that if you want to use remove you must also specify an `id` field,\n       * which is provided when you want to remove an item.  The id should be unique.\n       *\n       */\n      grid.api.registerMethod( 'core', 'addToGridMenu', service.addToGridMenu );\n\n      /**\n       * @ngdoc function\n       * @name removeFromGridMenu\n       * @methodOf ui.grid.core.api:PublicApi\n       * @description Remove an item from the grid menu based on a provided id. Assumes\n       * that the id is unique, removes only the last instance of that id. Does nothing if\n       * the specified id is not found\n       * @param {Grid} grid the grid on which we are acting\n       * @param {string} id the id we'd like to remove from the menu\n       *\n       */\n      grid.api.registerMethod( 'core', 'removeFromGridMenu', service.removeFromGridMenu );\n    },\n\n\n    /**\n     * @ngdoc function\n     * @name addToGridMenu\n     * @propertyOf ui.grid.uiGridGridMenuService\n     * @description add items to the grid menu.  Used by features\n     * to add their menu items if they are enabled, can also be used by\n     * end users to add menu items.  This method has the advantage of allowing\n     * remove again, which can simplify management of which items are included\n     * in the menu when.  (Noting that in most cases the shown and active functions\n     * provide a better way to handle visibility of menu items)\n     * @param {Grid} grid the grid on which we are acting\n     * @param {array} menuItems menu items in the format as described in the tutorial, with\n     * the added note that if you want to use remove you must also specify an `id` field,\n     * which is provided when you want to remove an item.  The id should be unique.\n     *\n     */\n    addToGridMenu: function( grid, menuItems ) {\n      if ( !angular.isArray( menuItems ) ) {\n        gridUtil.logError( 'addToGridMenu: menuItems must be an array, and is not, not adding any items');\n      } else {\n        if ( grid.gridMenuScope ){\n          grid.gridMenuScope.registeredMenuItems = grid.gridMenuScope.registeredMenuItems ? grid.gridMenuScope.registeredMenuItems : [];\n          grid.gridMenuScope.registeredMenuItems = grid.gridMenuScope.registeredMenuItems.concat( menuItems );\n        } else {\n          gridUtil.logError( 'Asked to addToGridMenu, but gridMenuScope not present.  Timing issue?  Please log issue with ui-grid');\n        }\n      }\n    },\n\n\n    /**\n     * @ngdoc function\n     * @name removeFromGridMenu\n     * @methodOf ui.grid.uiGridGridMenuService\n     * @description Remove an item from the grid menu based on a provided id.  Assumes\n     * that the id is unique, removes only the last instance of that id.  Does nothing if\n     * the specified id is not found.  If there is no gridMenuScope or registeredMenuItems\n     * then do nothing silently - the desired result is those menu items not be present and they\n     * aren't.\n     * @param {Grid} grid the grid on which we are acting\n     * @param {string} id the id we'd like to remove from the menu\n     *\n     */\n    removeFromGridMenu: function( grid, id ){\n      var foundIndex = -1;\n\n      if ( grid && grid.gridMenuScope ){\n        grid.gridMenuScope.registeredMenuItems.forEach( function( value, index ) {\n          if ( value.id === id ){\n            if (foundIndex > -1) {\n              gridUtil.logError( 'removeFromGridMenu: found multiple items with the same id, removing only the last' );\n            } else {\n\n              foundIndex = index;\n            }\n          }\n        });\n      }\n\n      if ( foundIndex > -1 ){\n        grid.gridMenuScope.registeredMenuItems.splice( foundIndex, 1 );\n      }\n    },\n\n\n    /**\n     * @ngdoc array\n     * @name gridMenuCustomItems\n     * @propertyOf ui.grid.class:GridOptions\n     * @description (optional) An array of menu items that should be added to\n     * the gridMenu.  Follow the format documented in the tutorial for column\n     * menu customisation.  The context provided to the action function will\n     * include context.grid.  An alternative if working with dynamic menus is to use the\n     * provided api - core.addToGridMenu and core.removeFromGridMenu, which handles\n     * some of the management of items for you.\n     *\n     */\n    /**\n     * @ngdoc boolean\n     * @name gridMenuShowHideColumns\n     * @propertyOf ui.grid.class:GridOptions\n     * @description true by default, whether the grid menu should allow hide/show\n     * of columns\n     *\n     */\n    /**\n     * @ngdoc method\n     * @methodOf ui.grid.uiGridGridMenuService\n     * @name getMenuItems\n     * @description Decides the menu items to show in the menu.  This is a\n     * combination of:\n     *\n     * - the default menu items that are always included,\n     * - any menu items that have been provided through the addMenuItem api. These\n     *   are typically added by features within the grid\n     * - any menu items included in grid.options.gridMenuCustomItems.  These can be\n     *   changed dynamically, as they're always recalculated whenever we show the\n     *   menu\n     * @param {$scope} $scope the scope of this gridMenu, from which we can find all\n     * the information that we need\n     * @returns {Array} an array of menu items that can be shown\n     */\n    getMenuItems: function( $scope ) {\n      var menuItems = [\n        // this is where we add any menu items we want to always include\n      ];\n\n      if ( $scope.grid.options.gridMenuCustomItems ){\n        if ( !angular.isArray( $scope.grid.options.gridMenuCustomItems ) ){\n          gridUtil.logError( 'gridOptions.gridMenuCustomItems must be an array, and is not');\n        } else {\n          menuItems = menuItems.concat( $scope.grid.options.gridMenuCustomItems );\n        }\n      }\n\n      var clearFilters = [{\n        title: i18nService.getSafeText('gridMenu.clearAllFilters'),\n        action: function ($event) {\n          $scope.grid.clearAllFilters();\n        },\n        shown: function() {\n          return $scope.grid.options.enableFiltering;\n        },\n        order: 100\n      }];\n      menuItems = menuItems.concat( clearFilters );\n\n      menuItems = menuItems.concat( $scope.registeredMenuItems );\n\n      if ( $scope.grid.options.gridMenuShowHideColumns !== false ){\n        menuItems = menuItems.concat( service.showHideColumns( $scope ) );\n      }\n\n      menuItems.sort(function(a, b){\n        return a.order - b.order;\n      });\n\n      return menuItems;\n    },\n\n\n    /**\n     * @ngdoc array\n     * @name gridMenuTitleFilter\n     * @propertyOf ui.grid.class:GridOptions\n     * @description (optional) A function that takes a title string\n     * (usually the col.displayName), and converts it into a display value.  The function\n     * must return either a string or a promise.\n     *\n     * Used for internationalization of the grid menu column names - for angular-translate\n     * you can pass $translate as the function, for i18nService you can pass getSafeText as the\n     * function\n     * @example\n     * <pre>\n     *   gridOptions = {\n     *     gridMenuTitleFilter: $translate\n     *   }\n     * </pre>\n     */\n    /**\n     * @ngdoc method\n     * @methodOf ui.grid.uiGridGridMenuService\n     * @name showHideColumns\n     * @description Adds two menu items for each of the columns in columnDefs.  One\n     * menu item for hide, one menu item for show.  Each is visible when appropriate\n     * (show when column is not visible, hide when column is visible).  Each toggles\n     * the visible property on the columnDef using toggleColumnVisibility\n     * @param {$scope} $scope of a gridMenu, which contains a reference to the grid\n     */\n    showHideColumns: function( $scope ){\n      var showHideColumns = [];\n      if ( !$scope.grid.options.columnDefs || $scope.grid.options.columnDefs.length === 0 || $scope.grid.columns.length === 0 ) {\n        return showHideColumns;\n      }\n\n      function isColumnVisible(colDef) {\n        return colDef.visible === true || colDef.visible === undefined;\n      }\n\n      // add header for columns\n      showHideColumns.push({\n        title: i18nService.getSafeText('gridMenu.columns'),\n        order: 300\n      });\n\n      $scope.grid.options.gridMenuTitleFilter = $scope.grid.options.gridMenuTitleFilter ? $scope.grid.options.gridMenuTitleFilter : function( title ) { return title; };\n\n      $scope.grid.options.columnDefs.forEach( function( colDef, index ){\n        if ( colDef.enableHiding !== false ){\n          // add hide menu item - shows an OK icon as we only show when column is already visible\n          var menuItem = {\n            icon: isColumnVisible(colDef) ? 'ui-grid-icon-ok' : 'ui-grid-icon-cancel',\n            action: function($event) {\n              $event.stopPropagation();\n\n              service.toggleColumnVisibility( this.context.gridCol );\n\n              if ($event.target && $event.target.firstChild) {\n                $event.target.firstChild.className = isColumnVisible(this.context.gridCol.colDef) ?\n                  'ui-grid-icon-ok' : 'ui-grid-icon-cancel';\n              }\n            },\n            shown: function() {\n              return this.context.gridCol.colDef.enableHiding !== false;\n            },\n            context: { gridCol: $scope.grid.getColumn(colDef.name || colDef.field) },\n            leaveOpen: true,\n            order: 301 + index\n          };\n          service.setMenuItemTitle( menuItem, colDef, $scope.grid );\n          showHideColumns.push( menuItem );\n        }\n      });\n      return showHideColumns;\n    },\n\n\n    /**\n     * @ngdoc method\n     * @methodOf ui.grid.uiGridGridMenuService\n     * @name setMenuItemTitle\n     * @description Handles the response from gridMenuTitleFilter, adding it directly to the menu\n     * item if it returns a string, otherwise waiting for the promise to resolve or reject then\n     * putting the result into the title\n     * @param {object} menuItem the menuItem we want to put the title on\n     * @param {object} colDef the colDef from which we can get displayName, name or field\n     * @param {Grid} grid the grid, from which we can get the options.gridMenuTitleFilter\n     *\n     */\n    setMenuItemTitle: function( menuItem, colDef, grid ){\n      var title = grid.options.gridMenuTitleFilter( colDef.displayName || gridUtil.readableColumnName(colDef.name) || colDef.field );\n\n      if ( typeof(title) === 'string' ){\n        menuItem.title = title;\n      } else if ( title.then ){\n        // must be a promise\n        menuItem.title = \"\";\n        title.then( function( successValue ) {\n          menuItem.title = successValue;\n        }, function( errorValue ) {\n          menuItem.title = errorValue;\n        }).catch(angular.noop);\n      } else {\n        gridUtil.logError('Expected gridMenuTitleFilter to return a string or a promise, it has returned neither, bad config');\n        menuItem.title = 'badconfig';\n      }\n    },\n\n    /**\n     * @ngdoc method\n     * @methodOf ui.grid.uiGridGridMenuService\n     * @name toggleColumnVisibility\n     * @description Toggles the visibility of an individual column.  Expects to be\n     * provided a context that has on it a gridColumn, which is the column that\n     * we'll operate upon.  We change the visibility, and refresh the grid as appropriate\n     * @param {GridColumn} gridCol the column that we want to toggle\n     *\n     */\n    toggleColumnVisibility: function( gridCol ) {\n      gridCol.colDef.visible = !( gridCol.colDef.visible === true || gridCol.colDef.visible === undefined );\n\n      gridCol.grid.refresh();\n      gridCol.grid.api.core.notifyDataChange( uiGridConstants.dataChange.COLUMN );\n      gridCol.grid.api.core.raise.columnVisibilityChanged( gridCol );\n    }\n  };\n\n  return service;\n}])\n\n\n\n.directive('uiGridMenuButton', ['gridUtil', 'uiGridConstants', 'uiGridGridMenuService', 'i18nService',\nfunction (gridUtil, uiGridConstants, uiGridGridMenuService, i18nService) {\n\n  return {\n    priority: 0,\n    scope: true,\n    require: ['^uiGrid'],\n    templateUrl: 'ui-grid/ui-grid-menu-button',\n    replace: true,\n\n    link: function ($scope, $elm, $attrs, controllers) {\n      var uiGridCtrl = controllers[0];\n\n      // For the aria label\n      $scope.i18n = {\n        aria: i18nService.getSafeText('gridMenu.aria')\n      };\n\n      uiGridGridMenuService.initialize($scope, uiGridCtrl.grid);\n\n      $scope.shown = false;\n\n      $scope.toggleMenu = function () {\n        if ( $scope.shown ){\n          $scope.$broadcast('hide-menu');\n          $scope.shown = false;\n        } else {\n          $scope.menuItems = uiGridGridMenuService.getMenuItems( $scope );\n          $scope.$broadcast('show-menu');\n          $scope.shown = true;\n        }\n      };\n\n      $scope.$on('menu-hidden', function() {\n        $scope.shown = false;\n        gridUtil.focus.bySelector($elm, '.ui-grid-icon-container');\n      });\n    }\n  };\n\n}]);\n\n})();\n\n(function(){\n\n/**\n * @ngdoc directive\n * @name ui.grid.directive:uiGridMenu\n * @element style\n * @restrict A\n *\n * @description\n * Allows us to interpolate expressions in `<style>` elements. Angular doesn't do this by default as it can/will/might? break in IE8.\n *\n * @example\n <doc:example module=\"app\">\n <doc:source>\n <script>\n var app = angular.module('app', ['ui.grid']);\n\n app.controller('MainCtrl', ['$scope', function ($scope) {\n\n }]);\n </script>\n\n <div ng-controller=\"MainCtrl\">\n   <div ui-grid-menu shown=\"true\"  ></div>\n </div>\n </doc:source>\n <doc:scenario>\n </doc:scenario>\n </doc:example>\n */\nangular.module('ui.grid')\n\n.directive('uiGridMenu', ['$compile', '$timeout', '$window', '$document', 'gridUtil', 'uiGridConstants', 'i18nService',\nfunction ($compile, $timeout, $window, $document, gridUtil, uiGridConstants, i18nService) {\n  var uiGridMenu = {\n    priority: 0,\n    scope: {\n      // shown: '&',\n      menuItems: '=',\n      autoHide: '=?'\n    },\n    require: '?^uiGrid',\n    templateUrl: 'ui-grid/uiGridMenu',\n    replace: false,\n    link: function ($scope, $elm, $attrs, uiGridCtrl) {\n      $scope.dynamicStyles = '';\n      if (uiGridCtrl && uiGridCtrl.grid && uiGridCtrl.grid.options && uiGridCtrl.grid.options.gridMenuTemplate) {\n        var gridMenuTemplate = uiGridCtrl.grid.options.gridMenuTemplate;\n        gridUtil.getTemplate(gridMenuTemplate).then(function (contents) {\n          var template = angular.element(contents);\n          var newElm = $compile(template)($scope);\n          $elm.replaceWith(newElm);\n        }).catch(angular.noop);\n      }\n\n      var setupHeightStyle = function(gridHeight) {\n        //menu appears under header row, so substract that height from it's total\n        // additional 20px for general padding\n        var gridMenuMaxHeight = gridHeight - uiGridCtrl.grid.headerHeight - 20;\n        $scope.dynamicStyles = [\n          '.grid' + uiGridCtrl.grid.id + ' .ui-grid-menu-mid {',\n          'max-height: ' + gridMenuMaxHeight + 'px;',\n          '}'\n        ].join(' ');\n      };\n\n      if (uiGridCtrl) {\n        setupHeightStyle(uiGridCtrl.grid.gridHeight);\n        uiGridCtrl.grid.api.core.on.gridDimensionChanged($scope, function(oldGridHeight, oldGridWidth, newGridHeight, newGridWidth) {\n          setupHeightStyle(newGridHeight);\n        });\n      }\n\n      $scope.i18n = {\n        close: i18nService.getSafeText('columnMenu.close')\n      };\n\n    // *** Show/Hide functions ******\n      $scope.showMenu = function(event, args) {\n        if ( !$scope.shown ){\n\n          /*\n           * In order to animate cleanly we remove the ng-if, wait a digest cycle, then\n           * animate the removal of the ng-hide.  We can't successfully (so far as I can tell)\n           * animate removal of the ng-if, as the menu items aren't there yet.  And we don't want\n           * to rely on ng-show only, as that leaves elements in the DOM that are needlessly evaluated\n           * on scroll events.\n           *\n           * Note when testing animation that animations don't run on the tutorials.  When debugging it looks\n           * like they do, but angular has a default $animate provider that is just a stub, and that's what's\n           * being called.  ALso don't be fooled by the fact that your browser has actually loaded the\n           * angular-translate.js, it's not using it.  You need to test animations in an external application.\n           */\n          $scope.shown = true;\n\n          // Must be a timeout in order to work properly in Firefox. Issue #6533\n          $timeout(function() {\n            $scope.shownMid = true;\n            $scope.$emit('menu-shown');\n          });\n        } else if ( !$scope.shownMid ) {\n          // we're probably doing a hide then show, so we don't need to wait for ng-if\n          $scope.shownMid = true;\n          $scope.$emit('menu-shown');\n        }\n\n        var docEventType = 'click';\n        if (args && args.originalEvent && args.originalEvent.type && args.originalEvent.type === 'touchstart') {\n          docEventType = args.originalEvent.type;\n        }\n\n        // Turn off an existing document click handler\n        angular.element(document).off('click touchstart', applyHideMenu);\n        $elm.off('keyup', checkKeyUp);\n        $elm.off('keydown', checkKeyDown);\n\n        // Turn on the document click handler, but in a timeout so it doesn't apply to THIS click if there is one\n        $timeout(function() {\n          angular.element(document).on(docEventType, applyHideMenu);\n          $elm.on('keyup', checkKeyUp);\n          $elm.on('keydown', checkKeyDown);\n        });\n      };\n\n\n      $scope.hideMenu = function(event) {\n        if ( $scope.shown ){\n          /*\n           * In order to animate cleanly we animate the addition of ng-hide, then use a $timeout to\n           * set the ng-if (shown = false) after the animation runs.  In theory we can cascade off the\n           * callback on the addClass method, but it is very unreliable with unit tests for no discernable reason.\n           *\n           * The user may have clicked on the menu again whilst\n           * we're waiting, so we check that the mid isn't shown before applying the ng-if.\n           */\n          $scope.shownMid = false;\n          $timeout( function() {\n            if ( !$scope.shownMid ){\n              $scope.shown = false;\n              $scope.$emit('menu-hidden');\n            }\n          }, 40);\n        }\n\n        angular.element(document).off('click touchstart', applyHideMenu);\n        $elm.off('keyup', checkKeyUp);\n        $elm.off('keydown', checkKeyDown);\n      };\n\n      $scope.$on('hide-menu', function (event, args) {\n        $scope.hideMenu(event, args);\n      });\n\n      $scope.$on('show-menu', function (event, args) {\n        $scope.showMenu(event, args);\n      });\n\n\n    // *** Auto hide when click elsewhere ******\n      var applyHideMenu = function(){\n        if ($scope.shown) {\n          $scope.$apply(function () {\n            $scope.hideMenu();\n          });\n        }\n      };\n\n      // close menu on ESC and keep tab cyclical\n      var checkKeyUp = function(event) {\n        if (event.keyCode === 27) {\n          $scope.hideMenu();\n        }\n      };\n\n      var checkKeyDown = function(event) {\n        var setFocus = function(elm) {\n          elm.focus();\n          event.preventDefault();\n          return false;\n        };\n        if (event.keyCode === 9) {\n          var firstMenuItem, lastMenuItem;\n          var menuItemButtons = $elm[0].querySelectorAll('button:not(.ng-hide)');\n          if (menuItemButtons.length > 0) {\n            firstMenuItem = menuItemButtons[0];\n            lastMenuItem = menuItemButtons[menuItemButtons.length - 1];\n            if (event.target === lastMenuItem && !event.shiftKey) {\n              setFocus(firstMenuItem);\n            } else if (event.target === firstMenuItem && event.shiftKey) {\n              setFocus(lastMenuItem);\n            }\n          }\n        }\n      };\n\n      if (typeof($scope.autoHide) === 'undefined' || $scope.autoHide === undefined) {\n        $scope.autoHide = true;\n      }\n\n      if ($scope.autoHide) {\n        angular.element($window).on('resize', applyHideMenu);\n      }\n\n      $scope.$on('$destroy', function unbindEvents() {\n        angular.element($window).off('resize', applyHideMenu);\n        angular.element(document).off('click touchstart', applyHideMenu);\n        $elm.off('keyup', checkKeyUp);\n        $elm.off('keydown', checkKeyDown);\n      });\n\n      if (uiGridCtrl) {\n       $scope.$on('$destroy', uiGridCtrl.grid.api.core.on.scrollBegin($scope, applyHideMenu ));\n      }\n\n      $scope.$on('$destroy', $scope.$on(uiGridConstants.events.ITEM_DRAGGING, applyHideMenu ));\n    }\n  };\n\n  return uiGridMenu;\n}])\n\n.directive('uiGridMenuItem', ['gridUtil', '$compile', 'i18nService', function (gridUtil, $compile, i18nService) {\n  var uiGridMenuItem = {\n    priority: 0,\n    scope: {\n      name: '=',\n      active: '=',\n      action: '=',\n      icon: '=',\n      shown: '=',\n      context: '=',\n      templateUrl: '=',\n      leaveOpen: '=',\n      screenReaderOnly: '='\n    },\n    require: ['?^uiGrid'],\n    templateUrl: 'ui-grid/uiGridMenuItem',\n    replace: false,\n    compile: function() {\n      return {\n        pre: function ($scope, $elm) {\n          if ($scope.templateUrl) {\n            gridUtil.getTemplate($scope.templateUrl)\n                .then(function (contents) {\n                  var template = angular.element(contents);\n\n                  var newElm = $compile(template)($scope);\n                  $elm.replaceWith(newElm);\n                }).catch(angular.noop);\n          }\n        },\n        post: function ($scope, $elm, $attrs, controllers) {\n          var uiGridCtrl = controllers[0];\n\n          // TODO(c0bra): validate that shown and active are functions if they're defined. An exception is already thrown above this though\n          // if (typeof($scope.shown) !== 'undefined' && $scope.shown && typeof($scope.shown) !== 'function') {\n          //   throw new TypeError(\"$scope.shown is defined but not a function\");\n          // }\n          if (typeof($scope.shown) === 'undefined' || $scope.shown === null) {\n            $scope.shown = function() { return true; };\n          }\n\n          $scope.itemShown = function () {\n            var context = {};\n            if ($scope.context) {\n              context.context = $scope.context;\n            }\n\n            if (typeof(uiGridCtrl) !== 'undefined' && uiGridCtrl) {\n              context.grid = uiGridCtrl.grid;\n            }\n\n            return $scope.shown.call(context);\n          };\n\n          $scope.itemAction = function($event,title) {\n            $event.stopPropagation();\n\n            if (typeof($scope.action) === 'function') {\n              var context = {};\n\n              if ($scope.context) {\n                context.context = $scope.context;\n              }\n\n              // Add the grid to the function call context if the uiGrid controller is present\n              if (typeof(uiGridCtrl) !== 'undefined' && uiGridCtrl) {\n                context.grid = uiGridCtrl.grid;\n              }\n\n              $scope.action.call(context, $event, title);\n\n              if ( !$scope.leaveOpen ){\n                $scope.$emit('hide-menu');\n              } else {\n                // Maintain focus on the selected item\n                var correctParent = $event.target.parentElement;\n\n                // nodeName of 'I' means target is i element, need the next parent\n                if (angular.element($event.target)[0].nodeName === 'I') {\n                  correctParent = correctParent.parentElement;\n                }\n\n                gridUtil.focus.bySelector(correctParent, 'button[type=button]', true);\n              }\n            }\n          };\n\n          $scope.label = function(){\n            var toBeDisplayed = $scope.name;\n\n            if (typeof($scope.name) === 'function'){\n              toBeDisplayed = $scope.name.call();\n            }\n\n            return toBeDisplayed;\n          };\n\n          $scope.i18n = i18nService.get();\n        }\n      };\n    }\n  };\n\n  return uiGridMenuItem;\n}]);\n\n})();\n\n(function(){\n  'use strict';\n  /**\n   * @ngdoc overview\n   * @name ui.grid.directive:uiGridOneBind\n   * @summary A group of directives that provide a one time bind to a dom element.\n   * @description A group of directives that provide a one time bind to a dom element.\n   * As one time bindings are not supported in Angular 1.2.* this directive provdes this capability.\n   * This is done to reduce the number of watchers on the dom.\n   * <br/>\n   * <h2>Short Example ({@link ui.grid.directive:uiGridOneBindSrc ui-grid-one-bind-src})</h2>\n   * <pre>\n        <div ng-init=\"imageName = 'myImageDir.jpg'\">\n          <img ui-grid-one-bind-src=\"imageName\"></img>\n        </div>\n     </pre>\n   * Will become:\n   * <pre>\n       <div ng-init=\"imageName = 'myImageDir.jpg'\">\n         <img ui-grid-one-bind-src=\"imageName\" src=\"myImageDir.jpg\"></img>\n       </div>\n     </pre>\n     </br>\n     <h2>Short Example ({@link ui.grid.directive:uiGridOneBindText ui-grid-one-bind-text})</h2>\n   * <pre>\n        <div ng-init=\"text='Add this text'\" ui-grid-one-bind-text=\"text\"></div>\n     </pre>\n   * Will become:\n   * <pre>\n   <div ng-init=\"text='Add this text'\" ui-grid-one-bind-text=\"text\">Add this text</div>\n     </pre>\n     </br>\n   * <b>Note:</b> This behavior is slightly different for the {@link ui.grid.directive:uiGridOneBindIdGrid uiGridOneBindIdGrid}\n   * and {@link ui.grid.directive:uiGridOneBindAriaLabelledbyGrid uiGridOneBindAriaLabelledbyGrid} directives.\n   *\n   */\n  //https://github.com/joshkurz/Black-Belt-AngularJS-Directives/blob/master/directives/Optimization/oneBind.js\n  var oneBinders = angular.module('ui.grid');\n  angular.forEach([\n      /**\n       * @ngdoc directive\n       * @name ui.grid.directive:uiGridOneBindSrc\n       * @memberof ui.grid.directive:uiGridOneBind\n       * @element img\n       * @restrict A\n       * @param {String} uiGridOneBindSrc The angular string you want to bind. Does not support interpolation. Don't use <code>{{scopeElt}}</code> instead use <code>scopeElt</code>.\n       * @description One time binding for the src dom tag.\n       *\n       */\n      {tag: 'Src', method: 'attr'},\n      /**\n       * @ngdoc directive\n       * @name ui.grid.directive:uiGridOneBindText\n       * @element div\n       * @restrict A\n       * @param {String} uiGridOneBindText The angular string you want to bind. Does not support interpolation. Don't use <code>{{scopeElt}}</code> instead use <code>scopeElt</code>.\n       * @description One time binding for the text dom tag.\n       */\n      {tag: 'Text', method: 'text'},\n      /**\n       * @ngdoc directive\n       * @name ui.grid.directive:uiGridOneBindHref\n       * @element div\n       * @restrict A\n       * @param {String} uiGridOneBindHref The angular string you want to bind. Does not support interpolation. Don't use <code>{{scopeElt}}</code> instead use <code>scopeElt</code>.\n       * @description One time binding for the href dom tag. For more information see {@link ui.grid.directive:uiGridOneBind}.\n       */\n      {tag: 'Href', method: 'attr'},\n      /**\n       * @ngdoc directive\n       * @name ui.grid.directive:uiGridOneBindClass\n       * @element div\n       * @restrict A\n       * @param {String} uiGridOneBindClass The angular string you want to bind. Does not support interpolation. Don't use <code>{{scopeElt}}</code> instead use <code>scopeElt</code>.\n       * @param {Object} uiGridOneBindClass The object that you want to bind. At least one of the values in the object must be something other than null or undefined for the watcher to be removed.\n       *                                    this is to prevent the watcher from being removed before the scope is initialized.\n       * @param {Array} uiGridOneBindClass An array of classes to bind to this element.\n       * @description One time binding for the class dom tag. For more information see {@link ui.grid.directive:uiGridOneBind}.\n       */\n      {tag: 'Class', method: 'addClass'},\n      /**\n       * @ngdoc directive\n       * @name ui.grid.directive:uiGridOneBindHtml\n       * @element div\n       * @restrict A\n       * @param {String} uiGridOneBindHtml The angular string you want to bind. Does not support interpolation. Don't use <code>{{scopeElt}}</code> instead use <code>scopeElt</code>.\n       * @description One time binding for the html method on a dom element. For more information see {@link ui.grid.directive:uiGridOneBind}.\n       */\n      {tag: 'Html', method: 'html'},\n      /**\n       * @ngdoc directive\n       * @name ui.grid.directive:uiGridOneBindAlt\n       * @element div\n       * @restrict A\n       * @param {String} uiGridOneBindAlt The angular string you want to bind. Does not support interpolation. Don't use <code>{{scopeElt}}</code> instead use <code>scopeElt</code>.\n       * @description One time binding for the alt dom tag. For more information see {@link ui.grid.directive:uiGridOneBind}.\n       */\n      {tag: 'Alt', method: 'attr'},\n      /**\n       * @ngdoc directive\n       * @name ui.grid.directive:uiGridOneBindStyle\n       * @element div\n       * @restrict A\n       * @param {String} uiGridOneBindStyle The angular string you want to bind. Does not support interpolation. Don't use <code>{{scopeElt}}</code> instead use <code>scopeElt</code>.\n       * @description One time binding for the style dom tag. For more information see {@link ui.grid.directive:uiGridOneBind}.\n       */\n      {tag: 'Style', method: 'css'},\n      /**\n       * @ngdoc directive\n       * @name ui.grid.directive:uiGridOneBindValue\n       * @element div\n       * @restrict A\n       * @param {String} uiGridOneBindValue The angular string you want to bind. Does not support interpolation. Don't use <code>{{scopeElt}}</code> instead use <code>scopeElt</code>.\n       * @description One time binding for the value dom tag. For more information see {@link ui.grid.directive:uiGridOneBind}.\n       */\n      {tag: 'Value', method: 'attr'},\n      /**\n       * @ngdoc directive\n       * @name ui.grid.directive:uiGridOneBindId\n       * @element div\n       * @restrict A\n       * @param {String} uiGridOneBindId The angular string you want to bind. Does not support interpolation. Don't use <code>{{scopeElt}}</code> instead use <code>scopeElt</code>.\n       * @description One time binding for the value dom tag. For more information see {@link ui.grid.directive:uiGridOneBind}.\n       */\n      {tag: 'Id', method: 'attr'},\n      /**\n       * @ngdoc directive\n       * @name ui.grid.directive:uiGridOneBindIdGrid\n       * @element div\n       * @restrict A\n       * @param {String} uiGridOneBindIdGrid The angular string you want to bind. Does not support interpolation. Don't use <code>{{scopeElt}}</code> instead use <code>scopeElt</code>.\n       * @description One time binding for the id dom tag.\n       * <h1>Important Note!</h1>\n       * If the id tag passed as a parameter does <b>not</b> contain the grid id as a substring\n       * then the directive will search the scope and the parent controller (if it is a uiGridController) for the grid.id value.\n       * If this value is found then it is appended to the begining of the id tag. If the grid is not found then the directive throws an error.\n       * This is done in order to ensure uniqueness of id tags across the grid.\n       * This is to prevent two grids in the same document having duplicate id tags.\n       */\n      {tag: 'Id', directiveName:'IdGrid', method: 'attr', appendGridId: true},\n      /**\n       * @ngdoc directive\n       * @name ui.grid.directive:uiGridOneBindTitle\n       * @element div\n       * @restrict A\n       * @param {String} uiGridOneBindTitle The angular string you want to bind. Does not support interpolation. Don't use <code>{{scopeElt}}</code> instead use <code>scopeElt</code>.\n       * @description One time binding for the title dom tag. For more information see {@link ui.grid.directive:uiGridOneBind}.\n       */\n      {tag: 'Title', method: 'attr'},\n      /**\n       * @ngdoc directive\n       * @name ui.grid.directive:uiGridOneBindAriaLabel\n       * @element div\n       * @restrict A\n       * @param {String} uiGridOneBindAriaLabel The angular string you want to bind. Does not support interpolation. Don't use <code>{{scopeElt}}</code> instead use <code>scopeElt</code>.\n       * @description One time binding for the aria-label dom tag. For more information see {@link ui.grid.directive:uiGridOneBind}.\n       *<br/>\n       * <pre>\n            <div ng-init=\"text='Add this text'\" ui-grid-one-bind-aria-label=\"text\"></div>\n         </pre>\n       * Will become:\n       * <pre>\n            <div ng-init=\"text='Add this text'\" ui-grid-one-bind-aria-label=\"text\" aria-label=\"Add this text\"></div>\n         </pre>\n       */\n      {tag: 'Label', method: 'attr', aria:true},\n      /**\n       * @ngdoc directive\n       * @name ui.grid.directive:uiGridOneBindAriaLabelledby\n       * @element div\n       * @restrict A\n       * @param {String} uiGridOneBindAriaLabelledby The angular string you want to bind. Does not support interpolation. Don't use <code>{{scopeElt}}</code> instead use <code>scopeElt</code>.\n       * @description One time binding for the aria-labelledby dom tag. For more information see {@link ui.grid.directive:uiGridOneBind}.\n       *<br/>\n       * <pre>\n            <div ng-init=\"anId = 'gridID32'\" ui-grid-one-bind-aria-labelledby=\"anId\"></div>\n         </pre>\n       * Will become:\n       * <pre>\n            <div ng-init=\"anId = 'gridID32'\" ui-grid-one-bind-aria-labelledby=\"anId\" aria-labelledby=\"gridID32\"></div>\n         </pre>\n       */\n      {tag: 'Labelledby', method: 'attr', aria:true},\n      /**\n       * @ngdoc directive\n       * @name ui.grid.directive:uiGridOneBindAriaLabelledbyGrid\n       * @element div\n       * @restrict A\n       * @param {String} uiGridOneBindAriaLabelledbyGrid The angular string you want to bind. Does not support interpolation. Don't use <code>{{scopeElt}}</code> instead use <code>scopeElt</code>.\n       * @description One time binding for the aria-labelledby dom tag. For more information see {@link ui.grid.directive:uiGridOneBind}.\n       * Works somewhat like {@link ui.grid.directive:uiGridOneBindIdGrid} however this one supports a list of ids (seperated by a space) and will dynamically add the\n       * grid id to each one.\n       *<br/>\n       * <pre>\n            <div ng-init=\"anId = 'gridID32'\" ui-grid-one-bind-aria-labelledby-grid=\"anId\"></div>\n         </pre>\n       * Will become ([grid.id] will be replaced by the actual grid id):\n       * <pre>\n            <div ng-init=\"anId = 'gridID32'\" ui-grid-one-bind-aria-labelledby-grid=\"anId\" aria-labelledby-Grid=\"[grid.id]-gridID32\"></div>\n         </pre>\n       */\n      {tag: 'Labelledby', directiveName:'LabelledbyGrid', appendGridId:true, method: 'attr', aria:true},\n      /**\n       * @ngdoc directive\n       * @name ui.grid.directive:uiGridOneBindAriaDescribedby\n       * @element ANY\n       * @restrict A\n       * @param {String} uiGridOneBindAriaDescribedby The angular string you want to bind. Does not support interpolation. Don't use <code>{{scopeElt}}</code> instead use <code>scopeElt</code>.\n       * @description One time binding for the aria-describedby dom tag. For more information see {@link ui.grid.directive:uiGridOneBind}.\n       *<br/>\n       * <pre>\n            <div ng-init=\"anId = 'gridID32'\" ui-grid-one-bind-aria-describedby=\"anId\"></div>\n         </pre>\n       * Will become:\n       * <pre>\n            <div ng-init=\"anId = 'gridID32'\" ui-grid-one-bind-aria-describedby=\"anId\" aria-describedby=\"gridID32\"></div>\n         </pre>\n       */\n      {tag: 'Describedby', method: 'attr', aria:true},\n      /**\n       * @ngdoc directive\n       * @name ui.grid.directive:uiGridOneBindAriaDescribedbyGrid\n       * @element ANY\n       * @restrict A\n       * @param {String} uiGridOneBindAriaDescribedbyGrid The angular string you want to bind. Does not support interpolation. Don't use <code>{{scopeElt}}</code> instead use <code>scopeElt</code>.\n       * @description One time binding for the aria-labelledby dom tag. For more information see {@link ui.grid.directive:uiGridOneBind}.\n       * Works somewhat like {@link ui.grid.directive:uiGridOneBindIdGrid} however this one supports a list of ids (seperated by a space) and will dynamically add the\n       * grid id to each one.\n       *<br/>\n       * <pre>\n            <div ng-init=\"anId = 'gridID32'\" ui-grid-one-bind-aria-describedby-grid=\"anId\"></div>\n         </pre>\n       * Will become ([grid.id] will be replaced by the actual grid id):\n       * <pre>\n            <div ng-init=\"anId = 'gridID32'\" ui-grid-one-bind-aria-describedby-grid=\"anId\" aria-describedby=\"[grid.id]-gridID32\"></div>\n         </pre>\n       */\n      {tag: 'Describedby', directiveName:'DescribedbyGrid', appendGridId:true, method: 'attr', aria:true}],\n    function(v){\n\n      var baseDirectiveName = 'uiGridOneBind';\n      //If it is an aria tag then append the aria label seperately\n      //This is done because the aria tags are formatted aria-* and the directive name can't have a '-' character in it.\n      //If the diretiveName has to be overridden then it does so here. This is because the tag being modified and the directive sometimes don't match up.\n      var directiveName = (v.aria ? baseDirectiveName + 'Aria' : baseDirectiveName) + (v.directiveName ? v.directiveName : v.tag);\n      oneBinders.directive(directiveName, ['gridUtil', function(gridUtil){\n        return {\n          restrict: 'A',\n          require: ['?uiGrid','?^uiGrid'],\n          link: function(scope, iElement, iAttrs, controllers){\n            /* Appends the grid id to the beginnig of the value. */\n            var appendGridId = function(val){\n              var grid; //Get an instance of the grid if its available\n              //If its available in the scope then we don't need to try to find it elsewhere\n              if (scope.grid) {\n                grid = scope.grid;\n              }\n              //Another possible location to try to find the grid\n              else if (scope.col && scope.col.grid){\n                grid = scope.col.grid;\n              }\n              //Last ditch effort: Search through the provided controllers.\n              else if (!controllers.some( //Go through the controllers till one has the element we need\n                function(controller){\n                  if (controller && controller.grid) {\n                    grid = controller.grid;\n                    return true; //We've found the grid\n                  }\n              })){\n                //We tried our best to find it for you\n                gridUtil.logError(\"[\"+directiveName+\"] A valid grid could not be found to bind id. Are you using this directive \" +\n                                 \"within the correct scope? Trying to generate id: [gridID]-\" + val);\n                throw new Error(\"No valid grid could be found\");\n              }\n\n              if (grid){\n                var idRegex = new RegExp(grid.id.toString());\n                //If the grid id hasn't been appended already in the template declaration\n                if (!idRegex.test(val)){\n                  val = grid.id.toString() + '-' + val;\n                }\n              }\n              return val;\n            };\n\n            // The watch returns a function to remove itself.\n            var rmWatcher = scope.$watch(iAttrs[directiveName], function(newV){\n              if (newV){\n                //If we are trying to add an id element then we also apply the grid id if it isn't already there\n                if (v.appendGridId) {\n                  var newIdString = null;\n                  //Append the id to all of the new ids.\n                  angular.forEach( newV.split(' '), function(s){\n                    newIdString = (newIdString ? (newIdString + ' ') : '') +  appendGridId(s);\n                  });\n                  newV = newIdString;\n                }\n\n                // Append this newValue to the dom element.\n                switch (v.method) {\n                  case 'attr': //The attr method takes two paraams the tag and the value\n                    if (v.aria) {\n                      //If it is an aria element then append the aria prefix\n                      iElement[v.method]('aria-' + v.tag.toLowerCase(),newV);\n                    } else {\n                      iElement[v.method](v.tag.toLowerCase(),newV);\n                    }\n                    break;\n                  case 'addClass':\n                    //Pulled from https://github.com/Pasvaz/bindonce/blob/master/bindonce.js\n                    if (angular.isObject(newV) && !angular.isArray(newV)) {\n                      var results = [];\n                      var nonNullFound = false; //We don't want to remove the binding unless the key is actually defined\n                      angular.forEach(newV, function (value, index) {\n                        if (value !== null && typeof(value) !== \"undefined\"){\n                          nonNullFound = true; //A non null value for a key was found so the object must have been initialized\n                          if (value) {results.push(index);}\n                        }\n                      });\n                      //A non null value for a key wasn't found so assume that the scope values haven't been fully initialized\n                      if (!nonNullFound){\n                        return; // If not initialized then the watcher should not be removed yet.\n                      }\n                      newV = results;\n                    }\n\n                    if (newV) {\n                      iElement.addClass(angular.isArray(newV) ? newV.join(' ') : newV);\n                    } else {\n                      return;\n                    }\n                    break;\n                  default:\n                    iElement[v.method](newV);\n                    break;\n                }\n\n                //Removes the watcher on itself after the bind\n                rmWatcher();\n              }\n            // True ensures that equality is determined using angular.equals instead of ===\n            }, true); //End rm watchers\n          } //End compile function\n        }; //End directive return\n      } // End directive function\n    ]); //End directive\n  }); // End angular foreach\n})();\n\n(function () {\n  'use strict';\n\n  var module = angular.module('ui.grid');\n\n  module.directive('uiGridRenderContainer', ['$timeout', '$document', 'uiGridConstants', 'gridUtil', 'ScrollEvent',\n    function($timeout, $document, uiGridConstants, gridUtil, ScrollEvent) {\n    return {\n      replace: true,\n      transclude: true,\n      templateUrl: 'ui-grid/uiGridRenderContainer',\n      require: ['^uiGrid', 'uiGridRenderContainer'],\n      scope: {\n        containerId: '=',\n        rowContainerName: '=',\n        colContainerName: '=',\n        bindScrollHorizontal: '=',\n        bindScrollVertical: '=',\n        enableVerticalScrollbar: '=',\n        enableHorizontalScrollbar: '='\n      },\n      controller: 'uiGridRenderContainer as RenderContainer',\n      compile: function () {\n        return {\n          pre: function prelink($scope, $elm, $attrs, controllers) {\n\n            var uiGridCtrl = controllers[0];\n            var containerCtrl = controllers[1];\n            var grid = $scope.grid = uiGridCtrl.grid;\n\n            // Verify that the render container for this element exists\n            if (!$scope.rowContainerName) {\n              throw new Error(\"No row render container name specified\");\n            }\n            if (!$scope.colContainerName) {\n              throw new Error(\"No column render container name specified\");\n            }\n\n            if (!grid.renderContainers[$scope.rowContainerName]) {\n              throw new Error(\"Row render container '\" + $scope.rowContainerName + \"' is not registered.\");\n            }\n            if (!grid.renderContainers[$scope.colContainerName]) {\n              throw new Error(\"Column render container '\" + $scope.colContainerName + \"' is not registered.\");\n            }\n\n            var rowContainer = $scope.rowContainer = grid.renderContainers[$scope.rowContainerName];\n            var colContainer = $scope.colContainer = grid.renderContainers[$scope.colContainerName];\n\n            containerCtrl.containerId = $scope.containerId;\n            containerCtrl.rowContainer = rowContainer;\n            containerCtrl.colContainer = colContainer;\n          },\n          post: function postlink($scope, $elm, $attrs, controllers) {\n\n            var uiGridCtrl = controllers[0];\n            var containerCtrl = controllers[1];\n\n            var grid = uiGridCtrl.grid;\n            var rowContainer = containerCtrl.rowContainer;\n            var colContainer = containerCtrl.colContainer;\n            var scrollTop = null;\n            var scrollLeft = null;\n\n\n            var renderContainer = grid.renderContainers[$scope.containerId];\n\n            // Put the container name on this element as a class\n            $elm.addClass('ui-grid-render-container-' + $scope.containerId);\n\n            // Scroll the render container viewport when the mousewheel is used\n            gridUtil.on.mousewheel($elm, function (event) {\n              var scrollEvent = new ScrollEvent(grid, rowContainer, colContainer, ScrollEvent.Sources.RenderContainerMouseWheel);\n              if (event.deltaY !== 0) {\n                var scrollYAmount = event.deltaY * -1 * event.deltaFactor;\n\n                scrollTop = containerCtrl.viewport[0].scrollTop;\n\n                // Get the scroll percentage\n                scrollEvent.verticalScrollLength = rowContainer.getVerticalScrollLength();\n                var scrollYPercentage = (scrollTop + scrollYAmount) / scrollEvent.verticalScrollLength;\n\n                // If we should be scrolled 100%, make sure the scrollTop matches the maximum scroll length\n                //   Viewports that have \"overflow: hidden\" don't let the mousewheel scroll all the way to the bottom without this check\n                if (scrollYPercentage >= 1 && scrollTop < scrollEvent.verticalScrollLength) {\n                  containerCtrl.viewport[0].scrollTop = scrollEvent.verticalScrollLength;\n                }\n\n                // Keep scrollPercentage within the range 0-1.\n                if (scrollYPercentage < 0) { scrollYPercentage = 0; }\n                else if (scrollYPercentage > 1) { scrollYPercentage = 1; }\n\n                scrollEvent.y = { percentage: scrollYPercentage, pixels: scrollYAmount };\n              }\n              if (event.deltaX !== 0) {\n                var scrollXAmount = event.deltaX * event.deltaFactor;\n\n                // Get the scroll percentage\n                scrollLeft = gridUtil.normalizeScrollLeft(containerCtrl.viewport, grid);\n                scrollEvent.horizontalScrollLength = (colContainer.getCanvasWidth() - colContainer.getViewportWidth());\n                var scrollXPercentage = (scrollLeft + scrollXAmount) / scrollEvent.horizontalScrollLength;\n\n                // Keep scrollPercentage within the range 0-1.\n                if (scrollXPercentage < 0) { scrollXPercentage = 0; }\n                else if (scrollXPercentage > 1) { scrollXPercentage = 1; }\n\n                scrollEvent.x = { percentage: scrollXPercentage, pixels: scrollXAmount };\n              }\n\n              // Let the parent container scroll if the grid is already at the top/bottom\n              if ((event.deltaY !== 0 && (scrollEvent.atTop(scrollTop) || scrollEvent.atBottom(scrollTop))) ||\n                  (event.deltaX !== 0 && (scrollEvent.atLeft(scrollLeft) || scrollEvent.atRight(scrollLeft)))) {\n                //parent controller scrolls\n              }\n              else {\n                event.preventDefault();\n                event.stopPropagation();\n                scrollEvent.fireThrottledScrollingEvent('', scrollEvent);\n              }\n\n            });\n\n            $elm.bind('$destroy', function() {\n              $elm.unbind('keydown');\n\n              ['touchstart', 'touchmove', 'touchend','keydown', 'wheel', 'mousewheel', 'DomMouseScroll', 'MozMousePixelScroll'].forEach(function (eventName) {\n                $elm.unbind(eventName);\n              });\n            });\n\n            // TODO(c0bra): Handle resizing the inner canvas based on the number of elements\n            function update() {\n              var ret = '';\n\n              var canvasWidth = colContainer.canvasWidth;\n              var viewportWidth = colContainer.getViewportWidth();\n\n              var canvasHeight = rowContainer.getCanvasHeight();\n\n              //add additional height for scrollbar on left and right container\n              //if ($scope.containerId !== 'body') {\n              //  canvasHeight -= grid.scrollbarHeight;\n              //}\n\n              var viewportHeight = rowContainer.getViewportHeight();\n              //shorten the height to make room for a scrollbar placeholder\n              if (colContainer.needsHScrollbarPlaceholder()) {\n                viewportHeight -= grid.scrollbarHeight;\n              }\n\n              var headerViewportWidth,\n                  footerViewportWidth;\n              headerViewportWidth = footerViewportWidth = colContainer.getHeaderViewportWidth();\n\n              // Set canvas dimensions\n              ret += '\\n .grid' + uiGridCtrl.grid.id + ' .ui-grid-render-container-' + $scope.containerId + ' .ui-grid-canvas { width: ' + canvasWidth + 'px; height: ' + canvasHeight + 'px; }';\n\n              ret += '\\n .grid' + uiGridCtrl.grid.id + ' .ui-grid-render-container-' + $scope.containerId + ' .ui-grid-header-canvas { width: ' + (canvasWidth + grid.scrollbarWidth) + 'px; }';\n\n              if (renderContainer.explicitHeaderCanvasHeight) {\n                // get height from body container\n                var reHCHeight = document.querySelector(\n                  '.grid' + uiGridCtrl.grid.id + ' .ui-grid-render-container-body .ui-grid-header-canvas');\n\n                if (reHCHeight) {\n                  renderContainer.explicitHeaderCanvasHeight = reHCHeight.offsetHeight;\n                }\n\n                ret += '\\n .grid' + uiGridCtrl.grid.id + ' .ui-grid-render-container-' + $scope.containerId +\n                  ' .ui-grid-header-canvas { height: ' + renderContainer.explicitHeaderCanvasHeight + 'px; }';\n              }\n              else {\n                ret += '\\n .grid' + uiGridCtrl.grid.id + ' .ui-grid-render-container-' + $scope.containerId + ' .ui-grid-header-canvas { height: inherit; }';\n              }\n  \n              ret += '\\n .grid' + uiGridCtrl.grid.id + ' .ui-grid-render-container-' + $scope.containerId +\n                ' .ui-grid-viewport { width: ' + viewportWidth + 'px; height: ' + viewportHeight + 'px; }';\n              ret += '\\n .grid' + uiGridCtrl.grid.id + ' .ui-grid-render-container-' + $scope.containerId +\n                ' .ui-grid-header-viewport { width: ' + headerViewportWidth + 'px; }';\n\n              ret += '\\n .grid' + uiGridCtrl.grid.id + ' .ui-grid-render-container-' + $scope.containerId +\n                ' .ui-grid-footer-canvas { width: ' + (canvasWidth + grid.scrollbarWidth) + 'px; }';\n              ret += '\\n .grid' + uiGridCtrl.grid.id + ' .ui-grid-render-container-' + $scope.containerId +\n                ' .ui-grid-footer-viewport { width: ' + footerViewportWidth + 'px; }';\n\n              return ret;\n            }\n\n            uiGridCtrl.grid.registerStyleComputation({\n              priority: 6,\n              func: update\n            });\n          }\n        };\n      }\n    };\n\n  }]);\n\n  module.controller('uiGridRenderContainer', ['$scope', 'gridUtil', function ($scope, gridUtil) {\n\n  }]);\n\n})();\n\n(function(){\n  'use strict';\n\n  angular.module('ui.grid').directive('uiGridRow', ['gridUtil', function(gridUtil) {\n    return {\n      replace: true,\n      // priority: 2001,\n      // templateUrl: 'ui-grid/ui-grid-row',\n      require: ['^uiGrid', '^uiGridRenderContainer'],\n      scope: {\n         row: '=uiGridRow',\n         //rowRenderIndex is added to scope to give the true visual index of the row to any directives that need it\n         rowRenderIndex: '='\n      },\n      compile: function() {\n        return {\n          pre: function($scope, $elm, $attrs, controllers) {\n            var uiGridCtrl = controllers[0];\n            var containerCtrl = controllers[1];\n\n            var grid = uiGridCtrl.grid;\n\n            $scope.grid = uiGridCtrl.grid;\n            $scope.colContainer = containerCtrl.colContainer;\n\n            // Function for attaching the template to this scope\n            var clonedElement, cloneScope;\n            function compileTemplate() {\n              $scope.row.getRowTemplateFn.then(function (compiledElementFn) {\n                // var compiledElementFn = $scope.row.compiledElementFn;\n\n                // Create a new scope for the contents of this row, so we can destroy it later if need be\n                var newScope = $scope.$new();\n\n                compiledElementFn(newScope, function (newElm, scope) {\n                  // If we already have a cloned element, we need to remove it and destroy its scope\n                  if (clonedElement) {\n                    clonedElement.remove();\n                    cloneScope.$destroy();\n                  }\n\n                  // Empty the row and append the new element\n                  $elm.empty().append(newElm);\n\n                  // Save the new cloned element and scope\n                  clonedElement = newElm;\n                  cloneScope = newScope;\n                });\n              }).catch(angular.noop);\n            }\n\n            // Initially attach the compiled template to this scope\n            compileTemplate();\n\n            // If the row's compiled element function changes, we need to replace this element's contents with the new compiled template\n            $scope.$watch('row.getRowTemplateFn', function (newFunc, oldFunc) {\n              if (newFunc !== oldFunc) {\n                compileTemplate();\n              }\n            });\n          },\n          post: function($scope, $elm, $attrs, controllers) {\n\n          }\n        };\n      }\n    };\n  }]);\n\n})();\n\n(function(){\n// 'use strict';\n\n  /**\n   * @ngdoc directive\n   * @name ui.grid.directive:uiGridStyle\n   * @element style\n   * @restrict A\n   *\n   * @description\n   * Allows us to interpolate expressions in `<style>` elements. Angular doesn't do this by default as it can/will/might? break in IE8.\n   *\n   * @example\n   <doc:example module=\"app\">\n   <doc:source>\n   <script>\n   var app = angular.module('app', ['ui.grid']);\n\n   app.controller('MainCtrl', ['$scope', function ($scope) {\n          $scope.myStyle = '.blah { border: 1px solid }';\n        }]);\n   </script>\n\n   <div ng-controller=\"MainCtrl\">\n   <style ui-grid-style>{{ myStyle }}</style>\n   <span class=\"blah\">I am in a box.</span>\n   </div>\n   </doc:source>\n   <doc:scenario>\n      it('should apply the right class to the element', function () {\n        element(by.css('.blah')).getCssValue('border-top-width')\n          .then(function(c) {\n            expect(c).toContain('1px');\n          });\n      });\n   </doc:scenario>\n   </doc:example>\n   */\n\n\n  angular.module('ui.grid').directive('uiGridStyle', ['gridUtil', '$interpolate', function(gridUtil, $interpolate) {\n    return {\n      // restrict: 'A',\n      // priority: 1000,\n      // require: '?^uiGrid',\n      link: function($scope, $elm, $attrs, uiGridCtrl) {\n        // gridUtil.logDebug('ui-grid-style link');\n        // if (uiGridCtrl === undefined) {\n        //    gridUtil.logWarn('[ui-grid-style link] uiGridCtrl is undefined!');\n        // }\n\n        var interpolateFn = $interpolate($elm.text(), true);\n\n        if (interpolateFn) {\n          $scope.$watch(interpolateFn, function(value) {\n            $elm.text(value);\n          });\n        }\n\n          // uiGridCtrl.recalcRowStyles = function() {\n          //   var offset = (scope.options.offsetTop || 0) - (scope.options.excessRows * scope.options.rowHeight);\n          //   var rowHeight = scope.options.rowHeight;\n\n          //   var ret = '';\n          //   var rowStyleCount = uiGridCtrl.minRowsToRender() + (scope.options.excessRows * 2);\n          //   for (var i = 1; i <= rowStyleCount; i++) {\n          //     ret = ret + ' .grid' + scope.gridId + ' .ui-grid-row:nth-child(' + i + ') { top: ' + offset + 'px; }';\n          //     offset = offset + rowHeight;\n          //   }\n\n          //   scope.rowStyles = ret;\n          // };\n\n          // uiGridCtrl.styleComputions.push(uiGridCtrl.recalcRowStyles);\n\n      }\n    };\n  }]);\n\n})();\n\n(function(){\n  'use strict';\n\n  angular.module('ui.grid').directive('uiGridViewport', ['gridUtil','ScrollEvent','uiGridConstants', '$log',\n    function(gridUtil, ScrollEvent, uiGridConstants, $log) {\n      return {\n        replace: true,\n        scope: {},\n        controllerAs: 'Viewport',\n        templateUrl: 'ui-grid/uiGridViewport',\n        require: ['^uiGrid', '^uiGridRenderContainer'],\n        link: function($scope, $elm, $attrs, controllers) {\n          // gridUtil.logDebug('viewport post-link');\n\n          var uiGridCtrl = controllers[0];\n          var containerCtrl = controllers[1];\n\n          $scope.containerCtrl = containerCtrl;\n\n          var rowContainer = containerCtrl.rowContainer;\n          var colContainer = containerCtrl.colContainer;\n\n          var grid = uiGridCtrl.grid;\n\n          $scope.grid = uiGridCtrl.grid;\n\n          // Put the containers in scope so we can get rows and columns from them\n          $scope.rowContainer = containerCtrl.rowContainer;\n          $scope.colContainer = containerCtrl.colContainer;\n\n          // Register this viewport with its container\n          containerCtrl.viewport = $elm;\n\n          /**\n           * @ngdoc function\n           * @name customScroller\n           * @methodOf ui.grid.class:GridOptions\n           * @description (optional) uiGridViewport.on('scroll', scrollHandler) by default.\n           * A function that allows you to provide your own scroller function. It is particularly helpful if you want to use third party scrollers\n           * as this allows you to do that.\n           *\n           * <div class=\"alert alert-info\" role=\"alert\"> <strong>NOTE:</strong> It is important to remember to always pass in an event object to\n           * the scrollHandler as the grid scrolling behavior will break without it.</div>\n           * <h5>Example</h5>\n           * <pre>\n           *   $scope.gridOptions = {\n           *       customScroller: function myScrolling(uiGridViewport, scrollHandler) {\n           *           uiGridViewport.on('scroll', function myScrollingOverride(event) {\n           *               // Do something here\n           *\n           *               scrollHandler(event);\n           *           });\n           *       }\n           *   };\n           * </pre>\n           * @param {object} uiGridViewport Element being scrolled. (this gets passed in by the grid).\n           * @param {function} scrollHandler Function that needs to be called when scrolling happens. (this gets passed in by the grid).\n           */\n          if (grid && grid.options && grid.options.customScroller) {\n            grid.options.customScroller($elm, scrollHandler);\n          } else {\n            $elm.on('scroll', scrollHandler);\n          }\n\n          var ignoreScroll = false;\n\n          function scrollHandler(evt) {\n            //Leaving in this commented code in case it can someday be used\n            //It does improve performance, but because the horizontal scroll is normalized,\n            //  using this code will lead to the column header getting slightly out of line with columns\n            //\n            //if (ignoreScroll && (grid.isScrollingHorizontally || grid.isScrollingHorizontally)) {\n            //  //don't ask for scrollTop if we just set it\n            //  ignoreScroll = false;\n            //  return;\n            //}\n            //ignoreScroll = true;\n\n            var newScrollTop = $elm[0].scrollTop;\n            var newScrollLeft = gridUtil.normalizeScrollLeft($elm, grid);\n\n            var vertScrollPercentage = rowContainer.scrollVertical(newScrollTop);\n            var horizScrollPercentage = colContainer.scrollHorizontal(newScrollLeft);\n\n            var scrollEvent = new ScrollEvent(grid, rowContainer, colContainer, ScrollEvent.Sources.ViewPortScroll);\n            scrollEvent.newScrollLeft = newScrollLeft;\n            scrollEvent.newScrollTop = newScrollTop;\n            if ( horizScrollPercentage > -1 ){\n              scrollEvent.x = { percentage: horizScrollPercentage };\n            }\n\n            if ( vertScrollPercentage > -1 ){\n              scrollEvent.y = { percentage: vertScrollPercentage };\n            }\n\n            grid.scrollContainers($scope.$parent.containerId, scrollEvent);\n          }\n\n          if ($scope.$parent.bindScrollVertical) {\n            grid.addVerticalScrollSync($scope.$parent.containerId, syncVerticalScroll);\n          }\n\n          if ($scope.$parent.bindScrollHorizontal) {\n            grid.addHorizontalScrollSync($scope.$parent.containerId, syncHorizontalScroll);\n            grid.addHorizontalScrollSync($scope.$parent.containerId + 'header', syncHorizontalHeader);\n            grid.addHorizontalScrollSync($scope.$parent.containerId + 'footer', syncHorizontalFooter);\n          }\n\n          function syncVerticalScroll(scrollEvent){\n            containerCtrl.prevScrollArgs = scrollEvent;\n            var newScrollTop = scrollEvent.getNewScrollTop(rowContainer,containerCtrl.viewport);\n            $elm[0].scrollTop = newScrollTop;\n\n          }\n\n          function syncHorizontalScroll(scrollEvent){\n            containerCtrl.prevScrollArgs = scrollEvent;\n            var newScrollLeft = scrollEvent.getNewScrollLeft(colContainer, containerCtrl.viewport);\n            $elm[0].scrollLeft =  gridUtil.denormalizeScrollLeft(containerCtrl.viewport,newScrollLeft, grid);\n          }\n\n          function syncHorizontalHeader(scrollEvent){\n            var newScrollLeft = scrollEvent.getNewScrollLeft(colContainer, containerCtrl.viewport);\n            if (containerCtrl.headerViewport) {\n              containerCtrl.headerViewport.scrollLeft = gridUtil.denormalizeScrollLeft(containerCtrl.viewport,newScrollLeft, grid);\n            }\n          }\n\n          function syncHorizontalFooter(scrollEvent){\n            var newScrollLeft = scrollEvent.getNewScrollLeft(colContainer, containerCtrl.viewport);\n            if (containerCtrl.footerViewport) {\n              containerCtrl.footerViewport.scrollLeft =  gridUtil.denormalizeScrollLeft(containerCtrl.viewport,newScrollLeft, grid);\n            }\n          }\n\n          $scope.$on('$destroy', function unbindEvents() {\n            $elm.off();\n          });\n        },\n        controller: ['$scope', function ($scope) {\n          this.rowStyle = function (index) {\n            var rowContainer = $scope.rowContainer;\n            var colContainer = $scope.colContainer;\n\n            var styles = {};\n\n            if (rowContainer.currentTopRow !== 0){\n              //top offset based on hidden rows count\n              var translateY = \"translateY(\"+ (rowContainer.currentTopRow * rowContainer.grid.options.rowHeight)  +\"px)\";\n              styles['transform'] = translateY;\n              styles['-webkit-transform'] = translateY;\n              styles['-ms-transform'] = translateY;\n            }\n\n            if (colContainer.currentFirstColumn !== 0) {\n              if (colContainer.grid.isRTL()) {\n                styles['margin-right'] = colContainer.columnOffset + 'px';\n              }\n              else {\n                styles['margin-left'] = colContainer.columnOffset + 'px';\n              }\n            }\n\n            return styles;\n          };\n        }]\n      };\n    }\n  ]);\n\n})();\n\n(function() {\n\nangular.module('ui.grid')\n.directive('uiGridVisible', function uiGridVisibleAction() {\n  return function ($scope, $elm, $attr) {\n    $scope.$watch($attr.uiGridVisible, function (visible) {\n        // $elm.css('visibility', visible ? 'visible' : 'hidden');\n        $elm[visible ? 'removeClass' : 'addClass']('ui-grid-invisible');\n    });\n  };\n});\n\n})();\n(function () {\n  'use strict';\n\n  angular.module('ui.grid').controller('uiGridController', ['$scope', '$element', '$attrs', 'gridUtil', '$q', 'uiGridConstants',\n                    'gridClassFactory', '$parse', '$compile',\n    function ($scope, $elm, $attrs, gridUtil, $q, uiGridConstants,\n              gridClassFactory, $parse, $compile) {\n      // gridUtil.logDebug('ui-grid controller');\n      var self = this;\n      var deregFunctions = [];\n\n      self.grid = gridClassFactory.createGrid($scope.uiGrid);\n\n      //assign $scope.$parent if appScope not already assigned\n      self.grid.appScope = self.grid.appScope || $scope.$parent;\n\n      $elm.addClass('grid' + self.grid.id);\n      self.grid.rtl = gridUtil.getStyles($elm[0])['direction'] === 'rtl';\n\n\n      // angular.extend(self.grid.options, );\n\n      //all properties of grid are available on scope\n      $scope.grid = self.grid;\n\n      if ($attrs.uiGridColumns) {\n        deregFunctions.push( $attrs.$observe('uiGridColumns', function(value) {\n          self.grid.options.columnDefs = angular.isString(value) ? angular.fromJson(value) : value;\n          self.grid.buildColumns()\n            .then(function(){\n              self.grid.preCompileCellTemplates();\n\n              self.grid.refreshCanvas(true);\n            }).catch(angular.noop);\n        }) );\n      }\n\n      // prevents an error from being thrown when the array is not defined yet and fastWatch is on\n      function getSize(array) {\n        return array ? array.length : 0;\n      }\n\n      // if fastWatch is set we watch only the length and the reference, not every individual object\n      if (self.grid.options.fastWatch) {\n        self.uiGrid = $scope.uiGrid;\n        if (angular.isString($scope.uiGrid.data)) {\n          deregFunctions.push( $scope.$parent.$watch($scope.uiGrid.data, dataWatchFunction) );\n          deregFunctions.push( $scope.$parent.$watch(function() {\n            if ( self.grid.appScope[$scope.uiGrid.data] ){\n              return self.grid.appScope[$scope.uiGrid.data].length;\n            } else {\n              return undefined;\n            }\n          }, dataWatchFunction) );\n        } else {\n          deregFunctions.push( $scope.$parent.$watch(function() { return $scope.uiGrid.data; }, dataWatchFunction) );\n          deregFunctions.push( $scope.$parent.$watch(function() { return getSize($scope.uiGrid.data); }, function(){ dataWatchFunction($scope.uiGrid.data); }) );\n        }\n        deregFunctions.push( $scope.$parent.$watch(function() { return $scope.uiGrid.columnDefs; }, columnDefsWatchFunction) );\n        deregFunctions.push( $scope.$parent.$watch(function() { return getSize($scope.uiGrid.columnDefs); }, function(){ columnDefsWatchFunction($scope.uiGrid.columnDefs); }) );\n      } else {\n        if (angular.isString($scope.uiGrid.data)) {\n          deregFunctions.push( $scope.$parent.$watchCollection($scope.uiGrid.data, dataWatchFunction) );\n        } else {\n          deregFunctions.push( $scope.$parent.$watchCollection(function() { return $scope.uiGrid.data; }, dataWatchFunction) );\n        }\n        deregFunctions.push( $scope.$parent.$watchCollection(function() { return $scope.uiGrid.columnDefs; }, columnDefsWatchFunction) );\n      }\n\n\n      function columnDefsWatchFunction(n, o) {\n        if (n && n !== o) {\n          self.grid.options.columnDefs = $scope.uiGrid.columnDefs;\n          self.grid.callDataChangeCallbacks(uiGridConstants.dataChange.COLUMN, {\n            orderByColumnDefs: true,\n            preCompileCellTemplates: true\n          });\n        }\n      }\n\n      var mostRecentData;\n\n      function dataWatchFunction(newData) {\n        // gridUtil.logDebug('dataWatch fired');\n        var promises = [];\n\n        if ( self.grid.options.fastWatch ) {\n          if (angular.isString($scope.uiGrid.data)) {\n            newData = self.grid.appScope.$eval($scope.uiGrid.data);\n          } else {\n            newData = $scope.uiGrid.data;\n          }\n        }\n\n        mostRecentData = newData;\n\n        if (newData) {\n          // columns length is greater than the number of row header columns, which don't count because they're created automatically\n          var hasColumns = self.grid.columns.length > (self.grid.rowHeaderColumns ? self.grid.rowHeaderColumns.length : 0);\n\n          if (\n            // If we have no columns\n            !hasColumns &&\n            // ... and we don't have a ui-grid-columns attribute, which would define columns for us\n            !$attrs.uiGridColumns &&\n            // ... and we have no pre-defined columns\n            self.grid.options.columnDefs.length === 0 &&\n            // ... but we DO have data\n            newData.length > 0\n          ) {\n            // ... then build the column definitions from the data that we have\n            self.grid.buildColumnDefsFromData(newData);\n          }\n\n          // If we haven't built columns before and either have some columns defined or some data defined\n          if (!hasColumns && (self.grid.options.columnDefs.length > 0 || newData.length > 0)) {\n            // Build the column set, then pre-compile the column cell templates\n            promises.push(self.grid.buildColumns()\n              .then(function() {\n                self.grid.preCompileCellTemplates();\n              }).catch(angular.noop));\n          }\n\n          $q.all(promises).then(function() {\n            // use most recent data, rather than the potentially outdated data passed into watcher handler\n            self.grid.modifyRows(mostRecentData)\n              .then(function () {\n                // if (self.viewport) {\n                  self.grid.redrawInPlace(true);\n                // }\n\n                $scope.$evalAsync(function() {\n                  self.grid.refreshCanvas(true);\n                  self.grid.callDataChangeCallbacks(uiGridConstants.dataChange.ROW);\n                });\n              }).catch(angular.noop);\n          }).catch(angular.noop);\n        }\n      }\n\n      var styleWatchDereg = $scope.$watch(function () { return self.grid.styleComputations; }, function() {\n        self.grid.refreshCanvas(true);\n      });\n\n      $scope.$on('$destroy', function() {\n        deregFunctions.forEach( function( deregFn ){ deregFn(); });\n        styleWatchDereg();\n      });\n\n      self.fireEvent = function(eventName, args) {\n        args = args || {};\n\n        // Add the grid to the event arguments if it's not there\n        if (angular.isUndefined(args.grid)) {\n          args.grid = self.grid;\n        }\n\n        $scope.$broadcast(eventName, args);\n      };\n\n      self.innerCompile = function innerCompile(elm) {\n        $compile(elm)($scope);\n      };\n    }]);\n\n/**\n *  @ngdoc directive\n *  @name ui.grid.directive:uiGrid\n *  @element div\n *  @restrict EA\n *  @param {Object} uiGrid Options for the grid to use\n *\n *  @description Create a very basic grid.\n *\n *  @example\n    <example module=\"app\">\n      <file name=\"app.js\">\n        var app = angular.module('app', ['ui.grid']);\n\n        app.controller('MainCtrl', ['$scope', function ($scope) {\n          $scope.data = [\n            { name: 'Bob', title: 'CEO' },\n            { name: 'Frank', title: 'Lowly Developer' }\n          ];\n        }]);\n      </file>\n      <file name=\"index.html\">\n        <div ng-controller=\"MainCtrl\">\n          <div ui-grid=\"{ data: data }\"></div>\n        </div>\n      </file>\n    </example>\n */\nangular.module('ui.grid').directive('uiGrid', uiGridDirective);\n\nuiGridDirective.$inject = ['$window', 'gridUtil', 'uiGridConstants'];\nfunction uiGridDirective($window, gridUtil, uiGridConstants) {\n  return {\n    templateUrl: 'ui-grid/ui-grid',\n    scope: {\n      uiGrid: '='\n    },\n    replace: true,\n    transclude: true,\n    controller: 'uiGridController',\n    compile: function () {\n      return {\n        post: function ($scope, $elm, $attrs, uiGridCtrl) {\n          var grid = uiGridCtrl.grid;\n          // Initialize scrollbars (TODO: move to controller??)\n          uiGridCtrl.scrollbars = [];\n          grid.element = $elm;\n\n\n          // See if the grid has a rendered width, if not, wait a bit and try again\n          var sizeCheckInterval = 100; // ms\n          var maxSizeChecks = 20; // 2 seconds total\n          var sizeChecks = 0;\n\n          // Setup (event listeners) the grid\n          setup();\n\n          // And initialize it\n          init();\n\n          // Mark rendering complete so API events can happen\n          grid.renderingComplete();\n\n          // If the grid doesn't have size currently, wait for a bit to see if it gets size\n          checkSize();\n\n          /*-- Methods --*/\n\n          function checkSize() {\n            // If the grid has no width and we haven't checked more than <maxSizeChecks> times, check again in <sizeCheckInterval> milliseconds\n            if ($elm[0].offsetWidth <= 0 && sizeChecks < maxSizeChecks) {\n              setTimeout(checkSize, sizeCheckInterval);\n              sizeChecks++;\n            } else {\n              $scope.$applyAsync(init);\n            }\n          }\n\n          // Setup event listeners and watchers\n          function setup() {\n            var deregisterLeftWatcher, deregisterRightWatcher;\n\n            // Bind to window resize events\n            angular.element($window).on('resize', gridResize);\n\n            // Unbind from window resize events when the grid is destroyed\n            $elm.on('$destroy', function () {\n              angular.element($window).off('resize', gridResize);\n              deregisterLeftWatcher();\n              deregisterRightWatcher();\n            });\n\n            // If we add a left container after render, we need to watch and react\n            deregisterLeftWatcher = $scope.$watch(function () { return grid.hasLeftContainer();}, function (newValue, oldValue) {\n              if (newValue === oldValue) {\n                return;\n              }\n              grid.refreshCanvas(true);\n            });\n\n            // If we add a right container after render, we need to watch and react\n            deregisterRightWatcher = $scope.$watch(function () { return grid.hasRightContainer();}, function (newValue, oldValue) {\n              if (newValue === oldValue) {\n                return;\n              }\n              grid.refreshCanvas(true);\n            });\n          }\n\n          // Initialize the directive\n          function init() {\n            grid.gridWidth = $scope.gridWidth = gridUtil.elementWidth($elm);\n\n            // Default canvasWidth to the grid width, in case we don't get any column definitions to calculate it from\n            grid.canvasWidth = uiGridCtrl.grid.gridWidth;\n\n            grid.gridHeight = $scope.gridHeight = gridUtil.elementHeight($elm);\n\n            // If the grid isn't tall enough to fit a single row, it's kind of useless. Resize it to fit a minimum number of rows\n            if (grid.gridHeight - grid.scrollbarHeight <= grid.options.rowHeight && grid.options.enableMinHeightCheck) {\n              autoAdjustHeight();\n            }\n\n            // Run initial canvas refresh\n            grid.refreshCanvas(true);\n          }\n\n          // Set the grid's height ourselves in the case that its height would be unusably small\n          function autoAdjustHeight() {\n            // Figure out the new height\n            var contentHeight = grid.options.minRowsToShow * grid.options.rowHeight;\n            var headerHeight = grid.options.showHeader ? grid.options.headerRowHeight : 0;\n            var footerHeight = grid.calcFooterHeight();\n\n            var scrollbarHeight = 0;\n            if (grid.options.enableHorizontalScrollbar === uiGridConstants.scrollbars.ALWAYS) {\n              scrollbarHeight = gridUtil.getScrollbarWidth();\n            }\n\n            var maxNumberOfFilters = 0;\n            // Calculates the maximum number of filters in the columns\n            angular.forEach(grid.options.columnDefs, function(col) {\n              if (col.hasOwnProperty('filter')) {\n                if (maxNumberOfFilters < 1) {\n                    maxNumberOfFilters = 1;\n                }\n              }\n              else if (col.hasOwnProperty('filters')) {\n                if (maxNumberOfFilters < col.filters.length) {\n                    maxNumberOfFilters = col.filters.length;\n                }\n              }\n            });\n\n            if (grid.options.enableFiltering  && !maxNumberOfFilters) {\n              var allColumnsHaveFilteringTurnedOff = grid.options.columnDefs.length && grid.options.columnDefs.every(function(col) {\n                return col.enableFiltering === false;\n              });\n\n              if (!allColumnsHaveFilteringTurnedOff) {\n                maxNumberOfFilters = 1;\n              }\n            }\n\n            var filterHeight = maxNumberOfFilters * headerHeight;\n\n            var newHeight = headerHeight + contentHeight + footerHeight + scrollbarHeight + filterHeight;\n\n            $elm.css('height', newHeight + 'px');\n\n            grid.gridHeight = $scope.gridHeight = gridUtil.elementHeight($elm);\n          }\n\n          // Resize the grid on window resize events\n          function gridResize() {\n            grid.gridWidth = $scope.gridWidth = gridUtil.elementWidth($elm);\n            grid.gridHeight = $scope.gridHeight = gridUtil.elementHeight($elm);\n\n            grid.refreshCanvas(true);\n          }\n        }\n      };\n    }\n  };\n}\n})();\n\n(function(){\n  'use strict';\n\n  // TODO: rename this file to ui-grid-pinned-container.js\n\n  angular.module('ui.grid').directive('uiGridPinnedContainer', ['gridUtil', function (gridUtil) {\n    return {\n      restrict: 'EA',\n      replace: true,\n      template: '<div class=\"ui-grid-pinned-container\"><div ui-grid-render-container container-id=\"side\" row-container-name=\"\\'body\\'\" col-container-name=\"side\" bind-scroll-vertical=\"true\" class=\"{{ side }} ui-grid-render-container-{{ side }}\"></div></div>',\n      scope: {\n        side: '=uiGridPinnedContainer'\n      },\n      require: '^uiGrid',\n      compile: function compile() {\n        return {\n          post: function ($scope, $elm, $attrs, uiGridCtrl) {\n            // gridUtil.logDebug('ui-grid-pinned-container ' + $scope.side + ' link');\n\n            var grid = uiGridCtrl.grid;\n\n            var myWidth = 0;\n\n            $elm.addClass('ui-grid-pinned-container-' + $scope.side);\n\n            // Monkey-patch the viewport width function\n            if ($scope.side === 'left' || $scope.side === 'right') {\n              grid.renderContainers[$scope.side].getViewportWidth = monkeyPatchedGetViewportWidth;\n            }\n\n            function monkeyPatchedGetViewportWidth() {\n              /*jshint validthis: true */\n              var self = this;\n\n              var viewportWidth = 0;\n              self.visibleColumnCache.forEach(function (column) {\n                viewportWidth += column.drawnWidth;\n              });\n\n              var adjustment = self.getViewportAdjustment();\n\n              viewportWidth = viewportWidth + adjustment.width;\n\n              return viewportWidth;\n            }\n\n            function updateContainerWidth() {\n              if ($scope.side === 'left' || $scope.side === 'right') {\n                var cols = grid.renderContainers[$scope.side].visibleColumnCache;\n                var width = 0;\n                for (var i = 0; i < cols.length; i++) {\n                  var col = cols[i];\n                  width += col.drawnWidth || col.width || 0;\n                }\n\n                return width;\n              }\n            }\n\n            function updateContainerDimensions() {\n              var ret = '';\n\n              // Column containers\n              if ($scope.side === 'left' || $scope.side === 'right') {\n                myWidth = updateContainerWidth();\n\n                // gridUtil.logDebug('myWidth', myWidth);\n\n                // TODO(c0bra): Subtract sum of col widths from grid viewport width and update it\n                $elm.attr('style', null);\n\n             //   var myHeight = grid.renderContainers.body.getViewportHeight(); // + grid.horizontalScrollbarHeight;\n\n                ret += '.grid' + grid.id + ' .ui-grid-pinned-container-' + $scope.side + ', .grid' + grid.id + ' .ui-grid-pinned-container-' + $scope.side + ' .ui-grid-render-container-' + $scope.side + ' .ui-grid-viewport { width: ' + myWidth + 'px; } ';\n              }\n\n              return ret;\n            }\n\n            grid.renderContainers.body.registerViewportAdjuster(function (adjustment) {\n              myWidth = updateContainerWidth();\n\n              // Subtract our own width\n              adjustment.width -= myWidth;\n              adjustment.side = $scope.side;\n\n              return adjustment;\n            });\n\n            // Register style computation to adjust for columns in `side`'s render container\n            grid.registerStyleComputation({\n              priority: 15,\n              func: updateContainerDimensions\n            });\n          }\n        };\n      }\n    };\n  }]);\n})();\n\n(function(){\n\nangular.module('ui.grid')\n.factory('Grid', ['$q', '$compile', '$parse', 'gridUtil', 'uiGridConstants', 'GridOptions', 'GridColumn', 'GridRow', 'GridApi', 'rowSorter', 'rowSearcher', 'GridRenderContainer', '$timeout','ScrollEvent',\n    function($q, $compile, $parse, gridUtil, uiGridConstants, GridOptions, GridColumn, GridRow, GridApi, rowSorter, rowSearcher, GridRenderContainer, $timeout, ScrollEvent) {\n\n  /**\n   * @ngdoc object\n   * @name ui.grid.core.api:PublicApi\n   * @description Public Api for the core grid features\n   *\n   */\n\n  /**\n   * @ngdoc function\n   * @name ui.grid.class:Grid\n   * @description Grid is the main viewModel.  Any properties or methods needed to maintain state are defined in\n   * this prototype.  One instance of Grid is created per Grid directive instance.\n   * @param {object} options Object map of options to pass into the grid. An 'id' property is expected.\n   */\n  var Grid = function Grid(options) {\n    var self = this;\n    // Get the id out of the options, then remove it\n    if (options !== undefined && typeof(options.id) !== 'undefined' && options.id) {\n      if (!/^[_a-zA-Z0-9-]+$/.test(options.id)) {\n        throw new Error(\"Grid id '\" + options.id + '\" is invalid. It must follow CSS selector syntax rules.');\n      }\n    }\n    else {\n      throw new Error('No ID provided. An ID must be given when creating a grid.');\n    }\n\n    self.id = options.id;\n    delete options.id;\n\n    // Get default options\n    self.options = GridOptions.initialize( options );\n\n    /**\n     * @ngdoc object\n     * @name appScope\n     * @propertyOf ui.grid.class:Grid\n     * @description reference to the application scope (the parent scope of the ui-grid element).  Assigned in ui-grid controller\n     * <br/>\n     * use gridOptions.appScopeProvider to override the default assignment of $scope.$parent with any reference\n     */\n    self.appScope = self.options.appScopeProvider;\n\n    self.headerHeight = self.options.headerRowHeight;\n\n\n    /**\n     * @ngdoc object\n     * @name footerHeight\n     * @propertyOf ui.grid.class:Grid\n     * @description returns the total footer height gridFooter + columnFooter\n     */\n    self.footerHeight = self.calcFooterHeight();\n\n\n    /**\n     * @ngdoc object\n     * @name columnFooterHeight\n     * @propertyOf ui.grid.class:Grid\n     * @description returns the total column footer height\n     */\n    self.columnFooterHeight = self.calcColumnFooterHeight();\n\n    self.rtl = false;\n    self.gridHeight = 0;\n    self.gridWidth = 0;\n    self.columnBuilders = [];\n    self.rowBuilders = [];\n    self.rowsProcessors = [];\n    self.columnsProcessors = [];\n    self.styleComputations = [];\n    self.viewportAdjusters = [];\n    self.rowHeaderColumns = [];\n    self.dataChangeCallbacks = {};\n    self.verticalScrollSyncCallBackFns = {};\n    self.horizontalScrollSyncCallBackFns = {};\n\n    // self.visibleRowCache = [];\n\n    // Set of 'render' containers for self grid, which can render sets of rows\n    self.renderContainers = {};\n\n    // Create a\n    self.renderContainers.body = new GridRenderContainer('body', self);\n\n    self.cellValueGetterCache = {};\n\n    // Cached function to use with custom row templates\n    self.getRowTemplateFn = null;\n\n\n    //representation of the rows on the grid.\n    //these are wrapped references to the actual data rows (options.data)\n    self.rows = [];\n\n    //represents the columns on the grid\n    self.columns = [];\n\n    /**\n     * @ngdoc boolean\n     * @name isScrollingVertically\n     * @propertyOf ui.grid.class:Grid\n     * @description set to true when Grid is scrolling vertically. Set to false via debounced method\n     */\n    self.isScrollingVertically = false;\n\n    /**\n     * @ngdoc boolean\n     * @name isScrollingHorizontally\n     * @propertyOf ui.grid.class:Grid\n     * @description set to true when Grid is scrolling horizontally. Set to false via debounced method\n     */\n    self.isScrollingHorizontally = false;\n\n    /**\n     * @ngdoc property\n     * @name scrollDirection\n     * @propertyOf ui.grid.class:Grid\n     * @description set one of the {@link ui.grid.service:uiGridConstants#properties_scrollDirection uiGridConstants.scrollDirection}\n     *  values (UP, DOWN, LEFT, RIGHT, NONE), which tells us which direction we are scrolling.\n     * Set to NONE via debounced method\n     */\n    self.scrollDirection = uiGridConstants.scrollDirection.NONE;\n\n    //if true, grid will not respond to any scroll events\n    self.disableScrolling = false;\n\n\n    function vertical (scrollEvent) {\n      self.isScrollingVertically = false;\n      self.api.core.raise.scrollEnd(scrollEvent);\n      self.scrollDirection = uiGridConstants.scrollDirection.NONE;\n    }\n\n    var debouncedVertical = gridUtil.debounce(vertical, self.options.scrollDebounce);\n    var debouncedVerticalMinDelay = gridUtil.debounce(vertical, 0);\n\n    function horizontal (scrollEvent) {\n      self.isScrollingHorizontally = false;\n      self.api.core.raise.scrollEnd(scrollEvent);\n      self.scrollDirection = uiGridConstants.scrollDirection.NONE;\n    }\n\n    var debouncedHorizontal = gridUtil.debounce(horizontal, self.options.scrollDebounce);\n    var debouncedHorizontalMinDelay = gridUtil.debounce(horizontal, 0);\n\n\n    /**\n     * @ngdoc function\n     * @name flagScrollingVertically\n     * @methodOf ui.grid.class:Grid\n     * @description sets isScrollingVertically to true and sets it to false in a debounced function\n     */\n    self.flagScrollingVertically = function(scrollEvent) {\n      if (!self.isScrollingVertically && !self.isScrollingHorizontally) {\n        self.api.core.raise.scrollBegin(scrollEvent);\n      }\n      self.isScrollingVertically = true;\n      if (self.options.scrollDebounce === 0 || !scrollEvent.withDelay) {\n        debouncedVerticalMinDelay(scrollEvent);\n      }\n      else {\n        debouncedVertical(scrollEvent);\n      }\n    };\n\n    /**\n     * @ngdoc function\n     * @name flagScrollingHorizontally\n     * @methodOf ui.grid.class:Grid\n     * @description sets isScrollingHorizontally to true and sets it to false in a debounced function\n     */\n    self.flagScrollingHorizontally = function(scrollEvent) {\n      if (!self.isScrollingVertically && !self.isScrollingHorizontally) {\n        self.api.core.raise.scrollBegin(scrollEvent);\n      }\n      self.isScrollingHorizontally = true;\n      if (self.options.scrollDebounce === 0 || !scrollEvent.withDelay) {\n        debouncedHorizontalMinDelay(scrollEvent);\n      }\n      else {\n        debouncedHorizontal(scrollEvent);\n      }\n    };\n\n    self.scrollbarHeight = 0;\n    self.scrollbarWidth = 0;\n    if (self.options.enableHorizontalScrollbar !== uiGridConstants.scrollbars.NEVER) {\n      self.scrollbarHeight = gridUtil.getScrollbarWidth();\n    }\n\n    if (self.options.enableVerticalScrollbar !== uiGridConstants.scrollbars.NEVER) {\n      self.scrollbarWidth = gridUtil.getScrollbarWidth();\n    }\n\n\n\n    self.api = new GridApi(self);\n\n    /**\n     * @ngdoc function\n     * @name refresh\n     * @methodOf ui.grid.core.api:PublicApi\n     * @description Refresh the rendered grid on screen.\n     * The refresh method re-runs both the columnProcessors and the\n     * rowProcessors, as well as calling refreshCanvas to update all\n     * the grid sizing.  In general you should prefer to use queueGridRefresh\n     * instead, which is basically a debounced version of refresh.\n     *\n     * If you only want to resize the grid, not regenerate all the rows\n     * and columns, you should consider directly calling refreshCanvas instead.\n     *\n     * @param {boolean} [rowsAltered] Optional flag for refreshing when the number of rows has changed\n     */\n    self.api.registerMethod( 'core', 'refresh', this.refresh );\n\n    /**\n     * @ngdoc function\n     * @name queueGridRefresh\n     * @methodOf ui.grid.core.api:PublicApi\n     * @description Request a refresh of the rendered grid on screen, if multiple\n     * calls to queueGridRefresh are made within a digest cycle only one will execute.\n     * The refresh method re-runs both the columnProcessors and the\n     * rowProcessors, as well as calling refreshCanvas to update all\n     * the grid sizing.  In general you should prefer to use queueGridRefresh\n     * instead, which is basically a debounced version of refresh.\n     *\n     */\n    self.api.registerMethod( 'core', 'queueGridRefresh', this.queueGridRefresh );\n\n    /**\n     * @ngdoc function\n     * @name refreshRows\n     * @methodOf ui.grid.core.api:PublicApi\n     * @description Runs only the rowProcessors, columns remain as they were.\n     * It then calls redrawInPlace and refreshCanvas, which adjust the grid sizing.\n     * @returns {promise} promise that is resolved when render completes?\n     *\n     */\n    self.api.registerMethod( 'core', 'refreshRows', this.refreshRows );\n\n    /**\n     * @ngdoc function\n     * @name queueRefresh\n     * @methodOf ui.grid.core.api:PublicApi\n     * @description Requests execution of refreshCanvas, if multiple requests are made\n     * during a digest cycle only one will run.  RefreshCanvas updates the grid sizing.\n     * @returns {promise} promise that is resolved when render completes?\n     *\n     */\n    self.api.registerMethod( 'core', 'queueRefresh', this.queueRefresh );\n\n    /**\n     * @ngdoc function\n     * @name handleWindowResize\n     * @methodOf ui.grid.core.api:PublicApi\n     * @description Trigger a grid resize, normally this would be picked\n     * up by a watch on window size, but in some circumstances it is necessary\n     * to call this manually\n     * @returns {promise} promise that is resolved when render completes?\n     *\n     */\n    self.api.registerMethod( 'core', 'handleWindowResize', this.handleWindowResize );\n\n\n    /**\n     * @ngdoc function\n     * @name addRowHeaderColumn\n     * @methodOf ui.grid.core.api:PublicApi\n     * @description adds a row header column to the grid\n     * @param {object} column def\n     * @param {number} order Determines order of header column on grid.  Lower order means header\n     * is positioned to the left of higher order headers\n     *\n     */\n    self.api.registerMethod( 'core', 'addRowHeaderColumn', this.addRowHeaderColumn );\n\n    /**\n     * @ngdoc function\n     * @name scrollToIfNecessary\n     * @methodOf ui.grid.core.api:PublicApi\n     * @description Scrolls the grid to make a certain row and column combo visible,\n     *   in the case that it is not completely visible on the screen already.\n     * @param {GridRow} gridRow row to make visible\n     * @param {GridColumn} gridCol column to make visible\n     * @returns {promise} a promise that is resolved when scrolling is complete\n     *\n     */\n    self.api.registerMethod( 'core', 'scrollToIfNecessary', function(gridRow, gridCol) { return self.scrollToIfNecessary(gridRow, gridCol);} );\n\n    /**\n     * @ngdoc function\n     * @name scrollTo\n     * @methodOf ui.grid.core.api:PublicApi\n     * @description Scroll the grid such that the specified\n     * row and column is in view\n     * @param {object} rowEntity gridOptions.data[] array instance to make visible\n     * @param {object} colDef to make visible\n     * @returns {promise} a promise that is resolved after any scrolling is finished\n     */\n    self.api.registerMethod( 'core', 'scrollTo', function (rowEntity, colDef) { return self.scrollTo(rowEntity, colDef);}  );\n\n    /**\n     * @ngdoc function\n     * @name registerRowsProcessor\n     * @methodOf ui.grid.core.api:PublicApi\n     * @description\n     * Register a \"rows processor\" function. When the rows are updated,\n     * the grid calls each registered \"rows processor\", which has a chance\n     * to alter the set of rows (sorting, etc) as long as the count is not\n     * modified.\n     *\n     * @param {function(renderedRowsToProcess, columns )} processorFunction rows processor function, which\n     * is run in the context of the grid (i.e. this for the function will be the grid), and must\n     * return the updated rows list, which is passed to the next processor in the chain\n     * @param {number} priority the priority of this processor.  In general we try to do them in 100s to leave room\n     * for other people to inject rows processors at intermediate priorities.  Lower priority rowsProcessors run earlier.\n     *\n     * At present allRowsVisible is running at 50, sort manipulations running at 60-65, filter is running at 100,\n     * sort is at 200, grouping and treeview at 400-410, selectable rows at 500, pagination at 900 (pagination will generally want to be last)\n     */\n    self.api.registerMethod( 'core', 'registerRowsProcessor', this.registerRowsProcessor  );\n\n    /**\n     * @ngdoc function\n     * @name registerColumnsProcessor\n     * @methodOf ui.grid.core.api:PublicApi\n     * @description\n     * Register a \"columns processor\" function. When the columns are updated,\n     * the grid calls each registered \"columns processor\", which has a chance\n     * to alter the set of columns as long as the count is not\n     * modified.\n     *\n     * @param {function(renderedColumnsToProcess, rows )} processorFunction columns processor function, which\n     * is run in the context of the grid (i.e. this for the function will be the grid), and must\n     * return the updated columns list, which is passed to the next processor in the chain\n     * @param {number} priority the priority of this processor.  In general we try to do them in 100s to leave room\n     * for other people to inject columns processors at intermediate priorities.  Lower priority columnsProcessors run earlier.\n     *\n     * At present allRowsVisible is running at 50, filter is running at 100, sort is at 200, grouping at 400, selectable rows at 500, pagination at 900 (pagination will generally want to be last)\n     */\n    self.api.registerMethod( 'core', 'registerColumnsProcessor', this.registerColumnsProcessor  );\n\n\n\n    /**\n     * @ngdoc function\n     * @name sortHandleNulls\n     * @methodOf ui.grid.core.api:PublicApi\n     * @description A null handling method that can be used when building custom sort\n     * functions\n     * @example\n     * <pre>\n     *   mySortFn = function(a, b) {\n     *   var nulls = $scope.gridApi.core.sortHandleNulls(a, b);\n     *   if ( nulls !== null ){\n     *     return nulls;\n     *   } else {\n     *     // your code for sorting here\n     *   };\n     * </pre>\n     * @param {object} a sort value a\n     * @param {object} b sort value b\n     * @returns {number} null if there were no nulls/undefineds, otherwise returns\n     * a sort value that should be passed back from the sort function\n     *\n     */\n    self.api.registerMethod( 'core', 'sortHandleNulls', rowSorter.handleNulls );\n\n\n    /**\n     * @ngdoc function\n     * @name sortChanged\n     * @methodOf  ui.grid.core.api:PublicApi\n     * @description The sort criteria on one or more columns has\n     * changed.  Provides as parameters the grid and the output of\n     * getColumnSorting, which is an array of gridColumns\n     * that have sorting on them, sorted in priority order.\n     *\n     * @param {$scope} scope The scope of the controller. This is used to deregister this event when the scope is destroyed.\n     * @param {Function} callBack Will be called when the event is emited. The function passes back the grid and an array of\n     * columns with sorts on them, in priority order.\n     *\n     * @example\n     * <pre>\n     *      gridApi.core.on.sortChanged( $scope, function(grid, sortColumns){\n     *        // do something\n     *      });\n     * </pre>\n     */\n    self.api.registerEvent( 'core', 'sortChanged' );\n\n      /**\n     * @ngdoc function\n     * @name columnVisibilityChanged\n     * @methodOf  ui.grid.core.api:PublicApi\n     * @description The visibility of a column has changed,\n     * the column itself is passed out as a parameter of the event.\n     *\n     * @param {$scope} scope The scope of the controller. This is used to deregister this event when the scope is destroyed.\n     * @param {Function} callBack Will be called when the event is emited. The function passes back the GridCol that has changed.\n     *\n     * @example\n     * <pre>\n     *      gridApi.core.on.columnVisibilityChanged( $scope, function (column) {\n     *        // do something\n     *      } );\n     * </pre>\n     */\n    self.api.registerEvent( 'core', 'columnVisibilityChanged' );\n\n    /**\n     * @ngdoc method\n     * @name notifyDataChange\n     * @methodOf ui.grid.core.api:PublicApi\n     * @description Notify the grid that a data or config change has occurred,\n     * where that change isn't something the grid was otherwise noticing.  This\n     * might be particularly relevant where you've changed values within the data\n     * and you'd like cell classes to be re-evaluated, or changed config within\n     * the columnDef and you'd like headerCellClasses to be re-evaluated.\n     * @param {string} type one of the\n     * {@link ui.grid.service:uiGridConstants#properties_dataChange uiGridConstants.dataChange}\n     * values (ALL, ROW, EDIT, COLUMN, OPTIONS), which tells us which refreshes to fire.\n     *\n     * - ALL: listeners fired on any of these events, fires listeners on all events.\n     * - ROW: fired when a row is added or removed.\n     * - EDIT: fired when the data in a cell is edited.\n     * - COLUMN: fired when the column definitions are modified.\n     * - OPTIONS: fired when the grid options are modified.\n     */\n    self.api.registerMethod( 'core', 'notifyDataChange', this.notifyDataChange );\n\n    /**\n     * @ngdoc method\n     * @name clearAllFilters\n     * @methodOf ui.grid.core.api:PublicApi\n     * @description Clears all filters and optionally refreshes the visible rows.\n     * @param {object} refreshRows Defaults to true.\n     * @param {object} clearConditions Defaults to false.\n     * @param {object} clearFlags Defaults to false.\n     * @returns {promise} If `refreshRows` is true, returns a promise of the rows refreshing.\n     */\n    self.api.registerMethod('core', 'clearAllFilters', this.clearAllFilters);\n\n    self.registerDataChangeCallback( self.columnRefreshCallback, [uiGridConstants.dataChange.COLUMN]);\n    self.registerDataChangeCallback( self.processRowsCallback, [uiGridConstants.dataChange.EDIT]);\n    self.registerDataChangeCallback( self.updateFooterHeightCallback, [uiGridConstants.dataChange.OPTIONS]);\n\n    self.registerStyleComputation({\n      priority: 10,\n      func: self.getFooterStyles\n    });\n  };\n\n   Grid.prototype.calcFooterHeight = function () {\n     if (!this.hasFooter()) {\n       return 0;\n     }\n\n     var height = 0;\n     if (this.options.showGridFooter) {\n       height += this.options.gridFooterHeight;\n     }\n\n     height += this.calcColumnFooterHeight();\n\n     return height;\n   };\n\n   Grid.prototype.calcColumnFooterHeight = function () {\n     var height = 0;\n\n     if (this.options.showColumnFooter) {\n       height += this.options.columnFooterHeight;\n     }\n\n     return height;\n   };\n\n   Grid.prototype.getFooterStyles = function () {\n     var style = '.grid' + this.id + ' .ui-grid-footer-aggregates-row { height: ' + this.options.columnFooterHeight + 'px; }';\n     style += ' .grid' + this.id + ' .ui-grid-footer-info { height: ' + this.options.gridFooterHeight + 'px; }';\n     return style;\n   };\n\n  Grid.prototype.hasFooter = function () {\n   return this.options.showGridFooter || this.options.showColumnFooter;\n  };\n\n  /**\n   * @ngdoc function\n   * @name isRTL\n   * @methodOf ui.grid.class:Grid\n   * @description Returns true if grid is RightToLeft\n   */\n  Grid.prototype.isRTL = function () {\n    return this.rtl;\n  };\n\n\n  /**\n   * @ngdoc function\n   * @name registerColumnBuilder\n   * @methodOf ui.grid.class:Grid\n   * @description When the build creates columns from column definitions, the columnbuilders will be called to add\n   * additional properties to the column.\n   * @param {function(colDef, col, gridOptions)} columnBuilder function to be called\n   */\n  Grid.prototype.registerColumnBuilder = function registerColumnBuilder(columnBuilder) {\n    this.columnBuilders.push(columnBuilder);\n  };\n\n  /**\n   * @ngdoc function\n   * @name buildColumnDefsFromData\n   * @methodOf ui.grid.class:Grid\n   * @description Populates columnDefs from the provided data\n   * @param {function(colDef, col, gridOptions)} rowBuilder function to be called\n   */\n  Grid.prototype.buildColumnDefsFromData = function (dataRows){\n    this.options.columnDefs =  gridUtil.getColumnsFromData(dataRows, this.options.excludeProperties);\n  };\n\n  /**\n   * @ngdoc function\n   * @name registerRowBuilder\n   * @methodOf ui.grid.class:Grid\n   * @description When the build creates rows from gridOptions.data, the rowBuilders will be called to add\n   * additional properties to the row.\n   * @param {function(row, gridOptions)} rowBuilder function to be called\n   */\n  Grid.prototype.registerRowBuilder = function registerRowBuilder(rowBuilder) {\n    this.rowBuilders.push(rowBuilder);\n  };\n\n\n  /**\n   * @ngdoc function\n   * @name registerDataChangeCallback\n   * @methodOf ui.grid.class:Grid\n   * @description When a data change occurs, the data change callbacks of the specified type\n   * will be called.  The rules are:\n   *\n   * - when the data watch fires, that is considered a ROW change (the data watch only notices\n   *   added or removed rows)\n   * - when the api is called to inform us of a change, the declared type of that change is used\n   * - when a cell edit completes, the EDIT callbacks are triggered\n   * - when the columnDef watch fires, the COLUMN callbacks are triggered\n   * - when the options watch fires, the OPTIONS callbacks are triggered\n   *\n   * For a given event:\n   * - ALL calls ROW, EDIT, COLUMN, OPTIONS and ALL callbacks\n   * - ROW calls ROW and ALL callbacks\n   * - EDIT calls EDIT and ALL callbacks\n   * - COLUMN calls COLUMN and ALL callbacks\n   * - OPTIONS calls OPTIONS and ALL callbacks\n   *\n   * @param {function(grid)} callback function to be called\n   * @param {array} types the types of data change you want to be informed of.  Values from\n   * the {@link ui.grid.service:uiGridConstants#properties_dataChange uiGridConstants.dataChange}\n   *  values ( ALL, EDIT, ROW, COLUMN, OPTIONS ).  Optional and defaults to ALL\n   * @returns {function} deregister function - a function that can be called to deregister this callback\n   */\n  Grid.prototype.registerDataChangeCallback = function registerDataChangeCallback(callback, types, _this) {\n    var uid = gridUtil.nextUid();\n    if ( !types ){\n      types = [uiGridConstants.dataChange.ALL];\n    }\n    if ( !Array.isArray(types)){\n      gridUtil.logError(\"Expected types to be an array or null in registerDataChangeCallback, value passed was: \" + types );\n    }\n    this.dataChangeCallbacks[uid] = { callback: callback, types: types, _this:_this };\n\n    var self = this;\n    var deregisterFunction = function() {\n      delete self.dataChangeCallbacks[uid];\n    };\n    return deregisterFunction;\n  };\n\n  /**\n   * @ngdoc function\n   * @name callDataChangeCallbacks\n   * @methodOf ui.grid.class:Grid\n   * @description Calls the callbacks based on the type of data change that\n   * has occurred. Always calls the ALL callbacks, calls the ROW, EDIT, COLUMN and OPTIONS callbacks if the\n   * event type is matching, or if the type is ALL.\n   * @param {string} type the type of event that occurred - one of the\n   * {@link ui.grid.service:uiGridConstants#properties_dataChange uiGridConstants.dataChange}\n   *  values (ALL, ROW, EDIT, COLUMN, OPTIONS)\n   */\n  Grid.prototype.callDataChangeCallbacks = function callDataChangeCallbacks(type, options) {\n    angular.forEach( this.dataChangeCallbacks, function( callback, uid ){\n      if ( callback.types.indexOf( uiGridConstants.dataChange.ALL ) !== -1 ||\n           callback.types.indexOf( type ) !== -1 ||\n           type === uiGridConstants.dataChange.ALL ) {\n        if (callback._this) {\n           callback.callback.apply(callback._this, this, options);\n        }\n        else {\n          callback.callback(this, options);\n        }\n      }\n    }, this);\n  };\n\n  /**\n   * @ngdoc function\n   * @name notifyDataChange\n   * @methodOf ui.grid.class:Grid\n   * @description Notifies us that a data change has occurred, used in the public\n   * api for users to tell us when they've changed data or some other event that\n   * our watches cannot pick up\n   * @param {string} type the type of event that occurred - one of the\n   * uiGridConstants.dataChange values (ALL, ROW, EDIT, COLUMN, OPTIONS)\n   *\n   * - ALL: listeners fired on any of these events, fires listeners on all events.\n   * - ROW: fired when a row is added or removed.\n   * - EDIT: fired when the data in a cell is edited.\n   * - COLUMN: fired when the column definitions are modified.\n   * - OPTIONS: fired when the grid options are modified.\n   */\n  Grid.prototype.notifyDataChange = function notifyDataChange(type) {\n    var constants = uiGridConstants.dataChange;\n    if ( type === constants.ALL ||\n         type === constants.COLUMN ||\n         type === constants.EDIT ||\n         type === constants.ROW ||\n         type === constants.OPTIONS ){\n      this.callDataChangeCallbacks( type );\n    } else {\n      gridUtil.logError(\"Notified of a data change, but the type was not recognised, so no action taken, type was: \" + type);\n    }\n  };\n\n\n  /**\n   * @ngdoc function\n   * @name columnRefreshCallback\n   * @methodOf ui.grid.class:Grid\n   * @description refreshes the grid when a column refresh\n   * is notified, which triggers handling of the visible flag.\n   * This is called on uiGridConstants.dataChange.COLUMN, and is\n   * registered as a dataChangeCallback in grid.js\n   * @param {object} grid The grid object.\n   * @param {object} options Any options passed into the callback.\n   */\n  Grid.prototype.columnRefreshCallback = function columnRefreshCallback(grid, options){\n    grid.buildColumns(options);\n    grid.queueGridRefresh();\n  };\n\n\n  /**\n   * @ngdoc function\n   * @name processRowsCallback\n   * @methodOf ui.grid.class:Grid\n   * @description calls the row processors, specifically\n   * intended to reset the sorting when an edit is called,\n   * registered as a dataChangeCallback on uiGridConstants.dataChange.EDIT\n   * @param {string} name column name\n   */\n  Grid.prototype.processRowsCallback = function processRowsCallback( grid ){\n    grid.queueGridRefresh();\n  };\n\n\n  /**\n   * @ngdoc function\n   * @name updateFooterHeightCallback\n   * @methodOf ui.grid.class:Grid\n   * @description recalculates the footer height,\n   * registered as a dataChangeCallback on uiGridConstants.dataChange.OPTIONS\n   * @param {string} name column name\n   */\n  Grid.prototype.updateFooterHeightCallback = function updateFooterHeightCallback( grid ){\n    grid.footerHeight = grid.calcFooterHeight();\n    grid.columnFooterHeight = grid.calcColumnFooterHeight();\n  };\n\n\n  /**\n   * @ngdoc function\n   * @name getColumn\n   * @methodOf ui.grid.class:Grid\n   * @description returns a grid column for the column name\n   * @param {string} name column name\n   */\n  Grid.prototype.getColumn = function getColumn(name) {\n    var columns = this.columns.filter(function (column) {\n      return column.colDef.name === name;\n    });\n    return columns.length > 0 ? columns[0] : null;\n  };\n\n  /**\n   * @ngdoc function\n   * @name getColDef\n   * @methodOf ui.grid.class:Grid\n   * @description returns a grid colDef for the column name\n   * @param {string} name column.field\n   */\n  Grid.prototype.getColDef = function getColDef(name) {\n    var colDefs = this.options.columnDefs.filter(function (colDef) {\n      return colDef.name === name;\n    });\n    return colDefs.length > 0 ? colDefs[0] : null;\n  };\n\n  /**\n   * @ngdoc function\n   * @name assignTypes\n   * @methodOf ui.grid.class:Grid\n   * @description uses the first row of data to assign colDef.type for any types not defined.\n   */\n  /**\n   * @ngdoc property\n   * @name type\n   * @propertyOf ui.grid.class:GridOptions.columnDef\n   * @description the type of the column, used in sorting.  If not provided then the\n   * grid will guess the type.  Add this only if the grid guessing is not to your\n   * satisfaction.  One of:\n   * - 'string'\n   * - 'boolean'\n   * - 'number'\n   * - 'date'\n   * - 'object'\n   * - 'numberStr'\n   * Note that if you choose date, your dates should be in a javascript date type\n   *\n   */\n  Grid.prototype.assignTypes = function(){\n    var self = this;\n    self.options.columnDefs.forEach(function (colDef, index) {\n\n      //Assign colDef type if not specified\n      if (!colDef.type) {\n        var col = new GridColumn(colDef, index, self);\n        var firstRow = self.rows.length > 0 ? self.rows[0] : null;\n        if (firstRow) {\n          colDef.type = gridUtil.guessType(self.getCellValue(firstRow, col));\n        }\n        else {\n          colDef.type = 'string';\n        }\n      }\n    });\n  };\n\n\n  /**\n   * @ngdoc function\n   * @name isRowHeaderColumn\n   * @methodOf ui.grid.class:Grid\n   * @description returns true if the column is a row Header\n   * @param {object} column column\n   */\n  Grid.prototype.isRowHeaderColumn = function isRowHeaderColumn(column) {\n    return this.rowHeaderColumns.indexOf(column) !== -1;\n  };\n\n  /**\n  * @ngdoc function\n  * @name addRowHeaderColumn\n  * @methodOf ui.grid.class:Grid\n  * @description adds a row header column to the grid\n  * @param {object} colDef Column definition object.\n  * @param {float} order Number that indicates where the column should be placed in the grid.\n  * @param {boolean} stopColumnBuild Prevents the buildColumn callback from being triggered. This is useful to improve\n  * performance of the grid during initial load.\n  */\n  Grid.prototype.addRowHeaderColumn = function addRowHeaderColumn(colDef, order, stopColumnBuild) {\n    var self = this;\n\n    //default order\n    if (order === undefined) {\n      order = 0;\n    }\n\n    var rowHeaderCol = new GridColumn(colDef, gridUtil.nextUid(), self);\n    rowHeaderCol.isRowHeader = true;\n    if (self.isRTL()) {\n      self.createRightContainer();\n      rowHeaderCol.renderContainer = 'right';\n    }\n    else {\n      self.createLeftContainer();\n      rowHeaderCol.renderContainer = 'left';\n    }\n\n    // relies on the default column builder being first in array, as it is instantiated\n    // as part of grid creation\n    self.columnBuilders[0](colDef,rowHeaderCol,self.options)\n      .then(function(){\n        rowHeaderCol.enableFiltering = false;\n        rowHeaderCol.enableSorting = false;\n        rowHeaderCol.enableHiding = false;\n        rowHeaderCol.headerPriority = order;\n        self.rowHeaderColumns.push(rowHeaderCol);\n        self.rowHeaderColumns = self.rowHeaderColumns.sort(function (a, b) {\n          return a.headerPriority - b.headerPriority;\n        });\n\n        if (!stopColumnBuild) {\n          self.buildColumns()\n            .then(function() {\n              self.preCompileCellTemplates();\n              self.queueGridRefresh();\n            }).catch(angular.noop);\n        }\n      }).catch(angular.noop);\n  };\n\n  /**\n   * @ngdoc function\n   * @name getOnlyDataColumns\n   * @methodOf ui.grid.class:Grid\n   * @description returns all columns except for rowHeader columns\n   */\n  Grid.prototype.getOnlyDataColumns = function getOnlyDataColumns() {\n    var self = this;\n    var cols = [];\n    self.columns.forEach(function (col) {\n      if (self.rowHeaderColumns.indexOf(col) === -1) {\n        cols.push(col);\n      }\n    });\n    return cols;\n  };\n\n  /**\n   * @ngdoc function\n   * @name buildColumns\n   * @methodOf ui.grid.class:Grid\n   * @description creates GridColumn objects from the columnDefinition.  Calls each registered\n   * columnBuilder to further process the column\n   * @param {object} options  An object contains options to use when building columns\n   *\n   * * **orderByColumnDefs**: defaults to **false**. When true, `buildColumns` will reorder existing columns according to the order within the column definitions.\n   *\n   * @returns {Promise} a promise to load any needed column resources\n   */\n  Grid.prototype.buildColumns = function buildColumns(opts) {\n    var options = {\n      orderByColumnDefs: false\n    };\n\n    angular.extend(options, opts);\n\n    // gridUtil.logDebug('buildColumns');\n    var self = this;\n    var builderPromises = [];\n    var headerOffset = self.rowHeaderColumns.length;\n    var i;\n\n    // Remove any columns for which a columnDef cannot be found\n    // Deliberately don't use forEach, as it doesn't like splice being called in the middle\n    // Also don't cache columns.length, as it will change during this operation\n    for (i = 0; i < self.columns.length; i++){\n      if (!self.getColDef(self.columns[i].name)) {\n        self.columns.splice(i, 1);\n        i--;\n      }\n    }\n\n    //add row header columns to the grid columns array _after_ columns without columnDefs have been removed\n    //rowHeaderColumns is ordered by priority so insert in reverse\n    for (var j = self.rowHeaderColumns.length - 1; j >= 0; j--) {\n      self.columns.unshift(self.rowHeaderColumns[j]);\n    }\n\n\n\n    // look at each column def, and update column properties to match.  If the column def\n    // doesn't have a column, then splice in a new gridCol\n    self.options.columnDefs.forEach(function (colDef, index) {\n      self.preprocessColDef(colDef);\n      var col = self.getColumn(colDef.name);\n\n      if (!col) {\n        col = new GridColumn(colDef, gridUtil.nextUid(), self);\n        self.columns.splice(index + headerOffset, 0, col);\n      }\n      else {\n        // tell updateColumnDef that the column was pre-existing\n        col.updateColumnDef(colDef, false);\n      }\n\n      self.columnBuilders.forEach(function (builder) {\n        builderPromises.push(builder.call(self, colDef, col, self.options));\n      });\n    });\n\n    /*** Reorder columns if necessary ***/\n    if (!!options.orderByColumnDefs) {\n      // Create a shallow copy of the columns as a cache\n      var columnCache = self.columns.slice(0);\n\n      // We need to allow for the \"row headers\" when mapping from the column defs array to the columns array\n      //   If we have a row header in columns[0] and don't account for it   we'll overwrite it with the column in columnDefs[0]\n\n      // Go through all the column defs, use the shorter of columns length and colDefs.length because if a user has given two columns the same name then\n      // columns will be shorter than columnDefs.  In this situation we'll avoid an error, but the user will still get an unexpected result\n      var len = Math.min(self.options.columnDefs.length, self.columns.length);\n      for (i = 0; i < len; i++) {\n        // If the column at this index has a different name than the column at the same index in the column defs...\n        if (self.columns[i + headerOffset].name !== self.options.columnDefs[i].name) {\n          // Replace the one in the cache with the appropriate column\n          columnCache[i + headerOffset] = self.getColumn(self.options.columnDefs[i].name);\n        }\n        else {\n          // Otherwise just copy over the one from the initial columns\n          columnCache[i + headerOffset] = self.columns[i + headerOffset];\n        }\n      }\n\n      // Empty out the columns array, non-destructively\n      self.columns.length = 0;\n\n      // And splice in the updated, ordered columns from the cache\n      Array.prototype.splice.apply(self.columns, [0, 0].concat(columnCache));\n    }\n\n    return $q.all(builderPromises).then(function(){\n      if (self.rows.length > 0){\n        self.assignTypes();\n      }\n      if (options.preCompileCellTemplates) {\n        self.preCompileCellTemplates();\n      }\n    }).catch(angular.noop);\n  };\n\n  Grid.prototype.preCompileCellTemplate = function(col) {\n    var self = this;\n    var html = col.cellTemplate.replace(uiGridConstants.MODEL_COL_FIELD, self.getQualifiedColField(col));\n    html = html.replace(uiGridConstants.COL_FIELD, 'grid.getCellValue(row, col)');\n\n    col.compiledElementFn = $compile(html);\n\n    if (col.compiledElementFnDefer) {\n      col.compiledElementFnDefer.resolve(col.compiledElementFn);\n    }\n  };\n\n/**\n * @ngdoc function\n * @name preCompileCellTemplates\n * @methodOf ui.grid.class:Grid\n * @description precompiles all cell templates\n */\n  Grid.prototype.preCompileCellTemplates = function() {\n    var self = this;\n    self.columns.forEach(function (col) {\n      if ( col.cellTemplate ){\n        self.preCompileCellTemplate( col );\n      } else if ( col.cellTemplatePromise ){\n        col.cellTemplatePromise.then( function() {\n          self.preCompileCellTemplate( col );\n        }).catch(angular.noop);\n      }\n    });\n  };\n\n  /**\n   * @ngdoc function\n   * @name getGridQualifiedColField\n   * @methodOf ui.grid.class:Grid\n   * @description Returns the $parse-able accessor for a column within its $scope\n   * @param {GridColumn} col col object\n   */\n  Grid.prototype.getQualifiedColField = function (col) {\n    var base = 'row.entity';\n    if ( col.field === uiGridConstants.ENTITY_BINDING ) {\n      return base;\n    }\n    return gridUtil.preEval(base + '.' + col.field);\n  };\n\n  /**\n   * @ngdoc function\n   * @name createLeftContainer\n   * @methodOf ui.grid.class:Grid\n   * @description creates the left render container if it doesn't already exist\n   */\n  Grid.prototype.createLeftContainer = function() {\n    if (!this.hasLeftContainer()) {\n      this.renderContainers.left = new GridRenderContainer('left', this, { disableColumnOffset: true });\n    }\n  };\n\n  /**\n   * @ngdoc function\n   * @name createRightContainer\n   * @methodOf ui.grid.class:Grid\n   * @description creates the right render container if it doesn't already exist\n   */\n  Grid.prototype.createRightContainer = function() {\n    if (!this.hasRightContainer()) {\n      this.renderContainers.right = new GridRenderContainer('right', this, { disableColumnOffset: true });\n    }\n  };\n\n  /**\n   * @ngdoc function\n   * @name hasLeftContainer\n   * @methodOf ui.grid.class:Grid\n   * @description returns true if leftContainer exists\n   */\n  Grid.prototype.hasLeftContainer = function() {\n    return this.renderContainers.left !== undefined;\n  };\n\n  /**\n   * @ngdoc function\n   * @name hasRightContainer\n   * @methodOf ui.grid.class:Grid\n   * @description returns true if rightContainer exists\n   */\n  Grid.prototype.hasRightContainer = function() {\n    return this.renderContainers.right !== undefined;\n  };\n\n\n      /**\n   * undocumented function\n   * @name preprocessColDef\n   * @methodOf ui.grid.class:Grid\n   * @description defaults the name property from field to maintain backwards compatibility with 2.x\n   * validates that name or field is present\n   */\n  Grid.prototype.preprocessColDef = function preprocessColDef(colDef) {\n    var self = this;\n\n    if (!colDef.field && !colDef.name) {\n      throw new Error('colDef.name or colDef.field property is required');\n    }\n\n    //maintain backwards compatibility with 2.x\n    //field was required in 2.x.  now name is required\n    if (colDef.name === undefined && colDef.field !== undefined) {\n      // See if the column name already exists:\n      var newName = colDef.field,\n        counter = 2;\n      while (self.getColumn(newName)) {\n        newName = colDef.field + counter.toString();\n        counter++;\n      }\n      colDef.name = newName;\n    }\n  };\n\n  // Return a list of items that exist in the `n` array but not the `o` array. Uses optional property accessors passed as third & fourth parameters\n  Grid.prototype.newInN = function newInN(o, n, oAccessor, nAccessor) {\n    var self = this;\n\n    var t = [];\n    for (var i = 0; i < n.length; i++) {\n      var nV = nAccessor ? n[i][nAccessor] : n[i];\n\n      var found = false;\n      for (var j = 0; j < o.length; j++) {\n        var oV = oAccessor ? o[j][oAccessor] : o[j];\n        if (self.options.rowEquality(nV, oV)) {\n          found = true;\n          break;\n        }\n      }\n      if (!found) {\n        t.push(nV);\n      }\n    }\n\n    return t;\n  };\n\n  /**\n   * @ngdoc function\n   * @name getRow\n   * @methodOf ui.grid.class:Grid\n   * @description returns the GridRow that contains the rowEntity\n   * @param {object} rowEntity the gridOptions.data array element instance\n   * @param {array} lookInRows [optional] the rows to look in - if not provided then\n   * looks in grid.rows\n   */\n  Grid.prototype.getRow = function getRow(rowEntity, lookInRows) {\n    var self = this;\n\n    lookInRows = typeof(lookInRows) === 'undefined' ? self.rows : lookInRows;\n\n    var rows = lookInRows.filter(function (row) {\n      return self.options.rowEquality(row.entity, rowEntity);\n    });\n    return rows.length > 0 ? rows[0] : null;\n  };\n\n\n  /**\n   * @ngdoc function\n   * @name modifyRows\n   * @methodOf ui.grid.class:Grid\n   * @description creates or removes GridRow objects from the newRawData array.  Calls each registered\n   * rowBuilder to further process the row\n   * @param {array} newRawData Modified set of data\n   *\n   * This method aims to achieve three things:\n   * 1. the resulting rows array is in the same order as the newRawData, we'll call\n   * rowsProcessors immediately after to sort the data anyway\n   * 2. if we have row hashing available, we try to use the rowHash to find the row\n   * 3. no memory leaks - rows that are no longer in newRawData need to be garbage collected\n   *\n   * The basic logic flow makes use of the newRawData, oldRows and oldHash, and creates\n   * the newRows and newHash\n   *\n   * ```\n   * newRawData.forEach newEntity\n   *   if (hashing enabled)\n   *     check oldHash for newEntity\n   *   else\n   *     look for old row directly in oldRows\n   *   if !oldRowFound     // must be a new row\n   *     create newRow\n   *   append to the newRows and add to newHash\n   *   run the processors\n   * ```\n   *\n   * Rows are identified using the hashKey if configured.  If not configured, then rows\n   * are identified using the gridOptions.rowEquality function\n   *\n   * This method is useful when trying to select rows immediately after loading data without\n   * using a $timeout/$interval, e.g.:\n   *\n   *   $scope.gridOptions.data =  someData;\n   *   $scope.gridApi.grid.modifyRows($scope.gridOptions.data);\n   *   $scope.gridApi.selection.selectRow($scope.gridOptions.data[0]);\n   *\n   * OR to persist row selection after data update (e.g. rows selected, new data loaded, want\n   * originally selected rows to be re-selected))\n   */\n  Grid.prototype.modifyRows = function modifyRows(newRawData) {\n    var self = this;\n    var oldRows = self.rows.slice(0);\n    var oldRowHash = self.rowHashMap || self.createRowHashMap();\n    var allRowsSelected = true;\n    self.rowHashMap = self.createRowHashMap();\n    self.rows.length = 0;\n\n    newRawData.forEach( function( newEntity, i ) {\n      var newRow, oldRow;\n\n      if ( self.options.enableRowHashing ){\n        // if hashing is enabled, then this row will be in the hash if we already know about it\n        oldRow = oldRowHash.get( newEntity );\n      } else {\n        // otherwise, manually search the oldRows to see if we can find this row\n        oldRow = self.getRow(newEntity, oldRows);\n      }\n\n      // update newRow to have an entity\n      if ( oldRow ) {\n        newRow = oldRow;\n        newRow.entity = newEntity;\n      }\n\n      // if we didn't find the row, it must be new, so create it\n      if ( !newRow ){\n        newRow = self.processRowBuilders(new GridRow(newEntity, i, self));\n      }\n\n      self.rows.push( newRow );\n      self.rowHashMap.put( newEntity, newRow );\n      if (!newRow.isSelected) {\n        allRowsSelected = false;\n      }\n    });\n\n    if (self.selection && self.rows.length) {\n      self.selection.selectAll = allRowsSelected;\n    }\n\n    self.assignTypes();\n\n    var p1 = $q.when(self.processRowsProcessors(self.rows))\n      .then(function (renderableRows) {\n        return self.setVisibleRows(renderableRows);\n      }).catch(angular.noop);\n\n    var p2 = $q.when(self.processColumnsProcessors(self.columns))\n      .then(function (renderableColumns) {\n        return self.setVisibleColumns(renderableColumns);\n      }).catch(angular.noop);\n\n    return $q.all([p1, p2]);\n  };\n\n\n  /**\n   * Private Undocumented Method\n   * @name addRows\n   * @methodOf ui.grid.class:Grid\n   * @description adds the newRawData array of rows to the grid and calls all registered\n   * rowBuilders. this keyword will reference the grid\n   */\n  Grid.prototype.addRows = function addRows(newRawData) {\n    var self = this;\n\n    var existingRowCount = self.rows.length;\n    for (var i = 0; i < newRawData.length; i++) {\n      var newRow = self.processRowBuilders(new GridRow(newRawData[i], i + existingRowCount, self));\n\n      if (self.options.enableRowHashing) {\n        var found = self.rowHashMap.get(newRow.entity);\n        if (found) {\n          found.row = newRow;\n        }\n      }\n\n      self.rows.push(newRow);\n    }\n  };\n\n  /**\n   * @ngdoc function\n   * @name processRowBuilders\n   * @methodOf ui.grid.class:Grid\n   * @description processes all RowBuilders for the gridRow\n   * @param {GridRow} gridRow reference to gridRow\n   * @returns {GridRow} the gridRow with all additional behavior added\n   */\n  Grid.prototype.processRowBuilders = function processRowBuilders(gridRow) {\n    var self = this;\n\n    self.rowBuilders.forEach(function (builder) {\n      builder.call(self, gridRow, self.options);\n    });\n\n    return gridRow;\n  };\n\n  /**\n   * @ngdoc function\n   * @name registerStyleComputation\n   * @methodOf ui.grid.class:Grid\n   * @description registered a styleComputation function\n   *\n   * If the function returns a value it will be appended into the grid's `<style>` block\n   * @param {function($scope)} styleComputationInfo function\n   */\n  Grid.prototype.registerStyleComputation = function registerStyleComputation(styleComputationInfo) {\n    this.styleComputations.push(styleComputationInfo);\n  };\n\n\n  // NOTE (c0bra): We already have rowBuilders. I think these do exactly the same thing...\n  // Grid.prototype.registerRowFilter = function(filter) {\n  //   // TODO(c0bra): validate filter?\n\n  //   this.rowFilters.push(filter);\n  // };\n\n  // Grid.prototype.removeRowFilter = function(filter) {\n  //   var idx = this.rowFilters.indexOf(filter);\n\n  //   if (typeof(idx) !== 'undefined' && idx !== undefined) {\n  //     this.rowFilters.slice(idx, 1);\n  //   }\n  // };\n\n  // Grid.prototype.processRowFilters = function(rows) {\n  //   var self = this;\n  //   self.rowFilters.forEach(function (filter) {\n  //     filter.call(self, rows);\n  //   });\n  // };\n\n\n  /**\n   * @ngdoc function\n   * @name registerRowsProcessor\n   * @methodOf ui.grid.class:Grid\n   * @description\n   *\n   * Register a \"rows processor\" function. When the rows are updated,\n   * the grid calls each registered \"rows processor\", which has a chance\n   * to alter the set of rows (sorting, etc) as long as the count is not\n   * modified.\n   *\n   * @param {function(renderedRowsToProcess, columns )} processor rows processor function, which\n   * is run in the context of the grid (i.e. this for the function will be the grid), and must\n   * return the updated rows list, which is passed to the next processor in the chain\n   * @param {number} priority the priority of this processor.  In general we try to do them in 100s to leave room\n   * for other people to inject rows processors at intermediate priorities.  Lower priority rowsProcessors run earlier.\n   *\n   * At present all rows visible is running at 50, filter is running at 100, sort is at 200, grouping at 400, selectable rows at 500, pagination at 900 (pagination will generally want to be last)\n   *\n   */\n  Grid.prototype.registerRowsProcessor = function registerRowsProcessor(processor, priority) {\n    if (!angular.isFunction(processor)) {\n      throw 'Attempt to register non-function rows processor: ' + processor;\n    }\n\n    this.rowsProcessors.push({processor: processor, priority: priority});\n    this.rowsProcessors.sort(function sortByPriority( a, b ){\n      return a.priority - b.priority;\n    });\n  };\n\n  /**\n   * @ngdoc function\n   * @name removeRowsProcessor\n   * @methodOf ui.grid.class:Grid\n   * @param {function(renderableRows)} processor processor function\n   * @description Remove a registered rows processor\n   */\n  Grid.prototype.removeRowsProcessor = function removeRowsProcessor(processor) {\n    var idx = -1;\n    this.rowsProcessors.forEach(function(rowsProcessor, index){\n      if ( rowsProcessor.processor === processor ){\n        idx = index;\n      }\n    });\n\n    if ( idx !== -1 ) {\n      this.rowsProcessors.splice(idx, 1);\n    }\n  };\n\n  /**\n   * Private Undocumented Method\n   * @name processRowsProcessors\n   * @methodOf ui.grid.class:Grid\n   * @param {Array[GridRow]} renderableRows The array of \"renderable\" rows\n   * @description Run all the registered rows processors on the array of renderable rows\n   */\n  Grid.prototype.processRowsProcessors = function processRowsProcessors(renderableRows) {\n    var self = this;\n\n    // Create a shallow copy of the rows so that we can safely sort them without altering the original grid.rows sort order\n    var myRenderableRows = renderableRows.slice(0);\n\n    // Return myRenderableRows with no processing if we have no rows processors\n    if (self.rowsProcessors.length === 0) {\n      return $q.when(myRenderableRows);\n    }\n\n    // Counter for iterating through rows processors\n    var i = 0;\n\n    // Promise for when we're done with all the processors\n    var finished = $q.defer();\n\n    // This function will call the processor in self.rowsProcessors at index 'i', and then\n    //   when done will call the next processor in the list, using the output from the processor\n    //   at i as the argument for 'renderedRowsToProcess' on the next iteration.\n    //\n    //   If we're at the end of the list of processors, we resolve our 'finished' callback with\n    //   the result.\n    function startProcessor(i, renderedRowsToProcess) {\n      // Get the processor at 'i'\n      var processor = self.rowsProcessors[i].processor;\n\n      // Call the processor, passing in the rows to process and the current columns\n      //   (note: it's wrapped in $q.when() in case the processor does not return a promise)\n      return $q.when( processor.call(self, renderedRowsToProcess, self.columns) )\n        .then(function handleProcessedRows(processedRows) {\n          // Check for errors\n          if (!processedRows) {\n            throw \"Processor at index \" + i + \" did not return a set of renderable rows\";\n          }\n\n          if (!angular.isArray(processedRows)) {\n            throw \"Processor at index \" + i + \" did not return an array\";\n          }\n\n          // Processor is done, increment the counter\n          i++;\n\n          // If we're not done with the processors, call the next one\n          if (i <= self.rowsProcessors.length - 1) {\n            return startProcessor(i, processedRows);\n          }\n          // We're done! Resolve the 'finished' promise\n          else {\n            finished.resolve(processedRows);\n          }\n        }).catch(function(error) {\n          throw error;\n        });\n    }\n\n    // Start on the first processor\n    startProcessor(0, myRenderableRows);\n\n    return finished.promise;\n  };\n\n  Grid.prototype.setVisibleRows = function setVisibleRows(rows) {\n    var self = this;\n\n    // Reset all the render container row caches\n    for (var i in self.renderContainers) {\n      var container = self.renderContainers[i];\n\n      container.canvasHeightShouldUpdate = true;\n\n      if ( typeof(container.visibleRowCache) === 'undefined' ){\n        container.visibleRowCache = [];\n      } else {\n        container.visibleRowCache.length = 0;\n      }\n    }\n\n    // rows.forEach(function (row) {\n    for (var ri = 0; ri < rows.length; ri++) {\n      var row = rows[ri];\n\n      var targetContainer = (typeof(row.renderContainer) !== 'undefined' && row.renderContainer) ? row.renderContainer : 'body';\n\n      // If the row is visible\n      if (row.visible) {\n        self.renderContainers[targetContainer].visibleRowCache.push(row);\n      }\n    }\n    self.api.core.raise.rowsVisibleChanged(this.api);\n    self.api.core.raise.rowsRendered(this.api);\n  };\n\n  /**\n   * @ngdoc function\n   * @name registerColumnsProcessor\n   * @methodOf ui.grid.class:Grid\n   * @param {function(renderedColumnsToProcess, rows)} processor column processor function, which\n   * is run in the context of the grid (i.e. this for the function will be the grid), and\n   * which must return an updated renderedColumnsToProcess which can be passed to the next processor\n   * in the chain\n   * @param {number} priority the priority of this processor.  In general we try to do them in 100s to leave room\n   * for other people to inject columns processors at intermediate priorities.  Lower priority columnsProcessors run earlier.\n   *\n   * At present all rows visible is running at 50, filter is running at 100, sort is at 200, grouping at 400, selectable rows at 500, pagination at 900 (pagination will generally want to be last)\n   * @description\n\n     Register a \"columns processor\" function. When the columns are updated,\n     the grid calls each registered \"columns processor\", which has a chance\n     to alter the set of columns, as long as the count is not modified.\n   */\n  Grid.prototype.registerColumnsProcessor = function registerColumnsProcessor(processor, priority) {\n    if (!angular.isFunction(processor)) {\n      throw 'Attempt to register non-function rows processor: ' + processor;\n    }\n\n    this.columnsProcessors.push({processor: processor, priority: priority});\n    this.columnsProcessors.sort(function sortByPriority( a, b ){\n      return a.priority - b.priority;\n    });\n  };\n\n  Grid.prototype.removeColumnsProcessor = function removeColumnsProcessor(processor) {\n    var idx = this.columnsProcessors.indexOf(processor);\n\n    if (typeof(idx) !== 'undefined' && idx !== undefined) {\n      this.columnsProcessors.splice(idx, 1);\n    }\n  };\n\n  Grid.prototype.processColumnsProcessors = function processColumnsProcessors(renderableColumns) {\n    var self = this;\n\n    // Create a shallow copy of the rows so that we can safely sort them without altering the original grid.rows sort order\n    var myRenderableColumns = renderableColumns.slice(0);\n\n    // Return myRenderableRows with no processing if we have no rows processors\n    if (self.columnsProcessors.length === 0) {\n      return $q.when(myRenderableColumns);\n    }\n\n    // Counter for iterating through rows processors\n    var i = 0;\n\n    // Promise for when we're done with all the processors\n    var finished = $q.defer();\n\n    // This function will call the processor in self.rowsProcessors at index 'i', and then\n    //   when done will call the next processor in the list, using the output from the processor\n    //   at i as the argument for 'renderedRowsToProcess' on the next iteration.\n    //\n    //   If we're at the end of the list of processors, we resolve our 'finished' callback with\n    //   the result.\n    function startProcessor(i, renderedColumnsToProcess) {\n      // Get the processor at 'i'\n      var processor = self.columnsProcessors[i].processor;\n\n      // Call the processor, passing in the rows to process and the current columns\n      //   (note: it's wrapped in $q.when() in case the processor does not return a promise)\n      return $q.when( processor.call(self, renderedColumnsToProcess, self.rows) )\n        .then(function handleProcessedRows(processedColumns) {\n          // Check for errors\n          if (!processedColumns) {\n            throw \"Processor at index \" + i + \" did not return a set of renderable rows\";\n          }\n\n          if (!angular.isArray(processedColumns)) {\n            throw \"Processor at index \" + i + \" did not return an array\";\n          }\n\n          // Processor is done, increment the counter\n          i++;\n\n          // If we're not done with the processors, call the next one\n          if (i <= self.columnsProcessors.length - 1) {\n            return startProcessor(i, myRenderableColumns);\n          }\n          // We're done! Resolve the 'finished' promise\n          else {\n            finished.resolve(myRenderableColumns);\n          }\n        }).catch(angular.noop);\n    }\n\n    // Start on the first processor\n    startProcessor(0, myRenderableColumns);\n\n    return finished.promise;\n  };\n\n  Grid.prototype.setVisibleColumns = function setVisibleColumns(columns) {\n    // gridUtil.logDebug('setVisibleColumns');\n\n    var self = this;\n\n    // Reset all the render container row caches\n    for (var i in self.renderContainers) {\n      var container = self.renderContainers[i];\n\n      container.visibleColumnCache.length = 0;\n    }\n\n    for (var ci = 0; ci < columns.length; ci++) {\n      var column = columns[ci];\n\n      // If the column is visible\n      if (column.visible) {\n        // If the column has a container specified\n        if (typeof(column.renderContainer) !== 'undefined' && column.renderContainer) {\n          self.renderContainers[column.renderContainer].visibleColumnCache.push(column);\n        }\n        // If not, put it into the body container\n        else {\n          self.renderContainers.body.visibleColumnCache.push(column);\n        }\n      }\n    }\n  };\n\n  /**\n   * @ngdoc function\n   * @name handleWindowResize\n   * @methodOf ui.grid.class:Grid\n   * @description Triggered when the browser window resizes; automatically resizes the grid\n   * @returns {Promise} A resolved promise once the window resize has completed.\n   */\n  Grid.prototype.handleWindowResize = function handleWindowResize($event) {\n    var self = this;\n\n    self.gridWidth = gridUtil.elementWidth(self.element);\n    self.gridHeight = gridUtil.elementHeight(self.element);\n\n    return self.queueRefresh();\n  };\n\n  /**\n   * @ngdoc function\n   * @name queueRefresh\n   * @methodOf ui.grid.class:Grid\n   * @description queues a grid refreshCanvas, a way of debouncing all the refreshes we might otherwise issue\n   */\n  Grid.prototype.queueRefresh = function queueRefresh() {\n    var self = this;\n\n    if (self.refreshCanceller) {\n      $timeout.cancel(self.refreshCanceller);\n    }\n\n    self.refreshCanceller = $timeout(function () {\n      self.refreshCanvas(true);\n    });\n\n    self.refreshCanceller.then(function () {\n      self.refreshCanceller = null;\n    }).catch(angular.noop);\n\n    return self.refreshCanceller;\n  };\n\n\n  /**\n   * @ngdoc function\n   * @name queueGridRefresh\n   * @methodOf ui.grid.class:Grid\n   * @description queues a grid refresh, a way of debouncing all the refreshes we might otherwise issue\n   */\n  Grid.prototype.queueGridRefresh = function queueGridRefresh() {\n    var self = this;\n\n    if (self.gridRefreshCanceller) {\n      $timeout.cancel(self.gridRefreshCanceller);\n    }\n\n    self.gridRefreshCanceller = $timeout(function () {\n      self.refresh(true);\n    });\n\n    self.gridRefreshCanceller.then(function () {\n      self.gridRefreshCanceller = null;\n    }).catch(angular.noop);\n\n    return self.gridRefreshCanceller;\n  };\n\n\n  /**\n   * @ngdoc function\n   * @name updateCanvasHeight\n   * @methodOf ui.grid.class:Grid\n   * @description flags all render containers to update their canvas height\n   */\n  Grid.prototype.updateCanvasHeight = function updateCanvasHeight() {\n    var self = this;\n\n    for (var containerId in self.renderContainers) {\n      if (self.renderContainers.hasOwnProperty(containerId)) {\n        var container = self.renderContainers[containerId];\n        container.canvasHeightShouldUpdate = true;\n      }\n    }\n  };\n\n  /**\n   * @ngdoc function\n   * @name buildStyles\n   * @methodOf ui.grid.class:Grid\n   * @description calls each styleComputation function\n   */\n  Grid.prototype.buildStyles = function buildStyles() {\n    var self = this;\n\n    // gridUtil.logDebug('buildStyles');\n\n    self.customStyles = '';\n\n    self.styleComputations\n      .sort(function(a, b) {\n        if (a.priority === null) { return 1; }\n        if (b.priority === null) { return -1; }\n        if (a.priority === null && b.priority === null) { return 0; }\n        return a.priority - b.priority;\n      })\n      .forEach(function (compInfo) {\n        // this used to provide $scope as a second parameter, but I couldn't find any\n        // style builders that used it, so removed it as part of moving to grid from controller\n        var ret = compInfo.func.call(self);\n\n        if (angular.isString(ret)) {\n          self.customStyles += '\\n' + ret;\n        }\n      });\n  };\n\n\n  Grid.prototype.minColumnsToRender = function minColumnsToRender() {\n    var self = this;\n    var viewport = this.getViewportWidth();\n\n    var min = 0;\n    var totalWidth = 0;\n    self.columns.forEach(function(col, i) {\n      if (totalWidth < viewport) {\n        totalWidth += col.drawnWidth;\n        min++;\n      }\n      else {\n        var currWidth = 0;\n        for (var j = i; j >= i - min; j--) {\n          currWidth += self.columns[j].drawnWidth;\n        }\n        if (currWidth < viewport) {\n          min++;\n        }\n      }\n    });\n\n    return min;\n  };\n\n  Grid.prototype.getBodyHeight = function getBodyHeight() {\n    // Start with the viewportHeight\n    var bodyHeight = this.getViewportHeight();\n\n    // Add the horizontal scrollbar height if there is one\n    //if (typeof(this.horizontalScrollbarHeight) !== 'undefined' && this.horizontalScrollbarHeight !== undefined && this.horizontalScrollbarHeight > 0) {\n    //  bodyHeight = bodyHeight + this.horizontalScrollbarHeight;\n    //}\n\n    return bodyHeight;\n  };\n\n  // NOTE: viewport drawable height is the height of the grid minus the header row height (including any border)\n  // TODO(c0bra): account for footer height\n  Grid.prototype.getViewportHeight = function getViewportHeight() {\n    var self = this;\n\n    var viewPortHeight = this.gridHeight - this.headerHeight - this.footerHeight;\n\n    // Account for native horizontal scrollbar, if present\n    //if (typeof(this.horizontalScrollbarHeight) !== 'undefined' && this.horizontalScrollbarHeight !== undefined && this.horizontalScrollbarHeight > 0) {\n    //  viewPortHeight = viewPortHeight - this.horizontalScrollbarHeight;\n    //}\n\n    var adjustment = self.getViewportAdjustment();\n\n    viewPortHeight = viewPortHeight + adjustment.height;\n\n    //gridUtil.logDebug('viewPortHeight', viewPortHeight);\n\n    return viewPortHeight;\n  };\n\n  Grid.prototype.getViewportWidth = function getViewportWidth() {\n    var self = this;\n\n    var viewPortWidth = this.gridWidth;\n\n    //if (typeof(this.verticalScrollbarWidth) !== 'undefined' && this.verticalScrollbarWidth !== undefined && this.verticalScrollbarWidth > 0) {\n    //  viewPortWidth = viewPortWidth - this.verticalScrollbarWidth;\n    //}\n\n    var adjustment = self.getViewportAdjustment();\n\n    viewPortWidth = viewPortWidth + adjustment.width;\n\n    //gridUtil.logDebug('getviewPortWidth', viewPortWidth);\n\n    return viewPortWidth;\n  };\n\n  Grid.prototype.getHeaderViewportWidth = function getHeaderViewportWidth() {\n    var viewPortWidth = this.getViewportWidth();\n\n    //if (typeof(this.verticalScrollbarWidth) !== 'undefined' && this.verticalScrollbarWidth !== undefined && this.verticalScrollbarWidth > 0) {\n    //  viewPortWidth = viewPortWidth + this.verticalScrollbarWidth;\n    //}\n\n    return viewPortWidth;\n  };\n\n  Grid.prototype.addVerticalScrollSync = function (containerId, callBackFn) {\n    this.verticalScrollSyncCallBackFns[containerId] = callBackFn;\n  };\n\n  Grid.prototype.addHorizontalScrollSync = function (containerId, callBackFn) {\n    this.horizontalScrollSyncCallBackFns[containerId] = callBackFn;\n  };\n\n/**\n * Scroll needed containers by calling their ScrollSyncs\n * @param sourceContainerId the containerId that has already set it's top/left.\n *         can be empty string which means all containers need to set top/left\n * @param scrollEvent\n */\n  Grid.prototype.scrollContainers = function (sourceContainerId, scrollEvent) {\n\n    if (scrollEvent.y) {\n      //default for no container Id (ex. mousewheel means that all containers must set scrollTop/Left)\n      var verts = ['body','left', 'right'];\n\n      this.flagScrollingVertically(scrollEvent);\n\n      if (sourceContainerId === 'body') {\n        verts = ['left', 'right'];\n      }\n      else if (sourceContainerId === 'left') {\n        verts = ['body', 'right'];\n      }\n      else if (sourceContainerId === 'right') {\n        verts = ['body', 'left'];\n      }\n\n      for (var i = 0; i < verts.length; i++) {\n        var id = verts[i];\n        if (this.verticalScrollSyncCallBackFns[id]) {\n          this.verticalScrollSyncCallBackFns[id](scrollEvent);\n        }\n      }\n\n    }\n\n    if (scrollEvent.x) {\n      //default for no container Id (ex. mousewheel means that all containers must set scrollTop/Left)\n      var horizs = ['body','bodyheader', 'bodyfooter'];\n\n      this.flagScrollingHorizontally(scrollEvent);\n      if (sourceContainerId === 'body') {\n        horizs = ['bodyheader', 'bodyfooter'];\n      }\n\n      for (var j = 0; j < horizs.length; j++) {\n        var idh = horizs[j];\n        if (this.horizontalScrollSyncCallBackFns[idh]) {\n          this.horizontalScrollSyncCallBackFns[idh](scrollEvent);\n        }\n      }\n\n    }\n\n  };\n\n  Grid.prototype.registerViewportAdjuster = function registerViewportAdjuster(func) {\n    this.viewportAdjusters.push(func);\n  };\n\n  Grid.prototype.removeViewportAdjuster = function registerViewportAdjuster(func) {\n    var idx = this.viewportAdjusters.indexOf(func);\n\n    if (typeof(idx) !== 'undefined' && idx !== undefined) {\n      this.viewportAdjusters.splice(idx, 1);\n    }\n  };\n\n  Grid.prototype.getViewportAdjustment = function getViewportAdjustment() {\n    var self = this;\n\n    var adjustment = { height: 0, width: 0 };\n\n    self.viewportAdjusters.forEach(function (func) {\n      adjustment = func.call(this, adjustment);\n    });\n\n    return adjustment;\n  };\n\n  Grid.prototype.getVisibleRowCount = function getVisibleRowCount() {\n    // var count = 0;\n\n    // this.rows.forEach(function (row) {\n    //   if (row.visible) {\n    //     count++;\n    //   }\n    // });\n\n    // return this.visibleRowCache.length;\n    return this.renderContainers.body.visibleRowCache.length;\n  };\n\n   Grid.prototype.getVisibleRows = function getVisibleRows() {\n    return this.renderContainers.body.visibleRowCache;\n   };\n\n  Grid.prototype.getVisibleColumnCount = function getVisibleColumnCount() {\n    // var count = 0;\n\n    // this.rows.forEach(function (row) {\n    //   if (row.visible) {\n    //     count++;\n    //   }\n    // });\n\n    // return this.visibleRowCache.length;\n    return this.renderContainers.body.visibleColumnCache.length;\n  };\n\n\n  Grid.prototype.searchRows = function searchRows(renderableRows) {\n    return rowSearcher.search(this, renderableRows, this.columns);\n  };\n\n  Grid.prototype.sortByColumn = function sortByColumn(renderableRows) {\n    return rowSorter.sort(this, renderableRows, this.columns);\n  };\n\n  /**\n   * @ngdoc function\n   * @name getCellValue\n   * @methodOf ui.grid.class:Grid\n   * @description Gets the value of a cell for a particular row and column\n   * @param {GridRow} row Row to access\n   * @param {GridColumn} col Column to access\n   */\n  Grid.prototype.getCellValue = function getCellValue(row, col){\n    if ( typeof(row.entity[ '$$' + col.uid ]) !== 'undefined' ) {\n      return row.entity[ '$$' + col.uid].rendered;\n    } else if (this.options.flatEntityAccess && typeof(col.field) !== 'undefined' ){\n      return row.entity[col.field];\n    } else {\n      if (!col.cellValueGetterCache) {\n        col.cellValueGetterCache = $parse(row.getEntityQualifiedColField(col));\n      }\n\n      return col.cellValueGetterCache(row);\n    }\n  };\n\n  /**\n   * @ngdoc function\n   * @name getCellDisplayValue\n   * @methodOf ui.grid.class:Grid\n   * @description Gets the displayed value of a cell after applying any the `cellFilter`\n   * @param {GridRow} row Row to access\n   * @param {GridColumn} col Column to access\n   */\n  Grid.prototype.getCellDisplayValue = function getCellDisplayValue(row, col) {\n    if ( !col.cellDisplayGetterCache ) {\n      var custom_filter = col.cellFilter ? \" | \" + col.cellFilter : \"\";\n\n      if (typeof(row.entity['$$' + col.uid]) !== 'undefined') {\n        col.cellDisplayGetterCache = $parse(row.entity['$$' + col.uid].rendered + custom_filter);\n      } else if (this.options.flatEntityAccess && typeof(col.field) !== 'undefined') {\n        var colField = col.field.replace(/(')|(\\\\)/g, \"\\\\$&\");\n        col.cellDisplayGetterCache = $parse('entity[\\'' + colField + '\\']' + custom_filter);\n      } else {\n        col.cellDisplayGetterCache = $parse(row.getEntityQualifiedColField(col) + custom_filter);\n      }\n    }\n\n    var rowWithCol = angular.extend({}, row, {col: col});\n    return col.cellDisplayGetterCache(rowWithCol);\n  };\n\n\n  Grid.prototype.getNextColumnSortPriority = function getNextColumnSortPriority() {\n    var self = this,\n        p = 0;\n\n    self.columns.forEach(function (col) {\n      if (col.sort && col.sort.priority !== undefined && col.sort.priority >= p) {\n        p = col.sort.priority + 1;\n      }\n    });\n\n    return p;\n  };\n\n  /**\n   * @ngdoc function\n   * @name resetColumnSorting\n   * @methodOf ui.grid.class:Grid\n   * @description Return the columns that the grid is currently being sorted by\n   * @param {GridColumn} [excludedColumn] Optional GridColumn to exclude from having its sorting reset\n   */\n  Grid.prototype.resetColumnSorting = function resetColumnSorting(excludeCol) {\n    var self = this;\n\n    self.columns.forEach(function (col) {\n      if (col !== excludeCol && !col.suppressRemoveSort) {\n        col.sort = {};\n      }\n    });\n  };\n\n  /**\n   * @ngdoc function\n   * @name getColumnSorting\n   * @methodOf ui.grid.class:Grid\n   * @description Return the columns that the grid is currently being sorted by\n   * @returns {Array[GridColumn]} An array of GridColumn objects\n   */\n  Grid.prototype.getColumnSorting = function getColumnSorting() {\n    var self = this;\n\n    var sortedCols = [], myCols;\n\n    // Iterate through all the columns, sorted by priority\n    // Make local copy of column list, because sorting is in-place and we do not want to\n    // change the original sequence of columns\n    myCols = self.columns.slice(0);\n    myCols.sort(rowSorter.prioritySort).forEach(function (col) {\n      if (col.sort && typeof(col.sort.direction) !== 'undefined' && col.sort.direction && (col.sort.direction === uiGridConstants.ASC || col.sort.direction === uiGridConstants.DESC)) {\n        sortedCols.push(col);\n      }\n    });\n\n    return sortedCols;\n  };\n\n  /**\n   * @ngdoc function\n   * @name sortColumn\n   * @methodOf ui.grid.class:Grid\n   * @description Set the sorting on a given column, optionally resetting any existing sorting on the Grid.\n   * Emits the sortChanged event whenever the sort criteria are changed.\n   * @param {GridColumn} column Column to set the sorting on\n   * @param {uiGridConstants.ASC|uiGridConstants.DESC} [direction] Direction to sort by, either descending or ascending.\n   *   If not provided, the column will iterate through the sort directions\n   *   specified in the {@link ui.grid.class:GridOptions.columnDef#sortDirectionCycle sortDirectionCycle} attribute.\n   * @param {boolean} [add] Add this column to the sorting. If not provided or set to `false`, the Grid will reset any existing sorting and sort\n   *   by this column only\n   * @returns {Promise} A resolved promise that supplies the column.\n   */\n\n  Grid.prototype.sortColumn = function sortColumn(column, directionOrAdd, add) {\n    var self = this,\n        direction = null;\n\n    if (typeof(column) === 'undefined' || !column) {\n      throw new Error('No column parameter provided');\n    }\n\n    // Second argument can either be a direction or whether to add this column to the existing sort.\n    //   If it's a boolean, it's an add, otherwise, it's a direction\n    if (typeof(directionOrAdd) === 'boolean') {\n      add = directionOrAdd;\n    }\n    else {\n      direction = directionOrAdd;\n    }\n\n    if (!add) {\n      self.resetColumnSorting(column);\n      column.sort.priority = undefined;\n      // Get the actual priority since there may be columns which have suppressRemoveSort set\n      column.sort.priority = self.getNextColumnSortPriority();\n    }\n    else if (column.sort.priority === undefined){\n      column.sort.priority = self.getNextColumnSortPriority();\n    }\n\n    if (!direction) {\n      // Find the current position in the cycle (or -1).\n      var i = column.sortDirectionCycle.indexOf(column.sort.direction ? column.sort.direction : null);\n      // Proceed to the next position in the cycle (or start at the beginning).\n      i = (i+1) % column.sortDirectionCycle.length;\n      // If suppressRemoveSort is set, and the next position in the cycle would\n      // remove the sort, skip it.\n      if (column.colDef && column.suppressRemoveSort && !column.sortDirectionCycle[i]) {\n        i = (i+1) % column.sortDirectionCycle.length;\n      }\n\n      if (column.sortDirectionCycle[i]) {\n        column.sort.direction = column.sortDirectionCycle[i];\n      } else {\n        removeSortOfColumn(column, self);\n      }\n    }\n    else {\n      column.sort.direction = direction;\n    }\n\n    self.api.core.raise.sortChanged( self, self.getColumnSorting() );\n\n    return $q.when(column);\n  };\n\n  var removeSortOfColumn = function removeSortOfColumn(column, grid) {\n    //Decrease priority for every col where priority is higher than the removed sort's priority.\n    grid.columns.forEach(function (col) {\n      if (col.sort && col.sort.priority !== undefined && col.sort.priority > column.sort.priority) {\n        col.sort.priority -= 1;\n      }\n    });\n\n    //Remove sort\n    column.sort = {};\n  };\n\n  /**\n   * communicate to outside world that we are done with initial rendering\n   */\n  Grid.prototype.renderingComplete = function(){\n    if (angular.isFunction(this.options.onRegisterApi)) {\n      this.options.onRegisterApi(this.api);\n    }\n    this.api.core.raise.renderingComplete( this.api );\n  };\n\n  Grid.prototype.createRowHashMap = function createRowHashMap() {\n    var self = this;\n\n    var hashMap = new RowHashMap();\n    hashMap.grid = self;\n\n    return hashMap;\n  };\n\n\n  /**\n   * @ngdoc function\n   * @name refresh\n   * @methodOf ui.grid.class:Grid\n   * @description Refresh the rendered grid on screen.\n   * @param {boolean} [rowsAltered] Optional flag for refreshing when the number of rows has changed.\n   */\n  Grid.prototype.refresh = function refresh(rowsAltered) {\n    var self = this;\n\n    var p1 = self.processRowsProcessors(self.rows).then(function (renderableRows) {\n      self.setVisibleRows(renderableRows);\n    }).catch(angular.noop);\n\n    var p2 = self.processColumnsProcessors(self.columns).then(function (renderableColumns) {\n      self.setVisibleColumns(renderableColumns);\n    }).catch(angular.noop);\n\n    return $q.all([p1, p2]).then(function () {\n      self.refreshCanvas(true);\n      self.redrawInPlace(rowsAltered);\n    }).catch(angular.noop);\n  };\n\n  /**\n   * @ngdoc function\n   * @name refreshRows\n   * @methodOf ui.grid.class:Grid\n   * @description Refresh the rendered rows on screen?  Note: not functional at present\n   * @returns {promise} promise that is resolved when render completes?\n   *\n   */\n  Grid.prototype.refreshRows = function refreshRows() {\n    var self = this;\n\n    return self.processRowsProcessors(self.rows)\n      .then(function (renderableRows) {\n        self.setVisibleRows(renderableRows);\n\n        self.redrawInPlace();\n\n        self.refreshCanvas( true );\n      }).catch(angular.noop);\n  };\n\n  /**\n   * @ngdoc function\n   * @name refreshCanvas\n   * @methodOf ui.grid.class:Grid\n   * @description Builds all styles and recalculates much of the grid sizing\n   * @param {object} buildStyles optional parameter.  Use TBD\n   * @returns {promise} promise that is resolved when the canvas\n   * has been refreshed\n   *\n   */\n  Grid.prototype.refreshCanvas = function(buildStyles) {\n    var self = this;\n\n    // gridUtil.logDebug('refreshCanvas');\n\n    var p = $q.defer();\n\n    // Get all the header heights\n    var containerHeadersToRecalc = [];\n    for (var containerId in self.renderContainers) {\n      if (self.renderContainers.hasOwnProperty(containerId)) {\n        var container = self.renderContainers[containerId];\n\n        // Skip containers that have no canvasWidth set yet\n        if (container.canvasWidth === null || isNaN(container.canvasWidth)) {\n          continue;\n        }\n\n        if (container.header || container.headerCanvas) {\n          container.explicitHeaderHeight = container.explicitHeaderHeight || null;\n          container.explicitHeaderCanvasHeight = container.explicitHeaderCanvasHeight || null;\n\n          containerHeadersToRecalc.push(container);\n        }\n      }\n    }\n\n    // Build the styles without the explicit header heights\n    if (buildStyles) {\n      self.buildStyles();\n    }\n\n    /*\n     *\n     * Here we loop through the headers, measuring each element as well as any header \"canvas\" it has within it.\n     *\n     * If any header is less than the largest header height, it will be resized to that so that we don't have headers\n     * with different heights, which looks like a rendering problem\n     *\n     * We'll do the same thing with the header canvases, and give the header CELLS an explicit height if their canvas\n     * is smaller than the largest canvas height. That was header cells without extra controls like filtering don't\n     * appear shorter than other cells.\n     *\n     */\n    if (containerHeadersToRecalc.length > 0) {\n      // Putting in a timeout as it's not calculating after the grid element is rendered and filled out\n      $timeout(function() {\n        // var oldHeaderHeight = self.grid.headerHeight;\n        // self.grid.headerHeight = gridUtil.outerElementHeight(self.header);\n\n        var rebuildStyles = false;\n\n        // Get all the header heights\n        var maxHeaderHeight = 0;\n        var maxHeaderCanvasHeight = 0;\n        var i, container;\n        var getHeight = function(oldVal, newVal){\n          if ( oldVal !== newVal){\n            rebuildStyles = true;\n          }\n          return newVal;\n        };\n        for (i = 0; i < containerHeadersToRecalc.length; i++) {\n          container = containerHeadersToRecalc[i];\n\n          // Skip containers that have no canvasWidth set yet\n          if (container.canvasWidth === null || isNaN(container.canvasWidth)) {\n            continue;\n          }\n\n          if (container.header) {\n            var headerHeight = container.headerHeight = getHeight(container.headerHeight, gridUtil.outerElementHeight(container.header));\n\n            // Get the \"inner\" header height, that is the height minus the top and bottom borders, if present. We'll use it to make sure all the headers have a consistent height\n            var topBorder = gridUtil.getBorderSize(container.header, 'top');\n            var bottomBorder = gridUtil.getBorderSize(container.header, 'bottom');\n            var innerHeaderHeight = parseInt(headerHeight - topBorder - bottomBorder, 10);\n\n            innerHeaderHeight  = innerHeaderHeight < 0 ? 0 : innerHeaderHeight;\n\n            container.innerHeaderHeight = innerHeaderHeight;\n\n            // If the header doesn't have an explicit height set, save the largest header height for use later\n            //   Explicit header heights are based off of the max we are calculating here. We never want to base the max on something we're setting explicitly\n            if (!container.explicitHeaderHeight && innerHeaderHeight > maxHeaderHeight) {\n              maxHeaderHeight = innerHeaderHeight;\n            }\n          }\n\n          if (container.headerCanvas) {\n            var headerCanvasHeight = container.headerCanvasHeight = getHeight(container.headerCanvasHeight, parseInt(gridUtil.outerElementHeight(container.headerCanvas), 10));\n\n\n            // If the header doesn't have an explicit canvas height, save the largest header canvas height for use later\n            //   Explicit header heights are based off of the max we are calculating here. We never want to base the max on something we're setting explicitly\n            if (!container.explicitHeaderCanvasHeight && headerCanvasHeight > maxHeaderCanvasHeight) {\n              maxHeaderCanvasHeight = headerCanvasHeight;\n            }\n          }\n        }\n\n        // Go through all the headers\n        for (i = 0; i < containerHeadersToRecalc.length; i++) {\n          container = containerHeadersToRecalc[i];\n\n          /* If:\n              1. We have a max header height\n              2. This container has a header height defined\n              3. And either this container has an explicit header height set, OR its header height is less than the max\n\n              then:\n\n              Give this container's header an explicit height so it will line up with the tallest header\n          */\n          if (\n            maxHeaderHeight > 0 && typeof(container.headerHeight) !== 'undefined' && container.headerHeight !== null &&\n            (container.explicitHeaderHeight || container.headerHeight < maxHeaderHeight)\n          ) {\n            container.explicitHeaderHeight = getHeight(container.explicitHeaderHeight, maxHeaderHeight);\n          }\n\n          // Do the same as above except for the header canvas\n          if (\n            maxHeaderCanvasHeight > 0 && typeof(container.headerCanvasHeight) !== 'undefined' && container.headerCanvasHeight !== null &&\n            (container.explicitHeaderCanvasHeight || container.headerCanvasHeight < maxHeaderCanvasHeight)\n          ) {\n            container.explicitHeaderCanvasHeight = getHeight(container.explicitHeaderCanvasHeight, maxHeaderCanvasHeight);\n          }\n        }\n\n        // Rebuild styles if the header height has changed\n        //   The header height is used in body/viewport calculations and those are then used in other styles so we need it to be available\n        if (buildStyles && rebuildStyles) {\n          self.buildStyles();\n        }\n\n        p.resolve();\n      });\n    }\n    else {\n      // Timeout still needs to be here to trigger digest after styles have been rebuilt\n      $timeout(function() {\n        p.resolve();\n      });\n    }\n\n    return p.promise;\n  };\n\n\n  /**\n   * @ngdoc function\n   * @name redrawInPlace\n   * @methodOf ui.grid.class:Grid\n   * @description Redraw the rows and columns based on our current scroll position\n   * @param {boolean} [rowsAdded] Optional to indicate rows are added and the scroll percentage must be recalculated\n   *\n   */\n  Grid.prototype.redrawInPlace = function redrawInPlace(rowsAdded) {\n    // gridUtil.logDebug('redrawInPlace');\n\n    var self = this;\n\n    for (var i in self.renderContainers) {\n      var container = self.renderContainers[i];\n\n      // gridUtil.logDebug('redrawing container', i);\n\n      if (rowsAdded) {\n        container.adjustRows(container.prevScrollTop, null);\n        container.adjustColumns(container.prevScrollLeft, null);\n      }\n      else {\n        container.adjustRows(null, container.prevScrolltopPercentage);\n        container.adjustColumns(null, container.prevScrollleftPercentage);\n      }\n    }\n  };\n\n    /**\n     * @ngdoc function\n     * @name hasLeftContainerColumns\n     * @methodOf ui.grid.class:Grid\n     * @description returns true if leftContainer has columns\n     */\n    Grid.prototype.hasLeftContainerColumns = function () {\n      return this.hasLeftContainer() && this.renderContainers.left.renderedColumns.length > 0;\n    };\n\n    /**\n     * @ngdoc function\n     * @name hasRightContainerColumns\n     * @methodOf ui.grid.class:Grid\n     * @description returns true if rightContainer has columns\n     */\n    Grid.prototype.hasRightContainerColumns = function () {\n      return this.hasRightContainer() && this.renderContainers.right.renderedColumns.length > 0;\n    };\n\n    // Turn the scroll position into a percentage and make it an argument for a scroll event\n    function getScrollPercentage(scrollPixels, scrollLength) {\n      var percentage = scrollPixels / scrollLength;\n\n      // if the percentage is greater than 1, set it to 1\n      return percentage <= 1 ? percentage : 1;\n    }\n\n    // Only returns the scroll Y position if the percentage is different from the previous\n    function getScrollY(scrollPixels, scrollLength, prevScrolltopPercentage) {\n      var scrollPercentage = getScrollPercentage(scrollPixels, scrollLength);\n\n      if (scrollPercentage !== prevScrolltopPercentage) {\n        return { percentage: getScrollPercentage(scrollPixels, scrollLength) };\n      }\n\n      return undefined;\n    }\n\n    // Only returns the scroll X position if the percentage is different from the previous\n    function getScrollX(horizScrollPixels, horizScrollLength, prevScrollleftPercentage) {\n      var horizPercentage = horizScrollPixels / horizScrollLength;\n      horizPercentage = (horizPercentage > 1) ? 1 : horizPercentage;\n\n      if (horizPercentage !== prevScrollleftPercentage) {\n        return { percentage: horizPercentage  };\n      }\n\n      return undefined;\n    }\n\n    /**\n     * @ngdoc method\n     * @methodOf  ui.grid.class:Grid\n     * @name scrollToIfNecessary\n     * @description Scrolls the grid to make a certain row and column combo visible,\n     *   in the case that it is not completely visible on the screen already.\n     * @param {GridRow} gridRow row to make visible\n     * @param {GridColumn} gridCol column to make visible\n     * @returns {promise} a promise that is resolved when scrolling is complete\n     */\n    Grid.prototype.scrollToIfNecessary = function (gridRow, gridCol) {\n      var self = this;\n\n      var scrollEvent = new ScrollEvent(self, 'uiGrid.scrollToIfNecessary');\n\n      // Alias the visible row and column caches\n      var visRowCache = self.renderContainers.body.visibleRowCache;\n      var visColCache = self.renderContainers.body.visibleColumnCache;\n\n      /*-- Get the top, left, right, and bottom \"scrolled\" edges of the grid --*/\n\n      // The top boundary is the current Y scroll position PLUS the header height, because the header can obscure rows when the grid is scrolled downwards\n      var topBound = self.renderContainers.body.prevScrollTop + self.headerHeight;\n\n      // Don't the let top boundary be less than 0\n      topBound = (topBound < 0) ? 0 : topBound;\n\n      // The left boundary is the current X scroll position\n      var leftBound = self.renderContainers.body.prevScrollLeft;\n\n      // The bottom boundary is the current Y scroll position, plus the height of the grid, but minus the header height.\n      //   Basically this is the viewport height added on to the scroll position\n      var bottomBound = self.renderContainers.body.prevScrollTop + self.gridHeight - self.renderContainers.body.headerHeight - self.footerHeight -  self.scrollbarWidth;\n\n      // If there's a horizontal scrollbar, remove its height from the bottom boundary, otherwise we'll be letting it obscure rows\n      //if (self.horizontalScrollbarHeight) {\n      //  bottomBound = bottomBound - self.horizontalScrollbarHeight;\n      //}\n\n      // The right position is the current X scroll position minus the grid width\n      var rightBound = self.renderContainers.body.prevScrollLeft + Math.ceil(self.renderContainers.body.getViewportWidth());\n\n      // If there's a vertical scrollbar, subtract it from the right boundary or we'll allow it to obscure cells\n      //if (self.verticalScrollbarWidth) {\n      //  rightBound = rightBound - self.verticalScrollbarWidth;\n      //}\n\n      // We were given a row to scroll to\n      if (gridRow !== null) {\n        // This is the index of the row we want to scroll to, within the list of rows that can be visible\n        var seekRowIndex = visRowCache.indexOf(gridRow);\n\n        // Total vertical scroll length of the grid\n        var scrollLength = (self.renderContainers.body.getCanvasHeight() - self.renderContainers.body.getViewportHeight());\n\n        // Add the height of the native horizontal scrollbar to the scroll length, if it's there. Otherwise it will mask over the final row\n        //if (self.horizontalScrollbarHeight && self.horizontalScrollbarHeight > 0) {\n        //  scrollLength = scrollLength + self.horizontalScrollbarHeight;\n        //}\n\n        // This is the minimum amount of pixels we need to scroll vertical in order to see this row.\n        var pixelsToSeeRow = (seekRowIndex * self.options.rowHeight + self.headerHeight);\n\n        // Don't let the pixels required to see the row be less than zero\n        pixelsToSeeRow = (pixelsToSeeRow < 0) ? 0 : pixelsToSeeRow;\n\n        var scrollPixels;\n\n        // If the scroll position we need to see the row is LESS than the top boundary, i.e. obscured above the top of the self...\n        if (pixelsToSeeRow < topBound) {\n          // Get the different between the top boundary and the required scroll position and subtract it from the current scroll position\\\n          //   to get the full position we need\n          scrollPixels = self.renderContainers.body.prevScrollTop - (topBound - pixelsToSeeRow);\n\n          scrollEvent.y = getScrollY(scrollPixels, scrollLength, self.renderContainers.body.prevScrolltopPercentage);\n        }\n        // Otherwise if the scroll position we need to see the row is MORE than the bottom boundary, i.e. obscured below the bottom of the self...\n        else if (pixelsToSeeRow > bottomBound) {\n          // Get the different between the bottom boundary and the required scroll position and add it to the current scroll position\n          //   to get the full position we need\n          scrollPixels = pixelsToSeeRow - bottomBound + self.renderContainers.body.prevScrollTop;\n\n          scrollEvent.y = getScrollY(scrollPixels, scrollLength,self.renderContainers.body.prevScrolltopPercentage);\n        }\n      }\n\n      // We were given a column to scroll to\n      if (gridCol !== null) {\n        // This is the index of the column we want to scroll to, within the list of columns that can be visible\n        var seekColumnIndex = visColCache.indexOf(gridCol);\n\n        // Total horizontal scroll length of the grid\n        var horizScrollLength = (self.renderContainers.body.getCanvasWidth() - self.renderContainers.body.getViewportWidth());\n\n        // This is the minimum amount of pixels we need to scroll horizontal in order to see this column\n        var columnLeftEdge = 0;\n        for (var i = 0; i < seekColumnIndex; i++) {\n          var col = visColCache[i];\n          columnLeftEdge += col.drawnWidth;\n        }\n        columnLeftEdge = (columnLeftEdge < 0) ? 0 : columnLeftEdge;\n\n        var columnRightEdge = columnLeftEdge + gridCol.drawnWidth;\n\n        // Don't let the pixels required to see the column be less than zero\n        columnRightEdge = (columnRightEdge < 0) ? 0 : columnRightEdge;\n\n        var horizScrollPixels;\n\n        // If the scroll position we need to see the column is LESS than the left boundary, i.e. obscured before the left of the self...\n        if (columnLeftEdge < leftBound) {\n          // Get the different between the left boundary and the required scroll position and subtract it from the current scroll position\\\n          //   to get the full position we need\n          horizScrollPixels = self.renderContainers.body.prevScrollLeft - (leftBound - columnLeftEdge);\n\n          // Turn the scroll position into a percentage and make it an argument for a scroll event\n          scrollEvent.x = getScrollX(horizScrollPixels, horizScrollLength, self.renderContainers.body.prevScrollleftPercentage);\n        }\n        // Otherwise if the scroll position we need to see the column is MORE than the right boundary, i.e. obscured after the right of the self...\n        else if (columnRightEdge > rightBound) {\n          // Get the different between the right boundary and the required scroll position and add it to the current scroll position\n          //   to get the full position we need\n          horizScrollPixels = columnRightEdge - rightBound + self.renderContainers.body.prevScrollLeft;\n\n          // Turn the scroll position into a percentage and make it an argument for a scroll event\n          scrollEvent.x = getScrollX(horizScrollPixels, horizScrollLength, self.renderContainers.body.prevScrollleftPercentage);\n        }\n      }\n\n      var deferred = $q.defer();\n\n      // If we need to scroll on either the x or y axes, fire a scroll event\n      if (scrollEvent.y || scrollEvent.x) {\n        scrollEvent.withDelay = false;\n        self.scrollContainers('',scrollEvent);\n        var dereg = self.api.core.on.scrollEnd(null,function() {\n          deferred.resolve(scrollEvent);\n          dereg();\n        });\n      }\n      else {\n        deferred.resolve();\n      }\n\n      return deferred.promise;\n    };\n\n    /**\n     * @ngdoc method\n     * @methodOf ui.grid.class:Grid\n     * @name scrollTo\n     * @description Scroll the grid such that the specified\n     * row and column is in view\n     * @param {object} rowEntity gridOptions.data[] array instance to make visible\n     * @param {object} colDef to make visible\n     * @returns {promise} a promise that is resolved after any scrolling is finished\n     */\n    Grid.prototype.scrollTo = function (rowEntity, colDef) {\n      var gridRow = null, gridCol = null;\n\n      if (rowEntity !== null && typeof(rowEntity) !== 'undefined' ) {\n        gridRow = this.getRow(rowEntity);\n      }\n\n      if (colDef !== null && typeof(colDef) !== 'undefined' ) {\n        gridCol = this.getColumn(colDef.name ? colDef.name : colDef.field);\n      }\n      return this.scrollToIfNecessary(gridRow, gridCol);\n    };\n\n  /**\n   * @ngdoc function\n   * @name clearAllFilters\n   * @methodOf ui.grid.class:Grid\n   * @description Clears all filters and optionally refreshes the visible rows.\n   * @param {object} refreshRows Defaults to true.\n   * @param {object} clearConditions Defaults to false.\n   * @param {object} clearFlags Defaults to false.\n   * @returns {promise} If `refreshRows` is true, returns a promise of the rows refreshing.\n   */\n  Grid.prototype.clearAllFilters = function clearAllFilters(refreshRows, clearConditions, clearFlags) {\n    // Default `refreshRows` to true because it will be the most commonly desired behaviour.\n    if (refreshRows === undefined) {\n      refreshRows = true;\n    }\n    if (clearConditions === undefined) {\n      clearConditions = false;\n    }\n    if (clearFlags === undefined) {\n      clearFlags = false;\n    }\n\n    this.columns.forEach(function(column) {\n      column.filters.forEach(function(filter) {\n        filter.term = undefined;\n\n        if (clearConditions) {\n          filter.condition = undefined;\n        }\n\n        if (clearFlags) {\n          filter.flags = undefined;\n        }\n      });\n    });\n\n    if (refreshRows) {\n      return this.refreshRows();\n    }\n  };\n\n\n      // Blatantly stolen from Angular as it isn't exposed (yet? 2.0?)\n  function RowHashMap() {}\n\n  RowHashMap.prototype = {\n    /**\n     * Store key value pair\n     * @param key key to store can be any type\n     * @param value value to store can be any type\n     */\n    put: function(key, value) {\n      this[this.grid.options.rowIdentity(key)] = value;\n    },\n\n    /**\n     * @param key\n     * @returns {Object} the value for the key\n     */\n    get: function(key) {\n      return this[this.grid.options.rowIdentity(key)];\n    },\n\n    /**\n     * Remove the key/value pair\n     * @param key\n     */\n    remove: function(key) {\n      var value = this[key = this.grid.options.rowIdentity(key)];\n      delete this[key];\n      return value;\n    }\n  };\n\n\n\n  return Grid;\n\n}]);\n\n})();\n\n(function () {\n\n  angular.module('ui.grid')\n    .factory('GridApi', ['$q', '$rootScope', 'gridUtil', 'uiGridConstants', 'GridRow', 'uiGridGridMenuService',\n      function ($q, $rootScope, gridUtil, uiGridConstants, GridRow, uiGridGridMenuService) {\n        /**\n         * @ngdoc function\n         * @name ui.grid.class:GridApi\n         * @description GridApi provides the ability to register public methods events inside the grid and allow\n         * for other components to use the api via featureName.raise.methodName and featureName.on.eventName(function(args){}.\n         * <br/>\n         * To listen to events, you must add a callback to gridOptions.onRegisterApi\n         * <pre>\n         *   $scope.gridOptions.onRegisterApi = function(gridApi){\n         *      gridApi.cellNav.on.navigate($scope,function(newRowCol, oldRowCol){\n         *          $log.log('navigation event');\n         *      });\n         *   };\n         * </pre>\n         * @param {object} grid grid that owns api\n         */\n        var GridApi = function GridApi(grid) {\n          this.grid = grid;\n          this.listeners = [];\n\n          /**\n           * @ngdoc function\n           * @name renderingComplete\n           * @methodOf  ui.grid.core.api:PublicApi\n           * @description Rendering is complete, called at the same\n           * time as `onRegisterApi`, but provides a way to obtain\n           * that same event within features without stopping end\n           * users from getting at the onRegisterApi method.\n           *\n           * Included in gridApi so that it's always there - otherwise\n           * there is still a timing problem with when a feature can\n           * call this.\n           *\n           * @param {GridApi} gridApi the grid api, as normally\n           * returned in the onRegisterApi method\n           *\n           * @example\n           * <pre>\n           *      gridApi.core.on.renderingComplete( grid );\n           * </pre>\n           */\n          this.registerEvent( 'core', 'renderingComplete' );\n\n          /**\n           * @ngdoc event\n           * @name filterChanged\n           * @eventOf  ui.grid.core.api:PublicApi\n           * @description  is raised after the filter is changed.  The nature\n           * of the watch expression doesn't allow notification of what changed,\n           * so the receiver of this event will need to re-extract the filter\n           * conditions from the columns.\n           *\n           */\n          this.registerEvent( 'core', 'filterChanged' );\n\n          /**\n           * @ngdoc function\n           * @name setRowInvisible\n           * @methodOf  ui.grid.core.api:PublicApi\n           * @description Sets an override on the row to make it always invisible,\n           * which will override any filtering or other visibility calculations.\n           * If the row is currently visible then sets it to invisible and calls\n           * both grid refresh and emits the rowsVisibleChanged event\n           * @param {GridRow} row the row we want to make invisible\n           */\n          this.registerMethod( 'core', 'setRowInvisible', GridRow.prototype.setRowInvisible );\n\n          /**\n           * @ngdoc function\n           * @name clearRowInvisible\n           * @methodOf  ui.grid.core.api:PublicApi\n           * @description Clears any override on visibility for the row so that it returns to\n           * using normal filtering and other visibility calculations.\n           * If the row is currently invisible then sets it to visible and calls\n           * both grid refresh and emits the rowsVisibleChanged event\n           * TODO: if a filter is active then we can't just set it to visible?\n           * @param {GridRow} row the row we want to make visible\n           */\n          this.registerMethod( 'core', 'clearRowInvisible', GridRow.prototype.clearRowInvisible );\n\n          /**\n           * @ngdoc function\n           * @name getVisibleRows\n           * @methodOf  ui.grid.core.api:PublicApi\n           * @description Returns all visible rows\n           * @param {Grid} grid the grid you want to get visible rows from\n           * @returns {array} an array of gridRow\n           */\n          this.registerMethod( 'core', 'getVisibleRows', this.grid.getVisibleRows );\n\n          /**\n           * @ngdoc event\n           * @name rowsVisibleChanged\n           * @eventOf  ui.grid.core.api:PublicApi\n           * @description  is raised after the rows that are visible\n           * change.  The filtering is zero-based, so it isn't possible\n           * to say which rows changed (unlike in the selection feature).\n           * We can plausibly know which row was changed when setRowInvisible\n           * is called, but in that situation the user already knows which row\n           * they changed.  When a filter runs we don't know what changed,\n           * and that is the one that would have been useful.\n           *\n           */\n          this.registerEvent( 'core', 'rowsVisibleChanged' );\n\n          /**\n           * @ngdoc event\n           * @name rowsRendered\n           * @eventOf  ui.grid.core.api:PublicApi\n           * @description  is raised after the cache of visible rows is changed.\n           */\n          this.registerEvent( 'core', 'rowsRendered' );\n\n\n          /**\n           * @ngdoc event\n           * @name scrollBegin\n           * @eventOf  ui.grid.core.api:PublicApi\n           * @description  is raised when scroll begins.  Is throttled, so won't be raised too frequently\n           */\n          this.registerEvent( 'core', 'scrollBegin' );\n\n          /**\n           * @ngdoc event\n           * @name scrollEnd\n           * @eventOf  ui.grid.core.api:PublicApi\n           * @description  is raised when scroll has finished.  Is throttled, so won't be raised too frequently\n           */\n          this.registerEvent( 'core', 'scrollEnd' );\n\n          /**\n           * @ngdoc event\n           * @name canvasHeightChanged\n           * @eventOf  ui.grid.core.api:PublicApi\n           * @description  is raised when the canvas height has changed\n           * <br/>\n           * arguments: oldHeight, newHeight\n           */\n          this.registerEvent( 'core', 'canvasHeightChanged');\n\n          /**\n           * @ngdoc event\n           * @name gridDimensionChanged\n           * @eventOf  ui.grid.core.api:PublicApi\n           * @description  is raised when the grid dimensions have changed (when autoResize is on)\n           * <br/>\n           * arguments: oldGridHeight, oldGridWidth, newGridHeight, newGridWidth\n           */\n          this.registerEvent( 'core', 'gridDimensionChanged');\n        };\n\n        /**\n         * @ngdoc function\n         * @name ui.grid.class:suppressEvents\n         * @methodOf ui.grid.class:GridApi\n         * @description Used to execute a function while disabling the specified event listeners.\n         * Disables the listenerFunctions, executes the callbackFn, and then enables\n         * the listenerFunctions again\n         * @param {object} listenerFuncs listenerFunc or array of listenerFuncs to suppress. These must be the same\n         * functions that were used in the .on.eventName method\n         * @param {object} callBackFn function to execute\n         * @example\n         * <pre>\n         *    var navigate = function (newRowCol, oldRowCol){\n         *       //do something on navigate\n         *    }\n         *\n         *    gridApi.cellNav.on.navigate(scope,navigate);\n         *\n         *\n         *    //call the scrollTo event and suppress our navigate listener\n         *    //scrollTo will still raise the event for other listeners\n         *    gridApi.suppressEvents(navigate, function(){\n         *       gridApi.cellNav.scrollTo(aRow, aCol);\n         *    });\n         *\n         * </pre>\n         */\n        GridApi.prototype.suppressEvents = function (listenerFuncs, callBackFn) {\n          var self = this;\n          var listeners = angular.isArray(listenerFuncs) ? listenerFuncs : [listenerFuncs];\n\n          //find all registered listeners\n          var foundListeners = self.listeners.filter(function(listener) {\n            return listeners.some(function(l) {\n              return listener.handler === l;\n            });\n          });\n\n          //deregister all the listeners\n          foundListeners.forEach(function(l){\n            l.dereg();\n          });\n\n          callBackFn();\n\n          //reregister all the listeners\n          foundListeners.forEach(function(l){\n              l.dereg = registerEventWithAngular(l.eventId, l.handler, self.grid, l._this);\n          });\n\n        };\n\n        /**\n         * @ngdoc function\n         * @name registerEvent\n         * @methodOf ui.grid.class:GridApi\n         * @description Registers a new event for the given feature.  The event will get a\n         * .raise and .on prepended to it\n         * <br>\n         * .raise.eventName() - takes no arguments\n         * <br/>\n         * <br/>\n         * .on.eventName(scope, callBackFn, _this)\n         * <br/>\n         * scope - a scope reference to add a deregister call to the scopes .$on('destroy').  Scope is optional and can be a null value,\n         * but in this case you must deregister it yourself via the returned deregister function\n         * <br/>\n         * callBackFn - The function to call\n         * <br/>\n         * _this - optional this context variable for callbackFn. If omitted, grid.api will be used for the context\n         * <br/>\n         * .on.eventName returns a dereg funtion that will remove the listener.  It's not necessary to use it as the listener\n         * will be removed when the scope is destroyed.\n         * @param {string} featureName name of the feature that raises the event\n         * @param {string} eventName  name of the event\n         */\n        GridApi.prototype.registerEvent = function (featureName, eventName) {\n          var self = this;\n          if (!self[featureName]) {\n            self[featureName] = {};\n          }\n\n          var feature = self[featureName];\n          if (!feature.on) {\n            feature.on = {};\n            feature.raise = {};\n          }\n\n          var eventId = self.grid.id + featureName + eventName;\n\n          // gridUtil.logDebug('Creating raise event method ' + featureName + '.raise.' + eventName);\n          feature.raise[eventName] = function () {\n            $rootScope.$emit.apply($rootScope, [eventId].concat(Array.prototype.slice.call(arguments)));\n          };\n\n          // gridUtil.logDebug('Creating on event method ' + featureName + '.on.' + eventName);\n          feature.on[eventName] = function (scope, handler, _this) {\n            if ( scope !== null && typeof(scope.$on) === 'undefined' ){\n              gridUtil.logError('asked to listen on ' + featureName + '.on.' + eventName + ' but scope wasn\\'t passed in the input parameters.  It is legitimate to pass null, but you\\'ve passed something else, so you probably forgot to provide scope rather than did it deliberately, not registering');\n              return;\n            }\n            var deregAngularOn = registerEventWithAngular(eventId, handler, self.grid, _this);\n\n            //track our listener so we can turn off and on\n            var listener = {handler: handler, dereg: deregAngularOn, eventId: eventId, scope: scope, _this:_this};\n            self.listeners.push(listener);\n\n            var removeListener = function(){\n              listener.dereg();\n              var index = self.listeners.indexOf(listener);\n              self.listeners.splice(index,1);\n            };\n\n            //destroy tracking when scope is destroyed\n            if (scope) {\n              scope.$on('$destroy', function() {\n                removeListener();\n              });\n            }\n\n\n            return removeListener;\n          };\n        };\n\n        function registerEventWithAngular(eventId, handler, grid, _this) {\n          return $rootScope.$on(eventId, function (event) {\n            var args = Array.prototype.slice.call(arguments);\n            args.splice(0, 1); //remove evt argument\n            handler.apply(_this ? _this : grid.api, args);\n          });\n        }\n\n        /**\n         * @ngdoc function\n         * @name registerEventsFromObject\n         * @methodOf ui.grid.class:GridApi\n         * @description Registers features and events from a simple objectMap.\n         * eventObjectMap must be in this format (multiple features allowed)\n         * <pre>\n         * {featureName:\n         *        {\n         *          eventNameOne:function(args){},\n         *          eventNameTwo:function(args){}\n         *        }\n         *  }\n         * </pre>\n         * @param {object} eventObjectMap map of feature/event names\n         */\n        GridApi.prototype.registerEventsFromObject = function (eventObjectMap) {\n          var self = this;\n          var features = [];\n          angular.forEach(eventObjectMap, function (featProp, featPropName) {\n            var feature = {name: featPropName, events: []};\n            angular.forEach(featProp, function (prop, propName) {\n              feature.events.push(propName);\n            });\n            features.push(feature);\n          });\n\n          features.forEach(function (feature) {\n            feature.events.forEach(function (event) {\n              self.registerEvent(feature.name, event);\n            });\n          });\n\n        };\n\n        /**\n         * @ngdoc function\n         * @name registerMethod\n         * @methodOf ui.grid.class:GridApi\n         * @description Registers a new event for the given feature\n         * @param {string} featureName name of the feature\n         * @param {string} methodName  name of the method\n         * @param {object} callBackFn function to execute\n         * @param {object} _this binds callBackFn 'this' to _this.  Defaults to gridApi.grid\n         */\n        GridApi.prototype.registerMethod = function (featureName, methodName, callBackFn, _this) {\n          if (!this[featureName]) {\n            this[featureName] = {};\n          }\n\n          var feature = this[featureName];\n\n          feature[methodName] = gridUtil.createBoundedWrapper(_this || this.grid, callBackFn);\n        };\n\n        /**\n         * @ngdoc function\n         * @name registerMethodsFromObject\n         * @methodOf ui.grid.class:GridApi\n         * @description Registers features and methods from a simple objectMap.\n         * eventObjectMap must be in this format (multiple features allowed)\n         * <br>\n         * {featureName:\n         *        {\n         *          methodNameOne:function(args){},\n         *          methodNameTwo:function(args){}\n         *        }\n         * @param {object} eventObjectMap map of feature/event names\n         * @param {object} _this binds this to _this for all functions.  Defaults to gridApi.grid\n         */\n        GridApi.prototype.registerMethodsFromObject = function (methodMap, _this) {\n          var self = this;\n          var features = [];\n          angular.forEach(methodMap, function (featProp, featPropName) {\n            var feature = {name: featPropName, methods: []};\n            angular.forEach(featProp, function (prop, propName) {\n              feature.methods.push({name: propName, fn: prop});\n            });\n            features.push(feature);\n          });\n\n          features.forEach(function (feature) {\n            feature.methods.forEach(function (method) {\n              self.registerMethod(feature.name, method.name, method.fn, _this);\n            });\n          });\n\n        };\n\n        return GridApi;\n\n      }]);\n\n})();\n\n(function(){\n\nangular.module('ui.grid')\n.factory('GridColumn', ['gridUtil', 'uiGridConstants', 'i18nService', function(gridUtil, uiGridConstants, i18nService) {\n\n  /**\n   * ******************************************************************************************\n   * PaulL1: Ugly hack here in documentation.  These properties are clearly properties of GridColumn,\n   * and need to be noted as such for those extending and building ui-grid itself.\n   * However, from an end-developer perspective, they interact with all these through columnDefs,\n   * and they really need to be documented there.  I feel like they're relatively static, and\n   * I can't find an elegant way for ngDoc to reference to both....so I've duplicated each\n   * comment block.  Ugh.\n   *\n   */\n\n  /**\n   * @ngdoc property\n   * @name name\n   * @propertyOf ui.grid.class:GridColumn\n   * @description (mandatory) Each column should have a name, although for backward\n   * compatibility with 2.x name can be omitted if field is present.\n   *\n   * Important - This must be unique to each column on a web page since it can\n   * be used as a key for retrieving information such as custom sort algorithms.\n   *\n   */\n\n  /**\n   * @ngdoc property\n   * @name name\n   * @propertyOf ui.grid.class:GridOptions.columnDef\n   * @description (mandatory) Each column should have a name, although for backward\n   * compatibility with 2.x name can be omitted if field is present.\n   *\n   * Important - This must be unique to each column on a web page since it can\n   * be used as a key for retrieving information such as custom sort algorithms.\n   *\n   */\n\n  /**\n   * @ngdoc property\n   * @name displayName\n   * @propertyOf ui.grid.class:GridColumn\n   * @description Column name that will be shown in the header.  If displayName is not\n   * provided then one is generated using the name.\n   *\n   */\n\n  /**\n   * @ngdoc property\n   * @name displayName\n   * @propertyOf ui.grid.class:GridOptions.columnDef\n   * @description Column name that will be shown in the header.  If displayName is not\n   * provided then one is generated using the name.\n   *\n   */\n\n  /**\n   * @ngdoc property\n   * @name field\n   * @propertyOf ui.grid.class:GridColumn\n   * @description field must be provided if you wish to bind to a\n   * property in the data source.  Should be an angular expression that evaluates against grid.options.data\n   * array element.  Can be a complex expression: <code>employee.address.city</code>, or can be a function: <code>employee.getFullAddress()</code>.\n   * See the angular docs on binding expressions.\n   *\n   */\n\n  /**\n   * @ngdoc property\n   * @name field\n   * @propertyOf ui.grid.class:GridOptions.columnDef\n   * @description field must be provided if you wish to bind to a\n   * property in the data source.  Should be an angular expression that evaluates against grid.options.data\n   * array element.  Can be a complex expression: <code>employee.address.city</code>, or can be a function: <code>employee.getFullAddress()</code>.    * See the angular docs on binding expressions.    *\n   */\n\n  /**\n   * @ngdoc property\n   * @name filter\n   * @propertyOf ui.grid.class:GridColumn\n   * @description Filter on this column.\n   *\n   * Available built-in conditions and types are listed under {@link jui.grid.service:uiGridConstants#properties_filter uiGridOptions.filter}\n   * @example\n   * <pre>{ term: 'text', condition: uiGridConstants.filter.STARTS_WITH, placeholder: 'type to filter...', ariaLabel: 'Filter for text', flags: { caseSensitive: false }, type: uiGridConstants.filter.SELECT, [ { value: 1, label: 'male' }, { value: 2, label: 'female' } ] }</pre>\n   *\n   */\n\n  /**\n   * @ngdoc property\n   * @name extraStyle\n   * @propertyOf ui.grid.class:GridColumn\n   * @description additional on this column.\n   * @example\n   * <pre>{extraStyle: {display:'table-cell'}}</pre>\n   *\n   */\n\n  /**\n   * @ngdoc object\n   * @name ui.grid.class:GridColumn\n   * @description Represents the viewModel for each column.  Any state or methods needed for a Grid Column\n   * are defined on this prototype\n   * @param {ColumnDef} colDef the column def to associate with this column\n   * @param {number} uid the unique and immutable uid we'd like to allocate to this column\n   * @param {Grid} grid the grid we'd like to create this column in\n   */\n  function GridColumn(colDef, uid, grid) {\n    var self = this;\n\n    self.grid = grid;\n    self.uid = uid;\n\n    self.updateColumnDef(colDef, true);\n\n    self.aggregationValue = undefined;\n\n    // The footer cell registers to listen for the rowsRendered event, and calls this.  Needed to be\n    // in something with a scope so that the dereg would get called\n    self.updateAggregationValue = function() {\n\n     // gridUtil.logDebug('getAggregationValue for Column ' + self.colDef.name);\n\n      /**\n       * @ngdoc property\n       * @name aggregationType\n       * @propertyOf ui.grid.class:GridOptions.columnDef\n       * @description The aggregation that you'd like to show in the columnFooter for this\n       * column.  Valid values are in\n       * {@link ui.grid.service:uiGridConstants#properties_aggregationTypes uiGridConstants.aggregationTypes},\n       * and currently include `uiGridConstants.aggregationTypes.count`,\n       * `uiGridConstants.aggregationTypes.sum`, `uiGridConstants.aggregationTypes.avg`, `uiGridConstants.aggregationTypes.min`,\n       * `uiGridConstants.aggregationTypes.max`.\n       *\n       * You can also provide a function as the aggregation type, in this case your function needs to accept the full\n       * set of visible rows, and return a value that should be shown\n       */\n      if (!self.aggregationType) {\n        self.aggregationValue = undefined;\n        return;\n      }\n\n      var result = 0;\n      var visibleRows = self.grid.getVisibleRows();\n\n      var cellValues = function(){\n        var values = [];\n        visibleRows.forEach(function (row) {\n          var cellValue = self.grid.getCellValue(row, self);\n          var cellNumber = Number(cellValue);\n          if (!isNaN(cellNumber)) {\n            values.push(cellNumber);\n          }\n        });\n        return values;\n      };\n\n      if (angular.isFunction(self.aggregationType)) {\n        self.aggregationValue = self.aggregationType(visibleRows, self);\n      }\n      else if (self.aggregationType === uiGridConstants.aggregationTypes.count) {\n        self.aggregationValue = self.grid.getVisibleRowCount();\n      }\n      else if (self.aggregationType === uiGridConstants.aggregationTypes.sum) {\n        cellValues().forEach(function (value) {\n          result += value;\n        });\n        self.aggregationValue = result;\n      }\n      else if (self.aggregationType === uiGridConstants.aggregationTypes.avg) {\n        cellValues().forEach(function (value) {\n          result += value;\n        });\n        result = result / cellValues().length;\n        self.aggregationValue = result;\n      }\n      else if (self.aggregationType === uiGridConstants.aggregationTypes.min) {\n        self.aggregationValue = Math.min.apply(null, cellValues());\n      }\n      else if (self.aggregationType === uiGridConstants.aggregationTypes.max) {\n        self.aggregationValue = Math.max.apply(null, cellValues());\n      }\n      else {\n        self.aggregationValue = '\\u00A0';\n      }\n    };\n\n//     var throttledUpdateAggregationValue = gridUtil.throttle(updateAggregationValue, self.grid.options.aggregationCalcThrottle, { trailing: true, context: self.name });\n\n    /**\n     * @ngdoc function\n     * @name getAggregationValue\n     * @methodOf ui.grid.class:GridColumn\n     * @description gets the aggregation value based on the aggregation type for this column.\n     * Debounced using scrollDebounce option setting\n     */\n    this.getAggregationValue =  function() {\n//      if (!self.grid.isScrollingVertically && !self.grid.isScrollingHorizontally) {\n//        throttledUpdateAggregationValue();\n//      }\n\n      return self.aggregationValue;\n    };\n  }\n\n  /**\n   * @ngdoc function\n   * @name hideColumn\n   * @methodOf ui.grid.class:GridColumn\n   * @description Hides the column by setting colDef.visible = false\n   */\n  GridColumn.prototype.hideColumn = function() {\n    this.colDef.visible = false;\n  };\n\n\n  /**\n   * @ngdoc method\n   * @methodOf ui.grid.class:GridColumn\n   * @name setPropertyOrDefault\n   * @description Sets a property on the column using the passed in columnDef, and\n   * setting the defaultValue if the value cannot be found on the colDef\n   * @param {ColumnDef} colDef the column def to look in for the property value\n   * @param {string} propName the property name we'd like to set\n   * @param {object} defaultValue the value to use if the colDef doesn't provide the setting\n   */\n  GridColumn.prototype.setPropertyOrDefault = function (colDef, propName, defaultValue) {\n    var self = this;\n\n    // Use the column definition filter if we were passed it\n    if (typeof(colDef[propName]) !== 'undefined' && colDef[propName]) {\n      self[propName] = colDef[propName];\n    }\n    // Otherwise use our own if it's set\n    else if (typeof(self[propName]) !== 'undefined') {\n      self[propName] = self[propName];\n    }\n    // Default to empty object for the filter\n    else {\n      self[propName] = defaultValue ? defaultValue : {};\n    }\n  };\n\n\n\n  /**\n   * @ngdoc property\n   * @name width\n   * @propertyOf ui.grid.class:GridOptions.columnDef\n   * @description sets the column width.  Can be either\n   * a number or a percentage, or an * for auto.\n   * @example\n   * <pre>  $scope.gridOptions.columnDefs = [ { field: 'field1', width: 100},\n   *                                          { field: 'field2', width: '20%'},\n   *                                          { field: 'field3', width: '*' }]; </pre>\n   *\n   */\n\n  /**\n   * @ngdoc property\n   * @name minWidth\n   * @propertyOf ui.grid.class:GridOptions.columnDef\n   * @description Sets the minimum column width.  Should be a number.\n   * Defaults to gridOptions.minimumColumnSize if minWidth is not provided.\n   * @example\n   * <pre>  $scope.gridOptions.columnDefs = [ { field: 'field1', minWidth: 100}]; </pre>\n   *\n   */\n\n  /**\n   * @ngdoc property\n   * @name maxWidth\n   * @propertyOf ui.grid.class:GridOptions.columnDef\n   * @description sets the maximum column width.  Should be a number.\n   * @example\n   * <pre>  $scope.gridOptions.columnDefs = [ { field: 'field1', maxWidth: 100}]; </pre>\n   *\n   */\n\n  /**\n   * @ngdoc property\n   * @name visible\n   * @propertyOf ui.grid.class:GridOptions.columnDef\n   * @description sets whether or not the column is visible\n   * </br>Default is true\n   * @example\n   * <pre>  $scope.gridOptions.columnDefs = [\n   *     { field: 'field1', visible: true},\n   *     { field: 'field2', visible: false }\n   *   ]; </pre>\n   *\n   */\n\n /**\n  * @ngdoc property\n  * @name sort\n  * @propertyOf ui.grid.class:GridOptions.columnDef\n  * @description An object of sort information, attributes are:\n  *\n  * - direction: values are {@link ui.grid.service:uiGridConstants#properties_ASC uiGridConstants.ASC}\n  *  or {@link ui.grid.service:uiGridConstants#properties_DESC uiGridConstants.DESC}\n  * - ignoreSort: if set to true this sort is ignored (used by tree to manipulate the sort functionality)\n  * - priority: says what order to sort the columns in (lower priority gets sorted first).\n  * @example\n  * <pre>\n  *   $scope.gridOptions.columnDefs = [{\n  *     field: 'field1',\n  *     sort: {\n  *       direction: uiGridConstants.ASC,\n  *       ignoreSort: true,\n  *       priority: 0\n  *      }\n  *   }];\n  * </pre>\n  */\n\n\n  /**\n   * @ngdoc property\n   * @name sortingAlgorithm\n   * @propertyOf ui.grid.class:GridOptions.columnDef\n   * @description Algorithm to use for sorting this column. Takes 'a' and 'b' parameters\n   * like any normal sorting function with additional 'rowA', 'rowB', and 'direction' parameters\n   * that are the row objects and the current direction of the sort respectively.\n   *\n   */\n\n   /**\n    * @ngdoc property\n    * @name defaultSort\n    * @propertyOf ui.grid.class:GridOptions.columnDef\n    * @description An object of sort information, provides a hidden default ordering of the data\n    * when no user sorts are applied, or when a user-provided sort deems two rows to be equal.\n    *\n    * May be combined with a regular {@link ui.grid.class:GridOptions.columnDef#properties_sort columnDef.sort}\n    * to explicitly sort by that column by default.\n    *\n    * Shares the same object format as {@link ui.grid.class:GridOptions.columnDef#properties_sort columnDef.sort}.\n    *\n    * Note that a defaultSort can never take priority over an explicit sort.\n    * @example\n    * <pre>\n    *   $scope.gridOptions.columnDefs = [{\n    *     field: 'field1',\n    *     defaultSort: {\n    *       direction: uiGridConstants.ASC,\n    *       priority: 0\n    *      }\n    *   }];\n    * </pre>\n    */\n\n  /**\n   * @ngdoc array\n   * @name filters\n   * @propertyOf ui.grid.class:GridOptions.columnDef\n   * @description Specify multiple filter fields.\n   * @example\n   * <pre>$scope.gridOptions.columnDefs = [\n   *   {\n   *     field: 'field1', filters: [\n   *       {\n   *         term: 'aa',\n   *         condition: uiGridConstants.filter.STARTS_WITH,\n   *         placeholder: 'starts with...',\n   *         ariaLabel: 'Filter for field1',\n   *         flags: { caseSensitive: false },\n   *         type: uiGridConstants.filter.SELECT,\n   *         selectOptions: [ { value: 1, label: 'male' }, { value: 2, label: 'female' } ]\n   *       },\n   *       {\n   *         condition: uiGridConstants.filter.ENDS_WITH,\n   *         placeholder: 'ends with...'\n   *       }\n   *     ]\n   *   }\n   * ]; </pre>\n   *\n   *\n   */\n\n  /**\n   * @ngdoc array\n   * @name filters\n   * @propertyOf ui.grid.class:GridColumn\n   * @description Filters for this column. Includes 'term' property bound to filter input elements.\n   * @example\n   * <pre>[\n   *   {\n   *     term: 'foo', // ngModel for <input>\n   *     condition: uiGridConstants.filter.STARTS_WITH,\n   *     placeholder: 'starts with...',\n   *     ariaLabel: 'Filter for foo',\n   *     flags: { caseSensitive: false },\n   *     type: uiGridConstants.filter.SELECT,\n   *     selectOptions: [ { value: 1, label: 'male' }, { value: 2, label: 'female' } ]\n   *   },\n   *   {\n   *     term: 'baz',\n   *     condition: uiGridConstants.filter.ENDS_WITH,\n   *     placeholder: 'ends with...'\n   *   }\n   * ] </pre>\n   *\n   *\n   */\n\n  /**\n   * @ngdoc array\n   * @name menuItems\n   * @propertyOf ui.grid.class:GridOptions.columnDef\n   * @description used to add menu items to a column.  Refer to the tutorial on this\n   * functionality.  A number of settings are supported:\n   *\n   * - title: controls the title that is displayed in the menu\n   * - icon: the icon shown alongside that title\n   * - action: the method to call when the menu is clicked\n   * - shown: a function to evaluate to determine whether or not to show the item\n   * - active: a function to evaluate to determine whether or not the item is currently selected\n   * - context: context to pass to the action function, available in this.context in your handler\n   * - leaveOpen: if set to true, the menu should stay open after the action, defaults to false\n   * @example\n   * <pre>  $scope.gridOptions.columnDefs = [\n   *   { field: 'field1', menuItems: [\n   *     {\n   *       title: 'Outer Scope Alert',\n   *       icon: 'ui-grid-icon-info-circled',\n   *       action: function($event) {\n   *         this.context.blargh(); // $scope.blargh() would work too, this is just an example\n   *       },\n   *       shown: function() { return true; },\n   *       active: function() { return true; },\n   *       context: $scope\n   *     },\n   *     {\n   *       title: 'Grid ID',\n   *       action: function() {\n   *         alert('Grid ID: ' + this.grid.id);\n   *       }\n   *     }\n   *   ] }]; </pre>\n   *\n   */\n\n  /**\n   * @ngdoc method\n   * @methodOf ui.grid.class:GridColumn\n   * @name updateColumnDef\n   * @description Moves settings from the columnDef down onto the column,\n   * and sets properties as appropriate\n   * @param {ColumnDef} colDef the column def to look in for the property value\n   * @param {boolean} isNew whether the column is being newly created, if not\n   * we're updating an existing column, and some items such as the sort shouldn't\n   * be copied down\n   */\n  GridColumn.prototype.updateColumnDef = function(colDef, isNew) {\n    var self = this;\n\n    self.colDef = colDef;\n\n    if (colDef.name === undefined) {\n      throw new Error('colDef.name is required for column at index ' + self.grid.options.columnDefs.indexOf(colDef));\n    }\n\n    self.displayName = (colDef.displayName === undefined) ? gridUtil.readableColumnName(colDef.name) : colDef.displayName;\n\n    if (!angular.isNumber(self.width) || !self.hasCustomWidth || colDef.allowCustomWidthOverride) {\n      var colDefWidth = colDef.width;\n      var parseErrorMsg = \"Cannot parse column width '\" + colDefWidth + \"' for column named '\" + colDef.name + \"'\";\n      self.hasCustomWidth = false;\n\n      if (!angular.isString(colDefWidth) && !angular.isNumber(colDefWidth)) {\n        self.width = '*';\n      } else if (angular.isString(colDefWidth)) {\n        // See if it ends with a percent\n        if (gridUtil.endsWith(colDefWidth, '%')) {\n          // If so we should be able to parse the non-percent-sign part to a number\n          var percentStr = colDefWidth.replace(/%/g, '');\n          var percent = parseInt(percentStr, 10);\n          if (isNaN(percent)) {\n            throw new Error(parseErrorMsg);\n          }\n          self.width = colDefWidth;\n        }\n        // And see if it's a number string\n        else if (colDefWidth.match(/^(\\d+)$/)) {\n          self.width = parseInt(colDefWidth.match(/^(\\d+)$/)[1], 10);\n        }\n        // Otherwise it should be a string of asterisks\n        else if (colDefWidth.match(/^\\*+$/)) {\n          self.width = colDefWidth;\n        }\n        // No idea, throw an Error\n        else {\n          throw new Error(parseErrorMsg);\n        }\n      }\n      // Is a number, use it as the width\n      else {\n        self.width = colDefWidth;\n      }\n    }\n\n    function isValidWidthValue(value) {\n      return angular.isString(value) || angular.isNumber(value);\n    }\n\n    ['minWidth', 'maxWidth'].forEach(function (name) {\n      var minOrMaxWidth = colDef[name];\n      var parseErrorMsg = \"Cannot parse column \" + name + \" '\" + minOrMaxWidth + \"' for column named '\" + colDef.name + \"'\";\n\n      // default minWidth to the minimumColumnSize\n      if (name === 'minWidth' && !isValidWidthValue(minOrMaxWidth) && angular.isDefined(self.grid.options.minimumColumnSize)) {\n        minOrMaxWidth = self.grid.options.minimumColumnSize;\n      }\n\n      if (!isValidWidthValue(minOrMaxWidth)) {\n        // Sets default minWidth and maxWidth values\n        self[name] = ((name === 'minWidth') ? 30 : 9000);\n      } else if (angular.isString(minOrMaxWidth)) {\n        if (minOrMaxWidth.match(/^(\\d+)$/)) {\n          self[name] = parseInt(minOrMaxWidth.match(/^(\\d+)$/)[1], 10);\n        } else {\n          throw new Error(parseErrorMsg);\n        }\n      } else {\n        self[name] = minOrMaxWidth;\n      }\n    });\n\n    //use field if it is defined; name if it is not\n    self.field = (colDef.field === undefined) ? colDef.name : colDef.field;\n\n    if ( typeof( self.field ) !== 'string' ){\n      gridUtil.logError( 'Field is not a string, this is likely to break the code, Field is: ' + self.field );\n    }\n\n    self.name = colDef.name;\n\n    // Use colDef.displayName as long as it's not undefined, otherwise default to the field name\n    self.displayName = (colDef.displayName === undefined) ? gridUtil.readableColumnName(colDef.name) : colDef.displayName;\n\n    //self.originalIndex = index;\n\n    self.aggregationType = angular.isDefined(colDef.aggregationType) ? colDef.aggregationType : null;\n    self.footerCellTemplate = angular.isDefined(colDef.footerCellTemplate) ? colDef.footerCellTemplate : null;\n\n    /**\n     * @ngdoc property\n     * @name cellTooltip\n     * @propertyOf ui.grid.class:GridOptions.columnDef\n     * @description Whether or not to show a tooltip when a user hovers over the cell.\n     * If set to false, no tooltip.  If true, the cell value is shown in the tooltip (useful\n     * if you have long values in your cells), if a function then that function is called\n     * passing in the row and the col `cellTooltip( row, col )`, and the return value is shown in the tooltip,\n     * if it is a static string then displays that static string.\n     *\n     * Defaults to false\n     *\n     */\n    if ( typeof(colDef.cellTooltip) === 'undefined' || colDef.cellTooltip === false ) {\n      self.cellTooltip = false;\n    } else if ( colDef.cellTooltip === true ){\n      self.cellTooltip = function(row, col) {\n        return self.grid.getCellValue( row, col );\n      };\n    } else if (typeof(colDef.cellTooltip) === 'function' ){\n      self.cellTooltip = colDef.cellTooltip;\n    } else {\n      self.cellTooltip = function ( row, col ){\n        return col.colDef.cellTooltip;\n      };\n    }\n\n    /**\n     * @ngdoc property\n     * @name headerTooltip\n     * @propertyOf ui.grid.class:GridOptions.columnDef\n     * @description Whether or not to show a tooltip when a user hovers over the header cell.\n     * If set to false, no tooltip.  If true, the displayName is shown in the tooltip (useful\n     * if you have long values in your headers), if a function then that function is called\n     * passing in the row and the col `headerTooltip( col )`, and the return value is shown in the tooltip,\n     * if a static string then shows that static string.\n     *\n     * Defaults to false\n     *\n     */\n    if ( typeof(colDef.headerTooltip) === 'undefined' || colDef.headerTooltip === false ) {\n      self.headerTooltip = false;\n    } else if ( colDef.headerTooltip === true ){\n      self.headerTooltip = function(col) {\n        return col.displayName;\n      };\n    } else if (typeof(colDef.headerTooltip) === 'function' ){\n      self.headerTooltip = colDef.headerTooltip;\n    } else {\n      self.headerTooltip = function ( col ) {\n        return col.colDef.headerTooltip;\n      };\n    }\n\n\n    /**\n     * @ngdoc property\n     * @name footerCellClass\n     * @propertyOf ui.grid.class:GridOptions.columnDef\n     * @description footerCellClass can be a string specifying the class to append to a cell\n     * or it can be a function(grid, row, col, rowRenderIndex, colRenderIndex) that returns a class name\n     *\n     */\n    self.footerCellClass = colDef.footerCellClass;\n\n    /**\n     * @ngdoc property\n     * @name cellClass\n     * @propertyOf ui.grid.class:GridOptions.columnDef\n     * @description cellClass can be a string specifying the class to append to a cell\n     * or it can be a function(grid, row, col, rowRenderIndex, colRenderIndex) that returns a class name\n     *\n     */\n    self.cellClass = colDef.cellClass;\n\n    /**\n     * @ngdoc property\n     * @name headerCellClass\n     * @propertyOf ui.grid.class:GridOptions.columnDef\n     * @description headerCellClass can be a string specifying the class to append to a cell\n     * or it can be a function(grid, row, col, rowRenderIndex, colRenderIndex) that returns a class name\n     *\n     */\n    self.headerCellClass = colDef.headerCellClass;\n\n    /**\n     * @ngdoc property\n     * @name cellFilter\n     * @propertyOf ui.grid.class:GridOptions.columnDef\n     * @description cellFilter is a filter to apply to the content of each cell\n     * @example\n     * <pre>\n     *   gridOptions.columnDefs[0].cellFilter = 'date'\n     *\n     */\n    self.cellFilter = colDef.cellFilter ? colDef.cellFilter : \"\";\n\n    /**\n     * @ngdoc boolean\n     * @name sortCellFiltered\n     * @propertyOf ui.grid.class:GridOptions.columnDef\n     * @description (optional) False by default. When `true` uiGrid will apply the cellFilter before\n     * sorting the data. Note that when using this option uiGrid will assume that the displayed value is\n     * a string, and use the {@link ui.grid.class:RowSorter#sortAlpha sortAlpha} `sortFn`. It is possible\n     * to return a non-string value from an angularjs filter, in which case you should define a {@link ui.grid.class:GridOptions.columnDef#sortingAlgorithm sortingAlgorithm}\n     * for the column which hanldes the returned type. You may specify one of the `sortingAlgorithms`\n     * found in the {@link ui.grid.RowSorter rowSorter} service.\n     */\n    self.sortCellFiltered = colDef.sortCellFiltered ? true : false;\n\n    /**\n     * @ngdoc boolean\n     * @name filterCellFiltered\n     * @propertyOf ui.grid.class:GridOptions.columnDef\n     * @description (optional) False by default. When `true` uiGrid will apply the cellFilter before\n     * applying \"search\" `filters`.\n     */\n    self.filterCellFiltered = colDef.filterCellFiltered ? true : false;\n\n    /**\n     * @ngdoc property\n     * @name headerCellFilter\n     * @propertyOf ui.grid.class:GridOptions.columnDef\n     * @description headerCellFilter is a filter to apply to the content of the column header\n     * @example\n     * <pre>\n     *   gridOptions.columnDefs[0].headerCellFilter = 'translate'\n     *\n     */\n    self.headerCellFilter = colDef.headerCellFilter ? colDef.headerCellFilter : \"\";\n\n    /**\n     * @ngdoc property\n     * @name footerCellFilter\n     * @propertyOf ui.grid.class:GridOptions.columnDef\n     * @description footerCellFilter is a filter to apply to the content of the column footer\n     * @example\n     * <pre>\n     *   gridOptions.columnDefs[0].footerCellFilter = 'date'\n     *\n     */\n    self.footerCellFilter = colDef.footerCellFilter ? colDef.footerCellFilter : \"\";\n\n    self.visible = gridUtil.isNullOrUndefined(colDef.visible) || colDef.visible;\n\n    self.headerClass = colDef.headerClass;\n    //self.cursor = self.sortable ? 'pointer' : 'default';\n\n    // Turn on sorting by default\n    self.enableSorting = typeof(colDef.enableSorting) !== 'undefined' ? colDef.enableSorting : self.grid.options.enableSorting;\n    self.sortingAlgorithm = colDef.sortingAlgorithm;\n\n    /**\n     * @ngdoc property\n     * @name sortDirectionCycle\n     * @propertyOf ui.grid.class:GridOptions.columnDef\n     * @description (optional) An array of {@link ui.grid.service:uiGridConstants#properties_ASC sort directions},\n     * specifying the order that they should cycle through as the user repeatedly clicks on the column heading.\n     * The default is `[null, uiGridConstants.ASC, uiGridConstants.DESC]`. Null\n     * refers to the unsorted state. This does not affect the initial sort\n     * direction; use the {@link ui.grid.class:GridOptions.columnDef#sort sort}\n     * property for that. If\n     * {@link ui.grid.class:GridOptions.columnDef#suppressRemoveSort suppressRemoveSort}\n     * is also set, the unsorted state will be skipped even if it is listed here.\n     * Each direction may not appear in the list more than once (e.g. `[ASC,\n     * DESC, DESC]` is not allowed), and the list may not be empty.\n     */\n    self.sortDirectionCycle = typeof(colDef.sortDirectionCycle) !== 'undefined' ?\n      colDef.sortDirectionCycle :\n      [null, uiGridConstants.ASC, uiGridConstants.DESC];\n\n    /**\n     * @ngdoc boolean\n     * @name suppressRemoveSort\n     * @propertyOf ui.grid.class:GridOptions.columnDef\n     * @description (optional) False by default. When enabled, this setting hides the removeSort option\n     * in the menu, and prevents users from manually removing the sort\n     */\n    if ( typeof(self.suppressRemoveSort) === 'undefined'){\n      self.suppressRemoveSort = typeof(colDef.suppressRemoveSort) !== 'undefined' ? colDef.suppressRemoveSort : false;\n    }\n\n    /**\n     * @ngdoc property\n     * @name enableFiltering\n     * @propertyOf ui.grid.class:GridOptions.columnDef\n     * @description turn off filtering for an individual column, where\n     * you've turned on filtering for the overall grid\n     * @example\n     * <pre>\n     *   gridOptions.columnDefs[0].enableFiltering = false;\n     *\n     */\n    // Turn on filtering by default (it's disabled by default at the Grid level)\n    self.enableFiltering = typeof(colDef.enableFiltering) !== 'undefined' ? colDef.enableFiltering : true;\n\n    // self.menuItems = colDef.menuItems;\n    self.setPropertyOrDefault(colDef, 'menuItems', []);\n\n    // Use the column definition sort if we were passed it, but only if this is a newly added column\n    if ( isNew ){\n      self.setPropertyOrDefault(colDef, 'sort');\n    }\n\n    // Use the column definition defaultSort always, unlike normal sort\n    self.setPropertyOrDefault(colDef, 'defaultSort');\n\n    // Set up default filters array for when one is not provided.\n    //   In other words, this (in column def):\n    //\n    //       filter: { term: 'something', flags: {}, condition: [CONDITION] }\n    //\n    //   is just shorthand for this:\n    //\n    //       filters: [{ term: 'something', flags: {}, condition: [CONDITION] }]\n    //\n    var defaultFilters = [];\n    if (colDef.filter) {\n      defaultFilters.push(colDef.filter);\n    }\n    else if ( colDef.filters ){\n      defaultFilters = colDef.filters;\n    } else {\n      // Add an empty filter definition object, which will\n      // translate to a guessed condition and no pre-populated\n      // value for the filter <input>.\n      defaultFilters.push({});\n    }\n\n    /**\n     * @ngdoc property\n     * @name filter\n     * @propertyOf ui.grid.class:GridOptions.columnDef\n     * @description Specify a single filter field on this column.\n     *\n     * A filter consists of a condition, a term, and a placeholder:\n     *\n     * - condition defines how rows are chosen as matching the filter term. This can be set to\n     * one of the constants in {@link ui.grid.service:uiGridConstants#properties_filter uiGridConstants.filter},\n     * or you can supply a custom filter function\n     * that gets passed the following arguments: [searchTerm, cellValue, row, column].\n     * - term: If set, the filter field will be pre-populated\n     * with this value.\n     * - placeholder: String that will be set to the `<input>.placeholder` attribute.\n     * - ariaLabel: String that will be set to the `<input>.ariaLabel` attribute. This is what is read as a label to screen reader users.\n     * - noTerm: set this to true if you have defined a custom function in condition, and\n     * your custom function doesn't require a term (so it can run even when the term is null)\n     * - rawTerm: set this to true if you have defined a custom function in condition, and\n     * your custom function requires access to the raw unmodified search term that was entered\n     * - flags: only flag currently available is `caseSensitive`, set to false if you don't want\n     * case sensitive matching\n     * - type: defaults to {@link ui.grid.service:uiGridConstants#properties_filter uiGridConstants.filter.INPUT},\n     * which gives a text box.  If set to {@link ui.grid.service:uiGridConstants#properties_filter uiGridConstants.filter.SELECT}\n     * then a select box will be shown with options selectOptions\n     * - selectOptions: options in the format `[ { value: 1, label: 'male' }]`.  No i18n filter is provided, you need\n     * to perform the i18n on the values before you provide them\n     * - disableCancelFilterButton: defaults to false. If set to true then the 'x' button that cancels/clears the filter\n     * will not be shown.\n     * @example\n     * <pre>$scope.gridOptions.columnDefs = [\n     *   {\n     *     field: 'field1',\n     *     filter: {\n     *       term: 'xx',\n     *       condition: uiGridConstants.filter.STARTS_WITH,\n     *       placeholder: 'starts with...',\n     *       ariaLabel: 'Starts with filter for field1',\n     *       flags: { caseSensitive: false },\n     *       type: uiGridConstants.filter.SELECT,\n     *       selectOptions: [ { value: 1, label: 'male' }, { value: 2, label: 'female' } ],\n     *       disableCancelFilterButton: true\n     *     }\n     *   }\n     * ]; </pre>\n     *\n     */\n\n    /*\n\n\n    /*\n\n      self.filters = [\n        {\n          term: 'search term'\n          condition: uiGridConstants.filter.CONTAINS,\n          placeholder: 'my placeholder',\n          ariaLabel: 'Starts with filter for field1',\n          flags: {\n            caseSensitive: true\n          }\n        }\n      ]\n\n    */\n\n    // Only set filter if this is a newly added column, if we're updating an existing\n    // column then we don't want to put the default filter back if the user may have already\n    // removed it.\n    // However, we do want to keep the settings if they change, just not the term\n    if ( isNew ) {\n      self.setPropertyOrDefault(colDef, 'filter');\n      self.setPropertyOrDefault(colDef, 'extraStyle');\n      self.setPropertyOrDefault(colDef, 'filters', defaultFilters);\n    } else if ( self.filters.length === defaultFilters.length ) {\n      self.filters.forEach( function( filter, index ){\n        if (typeof(defaultFilters[index].placeholder) !== 'undefined') {\n          filter.placeholder = defaultFilters[index].placeholder;\n        }\n        if (typeof(defaultFilters[index].ariaLabel) !== 'undefined') {\n          filter.ariaLabel = defaultFilters[index].ariaLabel;\n        }\n        if (typeof(defaultFilters[index].flags) !== 'undefined') {\n          filter.flags = defaultFilters[index].flags;\n        }\n        if (typeof(defaultFilters[index].type) !== 'undefined') {\n          filter.type = defaultFilters[index].type;\n        }\n        if (typeof(defaultFilters[index].selectOptions) !== 'undefined') {\n          filter.selectOptions = defaultFilters[index].selectOptions;\n        }\n      });\n    }\n  };\n\n  /**\n   * @ngdoc function\n   * @name unsort\n   * @methodOf ui.grid.class:GridColumn\n   * @description Removes column from the grid sorting\n   */\n  GridColumn.prototype.unsort = function () {\n    //Decrease priority for every col where priority is higher than the removed sort's priority.\n    var thisPriority = this.sort.priority;\n\n    this.grid.columns.forEach(function (col) {\n      if (col.sort && col.sort.priority !== undefined && col.sort.priority > thisPriority) {\n        col.sort.priority -= 1;\n      }\n    });\n\n    this.sort = {};\n    this.grid.api.core.raise.sortChanged( this.grid, this.grid.getColumnSorting() );\n  };\n\n\n  /**\n   * @ngdoc function\n   * @name getColClass\n   * @methodOf ui.grid.class:GridColumn\n   * @description Returns the class name for the column\n   * @param {bool} prefixDot  if true, will return .className instead of className\n   */\n  GridColumn.prototype.getColClass = function (prefixDot) {\n    var cls = uiGridConstants.COL_CLASS_PREFIX + this.uid;\n\n    return prefixDot ? '.' + cls : cls;\n  };\n\n    /**\n     * @ngdoc function\n     * @name isPinnedLeft\n     * @methodOf ui.grid.class:GridColumn\n     * @description Returns true if column is in the left render container\n     */\n    GridColumn.prototype.isPinnedLeft = function () {\n      return this.renderContainer === 'left';\n    };\n\n    /**\n     * @ngdoc function\n     * @name isPinnedRight\n     * @methodOf ui.grid.class:GridColumn\n     * @description Returns true if column is in the right render container\n     */\n    GridColumn.prototype.isPinnedRight = function () {\n      return this.renderContainer === 'right';\n    };\n\n\n    /**\n   * @ngdoc function\n   * @name getColClassDefinition\n   * @methodOf ui.grid.class:GridColumn\n   * @description Returns the class definition for th column\n   */\n  GridColumn.prototype.getColClassDefinition = function () {\n    return ' .grid' + this.grid.id + ' ' + this.getColClass(true) + ' { min-width: ' + this.drawnWidth + 'px; max-width: ' + this.drawnWidth + 'px; }';\n  };\n\n  /**\n   * @ngdoc function\n   * @name getRenderContainer\n   * @methodOf ui.grid.class:GridColumn\n   * @description Returns the render container object that this column belongs to.\n   *\n   * Columns will be default be in the `body` render container if they aren't allocated to one specifically.\n   */\n  GridColumn.prototype.getRenderContainer = function getRenderContainer() {\n    var self = this;\n\n    var containerId = self.renderContainer;\n\n    if (containerId === null || containerId === '' || containerId === undefined) {\n      containerId = 'body';\n    }\n\n    return self.grid.renderContainers[containerId];\n  };\n\n  /**\n   * @ngdoc function\n   * @name showColumn\n   * @methodOf ui.grid.class:GridColumn\n   * @description Makes the column visible by setting colDef.visible = true\n   */\n  GridColumn.prototype.showColumn = function() {\n      this.colDef.visible = true;\n  };\n\n\n  /**\n   * @ngdoc property\n   * @name aggregationHideLabel\n   * @propertyOf ui.grid.class:GridOptions.columnDef\n   * @description defaults to false, if set to true hides the label text\n   * in the aggregation footer, so only the value is displayed.\n   *\n   */\n  /**\n   * @ngdoc function\n   * @name getAggregationText\n   * @methodOf ui.grid.class:GridColumn\n   * @description Gets the aggregation label from colDef.aggregationLabel if\n   * specified or by using i18n, including deciding whether or not to display\n   * based on colDef.aggregationHideLabel.\n   *\n   * @param {string} label the i18n lookup value to use for the column label\n   *\n   */\n  GridColumn.prototype.getAggregationText = function () {\n    var self = this;\n    if ( self.colDef.aggregationHideLabel ){\n      return '';\n    }\n    else if ( self.colDef.aggregationLabel ) {\n      return self.colDef.aggregationLabel;\n    }\n    else {\n      switch ( self.colDef.aggregationType ){\n        case uiGridConstants.aggregationTypes.count:\n          return i18nService.getSafeText('aggregation.count');\n        case uiGridConstants.aggregationTypes.sum:\n          return i18nService.getSafeText('aggregation.sum');\n        case uiGridConstants.aggregationTypes.avg:\n          return i18nService.getSafeText('aggregation.avg');\n        case uiGridConstants.aggregationTypes.min:\n          return i18nService.getSafeText('aggregation.min');\n        case uiGridConstants.aggregationTypes.max:\n          return i18nService.getSafeText('aggregation.max');\n        default:\n          return '';\n      }\n    }\n  };\n\n  GridColumn.prototype.getCellTemplate = function () {\n    var self = this;\n\n    return self.cellTemplatePromise;\n  };\n\n  GridColumn.prototype.getCompiledElementFn = function () {\n    var self = this;\n\n    return self.compiledElementFnDefer.promise;\n  };\n\n  return GridColumn;\n}]);\n\n})();\n\n  (function(){\n\nangular.module('ui.grid')\n.factory('GridOptions', ['gridUtil','uiGridConstants', function(gridUtil,uiGridConstants) {\n\n  /**\n   * @ngdoc function\n   * @name ui.grid.class:GridOptions\n   * @description Default GridOptions class.  GridOptions are defined by the application developer and overlaid\n   * over this object.  Setting gridOptions within your controller is the most common method for an application\n   * developer to configure the behaviour of their ui-grid\n   *\n   * @example To define your gridOptions within your controller:\n   * <pre>$scope.gridOptions = {\n   *   data: $scope.myData,\n   *   columnDefs: [\n   *     { name: 'field1', displayName: 'pretty display name' },\n   *     { name: 'field2', visible: false }\n   *  ]\n   * };</pre>\n   *\n   * You can then use this within your html template, when you define your grid:\n   * <pre>&lt;div ui-grid=\"gridOptions\"&gt;&lt;/div&gt;</pre>\n   *\n   * To provide default options for all of the grids within your application, use an angular\n   * decorator to modify the GridOptions factory.\n   * <pre>\n   * app.config(function($provide){\n   *   $provide.decorator('GridOptions',function($delegate){\n   *     var gridOptions;\n   *     gridOptions = angular.copy($delegate);\n   *     gridOptions.initialize = function(options) {\n   *       var initOptions;\n   *       initOptions = $delegate.initialize(options);\n   *       initOptions.enableColumnMenus = false;\n   *       return initOptions;\n   *     };\n   *     return gridOptions;\n   *   });\n   * });\n   * </pre>\n   */\n  return {\n    initialize: function( baseOptions ){\n      /**\n       * @ngdoc function\n       * @name onRegisterApi\n       * @propertyOf ui.grid.class:GridOptions\n       * @description A callback that returns the gridApi once the grid is instantiated, which is\n       * then used to interact with the grid programatically.\n       *\n       * Note that the gridApi.core.renderingComplete event is identical to this\n       * callback, but has the advantage that it can be called from multiple places\n       * if needed\n       *\n       * @example\n       * <pre>\n       *   $scope.gridOptions.onRegisterApi = function ( gridApi ) {\n       *     $scope.gridApi = gridApi;\n       *     $scope.gridApi.selection.selectAllRows( $scope.gridApi.grid );\n       *   };\n       * </pre>\n       *\n       */\n      baseOptions.onRegisterApi = baseOptions.onRegisterApi || angular.noop();\n\n      /**\n       * @ngdoc object\n       * @name data\n       * @propertyOf ui.grid.class:GridOptions\n       * @description (mandatory) Array of data to be rendered into the grid, providing the data source or data binding for\n       * the grid.\n       *\n       * Most commonly the data is an array of objects, where each object has a number of attributes.\n       * Each attribute automatically becomes a column in your grid.  This array could, for example, be sourced from\n       * an angularJS $resource query request.  The array can also contain complex objects, refer the binding tutorial\n       * for examples of that.\n       *\n       * The most flexible usage is to set your data on $scope:\n       *\n       * `$scope.data = data;`\n       *\n       * And then direct the grid to resolve whatever is in $scope.data:\n       *\n       * `$scope.gridOptions.data = 'data';`\n       *\n       * This is the most flexible approach as it allows you to replace $scope.data whenever you feel like it without\n       * getting pointer issues.\n       *\n       * Alternatively you can directly set the data array:\n       *\n       * `$scope.gridOptions.data = [ ];`\n       * or\n       *\n       * `$http.get('/data/100.json')\n       * .success(function(data) {\n       *   $scope.myData = data;\n       *   $scope.gridOptions.data = $scope.myData;\n       *  });`\n       *\n       * Where you do this, you need to take care in updating the data - you can't just update `$scope.myData` to some other\n       * array, you need to update $scope.gridOptions.data to point to that new array as well.\n       *\n       */\n      baseOptions.data = baseOptions.data || [];\n\n      /**\n       * @ngdoc array\n       * @name columnDefs\n       * @propertyOf  ui.grid.class:GridOptions\n       * @description Array of columnDef objects.  Only required property is name.\n       * The individual options available in columnDefs are documented in the\n       * {@link ui.grid.class:GridOptions.columnDef columnDef} section\n       * </br>_field property can be used in place of name for backwards compatibility with 2.x_\n       *  @example\n       *\n       * <pre>var columnDefs = [{name:'field1'}, {name:'field2'}];</pre>\n       *\n       */\n      baseOptions.columnDefs = baseOptions.columnDefs || [];\n\n      /**\n       * @ngdoc object\n       * @name ui.grid.class:GridOptions.columnDef\n       * @description Definition / configuration of an individual column, which would typically be\n       * one of many column definitions within the gridOptions.columnDefs array\n       * @example\n       * <pre>{name:'field1', field: 'field1', filter: { term: 'xxx' }}</pre>\n       *\n       */\n\n      /**\n       * @ngdoc object\n       * @name enableGridMenu\n       * @propertyOf ui.grid.class:GridOptions\n       * @description Takes a boolean that adds a settings icon in the top right of the grid, which floats above\n       * the column header, when true. The menu by default gives access to show/hide columns, but can be\n       * customised to show additional actions.\n       *\n       * See the {@link #!/tutorial/121_grid_menu Grid Menu tutorial} for more detailed information.\n       */\n\n      /**\n       * @ngdoc array\n       * @name excludeProperties\n       * @propertyOf ui.grid.class:GridOptions\n       * @description Array of property names in data to ignore when auto-generating column names.  Provides the\n       * inverse of columnDefs - columnDefs is a list of columns to include, excludeProperties is a list of columns\n       * to exclude.\n       *\n       * If columnDefs is defined, this will be ignored.\n       *\n       * Defaults to ['$$hashKey']\n       */\n\n      baseOptions.excludeProperties = baseOptions.excludeProperties || ['$$hashKey'];\n\n      /**\n       * @ngdoc boolean\n       * @name enableRowHashing\n       * @propertyOf ui.grid.class:GridOptions\n       * @description True by default. When enabled, this setting allows uiGrid to add\n       * `$$hashKey`-type properties (similar to Angular) to elements in the `data` array. This allows\n       * the grid to maintain state while vastly speeding up the process of altering `data` by adding/moving/removing rows.\n       *\n       * Note that this DOES add properties to your data that you may not want, but they are stripped out when using `angular.toJson()`. IF\n       * you do not want this at all you can disable this setting but you will take a performance hit if you are using large numbers of rows\n       * and are altering the data set often.\n       */\n      baseOptions.enableRowHashing = baseOptions.enableRowHashing !== false;\n\n      /**\n       * @ngdoc function\n       * @name rowIdentity\n       * @methodOf ui.grid.class:GridOptions\n       * @description This function is used to get and, if necessary, set the value uniquely identifying this row (i.e. if an identity is not present it will set one).\n       *\n       * By default it returns the `$$hashKey` property if it exists. If it doesn't it uses gridUtil.nextUid() to generate one\n       */\n      baseOptions.rowIdentity = baseOptions.rowIdentity || function rowIdentity(row) {\n        return gridUtil.hashKey(row);\n      };\n\n      /**\n       * @ngdoc function\n       * @name getRowIdentity\n       * @methodOf ui.grid.class:GridOptions\n       * @description This function returns the identity value uniquely identifying this row, if one is not present it does not set it.\n       *\n       * By default it returns the `$$hashKey` property but can be overridden to use any property or set of properties you want.\n       */\n      baseOptions.getRowIdentity = baseOptions.getRowIdentity || function getRowIdentity(row) {\n        return row.$$hashKey;\n      };\n\n      /**\n       * @ngdoc property\n       * @name flatEntityAccess\n       * @propertyOf ui.grid.class:GridOptions\n       * @description Set to true if your columns are all related directly to fields in a flat object structure - i.e.\n       * each of your columns associate directly with a property on each of the entities in your data array.\n       *\n       * In that situation we can avoid all the logic associated with complex binding to functions or to properties of sub-objects,\n       * which can provide a significant speed improvement with large data sets when filtering or sorting.\n       *\n       * By default false\n       */\n      baseOptions.flatEntityAccess = baseOptions.flatEntityAccess === true;\n\n      /**\n       * @ngdoc property\n       * @name showHeader\n       * @propertyOf ui.grid.class:GridOptions\n       * @description True by default. When set to false, this setting will replace the\n       * standard header template with '<div></div>', resulting in no header being shown.\n       */\n      baseOptions.showHeader = typeof(baseOptions.showHeader) !== \"undefined\" ? baseOptions.showHeader : true;\n\n      /* (NOTE): Don't show this in the docs. We only use it internally\n       * @ngdoc property\n       * @name headerRowHeight\n       * @propertyOf ui.grid.class:GridOptions\n       * @description The height of the header in pixels, defaults to 30\n       *\n       */\n      if (!baseOptions.showHeader) {\n        baseOptions.headerRowHeight = 0;\n      }\n      else {\n        baseOptions.headerRowHeight = typeof(baseOptions.headerRowHeight) !== \"undefined\" ? baseOptions.headerRowHeight : 30;\n      }\n\n      /**\n       * @ngdoc property\n       * @name rowHeight\n       * @propertyOf ui.grid.class:GridOptions\n       * @description The height of the row in pixels,  Can be passed as integer or string. defaults to 30.\n       *\n       */\n\n      if (typeof baseOptions.rowHeight === \"string\") {\n        baseOptions.rowHeight = parseInt(baseOptions.rowHeight) || 30;\n      }\n\n      else {\n        baseOptions.rowHeight = baseOptions.rowHeight || 30;\n      }\n\n      /**\n       * @ngdoc integer\n       * @name minRowsToShow\n       * @propertyOf ui.grid.class:GridOptions\n       * @description Minimum number of rows to show when the grid doesn't have a defined height. Defaults to \"10\".\n       */\n      baseOptions.minRowsToShow = typeof(baseOptions.minRowsToShow) !== \"undefined\" ? baseOptions.minRowsToShow : 10;\n\n      /**\n       * @ngdoc property\n       * @name showGridFooter\n       * @propertyOf ui.grid.class:GridOptions\n       * @description Whether or not to show the footer, defaults to false\n       * The footer display Total Rows and Visible Rows (filtered rows)\n       */\n      baseOptions.showGridFooter = baseOptions.showGridFooter === true;\n\n      /**\n       * @ngdoc property\n       * @name showColumnFooter\n       * @propertyOf ui.grid.class:GridOptions\n       * @description Whether or not to show the column footer, defaults to false\n       * The column footer displays column aggregates\n       */\n      baseOptions.showColumnFooter = baseOptions.showColumnFooter === true;\n\n      /**\n       * @ngdoc property\n       * @name columnFooterHeight\n       * @propertyOf ui.grid.class:GridOptions\n       * @description The height of the footer rows (column footer and grid footer) in pixels\n       *\n       */\n      baseOptions.columnFooterHeight = typeof(baseOptions.columnFooterHeight) !== \"undefined\" ? baseOptions.columnFooterHeight : 30;\n      baseOptions.gridFooterHeight = typeof(baseOptions.gridFooterHeight) !== \"undefined\" ? baseOptions.gridFooterHeight : 30;\n\n      baseOptions.columnWidth = typeof(baseOptions.columnWidth) !== \"undefined\" ? baseOptions.columnWidth : 50;\n\n      /**\n       * @ngdoc property\n       * @name maxVisibleColumnCount\n       * @propertyOf ui.grid.class:GridOptions\n       * @description Defaults to 200\n       *\n       */\n      baseOptions.maxVisibleColumnCount = typeof(baseOptions.maxVisibleColumnCount) !== \"undefined\" ? baseOptions.maxVisibleColumnCount : 200;\n\n      /**\n       * @ngdoc property\n       * @name virtualizationThreshold\n       * @propertyOf ui.grid.class:GridOptions\n       * @description Turn virtualization on when number of data elements goes over this number, defaults to 20\n       */\n      baseOptions.virtualizationThreshold = typeof(baseOptions.virtualizationThreshold) !== \"undefined\" ? baseOptions.virtualizationThreshold : 20;\n\n      /**\n       * @ngdoc property\n       * @name columnVirtualizationThreshold\n       * @propertyOf ui.grid.class:GridOptions\n       * @description Turn virtualization on when number of columns goes over this number, defaults to 10\n       */\n      baseOptions.columnVirtualizationThreshold = typeof(baseOptions.columnVirtualizationThreshold) !== \"undefined\" ? baseOptions.columnVirtualizationThreshold : 10;\n\n      /**\n       * @ngdoc property\n       * @name excessRows\n       * @propertyOf ui.grid.class:GridOptions\n       * @description Extra rows to to render outside of the viewport, which helps with smoothness of scrolling.\n       * Defaults to 4\n       */\n      baseOptions.excessRows = typeof(baseOptions.excessRows) !== \"undefined\" ? baseOptions.excessRows : 4;\n      /**\n       * @ngdoc property\n       * @name scrollThreshold\n       * @propertyOf ui.grid.class:GridOptions\n       * @description Defaults to 4\n       */\n      baseOptions.scrollThreshold = typeof(baseOptions.scrollThreshold) !== \"undefined\" ? baseOptions.scrollThreshold : 4;\n\n      /**\n       * @ngdoc property\n       * @name excessColumns\n       * @propertyOf ui.grid.class:GridOptions\n       * @description Extra columns to to render outside of the viewport, which helps with smoothness of scrolling.\n       * Defaults to 4\n       */\n      baseOptions.excessColumns = typeof(baseOptions.excessColumns) !== \"undefined\" ? baseOptions.excessColumns : 4;\n      /**\n       * @ngdoc property\n       * @name horizontalScrollThreshold\n       * @propertyOf ui.grid.class:GridOptions\n       * @description Defaults to 4\n       */\n      baseOptions.horizontalScrollThreshold = typeof(baseOptions.horizontalScrollThreshold) !== \"undefined\" ? baseOptions.horizontalScrollThreshold : 2;\n\n\n      /**\n       * @ngdoc property\n       * @name aggregationCalcThrottle\n       * @propertyOf ui.grid.class:GridOptions\n       * @description Default time in milliseconds to throttle aggregation calcuations, defaults to 500ms\n       */\n      baseOptions.aggregationCalcThrottle = typeof(baseOptions.aggregationCalcThrottle) !== \"undefined\" ? baseOptions.aggregationCalcThrottle : 500;\n\n      /**\n       * @ngdoc property\n       * @name wheelScrollThrottle\n       * @propertyOf ui.grid.class:GridOptions\n       * @description Default time in milliseconds to throttle scroll events to, defaults to 70ms\n       */\n      baseOptions.wheelScrollThrottle = typeof(baseOptions.wheelScrollThrottle) !== \"undefined\" ? baseOptions.wheelScrollThrottle : 70;\n\n\n      /**\n       * @ngdoc property\n       * @name scrollDebounce\n       * @propertyOf ui.grid.class:GridOptions\n       * @description Default time in milliseconds to debounce scroll events, defaults to 300ms\n       */\n      baseOptions.scrollDebounce = typeof(baseOptions.scrollDebounce) !== \"undefined\" ? baseOptions.scrollDebounce : 300;\n\n      /**\n       * @ngdoc boolean\n       * @name enableSorting\n       * @propertyOf ui.grid.class:GridOptions\n       * @description True by default. When enabled, this setting adds sort\n       * widgets to the column headers, allowing sorting of the data for the entire grid.\n       * Sorting can then be disabled / enabled on individual columns using the columnDefs,\n       * if it set, it will override GridOptions enableSorting setting.\n       */\n      baseOptions.enableSorting = baseOptions.enableSorting !== false;\n\n      /**\n       * @ngdoc boolean\n       * @name enableFiltering\n       * @propertyOf ui.grid.class:GridOptions\n       * @description False by default. When enabled, this setting adds filter\n       * boxes to each column header, allowing filtering within the column for the entire grid.\n       * Filtering can then be disabled on individual columns using the columnDefs.\n       */\n      baseOptions.enableFiltering = baseOptions.enableFiltering === true;\n\n      /**\n       * @ngdoc boolean\n       * @name enableColumnMenus\n       * @propertyOf ui.grid.class:GridOptions\n       * @description True by default. When enabled, this setting displays a column\n       * menu within each column.\n       * By default column menu's trigger is hidden before mouse over, but you can always force it to be visible with CSS:\n       *\n       * <pre>\n       *  .ui-grid-column-menu-button {\n       *    display: block;\n       *  }\n       * </pre>\n       */\n      baseOptions.enableColumnMenus = baseOptions.enableColumnMenus !== false;\n\n      /**\n       * @ngdoc boolean\n       * @name enableVerticalScrollbar\n       * @propertyOf ui.grid.class:GridOptions\n       * @description {@link ui.grid.service:uiGridConstants#properties_scrollbars uiGridConstants.scrollbars.ALWAYS} by default.\n       * This settings controls the vertical scrollbar for the grid.\n       * Supported values: uiGridConstants.scrollbars.ALWAYS, uiGridConstants.scrollbars.NEVER, uiGridConstants.scrollbars.WHEN_NEEDED\n       */\n      baseOptions.enableVerticalScrollbar = typeof(baseOptions.enableVerticalScrollbar) !== \"undefined\" ? baseOptions.enableVerticalScrollbar : uiGridConstants.scrollbars.ALWAYS;\n\n      /**\n       * @ngdoc boolean\n       * @name enableHorizontalScrollbar\n       * @propertyOf ui.grid.class:GridOptions\n       * @description {@link ui.grid.service:uiGridConstants#properties_scrollbars uiGridConstants.scrollbars.ALWAYS} by default.\n       * This settings controls the horizontal scrollbar for the grid.\n       * Supported values: uiGridConstants.scrollbars.ALWAYS, uiGridConstants.scrollbars.NEVER, uiGridConstants.scrollbars.WHEN_NEEDED\n       */\n      baseOptions.enableHorizontalScrollbar = typeof(baseOptions.enableHorizontalScrollbar) !== \"undefined\" ? baseOptions.enableHorizontalScrollbar : uiGridConstants.scrollbars.ALWAYS;\n\n      /**\n       * @ngdoc boolean\n       * @name enableMinHeightCheck\n       * @propertyOf ui.grid.class:GridOptions\n       * @description True by default. When enabled, a newly initialized grid will check to see if it is tall enough to display\n       * at least one row of data.  If the grid is not tall enough, it will resize the DOM element to display minRowsToShow number\n       * of rows.\n       */\n       baseOptions.enableMinHeightCheck = baseOptions.enableMinHeightCheck !== false;\n\n      /**\n       * @ngdoc boolean\n       * @name minimumColumnSize\n       * @propertyOf ui.grid.class:GridOptions\n       * @description Sets the default minimum column width, in other words,\n       * it defines the default value for a column minWidth attribute if that is not otherwise specified.\n       * Should be a number. Defaults to 30 pixels.\n       */\n      baseOptions.minimumColumnSize = typeof(baseOptions.minimumColumnSize) !== \"undefined\" ? baseOptions.minimumColumnSize : 30;\n\n      /**\n       * @ngdoc function\n       * @name rowEquality\n       * @methodOf ui.grid.class:GridOptions\n       * @description By default, rows are compared using object equality.  This option can be overridden\n       * to compare on any data item property or function\n       * @param {object} entityA First Data Item to compare\n       * @param {object} entityB Second Data Item to compare\n       */\n      baseOptions.rowEquality = baseOptions.rowEquality || function(entityA, entityB) {\n        return entityA === entityB;\n      };\n\n      /**\n       * @ngdoc string\n       * @name headerTemplate\n       * @propertyOf ui.grid.class:GridOptions\n       * @description Null by default. When provided, this setting uses a custom header\n       * template, rather than the default template. Can be set to either the name of a template file:\n       * <pre>  $scope.gridOptions.headerTemplate = 'header_template.html';</pre>\n       * inline html\n       * <pre>  $scope.gridOptions.headerTemplate = '<div class=\"ui-grid-top-panel\" style=\"text-align: center\">I am a Custom Grid Header</div>'</pre>\n       * or the id of a precompiled template (TBD how to use this).\n       * </br>Refer to the custom header tutorial for more information.\n       * If you want no header at all, you can set to an empty div:\n       * <pre>  $scope.gridOptions.headerTemplate = '<div></div>';</pre>\n       *\n       * If you want to only have a static header, then you can set to static content.  If\n       * you want to tailor the existing column headers, then you should look at the\n       * current 'ui-grid-header.html' template in github as your starting point.\n       *\n       */\n      baseOptions.headerTemplate = baseOptions.headerTemplate || null;\n\n      /**\n       * @ngdoc string\n       * @name footerTemplate\n       * @propertyOf ui.grid.class:GridOptions\n       * @description (optional) ui-grid/ui-grid-footer by default.  This footer shows the per-column\n       * aggregation totals.\n       * When provided, this setting uses a custom footer template. Can be set to either the name of a template file 'footer_template.html', inline html\n       * <pre>'<div class=\"ui-grid-bottom-panel\" style=\"text-align: center\">I am a Custom Grid Footer</div>'</pre>, or the id\n       * of a precompiled template (TBD how to use this).  Refer to the custom footer tutorial for more information.\n       */\n      baseOptions.footerTemplate = baseOptions.footerTemplate || 'ui-grid/ui-grid-footer';\n\n      /**\n       * @ngdoc string\n       * @name gridFooterTemplate\n       * @propertyOf ui.grid.class:GridOptions\n       * @description (optional) ui-grid/ui-grid-grid-footer by default. This template by default shows the\n       * total items at the bottom of the grid, and the selected items if selection is enabled.\n       */\n      baseOptions.gridFooterTemplate = baseOptions.gridFooterTemplate || 'ui-grid/ui-grid-grid-footer';\n\n      /**\n       * @ngdoc string\n       * @name rowTemplate\n       * @propertyOf ui.grid.class:GridOptions\n       * @description 'ui-grid/ui-grid-row' by default. When provided, this setting uses a\n       * custom row template.  Can be set to either the name of a template file:\n       * <pre> $scope.gridOptions.rowTemplate = 'row_template.html';</pre>\n       * inline html\n       * <pre>  $scope.gridOptions.rowTemplate = '<div style=\"background-color: aquamarine\" ng-click=\"grid.appScope.fnOne(row)\" ng-repeat=\"col in colContainer.renderedColumns track by col.colDef.name\" class=\"ui-grid-cell\" ui-grid-cell></div>';</pre>\n       * or the id of a precompiled template (TBD how to use this) can be provided.\n       * </br>Refer to the custom row template tutorial for more information.\n       */\n      baseOptions.rowTemplate = baseOptions.rowTemplate || 'ui-grid/ui-grid-row';\n\n      /**\n      * @ngdoc string\n      * @name gridMenuTemplate\n      * @propertyOf ui.grid.class:GridOptions\n      * @description 'ui-grid/uiGridMenu' by default. When provided, this setting uses a\n      * custom grid menu template.\n      */\n      baseOptions.gridMenuTemplate = baseOptions.gridMenuTemplate || 'ui-grid/uiGridMenu';\n\n      /**\n       * @ngdoc object\n       * @name appScopeProvider\n       * @propertyOf ui.grid.class:GridOptions\n       * @description by default, the parent scope of the ui-grid element will be assigned to grid.appScope\n       * this property allows you to assign any reference you want to grid.appScope\n       */\n      baseOptions.appScopeProvider = baseOptions.appScopeProvider || null;\n\n      return baseOptions;\n    }\n  };\n\n\n}]);\n\n})();\n\n(function(){\n\nangular.module('ui.grid')\n\n  /**\n   * @ngdoc function\n   * @name ui.grid.class:GridRenderContainer\n   * @description The grid has render containers, allowing the ability to have pinned columns.  If the grid\n   * is right-to-left then there may be a right render container, if left-to-right then there may\n   * be a left render container.  There is always a body render container.\n   * @param {string} name The name of the render container ('body', 'left', or 'right')\n   * @param {Grid} grid the grid the render container is in\n   * @param {object} options the render container options\n   */\n.factory('GridRenderContainer', ['gridUtil', 'uiGridConstants', function(gridUtil, uiGridConstants) {\n  function GridRenderContainer(name, grid, options) {\n    var self = this;\n\n    // if (gridUtil.type(grid) !== 'Grid') {\n    //   throw new Error('Grid argument is not a Grid object');\n    // }\n\n    self.name = name;\n\n    self.grid = grid;\n\n    // self.rowCache = [];\n    // self.columnCache = [];\n\n    self.visibleRowCache = [];\n    self.visibleColumnCache = [];\n\n    self.renderedRows = [];\n    self.renderedColumns = [];\n\n    self.prevScrollTop = 0;\n    self.prevScrolltopPercentage = 0;\n    self.prevRowScrollIndex = 0;\n\n    self.prevScrollLeft = 0;\n    self.prevScrollleftPercentage = 0;\n    self.prevColumnScrollIndex = 0;\n\n    self.columnStyles = '';\n\n    self.viewportAdjusters = [];\n\n    /**\n     *  @ngdoc boolean\n     *  @name hasHScrollbar\n     *  @propertyOf  ui.grid.class:GridRenderContainer\n     *  @description flag to signal that container has a horizontal scrollbar\n     */\n    self.hasHScrollbar = false;\n\n    /**\n     *  @ngdoc boolean\n     *  @name hasVScrollbar\n     *  @propertyOf  ui.grid.class:GridRenderContainer\n     *  @description flag to signal that container has a vertical scrollbar\n     */\n    self.hasVScrollbar = false;\n\n    /**\n     *  @ngdoc boolean\n     *  @name canvasHeightShouldUpdate\n     *  @propertyOf  ui.grid.class:GridRenderContainer\n     *  @description flag to signal that container should recalculate the canvas size\n     */\n    self.canvasHeightShouldUpdate = true;\n\n    /**\n     *  @ngdoc boolean\n     *  @name canvasHeight\n     *  @propertyOf  ui.grid.class:GridRenderContainer\n     *  @description last calculated canvas height value\n     */\n    self.$$canvasHeight = 0;\n\n    if (options && angular.isObject(options)) {\n      angular.extend(self, options);\n    }\n\n    grid.registerStyleComputation({\n      priority: 5,\n      func: function () {\n        self.updateColumnWidths();\n        return self.columnStyles;\n      }\n    });\n  }\n\n\n  GridRenderContainer.prototype.reset = function reset() {\n    // this.rowCache.length = 0;\n    // this.columnCache.length = 0;\n\n    this.visibleColumnCache.length = 0;\n    this.visibleRowCache.length = 0;\n\n    this.renderedRows.length = 0;\n    this.renderedColumns.length = 0;\n  };\n\n  // TODO(c0bra): calculate size?? Should this be in a stackable directive?\n\n\n  GridRenderContainer.prototype.containsColumn = function (col) {\n     return this.visibleColumnCache.indexOf(col) !== -1;\n  };\n\n  GridRenderContainer.prototype.minRowsToRender = function minRowsToRender() {\n    var self = this;\n    var minRows = 0;\n    var rowAddedHeight = 0;\n    var viewPortHeight = self.getViewportHeight();\n    for (var i = self.visibleRowCache.length - 1; rowAddedHeight < viewPortHeight && i >= 0; i--) {\n      rowAddedHeight += self.visibleRowCache[i].height;\n      minRows++;\n    }\n    return minRows;\n  };\n\n  GridRenderContainer.prototype.minColumnsToRender = function minColumnsToRender() {\n    var self = this;\n    var viewportWidth = this.getViewportWidth();\n\n    var min = 0;\n    var totalWidth = 0;\n\n    for (var i = 0; i < self.visibleColumnCache.length; i++) {\n      var col = self.visibleColumnCache[i];\n\n      if (totalWidth < viewportWidth) {\n        totalWidth += col.drawnWidth ? col.drawnWidth : 0;\n        min++;\n      }\n      else {\n        var currWidth = 0;\n        for (var j = i; j >= i - min; j--) {\n          currWidth += self.visibleColumnCache[j].drawnWidth ? self.visibleColumnCache[j].drawnWidth : 0;\n        }\n        if (currWidth < viewportWidth) {\n          min++;\n        }\n      }\n    }\n\n    return min;\n  };\n\n  GridRenderContainer.prototype.getVisibleRowCount = function getVisibleRowCount() {\n    return this.visibleRowCache.length;\n  };\n\n  /**\n   * @ngdoc function\n   * @name registerViewportAdjuster\n   * @methodOf ui.grid.class:GridRenderContainer\n   * @description Registers an adjuster to the render container's available width or height.  Adjusters are used\n   * to tell the render container that there is something else consuming space, and to adjust it's size\n   * appropriately.\n   * @param {function} func the adjuster function we want to register\n   */\n\n  GridRenderContainer.prototype.registerViewportAdjuster = function registerViewportAdjuster(func) {\n    this.viewportAdjusters.push(func);\n  };\n\n  /**\n   * @ngdoc function\n   * @name removeViewportAdjuster\n   * @methodOf ui.grid.class:GridRenderContainer\n   * @description Removes an adjuster, should be used when your element is destroyed\n   * @param {function} func the adjuster function we want to remove\n   */\n  GridRenderContainer.prototype.removeViewportAdjuster = function removeViewportAdjuster(func) {\n    var idx = this.viewportAdjusters.indexOf(func);\n\n    if (idx > -1) {\n      this.viewportAdjusters.splice(idx, 1);\n    }\n  };\n\n  /**\n   * @ngdoc function\n   * @name getViewportAdjustment\n   * @methodOf ui.grid.class:GridRenderContainer\n   * @description Gets the adjustment based on the viewportAdjusters.\n   * @returns {object} a hash of { height: x, width: y }.  Usually the values will be negative\n   */\n  GridRenderContainer.prototype.getViewportAdjustment = function getViewportAdjustment() {\n    var self = this;\n\n    var adjustment = { height: 0, width: 0 };\n\n    self.viewportAdjusters.forEach(function (func) {\n      adjustment = func.call(this, adjustment);\n    });\n\n    return adjustment;\n  };\n\n  GridRenderContainer.prototype.getMargin = function getMargin(side) {\n    var self = this;\n\n    var amount = 0;\n\n    self.viewportAdjusters.forEach(function (func) {\n      var adjustment = func.call(this, { height: 0, width: 0 });\n\n      if (adjustment.side && adjustment.side === side) {\n        amount += adjustment.width * -1;\n      }\n    });\n\n    return amount;\n  };\n\n  GridRenderContainer.prototype.getViewportHeight = function getViewportHeight() {\n    var self = this;\n\n    var headerHeight = (self.headerHeight) ? self.headerHeight : self.grid.headerHeight;\n\n    var viewPortHeight = self.grid.gridHeight - headerHeight - self.grid.footerHeight;\n\n\n    var adjustment = self.getViewportAdjustment();\n\n    viewPortHeight = viewPortHeight + adjustment.height;\n\n    return viewPortHeight;\n  };\n\n  GridRenderContainer.prototype.getViewportWidth = function getViewportWidth() {\n    var self = this;\n\n    var viewportWidth = self.grid.gridWidth;\n\n    //if (typeof(self.grid.verticalScrollbarWidth) !== 'undefined' && self.grid.verticalScrollbarWidth !== undefined && self.grid.verticalScrollbarWidth > 0) {\n    //  viewPortWidth = viewPortWidth - self.grid.verticalScrollbarWidth;\n    //}\n\n    // var viewportWidth = 0;\\\n    // self.visibleColumnCache.forEach(function (column) {\n    //   viewportWidth += column.drawnWidth;\n    // });\n\n    var adjustment = self.getViewportAdjustment();\n\n    viewportWidth = viewportWidth + adjustment.width;\n\n    return viewportWidth;\n  };\n\n  GridRenderContainer.prototype.getHeaderViewportWidth = function getHeaderViewportWidth() {\n    var self = this;\n\n    var viewportWidth = this.getViewportWidth();\n\n    //if (typeof(self.grid.verticalScrollbarWidth) !== 'undefined' && self.grid.verticalScrollbarWidth !== undefined && self.grid.verticalScrollbarWidth > 0) {\n    //  viewPortWidth = viewPortWidth + self.grid.verticalScrollbarWidth;\n    //}\n\n    // var adjustment = self.getViewportAdjustment();\n    // viewPortWidth = viewPortWidth + adjustment.width;\n\n    return viewportWidth;\n  };\n\n\n  /**\n   * @ngdoc function\n   * @name getCanvasHeight\n   * @methodOf ui.grid.class:GridRenderContainer\n   * @description Returns the total canvas height.   Only recalculates if canvasHeightShouldUpdate = false\n   * @returns {number} total height of all the visible rows in the container\n   */\n  GridRenderContainer.prototype.getCanvasHeight = function getCanvasHeight() {\n    var self = this;\n\n    if (!self.canvasHeightShouldUpdate) {\n      return self.$$canvasHeight;\n    }\n\n    var oldCanvasHeight = self.$$canvasHeight;\n\n    self.$$canvasHeight = 0;\n\n    self.visibleRowCache.forEach(function(row){\n      self.$$canvasHeight += row.height;\n    });\n\n\n    self.canvasHeightShouldUpdate = false;\n\n    self.grid.api.core.raise.canvasHeightChanged(oldCanvasHeight, self.$$canvasHeight);\n\n    return self.$$canvasHeight;\n  };\n\n  GridRenderContainer.prototype.getVerticalScrollLength = function getVerticalScrollLength() {\n    return this.getCanvasHeight() - this.getViewportHeight() + this.grid.scrollbarHeight !== 0 ? this.getCanvasHeight() - this.getViewportHeight() + this.grid.scrollbarHeight : -1;\n  };\n\n  GridRenderContainer.prototype.getHorizontalScrollLength = function getHorizontalScrollLength() {\n    return this.getCanvasWidth() - this.getViewportWidth() + this.grid.scrollbarWidth !== 0 ? this.getCanvasWidth() - this.getViewportWidth() + this.grid.scrollbarWidth : -1;\n  };\n\n  GridRenderContainer.prototype.getCanvasWidth = function getCanvasWidth() {\n    var self = this;\n\n    return self.canvasWidth;\n  };\n\n  GridRenderContainer.prototype.setRenderedRows = function setRenderedRows(newRows) {\n    this.renderedRows.length = newRows.length;\n    for (var i = 0; i < newRows.length; i++) {\n      this.renderedRows[i] = newRows[i];\n    }\n  };\n\n  GridRenderContainer.prototype.setRenderedColumns = function setRenderedColumns(newColumns) {\n    var self = this;\n\n    // OLD:\n    this.renderedColumns.length = newColumns.length;\n    for (var i = 0; i < newColumns.length; i++) {\n      this.renderedColumns[i] = newColumns[i];\n    }\n\n    this.updateColumnOffset();\n  };\n\n  GridRenderContainer.prototype.updateColumnOffset = function updateColumnOffset() {\n    // Calculate the width of the columns on the left side that are no longer rendered.\n    //  That will be the offset for the columns as we scroll horizontally.\n    var hiddenColumnsWidth = 0;\n    for (var i = 0; i < this.currentFirstColumn; i++) {\n      hiddenColumnsWidth += this.visibleColumnCache[i].drawnWidth;\n    }\n\n    this.columnOffset = hiddenColumnsWidth;\n  };\n\n  GridRenderContainer.prototype.scrollVertical = function (newScrollTop) {\n    var vertScrollPercentage = -1;\n\n    if (newScrollTop !== this.prevScrollTop) {\n      var yDiff = newScrollTop - this.prevScrollTop;\n\n      if (yDiff > 0 ) { this.grid.scrollDirection = uiGridConstants.scrollDirection.DOWN; }\n      if (yDiff < 0 ) { this.grid.scrollDirection = uiGridConstants.scrollDirection.UP; }\n\n      var vertScrollLength = this.getVerticalScrollLength();\n\n      vertScrollPercentage = newScrollTop / vertScrollLength;\n\n      // console.log('vert', vertScrollPercentage, newScrollTop, vertScrollLength);\n\n      if (vertScrollPercentage > 1) { vertScrollPercentage = 1; }\n      if (vertScrollPercentage < 0) { vertScrollPercentage = 0; }\n\n      this.adjustScrollVertical(newScrollTop, vertScrollPercentage);\n      return vertScrollPercentage;\n    }\n  };\n\n  GridRenderContainer.prototype.scrollHorizontal = function(newScrollLeft){\n    var horizScrollPercentage = -1;\n\n    // Handle RTL here\n    if (newScrollLeft !== this.prevScrollLeft) {\n      var xDiff = newScrollLeft - this.prevScrollLeft;\n\n      if (xDiff > 0) { this.grid.scrollDirection = uiGridConstants.scrollDirection.RIGHT; }\n      if (xDiff < 0) { this.grid.scrollDirection = uiGridConstants.scrollDirection.LEFT; }\n\n      var horizScrollLength = this.getHorizontalScrollLength();\n      if (horizScrollLength !== 0) {\n        horizScrollPercentage = newScrollLeft / horizScrollLength;\n      }\n      else {\n        horizScrollPercentage = 0;\n      }\n\n      this.adjustScrollHorizontal(newScrollLeft, horizScrollPercentage);\n      return horizScrollPercentage;\n    }\n  };\n\n  GridRenderContainer.prototype.adjustScrollVertical = function adjustScrollVertical(scrollTop, scrollPercentage, force) {\n    if (this.prevScrollTop === scrollTop && !force) {\n      return;\n    }\n\n    if (typeof(scrollTop) === 'undefined' || scrollTop === undefined || scrollTop === null) {\n      scrollTop = (this.getCanvasHeight() - this.getViewportHeight()) * scrollPercentage;\n    }\n\n    this.adjustRows(scrollTop, scrollPercentage, false);\n\n    this.prevScrollTop = scrollTop;\n    this.prevScrolltopPercentage = scrollPercentage;\n\n    this.grid.queueRefresh();\n  };\n\n  GridRenderContainer.prototype.adjustScrollHorizontal = function adjustScrollHorizontal(scrollLeft, scrollPercentage, force) {\n    if (this.prevScrollLeft === scrollLeft && !force) {\n      return;\n    }\n\n    if (typeof(scrollLeft) === 'undefined' || scrollLeft === undefined || scrollLeft === null) {\n      scrollLeft = (this.getCanvasWidth() - this.getViewportWidth()) * scrollPercentage;\n    }\n\n    this.adjustColumns(scrollLeft, scrollPercentage);\n\n    this.prevScrollLeft = scrollLeft;\n    this.prevScrollleftPercentage = scrollPercentage;\n\n    this.grid.queueRefresh();\n  };\n\n  GridRenderContainer.prototype.adjustRows = function adjustRows(scrollTop, scrollPercentage, postDataLoaded) {\n    var self = this;\n\n    var minRows = self.minRowsToRender();\n\n    var rowCache = self.visibleRowCache;\n\n    var maxRowIndex = rowCache.length - minRows;\n\n    // console.log('scroll%1', scrollPercentage);\n\n    // Calculate the scroll percentage according to the scrollTop location, if no percentage was provided\n    if ((typeof(scrollPercentage) === 'undefined' || scrollPercentage === null) && scrollTop) {\n      scrollPercentage = scrollTop / self.getVerticalScrollLength();\n    }\n\n    var rowIndex = Math.ceil(Math.min(maxRowIndex, maxRowIndex * scrollPercentage));\n\n    // console.log('maxRowIndex / scroll%', maxRowIndex, scrollPercentage, rowIndex);\n\n    // Define a max row index that we can't scroll past\n    if (rowIndex > maxRowIndex) {\n      rowIndex = maxRowIndex;\n    }\n\n    var newRange = [];\n    if (rowCache.length > self.grid.options.virtualizationThreshold) {\n      if (!(typeof(scrollTop) === 'undefined' || scrollTop === null)) {\n        // Have we hit the threshold going down?\n        if ( !self.grid.suppressParentScrollDown && self.prevScrollTop < scrollTop && rowIndex < self.prevRowScrollIndex + self.grid.options.scrollThreshold && rowIndex < maxRowIndex) {\n          return;\n        }\n        //Have we hit the threshold going up?\n        if ( !self.grid.suppressParentScrollUp && self.prevScrollTop > scrollTop && rowIndex > self.prevRowScrollIndex - self.grid.options.scrollThreshold && rowIndex < maxRowIndex) {\n          return;\n        }\n      }\n\n      var rangeStart = Math.max(0, rowIndex - self.grid.options.excessRows);\n      var rangeEnd = Math.min(rowCache.length, rowIndex + minRows + self.grid.options.excessRows);\n\n      newRange = [rangeStart, rangeEnd];\n    }\n    else {\n      var maxLen = self.visibleRowCache.length;\n      newRange = [0, Math.max(maxLen, minRows + self.grid.options.excessRows)];\n    }\n\n    self.updateViewableRowRange(newRange);\n\n    self.prevRowScrollIndex = rowIndex;\n  };\n\n  GridRenderContainer.prototype.adjustColumns = function adjustColumns(scrollLeft, scrollPercentage) {\n    var self = this;\n\n    var minCols = self.minColumnsToRender();\n\n    var columnCache = self.visibleColumnCache;\n    var maxColumnIndex = columnCache.length - minCols;\n\n    // Calculate the scroll percentage according to the scrollLeft location, if no percentage was provided\n    if ((typeof(scrollPercentage) === 'undefined' || scrollPercentage === null) && scrollLeft) {\n      scrollPercentage = scrollLeft / self.getHorizontalScrollLength();\n    }\n\n    var colIndex = Math.ceil(Math.min(maxColumnIndex, maxColumnIndex * scrollPercentage));\n\n    // Define a max row index that we can't scroll past\n    if (colIndex > maxColumnIndex) {\n      colIndex = maxColumnIndex;\n    }\n\n    var newRange = [];\n    if (columnCache.length > self.grid.options.columnVirtualizationThreshold && self.getCanvasWidth() > self.getViewportWidth()) {\n      /* Commented the following lines because otherwise the moved column wasn't visible immediately on the new position\n       * in the case of many columns with horizontal scroll, one had to scroll left or right and then return in order to see it\n      // Have we hit the threshold going down?\n      if (self.prevScrollLeft < scrollLeft && colIndex < self.prevColumnScrollIndex + self.grid.options.horizontalScrollThreshold && colIndex < maxColumnIndex) {\n        return;\n      }\n      //Have we hit the threshold going up?\n      if (self.prevScrollLeft > scrollLeft && colIndex > self.prevColumnScrollIndex - self.grid.options.horizontalScrollThreshold && colIndex < maxColumnIndex) {\n        return;\n      }*/\n\n      var rangeStart = Math.max(0, colIndex - self.grid.options.excessColumns);\n      var rangeEnd = Math.min(columnCache.length, colIndex + minCols + self.grid.options.excessColumns);\n\n      newRange = [rangeStart, rangeEnd];\n    }\n    else {\n      var maxLen = self.visibleColumnCache.length;\n\n      newRange = [0, Math.max(maxLen, minCols + self.grid.options.excessColumns)];\n    }\n\n    self.updateViewableColumnRange(newRange);\n\n    self.prevColumnScrollIndex = colIndex;\n  };\n\n  // Method for updating the visible rows\n  GridRenderContainer.prototype.updateViewableRowRange = function updateViewableRowRange(renderedRange) {\n    // Slice out the range of rows from the data\n    // var rowArr = uiGridCtrl.grid.rows.slice(renderedRange[0], renderedRange[1]);\n    var rowArr = this.visibleRowCache.slice(renderedRange[0], renderedRange[1]);\n\n    // Define the top-most rendered row\n    this.currentTopRow = renderedRange[0];\n\n    this.setRenderedRows(rowArr);\n  };\n\n  // Method for updating the visible columns\n  GridRenderContainer.prototype.updateViewableColumnRange = function updateViewableColumnRange(renderedRange) {\n    // Slice out the range of rows from the data\n    // var columnArr = uiGridCtrl.grid.columns.slice(renderedRange[0], renderedRange[1]);\n    var columnArr = this.visibleColumnCache.slice(renderedRange[0], renderedRange[1]);\n\n    // Define the left-most rendered columns\n    this.currentFirstColumn = renderedRange[0];\n\n    this.setRenderedColumns(columnArr);\n  };\n\n  GridRenderContainer.prototype.headerCellWrapperStyle = function () {\n    var self = this;\n\n    if (self.currentFirstColumn !== 0) {\n      var offset = self.columnOffset;\n\n      if (self.grid.isRTL()) {\n        return { 'margin-right': offset + 'px' };\n      }\n      else {\n        return { 'margin-left': offset + 'px' };\n      }\n    }\n\n    return null;\n  };\n\n    /**\n     *  @ngdoc boolean\n     *  @name updateColumnWidths\n     *  @propertyOf  ui.grid.class:GridRenderContainer\n     *  @description Determine the appropriate column width of each column across all render containers.\n     *\n     *  Column width is easy when each column has a specified width.  When columns are variable width (i.e.\n     *  have an * or % of the viewport) then we try to calculate so that things fit in.  The problem is that\n     *  we have multiple render containers, and we don't want one render container to just take the whole viewport\n     *  when it doesn't need to - we want things to balance out across the render containers.\n     *\n     *  To do this, we use this method to calculate all the renderContainers, recognising that in a given render\n     *  cycle it'll get called once per render container, so it needs to return the same values each time.\n     *\n     *  The constraints on this method are therefore:\n     *  - must return the same value when called multiple times, to do this it needs to rely on properties of the\n     *    columns, but not properties that change when this is called (so it shouldn't rely on drawnWidth)\n     *\n     *  The general logic of this method is:\n     *  - calculate our total available width\n     *  - look at all the columns across all render containers, and work out which have widths and which have\n     *    constraints such as % or * or something else\n     *  - for those with *, count the total number of * we see and add it onto a running total, add this column to an * array\n     *  - for those with a %, allocate the % as a percentage of the viewport, having consideration of min and max\n     *  - for those with manual width (in pixels) we set the drawnWidth to the specified width\n     *  - we end up with an asterisks array still to process\n     *  - we look at our remaining width.  If it's greater than zero, we divide it up among the asterisk columns, then process\n     *    them for min and max width constraints\n     *  - if it's zero or less, we set the asterisk columns to their minimum widths\n     *  - we use parseInt quite a bit, as we try to make all our column widths integers\n     */\n  GridRenderContainer.prototype.updateColumnWidths = function () {\n    var self = this;\n\n    var asterisksArray = [],\n        asteriskNum = 0,\n        usedWidthSum = 0,\n        ret = '',\n        pinRightColumn = false,\n        fixedNumberArray = [],\n        percentageArray = [],\n        totalPercentage = 0;\n\n    // Get the width of the viewport\n    var availableWidth = self.grid.getViewportWidth() - self.grid.scrollbarWidth;\n\n    // get all the columns across all render containers, we have to calculate them all or one render container\n    // could consume the whole viewport\n    var columnCache = [];\n    angular.forEach(self.grid.renderContainers, function (container) {\n      columnCache = columnCache.concat(container.visibleColumnCache);\n    });\n\n    // look at each column, process any manual values or %, put the * into an array to look at later\n    columnCache.forEach(function (column) {\n      var width = 0;\n      // Skip hidden columns\n      if (!column.visible) { return; }\n\n      if (pinRightColumn) {\n        availableWidth += self.grid.scrollbarWidth;\n      }\n\n      if (!pinRightColumn && column.colDef.pinnedRight) {\n        pinRightColumn = true;\n      }\n\n      if (angular.isNumber(column.width)) {\n        // pixel width, set to this value\n        width = parseInt(column.width, 10);\n        usedWidthSum = usedWidthSum + width;\n        column.drawnWidth = width;\n\n        fixedNumberArray.push(column);\n      } else if (gridUtil.endsWith(column.width, '%')) {\n        // percentage width, set to percentage of the viewport\n        // round down to int - some browsers don't play nice with float maxWidth\n        var percentageIntegerValue = parseInt(column.width.replace(/%/g, ''), 10);\n        width = parseInt(percentageIntegerValue / 100 * availableWidth);\n\n        if (width > column.maxWidth) {\n          width = column.maxWidth;\n        }\n\n        if (width < column.minWidth) {\n          width = column.minWidth;\n        }\n\n        usedWidthSum = usedWidthSum + width;\n        column.drawnWidth = width;\n\n        totalPercentage = totalPercentage + percentageIntegerValue;\n        percentageArray.push(column);\n      } else if (angular.isString(column.width) && column.width.indexOf('*') !== -1) {\n        // is an asterisk column, the gridColumn already checked the string consists only of '****'\n        asteriskNum = asteriskNum + column.width.length;\n        asterisksArray.push(column);\n      }\n    });\n\n    // Get the remaining width (available width subtracted by the used widths sum)\n    var remainingWidth = availableWidth - usedWidthSum;\n\n    if (asterisksArray.length > 0) {\n      // the width that each asterisk value would be assigned (this can be negative)\n      var asteriskVal = remainingWidth / asteriskNum;\n\n      asterisksArray.forEach(function (column) {\n        var width = parseInt(column.width.length * asteriskVal, 10);\n\n        if (width > column.maxWidth) {\n            width = column.maxWidth;\n        }\n\n        if (width < column.minWidth) {\n            width = column.minWidth;\n        }\n\n        usedWidthSum = usedWidthSum + width;\n        column.drawnWidth = width;\n      });\n    }\n\n    // If there are no columns with asterisk widths then check if there are any with % widths and\n    // use them as a fallback for adjusting column widths up or down if we have remaining grid width\n    // or need to claw some width back\n    var variableWidthColumnArray;\n    if (asterisksArray.length > 0) {\n      variableWidthColumnArray = asterisksArray;\n    } else if (percentageArray.length > 0 && fixedNumberArray.length === 0 && totalPercentage === 100) {\n      variableWidthColumnArray = percentageArray;\n    }\n\n    if (!angular.isUndefined(variableWidthColumnArray)) {\n      // If the grid width didn't divide evenly into the column widths and we have pixels left over, or our\n      // calculated widths would have the grid narrower than the available space,\n      // dole the remainder out one by one to make everything fit\n      var processColumnUpwards = function (column) {\n        if (column.drawnWidth < column.maxWidth && leftoverWidth > 0) {\n          column.drawnWidth++;\n          usedWidthSum++;\n          leftoverWidth--;\n          columnsToChange = true;\n        }\n      };\n\n      var leftoverWidth = availableWidth - usedWidthSum;\n      var columnsToChange = true;\n\n      while (leftoverWidth > 0 && columnsToChange) {\n        columnsToChange = false;\n        variableWidthColumnArray.forEach(processColumnUpwards);\n      }\n\n      // We can end up with too much width even though some columns aren't at their max width, in this situation\n      // we can trim the columns a little\n      var processColumnDownwards = function (column) {\n        if (column.drawnWidth > column.minWidth && excessWidth > 0) {\n          column.drawnWidth--;\n          usedWidthSum--;\n          excessWidth--;\n          columnsToChange = true;\n        }\n      };\n\n      var excessWidth = usedWidthSum - availableWidth;\n      columnsToChange = true;\n\n      while (excessWidth > 0 && columnsToChange) {\n        columnsToChange = false;\n        variableWidthColumnArray.forEach(processColumnDownwards);\n      }\n    }\n\n    // all that was across all the renderContainers, now we need to work out what that calculation decided for\n    // our renderContainer\n    var canvasWidth = 0;\n    self.visibleColumnCache.forEach(function(column){\n      if ( column.visible ){\n        canvasWidth = canvasWidth + column.drawnWidth;\n      }\n    });\n\n    // Build the CSS\n    columnCache.forEach(function (column) {\n      ret = ret + column.getColClassDefinition();\n    });\n\n    self.canvasWidth = canvasWidth;\n\n    // Return the styles back to buildStyles which pops them into the `customStyles` scope variable\n    // return ret;\n\n    // Set this render container's column styles so they can be used in style computation\n    this.columnStyles = ret;\n  };\n\n  GridRenderContainer.prototype.needsHScrollbarPlaceholder = function () {\n    var self = this,\n      containerBody;\n\n    if (self.name === 'left' || self.name === 'right' && !this.hasHScrollbar && !this.grid.disableScrolling) {\n      if (self.grid.options.enableHorizontalScrollbar === uiGridConstants.scrollbars.ALWAYS) {\n        return true;\n      }\n      containerBody = this.grid.element[0].querySelector('.ui-grid-render-container-body .ui-grid-viewport');\n      return containerBody.scrollWidth > containerBody.offsetWidth;\n    }\n    return false;\n  };\n\n  GridRenderContainer.prototype.getViewportStyle = function () {\n    var self = this;\n    var styles = {};\n    var scrollbarVisibility = {};\n\n    scrollbarVisibility[uiGridConstants.scrollbars.ALWAYS] = 'scroll';\n    scrollbarVisibility[uiGridConstants.scrollbars.WHEN_NEEDED] = 'auto';\n\n    self.hasHScrollbar = false;\n    self.hasVScrollbar = false;\n\n    if (self.grid.disableScrolling) {\n      styles['overflow-x'] = 'hidden';\n      styles['overflow-y'] = 'hidden';\n      return styles;\n    }\n\n    if (self.name === 'body') {\n      self.hasHScrollbar = self.grid.options.enableHorizontalScrollbar !== uiGridConstants.scrollbars.NEVER;\n      if (!self.grid.isRTL()) {\n        if (!self.grid.hasRightContainerColumns()) {\n          self.hasVScrollbar = self.grid.options.enableVerticalScrollbar !== uiGridConstants.scrollbars.NEVER;\n        }\n      }\n      else {\n        if (!self.grid.hasLeftContainerColumns()) {\n          self.hasVScrollbar = self.grid.options.enableVerticalScrollbar !== uiGridConstants.scrollbars.NEVER;\n        }\n      }\n    }\n    else if (self.name === 'left') {\n      self.hasVScrollbar = self.grid.isRTL() ? self.grid.options.enableVerticalScrollbar !== uiGridConstants.scrollbars.NEVER : false;\n    }\n    else {\n      self.hasVScrollbar = !self.grid.isRTL() ? self.grid.options.enableVerticalScrollbar !== uiGridConstants.scrollbars.NEVER : false;\n    }\n\n    styles['overflow-x'] = self.hasHScrollbar ? scrollbarVisibility[self.grid.options.enableHorizontalScrollbar] : 'hidden';\n    styles['overflow-y'] = self.hasVScrollbar ? scrollbarVisibility[self.grid.options.enableVerticalScrollbar] : 'hidden';\n\n    return styles;\n  };\n\n  return GridRenderContainer;\n}]);\n\n})();\n\n(function(){\n\nangular.module('ui.grid')\n.factory('GridRow', ['gridUtil', 'uiGridConstants', function(gridUtil, uiGridConstants) {\n\n   /**\n   * @class GridRow\n   * @ngdoc function\n   * @name ui.grid.class:GridRow\n   * @description GridRow is the viewModel for one logical row on the grid.  A grid Row is not necessarily a one-to-one\n   * relation to gridOptions.data.\n   * @param {object} entity the array item from GridOptions.data\n   * @param {number} index the current position of the row in the array\n   * @param {Grid} grid reference to the parent grid\n   */\n  function GridRow(entity, index, grid) {\n\n     /**\n      *  @ngdoc object\n      *  @name grid\n      *  @propertyOf  ui.grid.class:GridRow\n      *  @description A reference back to the grid\n      */\n     this.grid = grid;\n\n     /**\n      *  @ngdoc object\n      *  @name entity\n      *  @propertyOf  ui.grid.class:GridRow\n      *  @description A reference to an item in gridOptions.data[]\n      */\n    this.entity = entity;\n\n     /**\n      *  @ngdoc object\n      *  @name uid\n      *  @propertyOf  ui.grid.class:GridRow\n      *  @description  UniqueId of row\n      */\n     this.uid = gridUtil.nextUid();\n\n     /**\n      *  @ngdoc object\n      *  @name visible\n      *  @propertyOf  ui.grid.class:GridRow\n      *  @description If true, the row will be rendered\n      */\n    // Default to true\n    this.visible = true;\n\n     /**\n      *  @ngdoc object\n      *  @name isSelected\n      *  @propertyOf  ui.grid.class:GridRow\n      *  @description Marks if the row has been selected\n      */\n     // Default to false\n     this.isSelected = false;\n\n\n    this.$$height = grid.options.rowHeight;\n\n  }\n\n    /**\n     *  @ngdoc object\n     *  @name height\n     *  @propertyOf ui.grid.class:GridRow\n     *  @description height of each individual row. changing the height will flag all\n     *  row renderContainers to recalculate their canvas height\n     */\n    Object.defineProperty(GridRow.prototype, 'height', {\n      get: function() {\n        return this.$$height;\n      },\n      set: function(height) {\n        if (height !== this.$$height) {\n          this.grid.updateCanvasHeight();\n          this.$$height = height;\n        }\n      }\n    });\n\n  /**\n   * @ngdoc function\n   * @name getQualifiedColField\n   * @methodOf ui.grid.class:GridRow\n   * @description returns the qualified field name as it exists on scope\n   * ie: row.entity.fieldA\n   * @param {GridColumn} col column instance\n   * @returns {string} resulting name that can be evaluated on scope\n   */\n    GridRow.prototype.getQualifiedColField = function(col) {\n      return 'row.' + this.getEntityQualifiedColField(col);\n    };\n\n    /**\n     * @ngdoc function\n     * @name getEntityQualifiedColField\n     * @methodOf ui.grid.class:GridRow\n     * @description returns the qualified field name minus the row path\n     * ie: entity.fieldA\n     * @param {GridColumn} col column instance\n     * @returns {string} resulting name that can be evaluated against a row\n     */\n  GridRow.prototype.getEntityQualifiedColField = function(col) {\n    var base = 'entity';\n    if ( col.field === uiGridConstants.ENTITY_BINDING ) {\n      return base;\n    }\n    return gridUtil.preEval(base + '.' + col.field);\n  };\n\n\n  /**\n   * @ngdoc function\n   * @name setRowInvisible\n   * @methodOf  ui.grid.class:GridRow\n   * @description Sets an override on the row that forces it to always\n   * be invisible. Emits the rowsVisibleChanged event if it changed the row visibility.\n   *\n   * This method can be called from the api, passing in the gridRow we want\n   * altered.  It should really work by calling gridRow.setRowInvisible, but that's\n   * not the way I coded it, and too late to change now.  Changed to just call\n   * the internal function row.setThisRowInvisible().\n   *\n   * @param {GridRow} row the row we want to set to invisible\n   *\n   */\n  GridRow.prototype.setRowInvisible = function ( row ) {\n    if (row && row.setThisRowInvisible){\n      row.setThisRowInvisible( 'user' );\n    }\n  };\n\n\n  /**\n   * @ngdoc function\n   * @name clearRowInvisible\n   * @methodOf  ui.grid.class:GridRow\n   * @description Clears an override on the row that forces it to always\n   * be invisible. Emits the rowsVisibleChanged event if it changed the row visibility.\n   *\n   * This method can be called from the api, passing in the gridRow we want\n   * altered.  It should really work by calling gridRow.clearRowInvisible, but that's\n   * not the way I coded it, and too late to change now.  Changed to just call\n   * the internal function row.clearThisRowInvisible().\n   *\n   * @param {GridRow} row the row we want to clear the invisible flag\n   *\n   */\n  GridRow.prototype.clearRowInvisible = function ( row ) {\n    if (row && row.clearThisRowInvisible){\n      row.clearThisRowInvisible( 'user' );\n    }\n  };\n\n\n  /**\n   * @ngdoc function\n   * @name setThisRowInvisible\n   * @methodOf  ui.grid.class:GridRow\n   * @description Sets an override on the row that forces it to always\n   * be invisible. Emits the rowsVisibleChanged event if it changed the row visibility\n   *\n   * @param {string} reason the reason (usually the module) for the row to be invisible.\n   * E.g. grouping, user, filter\n   * @param {boolean} fromRowsProcessor whether we were called from a rowsProcessor, passed through to evaluateRowVisibility\n   */\n  GridRow.prototype.setThisRowInvisible = function ( reason, fromRowsProcessor ) {\n    if ( !this.invisibleReason ){\n      this.invisibleReason = {};\n    }\n    this.invisibleReason[reason] = true;\n    this.evaluateRowVisibility( fromRowsProcessor);\n  };\n\n\n  /**\n   * @ngdoc function\n   * @name clearRowInvisible\n   * @methodOf ui.grid.class:GridRow\n   * @description Clears any override on the row visibility, returning it\n   * to normal visibility calculations.  Emits the rowsVisibleChanged\n   * event\n   *\n   * @param {string} reason the reason (usually the module) for the row to be invisible.\n   * E.g. grouping, user, filter\n   * @param {boolean} fromRowsProcessor whether we were called from a rowsProcessor, passed through to evaluateRowVisibility\n   */\n  GridRow.prototype.clearThisRowInvisible = function ( reason, fromRowsProcessor ) {\n    if (typeof(this.invisibleReason) !== 'undefined' ) {\n      delete this.invisibleReason[reason];\n    }\n    this.evaluateRowVisibility( fromRowsProcessor );\n  };\n\n\n  /**\n   * @ngdoc function\n   * @name evaluateRowVisibility\n   * @methodOf ui.grid.class:GridRow\n   * @description Determines whether the row should be visible based on invisibleReason,\n   * and if it changes the row visibility, then emits the rowsVisibleChanged event.\n   *\n   * Queues a grid refresh, but doesn't call it directly to avoid hitting lots of grid refreshes.\n   * @param {boolean} fromRowProcessor if true, then it won't raise events or queue the refresh, the\n   * row processor does that already\n   */\n  GridRow.prototype.evaluateRowVisibility = function ( fromRowProcessor ) {\n    var newVisibility = true;\n    if ( typeof(this.invisibleReason) !== 'undefined' ){\n      angular.forEach(this.invisibleReason, function( value, key ){\n        if ( value ){\n          newVisibility = false;\n        }\n      });\n    }\n\n    if ( typeof(this.visible) === 'undefined' || this.visible !== newVisibility ){\n      this.visible = newVisibility;\n      if ( !fromRowProcessor ){\n        this.grid.queueGridRefresh();\n        this.grid.api.core.raise.rowsVisibleChanged(this);\n      }\n    }\n  };\n\n\n  return GridRow;\n}]);\n\n})();\n\n(function(){\n  'use strict';\n  /**\n   * @ngdoc object\n   * @name ui.grid.class:GridRowColumn\n   * @param {GridRow} row The row for this pair\n   * @param {GridColumn} column The column for this pair\n   * @description A row and column pair that represents the intersection of these two entities.\n   * Must be instantiated as a constructor using the `new` keyword.\n   */\n  angular.module('ui.grid')\n  .factory('GridRowColumn', ['$parse', '$filter',\n    function GridRowColumnFactory($parse, $filter){\n      var GridRowColumn = function GridRowColumn(row, col) {\n        if ( !(this instanceof GridRowColumn)){\n          throw \"Using GridRowColumn as a function insead of as a constructor. Must be called with `new` keyword\";\n        }\n\n        /**\n         * @ngdoc object\n         * @name row\n         * @propertyOf ui.grid.class:GridRowColumn\n         * @description {@link ui.grid.class:GridRow }\n         */\n        this.row = row;\n        /**\n         * @ngdoc object\n         * @name col\n         * @propertyOf ui.grid.class:GridRowColumn\n         * @description {@link ui.grid.class:GridColumn }\n         */\n        this.col = col;\n      };\n\n      /**\n       * @ngdoc function\n       * @name getIntersectionValueRaw\n       * @methodOf ui.grid.class:GridRowColumn\n       * @description Gets the intersection of where the row and column meet.\n       * @returns {String|Number|Object} The value from the grid data that this GridRowColumn points too.\n       *          If the column has a cellFilter this will NOT return the filtered value.\n       */\n      GridRowColumn.prototype.getIntersectionValueRaw = function(){\n        var getter = $parse(this.row.getEntityQualifiedColField(this.col));\n        var context = this.row;\n        return getter(context);\n      };\n      return GridRowColumn;\n    }\n  ]);\n})();\n\n(function () {\n  angular.module('ui.grid')\n    .factory('ScrollEvent', ['gridUtil', function (gridUtil) {\n\n      /**\n       * @ngdoc function\n       * @name ui.grid.class:ScrollEvent\n       * @description Model for all scrollEvents\n       * @param {Grid} grid that owns the scroll event\n       * @param {GridRenderContainer} sourceRowContainer that owns the scroll event. Can be null\n       * @param {GridRenderContainer} sourceColContainer that owns the scroll event. Can be null\n       * @param {string} source the source of the event - from uiGridConstants.scrollEventSources or a string value of directive/service/factory.functionName\n       */\n      function ScrollEvent(grid, sourceRowContainer, sourceColContainer, source) {\n        var self = this;\n        if (!grid) {\n          throw new Error(\"grid argument is required\");\n        }\n\n        /**\n         *  @ngdoc object\n         *  @name grid\n         *  @propertyOf  ui.grid.class:ScrollEvent\n         *  @description A reference back to the grid\n         */\n         self.grid = grid;\n\n\n\n        /**\n         *  @ngdoc object\n         *  @name source\n         *  @propertyOf  ui.grid.class:ScrollEvent\n         *  @description the source of the scroll event. limited to values from uiGridConstants.scrollEventSources\n         */\n        self.source = source;\n\n\n        /**\n         *  @ngdoc object\n         *  @name noDelay\n         *  @propertyOf  ui.grid.class:ScrollEvent\n         *  @description most scroll events from the mouse or trackpad require delay to operate properly\n         *  set to false to eliminate delay.  Useful for scroll events that the grid causes, such as scrolling to make a row visible.\n         */\n        self.withDelay = true;\n\n        self.sourceRowContainer = sourceRowContainer;\n        self.sourceColContainer = sourceColContainer;\n\n        self.newScrollLeft = null;\n        self.newScrollTop = null;\n        self.x = null;\n        self.y = null;\n\n        self.verticalScrollLength = -9999999;\n        self.horizontalScrollLength = -999999;\n\n\n        /**\n         *  @ngdoc function\n         *  @name fireThrottledScrollingEvent\n         *  @methodOf  ui.grid.class:ScrollEvent\n         *  @description fires a throttled event using grid.api.core.raise.scrollEvent\n         */\n        self.fireThrottledScrollingEvent = gridUtil.throttle(function(sourceContainerId) {\n          self.grid.scrollContainers(sourceContainerId, self);\n        }, self.grid.options.wheelScrollThrottle, {trailing: true});\n\n      }\n\n\n      /**\n       *  @ngdoc function\n       *  @name getNewScrollLeft\n       *  @methodOf  ui.grid.class:ScrollEvent\n       *  @description returns newScrollLeft property if available; calculates a new value if it isn't\n       */\n      ScrollEvent.prototype.getNewScrollLeft = function(colContainer, viewport){\n        var self = this;\n\n        if (!self.newScrollLeft){\n          var scrollWidth = (colContainer.getCanvasWidth() - colContainer.getViewportWidth());\n\n          var oldScrollLeft = gridUtil.normalizeScrollLeft(viewport, self.grid);\n\n          var scrollXPercentage;\n          if (typeof(self.x.percentage) !== 'undefined' && self.x.percentage !== undefined) {\n            scrollXPercentage = self.x.percentage;\n          }\n          else if (typeof(self.x.pixels) !== 'undefined' && self.x.pixels !== undefined) {\n            scrollXPercentage = self.x.percentage = (oldScrollLeft + self.x.pixels) / scrollWidth;\n          }\n          else {\n            throw new Error(\"No percentage or pixel value provided for scroll event X axis\");\n          }\n\n          return Math.max(0, scrollXPercentage * scrollWidth);\n        }\n\n        return self.newScrollLeft;\n      };\n\n\n      /**\n       *  @ngdoc function\n       *  @name getNewScrollTop\n       *  @methodOf  ui.grid.class:ScrollEvent\n       *  @description returns newScrollTop property if available; calculates a new value if it isn't\n       */\n      ScrollEvent.prototype.getNewScrollTop = function(rowContainer, viewport){\n        var self = this;\n\n\n        if (!self.newScrollTop){\n          var scrollLength = rowContainer.getVerticalScrollLength();\n\n          var oldScrollTop = viewport[0].scrollTop;\n\n          var scrollYPercentage;\n          if (typeof(self.y.percentage) !== 'undefined' && self.y.percentage !== undefined) {\n            scrollYPercentage = self.y.percentage;\n          }\n          else if (typeof(self.y.pixels) !== 'undefined' && self.y.pixels !== undefined) {\n            scrollYPercentage = self.y.percentage = (oldScrollTop + self.y.pixels) / scrollLength;\n          }\n          else {\n            throw new Error(\"No percentage or pixel value provided for scroll event Y axis\");\n          }\n\n          return Math.max(0, scrollYPercentage * scrollLength);\n        }\n\n        return self.newScrollTop;\n      };\n\n      ScrollEvent.prototype.atTop = function(scrollTop) {\n        return (this.y && (this.y.percentage === 0 || this.verticalScrollLength < 0) && scrollTop === 0);\n      };\n\n      ScrollEvent.prototype.atBottom = function(scrollTop) {\n        return (this.y && (this.y.percentage === 1 || this.verticalScrollLength === 0) && scrollTop > 0);\n      };\n\n      ScrollEvent.prototype.atLeft = function(scrollLeft) {\n        return (this.x && (this.x.percentage === 0 || this.horizontalScrollLength < 0) && scrollLeft === 0);\n      };\n\n      ScrollEvent.prototype.atRight = function(scrollLeft) {\n        return (this.x && (this.x.percentage === 1 || this.horizontalScrollLength ===0) && scrollLeft > 0);\n      };\n\n\n      ScrollEvent.Sources = {\n        ViewPortScroll: 'ViewPortScroll',\n        RenderContainerMouseWheel: 'RenderContainerMouseWheel',\n        RenderContainerTouchMove: 'RenderContainerTouchMove',\n        Other: 99\n      };\n\n      return ScrollEvent;\n    }]);\n\n\n\n})();\n\n(function () {\n  'use strict';\n  /**\n   *  @ngdoc object\n   *  @name ui.grid.service:gridClassFactory\n   *\n   *  @description factory to return dom specific instances of a grid\n   *\n   */\n  angular.module('ui.grid').service('gridClassFactory', ['gridUtil', '$q', '$compile', '$templateCache', 'uiGridConstants', 'Grid', 'GridColumn', 'GridRow',\n    function (gridUtil, $q, $compile, $templateCache, uiGridConstants, Grid, GridColumn, GridRow) {\n\n      var service = {\n        /**\n         * @ngdoc method\n         * @name createGrid\n         * @methodOf ui.grid.service:gridClassFactory\n         * @description Creates a new grid instance. Each instance will have a unique id\n         * @param {object} options An object map of options to pass into the created grid instance.\n         * @returns {Grid} grid\n         */\n        createGrid : function(options) {\n          options = (typeof(options) !== 'undefined') ? options : {};\n          options.id = gridUtil.newId();\n          var grid = new Grid(options);\n\n          // NOTE/TODO: rowTemplate should always be defined...\n          if (grid.options.rowTemplate) {\n            var rowTemplateFnPromise = $q.defer();\n            grid.getRowTemplateFn = rowTemplateFnPromise.promise;\n            \n            gridUtil.getTemplate(grid.options.rowTemplate)\n              .then(\n                function (template) {\n                  var rowTemplateFn = $compile(template);\n                  rowTemplateFnPromise.resolve(rowTemplateFn);\n                },\n                function (res) {\n                  // Todo handle response error here?\n                  throw new Error(\"Couldn't fetch/use row template '\" + grid.options.rowTemplate + \"'\");\n                }).catch(angular.noop);\n          }\n\n          grid.registerColumnBuilder(service.defaultColumnBuilder);\n\n          // Row builder for custom row templates\n          grid.registerRowBuilder(service.rowTemplateAssigner);\n\n          // Reset all rows to visible initially\n          grid.registerRowsProcessor(function allRowsVisible(rows) {\n            rows.forEach(function (row) {\n              row.evaluateRowVisibility( true );\n            });\n\n            return rows;\n          }, 50);\n\n          grid.registerColumnsProcessor(function applyColumnVisibility(columns) {\n            columns.forEach(function (column) {\n              column.visible = angular.isDefined(column.colDef.visible) ? column.colDef.visible : true;\n            });\n\n            return columns;\n          }, 50);\n\n          grid.registerRowsProcessor(grid.searchRows, 100);\n\n          // Register the default row processor, it sorts rows by selected columns\n          if (grid.options.externalSort && angular.isFunction(grid.options.externalSort)) {\n            grid.registerRowsProcessor(grid.options.externalSort, 200);\n          }\n          else {\n            grid.registerRowsProcessor(grid.sortByColumn, 200);\n          }\n\n          return grid;\n        },\n\n        /**\n         * @ngdoc function\n         * @name defaultColumnBuilder\n         * @methodOf ui.grid.service:gridClassFactory\n         * @description Processes designTime column definitions and applies them to col for the\n         *              core grid features\n         * @param {object} colDef reference to column definition\n         * @param {GridColumn} col reference to gridCol\n         * @param {object} gridOptions reference to grid options\n         */\n        defaultColumnBuilder: function (colDef, col, gridOptions) {\n\n          var templateGetPromises = [];\n\n          // Abstracts the standard template processing we do for every template type.\n          var processTemplate = function( templateType, providedType, defaultTemplate, filterType, tooltipType ) {\n            if ( !colDef[templateType] ){\n              col[providedType] = defaultTemplate;\n            } else {\n              col[providedType] = colDef[templateType];\n            }\n\n            var templatePromise = gridUtil.getTemplate(col[providedType])\n              .then(\n                function (template) {\n                  if ( angular.isFunction(template) ) { template = template(); }\n                  var tooltipCall = ( tooltipType === 'cellTooltip' ) ? 'col.cellTooltip(row,col)' : 'col.headerTooltip(col)';\n                  if ( tooltipType && col[tooltipType] === false ){\n                    template = template.replace(uiGridConstants.TOOLTIP, '');\n                  } else if ( tooltipType && col[tooltipType] ){\n                    template = template.replace(uiGridConstants.TOOLTIP, 'title=\"{{' + tooltipCall + ' CUSTOM_FILTERS }}\"');\n                  }\n\n                  if ( filterType ){\n                    col[templateType] = template.replace(uiGridConstants.CUSTOM_FILTERS, function() {\n                      return col[filterType] ? \"|\" + col[filterType] : \"\";\n                    });\n                  } else {\n                    col[templateType] = template;\n                  }\n                },\n                function (res) {\n                  throw new Error(\"Couldn't fetch/use colDef.\" + templateType + \" '\" + colDef[templateType] + \"'\");\n                }).catch(angular.noop);\n\n            templateGetPromises.push(templatePromise);\n\n            return templatePromise;\n          };\n\n\n          /**\n           * @ngdoc property\n           * @name cellTemplate\n           * @propertyOf ui.grid.class:GridOptions.columnDef\n           * @description a custom template for each cell in this column.  The default\n           * is ui-grid/uiGridCell.  If you are using the cellNav feature, this template\n           * must contain a div that can receive focus.\n           *\n           */\n          col.cellTemplatePromise = processTemplate( 'cellTemplate', 'providedCellTemplate', 'ui-grid/uiGridCell', 'cellFilter', 'cellTooltip' );\n\n          /**\n           * @ngdoc property\n           * @name headerCellTemplate\n           * @propertyOf ui.grid.class:GridOptions.columnDef\n           * @description a custom template for the header for this column.  The default\n           * is ui-grid/uiGridHeaderCell\n           *\n           */\n          col.headerCellTemplatePromise = processTemplate( 'headerCellTemplate', 'providedHeaderCellTemplate', 'ui-grid/uiGridHeaderCell', 'headerCellFilter', 'headerTooltip' );\n\n          /**\n           * @ngdoc property\n           * @name footerCellTemplate\n           * @propertyOf ui.grid.class:GridOptions.columnDef\n           * @description a custom template for the footer for this column.  The default\n           * is ui-grid/uiGridFooterCell\n           *\n           */\n          col.footerCellTemplatePromise = processTemplate( 'footerCellTemplate', 'providedFooterCellTemplate', 'ui-grid/uiGridFooterCell', 'footerCellFilter' );\n\n          /**\n           * @ngdoc property\n           * @name filterHeaderTemplate\n           * @propertyOf ui.grid.class:GridOptions.columnDef\n           * @description a custom template for the filter input.  The default is ui-grid/ui-grid-filter\n           *\n           */\n          col.filterHeaderTemplatePromise = processTemplate( 'filterHeaderTemplate', 'providedFilterHeaderTemplate', 'ui-grid/ui-grid-filter' );\n\n          // Create a promise for the compiled element function\n          col.compiledElementFnDefer = $q.defer();\n\n          return $q.all(templateGetPromises);\n        },\n\n        rowTemplateAssigner: function rowTemplateAssigner(row) {\n          var grid = this;\n\n          // Row has no template assigned to it\n          if (!row.rowTemplate) {\n            // Use the default row template from the grid\n            row.rowTemplate = grid.options.rowTemplate;\n\n            // Use the grid's function for fetching the compiled row template function\n            row.getRowTemplateFn = grid.getRowTemplateFn;\n          }\n          // Row has its own template assigned\n          else {\n            // Create a promise for the compiled row template function\n            var perRowTemplateFnPromise = $q.defer();\n            row.getRowTemplateFn = perRowTemplateFnPromise.promise;\n\n            // Get the row template\n            gridUtil.getTemplate(row.rowTemplate)\n              .then(function (template) {\n                // Compile the template\n                var rowTemplateFn = $compile(template);\n                \n                // Resolve the compiled template function promise\n                perRowTemplateFnPromise.resolve(rowTemplateFn);\n              },\n              function (res) {\n                // Todo handle response error here?\n                throw new Error(\"Couldn't fetch/use row template '\" + row.rowTemplate + \"'\");\n              });\n          }\n\n          return row.getRowTemplateFn;\n        }\n      };\n\n      //class definitions (moved to separate factories)\n\n      return service;\n    }]);\n\n})();\n\n(function() {\n\nvar module = angular.module('ui.grid');\n\nfunction escapeRegExp(str) {\n  return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\");\n}\n\n\n/**\n *  @ngdoc service\n *  @name ui.grid.service:rowSearcher\n *\n *  @description Service for searching/filtering rows based on column value conditions.\n */\nmodule.service('rowSearcher', ['gridUtil', 'uiGridConstants', function (gridUtil, uiGridConstants) {\n  var defaultCondition = uiGridConstants.filter.CONTAINS;\n\n  var rowSearcher = {};\n\n  /**\n   * @ngdoc function\n   * @name getTerm\n   * @methodOf ui.grid.service:rowSearcher\n   * @description Get the term from a filter\n   * Trims leading and trailing whitespace\n   * @param {object} filter object to use\n   * @returns {object} Parsed term\n   */\n  rowSearcher.getTerm = function getTerm(filter) {\n    if (typeof(filter.term) === 'undefined') { return filter.term; }\n\n    var term = filter.term;\n\n    // Strip leading and trailing whitespace if the term is a string\n    if (typeof(term) === 'string') {\n      term = term.trim();\n    }\n\n    return term;\n  };\n\n  /**\n   * @ngdoc function\n   * @name stripTerm\n   * @methodOf ui.grid.service:rowSearcher\n   * @description Remove leading and trailing asterisk (*) from the filter's term\n   * @param {object} filter object to use\n   * @returns {uiGridConstants.filter<int>} Value representing the condition constant value\n   */\n  rowSearcher.stripTerm = function stripTerm(filter) {\n    var term = rowSearcher.getTerm(filter);\n\n    if (typeof(term) === 'string') {\n      return escapeRegExp(term.replace(/(^\\*|\\*$)/g, ''));\n    }\n    else {\n      return term;\n    }\n  };\n\n\n  /**\n   * @ngdoc function\n   * @name guessCondition\n   * @methodOf ui.grid.service:rowSearcher\n   * @description Guess the condition for a filter based on its term\n   * <br>\n   * Defaults to STARTS_WITH. Uses CONTAINS for strings beginning and ending with *s (*bob*).\n   * Uses STARTS_WITH for strings ending with * (bo*). Uses ENDS_WITH for strings starting with * (*ob).\n   * @param {object} filter object to use\n   * @returns {uiGridConstants.filter<int>} Value representing the condition constant value\n   */\n  rowSearcher.guessCondition = function guessCondition(filter) {\n    if (typeof(filter.term) === 'undefined' || !filter.term) {\n      return defaultCondition;\n    }\n\n    var term = rowSearcher.getTerm(filter);\n\n    if (/\\*/.test(term)) {\n      var regexpFlags = '';\n      if (!filter.flags || !filter.flags.caseSensitive) {\n        regexpFlags += 'i';\n      }\n\n      var reText = term.replace(/(\\\\)?\\*/g, function ($0, $1) { return $1 ? $0 : '[\\\\s\\\\S]*?'; });\n      return new RegExp('^' + reText + '$', regexpFlags);\n    }\n    // Otherwise default to default condition\n    else {\n      return defaultCondition;\n    }\n  };\n\n\n  /**\n   * @ngdoc function\n   * @name setupFilters\n   * @methodOf ui.grid.service:rowSearcher\n   * @description For a given columns filters (either col.filters, or [col.filter] can be passed in),\n   * do all the parsing and pre-processing and store that data into a new filters object.  The object\n   * has the condition, the flags, the stripped term, and a parsed reg exp if there was one.\n   *\n   * We could use a forEach in here, since it's much less performance sensitive, but since we're using\n   * for loops everywhere else in this module...\n   *\n   * @param {array} filters the filters from the column (col.filters or [col.filter])\n   * @returns {array} An array of parsed/preprocessed filters\n   */\n  rowSearcher.setupFilters = function setupFilters( filters ){\n    var newFilters = [];\n\n    var filtersLength = filters.length;\n    for ( var i = 0; i < filtersLength; i++ ){\n      var filter = filters[i];\n\n      if ( filter.noTerm || !gridUtil.isNullOrUndefined(filter.term) ){\n        var newFilter = {};\n\n        var regexpFlags = '';\n        if (!filter.flags || !filter.flags.caseSensitive) {\n          regexpFlags += 'i';\n        }\n\n        if ( !gridUtil.isNullOrUndefined(filter.term) ){\n          // it is possible to have noTerm.\n          if ( filter.rawTerm ){\n            newFilter.term = filter.term;\n          } else {\n            newFilter.term = rowSearcher.stripTerm(filter);\n          }\n        }\n        newFilter.noTerm = filter.noTerm;\n\n        if ( filter.condition ){\n          newFilter.condition = filter.condition;\n        } else {\n          newFilter.condition = rowSearcher.guessCondition(filter);\n        }\n\n        newFilter.flags = angular.extend( { caseSensitive: false, date: false }, filter.flags );\n\n        if (newFilter.condition === uiGridConstants.filter.STARTS_WITH) {\n          newFilter.startswithRE = new RegExp('^' + newFilter.term, regexpFlags);\n        }\n\n         if (newFilter.condition === uiGridConstants.filter.ENDS_WITH) {\n          newFilter.endswithRE = new RegExp(newFilter.term + '$', regexpFlags);\n        }\n\n        if (newFilter.condition === uiGridConstants.filter.CONTAINS) {\n          newFilter.containsRE = new RegExp(newFilter.term, regexpFlags);\n        }\n\n        if (newFilter.condition === uiGridConstants.filter.EXACT) {\n          newFilter.exactRE = new RegExp('^' + newFilter.term + '$', regexpFlags);\n        }\n\n        newFilters.push(newFilter);\n      }\n    }\n    return newFilters;\n  };\n\n\n  /**\n   * @ngdoc function\n   * @name runColumnFilter\n   * @methodOf ui.grid.service:rowSearcher\n   * @description Runs a single pre-parsed filter against a cell, returning true\n   * if the cell matches that one filter.\n   *\n   * @param {Grid} grid the grid we're working against\n   * @param {GridRow} row the row we're matching against\n   * @param {GridColumn} column the column that we're working against\n   * @param {object} filter the specific, preparsed, filter that we want to test\n   * @returns {boolean} true if we match (row stays visible)\n   */\n  rowSearcher.runColumnFilter = function runColumnFilter(grid, row, column, filter) {\n    // Cache typeof condition\n    var conditionType = typeof(filter.condition);\n\n    // Term to search for.\n    var term = filter.term;\n\n    // Get the column value for this row\n    var value;\n    if ( column.filterCellFiltered ){\n      value = grid.getCellDisplayValue(row, column);\n    } else {\n      value = grid.getCellValue(row, column);\n    }\n\n\n    // If the filter's condition is a RegExp, then use it\n    if (filter.condition instanceof RegExp) {\n      return filter.condition.test(value);\n    }\n\n    // If the filter's condition is a function, run it\n    if (conditionType === 'function') {\n      return filter.condition(term, value, row, column);\n    }\n\n    if (filter.startswithRE) {\n      return filter.startswithRE.test(value);\n    }\n\n    if (filter.endswithRE) {\n      return filter.endswithRE.test(value);\n    }\n\n    if (filter.containsRE) {\n      return filter.containsRE.test(value);\n    }\n\n    if (filter.exactRE) {\n      return filter.exactRE.test(value);\n    }\n\n    if (filter.condition === uiGridConstants.filter.NOT_EQUAL) {\n      var regex = new RegExp('^' + term + '$');\n      return !regex.exec(value);\n    }\n\n    if (typeof(value) === 'number' && typeof(term) === 'string' ){\n      // if the term has a decimal in it, it comes through as '9\\.4', we need to take out the \\\n      // the same for negative numbers\n      // TODO: I suspect the right answer is to look at escapeRegExp at the top of this code file, maybe it's not needed?\n      var tempFloat = parseFloat(term.replace(/\\\\\\./,'.').replace(/\\\\\\-/,'-'));\n      if (!isNaN(tempFloat)) {\n        term = tempFloat;\n      }\n    }\n\n    if (filter.flags.date === true) {\n      value = new Date(value);\n      // If the term has a dash in it, it comes through as '\\-' -- we need to take out the '\\'.\n      term = new Date(term.replace(/\\\\/g, ''));\n    }\n\n    if (filter.condition === uiGridConstants.filter.GREATER_THAN) {\n      return (value > term);\n    }\n\n    if (filter.condition === uiGridConstants.filter.GREATER_THAN_OR_EQUAL) {\n      return (value >= term);\n    }\n\n    if (filter.condition === uiGridConstants.filter.LESS_THAN) {\n      return (value < term);\n    }\n\n    if (filter.condition === uiGridConstants.filter.LESS_THAN_OR_EQUAL) {\n      return (value <= term);\n    }\n\n    return true;\n  };\n\n\n  /**\n   * @ngdoc boolean\n   * @name useExternalFiltering\n   * @propertyOf ui.grid.class:GridOptions\n   * @description False by default. When enabled, this setting suppresses the internal filtering.\n   * All UI logic will still operate, allowing filter conditions to be set and modified.\n   *\n   * The external filter logic can listen for the `filterChange` event, which fires whenever\n   * a filter has been adjusted.\n   */\n  /**\n   * @ngdoc function\n   * @name searchColumn\n   * @methodOf ui.grid.service:rowSearcher\n   * @description Process provided filters on provided column against a given row. If the row meets\n   * the conditions on all the filters, return true.\n   * @param {Grid} grid Grid to search in\n   * @param {GridRow} row Row to search on\n   * @param {GridColumn} column Column with the filters to use\n   * @param {array} filters array of pre-parsed/preprocessed filters to apply\n   * @returns {boolean} Whether the column matches or not.\n   */\n  rowSearcher.searchColumn = function searchColumn(grid, row, column, filters) {\n    if (grid.options.useExternalFiltering) {\n      return true;\n    }\n\n    var filtersLength = filters.length;\n    for (var i = 0; i < filtersLength; i++) {\n      var filter = filters[i];\n\n      if ( !gridUtil.isNullOrUndefined(filter.term) && filter.term !== '' || filter.noTerm ){\n        var ret = rowSearcher.runColumnFilter(grid, row, column, filter);\n        if (!ret) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  };\n\n\n  /**\n   * @ngdoc function\n   * @name search\n   * @methodOf ui.grid.service:rowSearcher\n   * @description Run a search across the given rows and columns, marking any rows that don't\n   * match the stored col.filters or col.filter as invisible.\n   * @param {Grid} grid Grid instance to search inside\n   * @param {Array[GridRow]} rows GridRows to filter\n   * @param {Array[GridColumn]} columns GridColumns with filters to process\n   */\n  rowSearcher.search = function search(grid, rows, columns) {\n    /*\n     * Added performance optimisations into this code base, as this logic creates deeply nested\n     * loops and is therefore very performance sensitive.  In particular, avoiding forEach as\n     * this impacts some browser optimisers (particularly Chrome), using iterators instead\n     */\n\n    // Don't do anything if we weren't passed any rows\n    if (!rows) {\n      return;\n    }\n\n    // don't filter if filtering currently disabled\n    if (!grid.options.enableFiltering){\n      return rows;\n    }\n\n    // Build list of filters to apply\n    var filterData = [];\n\n    var colsLength = columns.length;\n\n    var hasTerm = function( filters ) {\n      var hasTerm = false;\n\n      filters.forEach( function (filter) {\n        if ( !gridUtil.isNullOrUndefined(filter.term) && filter.term !== '' || filter.noTerm ){\n          hasTerm = true;\n        }\n      });\n\n      return hasTerm;\n    };\n\n    for (var i = 0; i < colsLength; i++) {\n      var col = columns[i];\n\n      if (typeof(col.filters) !== 'undefined' && hasTerm(col.filters) ) {\n        filterData.push( { col: col, filters: rowSearcher.setupFilters(col.filters) } );\n      }\n    }\n\n    if (filterData.length > 0) {\n      // define functions outside the loop, performance optimisation\n      var foreachRow = function(grid, row, col, filters){\n        if ( row.visible && !rowSearcher.searchColumn(grid, row, col, filters) ) {\n          row.visible = false;\n        }\n      };\n\n      var foreachFilterCol = function(grid, filterData){\n        var rowsLength = rows.length;\n        for ( var i = 0; i < rowsLength; i++){\n          foreachRow(grid, rows[i], filterData.col, filterData.filters);\n        }\n      };\n\n      // nested loop itself - foreachFilterCol, which in turn calls foreachRow\n      var filterDataLength = filterData.length;\n      for ( var j = 0; j < filterDataLength; j++){\n        foreachFilterCol( grid, filterData[j] );\n      }\n\n      if (grid.api.core.raise.rowsVisibleChanged) {\n        grid.api.core.raise.rowsVisibleChanged();\n      }\n\n      // drop any invisible rows\n      // keeping these, as needed with filtering for trees - we have to come back and make parent nodes visible if child nodes are selected in the filter\n      // rows = rows.filter(function(row){ return row.visible; });\n\n    }\n\n    return rows;\n  };\n\n  return rowSearcher;\n}]);\n\n})();\n\n(function() {\n\nvar module = angular.module('ui.grid');\n\n/**\n * @ngdoc object\n * @name ui.grid.class:rowSorter\n * @description rowSorter provides the default sorting mechanisms,\n * including guessing column types and applying appropriate sort\n * algorithms\n *\n */\n\nmodule.service('rowSorter', ['$parse', 'uiGridConstants', function ($parse, uiGridConstants) {\n  var currencyRegexStr =\n    '(' +\n    uiGridConstants.CURRENCY_SYMBOLS\n      .map(function (a) { return '\\\\' + a; }) // Escape all the currency symbols ($ at least will jack up this regex)\n      .join('|') + // Join all the symbols together with |s\n    ')?';\n\n  // /^[-+]?[£$¤¥]?[\\d,.]+%?$/\n  var numberStrRegex = new RegExp('^[-+]?' + currencyRegexStr + '[\\\\d,.]+' + currencyRegexStr + '%?$');\n\n  var rowSorter = {\n    // Cache of sorting functions. Once we create them, we don't want to keep re-doing it\n    //   this takes a piece of data from the cell and tries to determine its type and what sorting\n    //   function to use for it\n    colSortFnCache: {}\n  };\n\n\n  /**\n   * @ngdoc method\n   * @methodOf ui.grid.class:rowSorter\n   * @name guessSortFn\n   * @description Assigns a sort function to use based on the itemType in the column\n   * @param {string} itemType one of 'number', 'boolean', 'string', 'date', 'object'.  And\n   * error will be thrown for any other type.\n   * @returns {function} a sort function that will sort that type\n   */\n  rowSorter.guessSortFn = function guessSortFn(itemType) {\n    switch (itemType) {\n      case \"number\":\n        return rowSorter.sortNumber;\n      case \"numberStr\":\n        return rowSorter.sortNumberStr;\n      case \"boolean\":\n        return rowSorter.sortBool;\n      case \"string\":\n        return rowSorter.sortAlpha;\n      case \"date\":\n        return rowSorter.sortDate;\n      case \"object\":\n        return rowSorter.basicSort;\n      default:\n        throw new Error('No sorting function found for type:' + itemType);\n    }\n  };\n\n\n  /**\n   * @ngdoc method\n   * @methodOf ui.grid.class:rowSorter\n   * @name handleNulls\n   * @description Sorts nulls and undefined to the bottom (top when\n   * descending).  Called by each of the internal sorters before\n   * attempting to sort.  Note that this method is available on the core api\n   * via gridApi.core.sortHandleNulls\n   * @param {object} a sort value a\n   * @param {object} b sort value b\n   * @returns {number} null if there were no nulls/undefineds, otherwise returns\n   * a sort value that should be passed back from the sort function\n   */\n  rowSorter.handleNulls = function handleNulls(a, b) {\n    // We want to allow zero values and false values to be evaluated in the sort function\n    if ((!a && a !== 0 && a !== false) || (!b && b !== 0 && b !== false)) {\n      // We want to force nulls and such to the bottom when we sort... which effectively is \"greater than\"\n      if ((!a && a !== 0 && a !== false) && (!b && b !== 0 && b !== false)) {\n        return 0;\n      }\n      else if (!a && a !== 0 && a !== false) {\n        return 1;\n      }\n      else if (!b && b !== 0 && b !== false) {\n        return -1;\n      }\n    }\n    return null;\n  };\n\n\n  /**\n   * @ngdoc method\n   * @methodOf ui.grid.class:rowSorter\n   * @name basicSort\n   * @description Sorts any values that provide the < method, including strings\n   * or numbers.  Handles nulls and undefined through calling handleNulls\n   * @param {object} a sort value a\n   * @param {object} b sort value b\n   * @returns {number} normal sort function, returns -ve, 0, +ve\n   */\n  rowSorter.basicSort = function basicSort(a, b) {\n    var nulls = rowSorter.handleNulls(a, b);\n    if ( nulls !== null ){\n      return nulls;\n    } else {\n      if (a === b) {\n        return 0;\n      }\n      if (a < b) {\n        return -1;\n      }\n      return 1;\n    }\n  };\n\n\n  /**\n   * @ngdoc method\n   * @methodOf ui.grid.class:rowSorter\n   * @name sortNumber\n   * @description Sorts numerical values.  Handles nulls and undefined through calling handleNulls\n   * @param {object} a sort value a\n   * @param {object} b sort value b\n   * @returns {number} normal sort function, returns -ve, 0, +ve\n   */\n  rowSorter.sortNumber = function sortNumber(a, b) {\n    var nulls = rowSorter.handleNulls(a, b);\n    if ( nulls !== null ){\n      return nulls;\n    } else {\n      return a - b;\n    }\n  };\n\n\n  /**\n   * @ngdoc method\n   * @methodOf ui.grid.class:rowSorter\n   * @name sortNumberStr\n   * @description Sorts numerical values that are stored in a string (i.e. parses them to numbers first).\n   * Handles nulls and undefined through calling handleNulls\n   * @param {object} a sort value a\n   * @param {object} b sort value b\n   * @returns {number} normal sort function, returns -ve, 0, +ve\n   */\n  rowSorter.sortNumberStr = function sortNumberStr(a, b) {\n    var nulls = rowSorter.handleNulls(a, b);\n    if ( nulls !== null ){\n      return nulls;\n    } else {\n      var numA, // The parsed number form of 'a'\n          numB, // The parsed number form of 'b'\n          badA = false,\n          badB = false;\n\n      // Try to parse 'a' to a float\n      numA = parseFloat(a.replace(/[^0-9.-]/g, ''));\n\n      // If 'a' couldn't be parsed to float, flag it as bad\n      if (isNaN(numA)) {\n          badA = true;\n      }\n\n      // Try to parse 'b' to a float\n      numB = parseFloat(b.replace(/[^0-9.-]/g, ''));\n\n      // If 'b' couldn't be parsed to float, flag it as bad\n      if (isNaN(numB)) {\n          badB = true;\n      }\n\n      // We want bad ones to get pushed to the bottom... which effectively is \"greater than\"\n      if (badA && badB) {\n          return 0;\n      }\n\n      if (badA) {\n          return 1;\n      }\n\n      if (badB) {\n          return -1;\n      }\n\n      return numA - numB;\n    }\n  };\n\n\n  /**\n   * @ngdoc method\n   * @methodOf ui.grid.class:rowSorter\n   * @name sortAlpha\n   * @description Sorts string values. Handles nulls and undefined through calling handleNulls\n   * @param {object} a sort value a\n   * @param {object} b sort value b\n   * @returns {number} normal sort function, returns -ve, 0, +ve\n   */\n  rowSorter.sortAlpha = function sortAlpha(a, b) {\n    var nulls = rowSorter.handleNulls(a, b);\n    if ( nulls !== null ){\n      return nulls;\n    } else {\n      var strA = a.toString().toLowerCase(),\n          strB = b.toString().toLowerCase();\n\n      return strA === strB ? 0 : strA.localeCompare(strB);\n    }\n  };\n\n\n  /**\n   * @ngdoc method\n   * @methodOf ui.grid.class:rowSorter\n   * @name sortDate\n   * @description Sorts date values. Handles nulls and undefined through calling handleNulls.\n   * Handles date strings by converting to Date object if not already an instance of Date\n   * @param {object} a sort value a\n   * @param {object} b sort value b\n   * @returns {number} normal sort function, returns -ve, 0, +ve\n   */\n  rowSorter.sortDate = function sortDate(a, b) {\n    var nulls = rowSorter.handleNulls(a, b);\n    if ( nulls !== null ){\n      return nulls;\n    } else {\n      if (!(a instanceof Date)) {\n        a = new Date(a);\n      }\n      if (!(b instanceof Date)){\n        b = new Date(b);\n      }\n      var timeA = a.getTime(),\n          timeB = b.getTime();\n\n      return timeA === timeB ? 0 : (timeA < timeB ? -1 : 1);\n    }\n  };\n\n\n  /**\n   * @ngdoc method\n   * @methodOf ui.grid.class:rowSorter\n   * @name sortBool\n   * @description Sorts boolean values, true is considered larger than false.\n   * Handles nulls and undefined through calling handleNulls\n   * @param {object} a sort value a\n   * @param {object} b sort value b\n   * @returns {number} normal sort function, returns -ve, 0, +ve\n   */\n  rowSorter.sortBool = function sortBool(a, b) {\n    var nulls = rowSorter.handleNulls(a, b);\n    if ( nulls !== null ){\n      return nulls;\n    } else {\n      if (a && b) {\n        return 0;\n      }\n\n      if (!a && !b) {\n        return 0;\n      }\n      else {\n        return a ? 1 : -1;\n      }\n    }\n  };\n\n\n  /**\n   * @ngdoc method\n   * @methodOf ui.grid.class:rowSorter\n   * @name getSortFn\n   * @description Get the sort function for the column.  Looks first in\n   * rowSorter.colSortFnCache using the column name, failing that it\n   * looks at col.sortingAlgorithm (and puts it in the cache), failing that\n   * it guesses the sort algorithm based on the data type.\n   *\n   * The cache currently seems a bit pointless, as none of the work we do is\n   * processor intensive enough to need caching.  Presumably in future we might\n   * inspect the row data itself to guess the sort function, and in that case\n   * it would make sense to have a cache, the infrastructure is in place to allow\n   * that.\n   *\n   * @param {Grid} grid the grid to consider\n   * @param {GridColumn} col the column to find a function for\n   * @param {array} rows an array of grid rows.  Currently unused, but presumably in future\n   * we might inspect the rows themselves to decide what sort of data might be there\n   * @returns {function} the sort function chosen for the column\n   */\n  rowSorter.getSortFn = function getSortFn(grid, col, rows) {\n    var sortFn, item;\n\n    // See if we already figured out what to use to sort the column and have it in the cache\n    if (rowSorter.colSortFnCache[col.colDef.name]) {\n      sortFn = rowSorter.colSortFnCache[col.colDef.name];\n    }\n    // If the column has its OWN sorting algorithm, use that\n    else if (col.sortingAlgorithm !== undefined) {\n      sortFn = col.sortingAlgorithm;\n      rowSorter.colSortFnCache[col.colDef.name] = col.sortingAlgorithm;\n    }\n    // Always default to sortAlpha when sorting after a cellFilter\n    else if ( col.sortCellFiltered && col.cellFilter ){\n      sortFn = rowSorter.sortAlpha;\n      rowSorter.colSortFnCache[col.colDef.name] = sortFn;\n    }\n    // Try and guess what sort function to use\n    else {\n      // Guess the sort function\n      sortFn = rowSorter.guessSortFn(col.colDef.type);\n\n      // If we found a sort function, cache it\n      if (sortFn) {\n        rowSorter.colSortFnCache[col.colDef.name] = sortFn;\n      }\n      else {\n        // We assign the alpha sort because anything that is null/undefined will never get passed to\n        // the actual sorting function. It will get caught in our null check and returned to be sorted\n        // down to the bottom\n        sortFn = rowSorter.sortAlpha;\n      }\n    }\n\n    return sortFn;\n  };\n\n\n\n  /**\n   * @ngdoc method\n   * @methodOf ui.grid.class:rowSorter\n   * @name prioritySort\n   * @description Used where multiple columns are present in the sort criteria,\n   * we determine which column should take precedence in the sort by sorting\n   * the columns based on their sort.priority\n   *\n   * @param {gridColumn} a column a\n   * @param {gridColumn} b column b\n   * @returns {number} normal sort function, returns -ve, 0, +ve\n   */\n  rowSorter.prioritySort = function (a, b) {\n    // Both columns have a sort priority\n    if (a.sort.priority !== undefined && b.sort.priority !== undefined) {\n      // A is higher priority\n      if (a.sort.priority < b.sort.priority) {\n        return -1;\n      }\n      // Equal\n      else if (a.sort.priority === b.sort.priority) {\n        return 0;\n      }\n      // B is higher\n      else {\n        return 1;\n      }\n    }\n    // Only A has a priority\n    else if (a.sort.priority !== undefined) {\n      return -1;\n    }\n    // Only B has a priority\n    else if (b.sort.priority !== undefined) {\n      return 1;\n    }\n    // Neither has a priority\n    else {\n      return 0;\n    }\n  };\n\n\n  /**\n   * @ngdoc object\n   * @name useExternalSorting\n   * @propertyOf ui.grid.class:GridOptions\n   * @description Prevents the internal sorting from executing.  Events will\n   * still be fired when the sort changes, and the sort information on\n   * the columns will be updated, allowing an external sorter (for example,\n   * server sorting) to be implemented.  Defaults to false.\n   *\n   */\n  /**\n   * @ngdoc method\n   * @methodOf ui.grid.class:rowSorter\n   * @name sort\n   * @description sorts the grid\n   * @param {Object} grid the grid itself\n   * @param {array} rows the rows to be sorted\n   * @param {array} columns the columns in which to look\n   * for sort criteria\n   * @returns {array} sorted rows\n   */\n  rowSorter.sort = function rowSorterSort(grid, rows, columns) {\n    // first make sure we are even supposed to do work\n    if (!rows) {\n      return;\n    }\n\n    if (grid.options.useExternalSorting){\n      return rows;\n    }\n\n    // Build the list of columns to sort by\n    var sortCols = [];\n    var defaultSortCols = [];\n    columns.forEach(function (col) {\n      if (col.sort && !col.sort.ignoreSort && col.sort.direction && (col.sort.direction === uiGridConstants.ASC || col.sort.direction === uiGridConstants.DESC)) {\n        sortCols.push({\n          col: col,\n          sort: col.sort\n        });\n      } else if ( col.defaultSort && col.defaultSort.direction && (col.defaultSort.direction === uiGridConstants.ASC || col.defaultSort.direction === uiGridConstants.DESC) ) {\n        defaultSortCols.push({\n          col: col,\n          sort: col.defaultSort\n        });\n      }\n    });\n\n    // Sort the \"sort columns\" by their sort priority\n    sortCols = sortCols.sort(rowSorter.prioritySort);\n    defaultSortCols = defaultSortCols.sort(rowSorter.prioritySort);\n    sortCols = sortCols.concat(defaultSortCols);\n\n    // Now rows to sort by, maintain original order\n    if (sortCols.length === 0) {\n      return rows;\n    }\n\n    // Re-usable variables\n    var col, direction;\n\n    // put a custom index field on each row, used to make a stable sort out of unstable sorts (e.g. Chrome)\n    var setIndex = function( row, idx ){\n      row.entity.$$uiGridIndex = idx;\n    };\n    rows.forEach(setIndex);\n\n    // IE9-11 HACK.... the 'rows' variable would be empty where we call rowSorter.getSortFn(...) below. We have to use a separate reference\n    // var d = data.slice(0);\n    var r = rows.slice(0);\n\n    // Now actually sort the data\n    var rowSortFn = function (rowA, rowB) {\n      var tem = 0,\n          idx = 0,\n          sortFn;\n\n      while (tem === 0 && idx < sortCols.length) {\n        // grab the metadata for the rest of the logic\n        col = sortCols[idx].col;\n        direction = sortCols[idx].sort.direction;\n\n        sortFn = rowSorter.getSortFn(grid, col, r);\n\n        var propA, propB;\n\n        if ( col.sortCellFiltered ){\n          propA = grid.getCellDisplayValue(rowA, col);\n          propB = grid.getCellDisplayValue(rowB, col);\n        } else {\n          propA = grid.getCellValue(rowA, col);\n          propB = grid.getCellValue(rowB, col);\n        }\n\n        tem = sortFn(propA, propB, rowA, rowB, direction, col);\n\n        idx++;\n      }\n\n      // Chrome doesn't implement a stable sort function.  If our sort returns 0\n      // (i.e. the items are equal), and we're at the last sort column in the list,\n      // then return the previous order using our custom\n      // index variable\n      if (tem === 0 ) {\n        return rowA.entity.$$uiGridIndex - rowB.entity.$$uiGridIndex;\n      }\n\n      // Made it this far, we don't have to worry about null & undefined\n      if (direction === uiGridConstants.ASC) {\n        return tem;\n      } else {\n        return 0 - tem;\n      }\n    };\n\n    var newRows = rows.sort(rowSortFn);\n\n    // remove the custom index field on each row, used to make a stable sort out of unstable sorts (e.g. Chrome)\n    var clearIndex = function( row, idx ){\n       delete row.entity.$$uiGridIndex;\n    };\n    rows.forEach(clearIndex);\n\n    return newRows;\n  };\n\n  return rowSorter;\n}]);\n\n})();\n\n(function() {\n\nvar module = angular.module('ui.grid');\n\nvar bindPolyfill;\nif (typeof Function.prototype.bind !== \"function\") {\n  bindPolyfill = function() {\n    var slice = Array.prototype.slice;\n    return function(context) {\n      var fn = this,\n        args = slice.call(arguments, 1);\n      if (args.length) {\n        return function() {\n          return arguments.length ? fn.apply(context, args.concat(slice.call(arguments))) : fn.apply(context, args);\n        };\n      }\n      return function() {\n        return arguments.length ? fn.apply(context, arguments) : fn.call(context);\n      };\n    };\n  };\n}\n\nfunction  getStyles (elem) {\n  var e = elem;\n  if (typeof(e.length) !== 'undefined' && e.length) {\n    e = elem[0];\n  }\n\n  return e.ownerDocument.defaultView.getComputedStyle(e, null);\n}\n\nvar rnumnonpx = new RegExp( \"^(\" + (/[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/).source + \")(?!px)[a-z%]+$\", \"i\" ),\n    // swappable if display is none or starts with table except \"table\", \"table-cell\", or \"table-caption\"\n    // see here for display values: https://developer.mozilla.org/en-US/docs/CSS/display\n    rdisplayswap = /^(block|none|table(?!-c[ea]).+)/,\n    cssShow = { position: \"absolute\", visibility: \"hidden\", display: \"block\" };\n\nfunction augmentWidthOrHeight( elem, name, extra, isBorderBox, styles ) {\n  var i = extra === ( isBorderBox ? 'border' : 'content' ) ?\n          // If we already have the right measurement, avoid augmentation\n          4 :\n          // Otherwise initialize for horizontal or vertical properties\n          name === 'width' ? 1 : 0,\n\n          val = 0;\n\n  var sides = ['Top', 'Right', 'Bottom', 'Left'];\n\n  for ( ; i < 4; i += 2 ) {\n    var side = sides[i];\n    // dump('side', side);\n\n    // both box models exclude margin, so add it if we want it\n    if ( extra === 'margin' ) {\n      var marg = parseFloat(styles[extra + side]);\n      if (!isNaN(marg)) {\n        val += marg;\n      }\n    }\n    // dump('val1', val);\n\n    if ( isBorderBox ) {\n      // border-box includes padding, so remove it if we want content\n      if ( extra === 'content' ) {\n        var padd = parseFloat(styles['padding' + side]);\n        if (!isNaN(padd)) {\n          val -= padd;\n          // dump('val2', val);\n        }\n      }\n\n      // at this point, extra isn't border nor margin, so remove border\n      if ( extra !== 'margin' ) {\n        var bordermarg = parseFloat(styles['border' + side + 'Width']);\n        if (!isNaN(bordermarg)) {\n          val -= bordermarg;\n          // dump('val3', val);\n        }\n      }\n    }\n    else {\n      // at this point, extra isn't content, so add padding\n      var nocontentPad = parseFloat(styles['padding' + side]);\n      if (!isNaN(nocontentPad)) {\n        val += nocontentPad;\n        // dump('val4', val);\n      }\n\n      // at this point, extra isn't content nor padding, so add border\n      if ( extra !== 'padding') {\n        var nocontentnopad = parseFloat(styles['border' + side + 'Width']);\n        if (!isNaN(nocontentnopad)) {\n          val += nocontentnopad;\n          // dump('val5', val);\n        }\n      }\n    }\n  }\n\n  // dump('augVal', val);\n\n  return val;\n}\n\nfunction getWidthOrHeight( elem, name, extra ) {\n  // Start with offset property, which is equivalent to the border-box value\n  var valueIsBorderBox = true,\n          val, // = name === 'width' ? elem.offsetWidth : elem.offsetHeight,\n          styles = getStyles(elem),\n          isBorderBox = styles['boxSizing'] === 'border-box';\n\n  // some non-html elements return undefined for offsetWidth, so check for null/undefined\n  // svg - https://bugzilla.mozilla.org/show_bug.cgi?id=649285\n  // MathML - https://bugzilla.mozilla.org/show_bug.cgi?id=491668\n  if ( val <= 0 || val == null ) {\n    // Fall back to computed then uncomputed css if necessary\n    val = styles[name];\n    if ( val < 0 || val == null ) {\n      val = elem.style[ name ];\n    }\n\n    // Computed unit is not pixels. Stop here and return.\n    if ( rnumnonpx.test(val) ) {\n      return val;\n    }\n\n    // we need the check for style in case a browser which returns unreliable values\n    // for getComputedStyle silently falls back to the reliable elem.style\n    valueIsBorderBox = isBorderBox &&\n            ( true || val === elem.style[ name ] ); // use 'true' instead of 'support.boxSizingReliable()'\n\n    // Normalize \"\", auto, and prepare for extra\n    val = parseFloat( val ) || 0;\n  }\n\n  // use the active box-sizing model to add/subtract irrelevant styles\n  var ret = ( val +\n    augmentWidthOrHeight(\n      elem,\n      name,\n      extra || ( isBorderBox ? \"border\" : \"content\" ),\n      valueIsBorderBox,\n      styles\n    )\n  );\n\n  // dump('ret', ret, val);\n  return ret;\n}\n\nfunction getLineHeight(elm) {\n  elm = angular.element(elm)[0];\n  var parent = elm.parentElement;\n\n  if (!parent) {\n    parent = document.getElementsByTagName('body')[0];\n  }\n\n  return parseInt( getStyles(parent).fontSize ) || parseInt( getStyles(elm).fontSize ) || 16;\n}\n\nvar uid = ['0', '0', '0', '0'];\nvar uidPrefix = 'uiGrid-';\n\n/**\n *  @ngdoc service\n *  @name ui.grid.service:GridUtil\n *\n *  @description Grid utility functions\n */\nmodule.service('gridUtil', ['$log', '$window', '$document', '$http', '$templateCache', '$timeout', '$interval', '$injector', '$q', '$interpolate', 'uiGridConstants',\n  function ($log, $window, $document, $http, $templateCache, $timeout, $interval, $injector, $q, $interpolate, uiGridConstants) {\n  var s = {\n\n    augmentWidthOrHeight: augmentWidthOrHeight,\n\n    getStyles: getStyles,\n\n    /**\n     * @ngdoc method\n     * @name createBoundedWrapper\n     * @methodOf ui.grid.service:GridUtil\n     *\n     * @param {object} Object to bind 'this' to\n     * @param {method} Method to bind\n     * @returns {Function} The wrapper that performs the binding\n     *\n     * @description\n     * Binds given method to given object.\n     *\n     * By means of a wrapper, ensures that ``method`` is always bound to\n     * ``object`` regardless of its calling environment.\n     * Iow, inside ``method``, ``this`` always points to ``object``.\n     *\n     * See http://alistapart.com/article/getoutbindingsituations\n     *\n     */\n    createBoundedWrapper: function(object, method) {\n        return function() {\n            return method.apply(object, arguments);\n        };\n    },\n\n\n    /**\n     * @ngdoc method\n     * @name readableColumnName\n     * @methodOf ui.grid.service:GridUtil\n     *\n     * @param {string} columnName Column name as a string\n     * @returns {string} Column name appropriately capitalized and split apart\n     *\n       @example\n       <example module=\"app\">\n        <file name=\"app.js\">\n          var app = angular.module('app', ['ui.grid']);\n\n          app.controller('MainCtrl', ['$scope', 'gridUtil', function ($scope, gridUtil) {\n            $scope.name = 'firstName';\n            $scope.columnName = function(name) {\n              return gridUtil.readableColumnName(name);\n            };\n          }]);\n        </file>\n        <file name=\"index.html\">\n          <div ng-controller=\"MainCtrl\">\n            <strong>Column name:</strong> <input ng-model=\"name\" />\n            <br>\n            <strong>Output:</strong> <span ng-bind=\"columnName(name)\"></span>\n          </div>\n        </file>\n      </example>\n     */\n    readableColumnName: function (columnName) {\n      // Convert underscores to spaces\n      if (typeof(columnName) === 'undefined' || columnName === undefined || columnName === null) { return columnName; }\n\n      if (typeof(columnName) !== 'string') {\n        columnName = String(columnName);\n      }\n\n      return columnName.replace(/_+/g, ' ')\n        // Replace a completely all-capsed word with a first-letter-capitalized version\n        .replace(/^[A-Z]+$/, function (match) {\n          return angular.lowercase(angular.uppercase(match.charAt(0)) + match.slice(1));\n        })\n        // Capitalize the first letter of words\n        .replace(/([\\w\\u00C0-\\u017F]+)/g, function (match) {\n          return angular.uppercase(match.charAt(0)) + match.slice(1);\n        })\n        // Put a space in between words that have partial capilizations (i.e. 'firstName' becomes 'First Name')\n        // .replace(/([A-Z]|[A-Z]\\w+)([A-Z])/g, \"$1 $2\");\n        // .replace(/(\\w+?|\\w)([A-Z])/g, \"$1 $2\");\n        .replace(/(\\w+?(?=[A-Z]))/g, '$1 ');\n    },\n\n    /**\n     * @ngdoc method\n     * @name getColumnsFromData\n     * @methodOf ui.grid.service:GridUtil\n     * @description Return a list of column names, given a data set\n     *\n     * @param {string} data Data array for grid\n     * @returns {Object} Column definitions with field accessor and column name\n     *\n     * @example\n       <pre>\n         var data = [\n           { firstName: 'Bob', lastName: 'Jones' },\n           { firstName: 'Frank', lastName: 'Smith' }\n         ];\n\n         var columnDefs = GridUtil.getColumnsFromData(data, excludeProperties);\n\n         columnDefs == [\n          {\n            field: 'firstName',\n            name: 'First Name'\n          },\n          {\n            field: 'lastName',\n            name: 'Last Name'\n          }\n         ];\n       </pre>\n     */\n    getColumnsFromData: function (data, excludeProperties) {\n      var columnDefs = [];\n\n      if (!data || typeof(data[0]) === 'undefined' || data[0] === undefined) { return []; }\n      if (angular.isUndefined(excludeProperties)) { excludeProperties = []; }\n\n      var item = data[0];\n\n      angular.forEach(item,function (prop, propName) {\n        if ( excludeProperties.indexOf(propName) === -1){\n          columnDefs.push({\n            name: propName\n          });\n        }\n      });\n\n      return columnDefs;\n    },\n\n    /**\n     * @ngdoc method\n     * @name newId\n     * @methodOf ui.grid.service:GridUtil\n     * @description Return a unique ID string\n     *\n     * @returns {string} Unique string\n     *\n     * @example\n       <pre>\n        var id = GridUtil.newId();\n\n        # 1387305700482;\n       </pre>\n     */\n    newId: (function() {\n      var seedId = new Date().getTime();\n      return function() {\n          return seedId += 1;\n      };\n    })(),\n\n\n    /**\n     * @ngdoc method\n     * @name getTemplate\n     * @methodOf ui.grid.service:GridUtil\n     * @description Get's template from cache / element / url\n     *\n     * @param {string|element|promise} Either a string representing the template id, a string representing the template url,\n     *   an jQuery/Angualr element, or a promise that returns the template contents to use.\n     * @returns {object} a promise resolving to template contents\n     *\n     * @example\n     <pre>\n     GridUtil.getTemplate(url).then(function (contents) {\n          alert(contents);\n        })\n     </pre>\n     */\n    getTemplate: function (template) {\n      // Try to fetch the template out of the templateCache\n      if ($templateCache.get(template)) {\n        return s.postProcessTemplate($templateCache.get(template));\n      }\n\n      // See if the template is itself a promise\n      if (angular.isFunction(template.then)) {\n        return template.then(s.postProcessTemplate).catch(angular.noop);\n      }\n\n      // If the template is an element, return the element\n      try {\n        if (angular.element(template).length > 0) {\n          return $q.when(template).then(s.postProcessTemplate).catch(angular.noop);\n        }\n      }\n      catch (err){\n        //do nothing; not valid html\n      }\n\n      // s.logDebug('fetching url', template);\n\n      // Default to trying to fetch the template as a url with $http\n      return $http({ method: 'GET', url: template})\n        .then(\n          function (result) {\n            var templateHtml = result.data.trim();\n            //put in templateCache for next call\n            $templateCache.put(template, templateHtml);\n            return templateHtml;\n          },\n          function (err) {\n            throw new Error(\"Could not get template \" + template + \": \" + err);\n          }\n        )\n        .then(s.postProcessTemplate).catch(angular.noop);\n    },\n\n    //\n    postProcessTemplate: function (template) {\n      var startSym = $interpolate.startSymbol(),\n          endSym = $interpolate.endSymbol();\n\n      // If either of the interpolation symbols have been changed, we need to alter this template\n      if (startSym !== '{{' || endSym !== '}}') {\n        template = template.replace(/\\{\\{/g, startSym);\n        template = template.replace(/\\}\\}/g, endSym);\n      }\n\n      return $q.when(template);\n    },\n\n    /**\n     * @ngdoc method\n     * @name guessType\n     * @methodOf ui.grid.service:GridUtil\n     * @description guesses the type of an argument\n     *\n     * @param {string/number/bool/object} item variable to examine\n     * @returns {string} one of the following\n     * - 'string'\n     * - 'boolean'\n     * - 'number'\n     * - 'date'\n     * - 'object'\n     */\n    guessType : function (item) {\n      var itemType = typeof(item);\n\n      // Check for numbers and booleans\n      switch (itemType) {\n        case \"number\":\n        case \"boolean\":\n        case \"string\":\n          return itemType;\n        default:\n          if (angular.isDate(item)) {\n            return \"date\";\n          }\n          return \"object\";\n      }\n    },\n\n\n  /**\n    * @ngdoc method\n    * @name elementWidth\n    * @methodOf ui.grid.service:GridUtil\n    *\n    * @param {element} element DOM element\n    * @param {string} [extra] Optional modifier for calculation. Use 'margin' to account for margins on element\n    *\n    * @returns {number} Element width in pixels, accounting for any borders, etc.\n    */\n    elementWidth: function (elem) {\n\n    },\n\n    /**\n    * @ngdoc method\n    * @name elementHeight\n    * @methodOf ui.grid.service:GridUtil\n    *\n    * @param {element} element DOM element\n    * @param {string} [extra] Optional modifier for calculation. Use 'margin' to account for margins on element\n    *\n    * @returns {number} Element height in pixels, accounting for any borders, etc.\n    */\n    elementHeight: function (elem) {\n\n    },\n\n    // Thanks to http://stackoverflow.com/a/13382873/888165\n    getScrollbarWidth: function() {\n        var outer = document.createElement(\"div\");\n        outer.style.visibility = \"hidden\";\n        outer.style.width = \"100px\";\n        outer.style.msOverflowStyle = \"scrollbar\"; // needed for WinJS apps\n\n        document.body.appendChild(outer);\n\n        var widthNoScroll = outer.offsetWidth;\n        // force scrollbars\n        outer.style.overflow = \"scroll\";\n\n        // add innerdiv\n        var inner = document.createElement(\"div\");\n        inner.style.width = \"100%\";\n        outer.appendChild(inner);\n\n        var widthWithScroll = inner.offsetWidth;\n\n        // remove divs\n        outer.parentNode.removeChild(outer);\n\n        return widthNoScroll - widthWithScroll;\n    },\n\n    swap: function( elem, options, callback, args ) {\n      var ret, name,\n              old = {};\n\n      // Remember the old values, and insert the new ones\n      for ( name in options ) {\n        old[ name ] = elem.style[ name ];\n        elem.style[ name ] = options[ name ];\n      }\n\n      ret = callback.apply( elem, args || [] );\n\n      // Revert the old values\n      for ( name in options ) {\n        elem.style[ name ] = old[ name ];\n      }\n\n      return ret;\n    },\n\n    fakeElement: function( elem, options, callback, args ) {\n      var ret, name,\n          newElement = angular.element(elem).clone()[0];\n\n      for ( name in options ) {\n        newElement.style[ name ] = options[ name ];\n      }\n\n      angular.element(document.body).append(newElement);\n\n      ret = callback.call( newElement, newElement );\n\n      angular.element(newElement).remove();\n\n      return ret;\n    },\n\n    /**\n    * @ngdoc method\n    * @name normalizeWheelEvent\n    * @methodOf ui.grid.service:GridUtil\n    *\n    * @param {event} event A mouse wheel event\n    *\n    * @returns {event} A normalized event\n    *\n    * @description\n    * Given an event from this list:\n    *\n    * `wheel, mousewheel, DomMouseScroll, MozMousePixelScroll`\n    *\n    * \"normalize\" it\n    * so that it stays consistent no matter what browser it comes from (i.e. scale it correctly and make sure the direction is right.)\n    */\n    normalizeWheelEvent: function (event) {\n      // var toFix = ['wheel', 'mousewheel', 'DOMMouseScroll', 'MozMousePixelScroll'];\n      // var toBind = 'onwheel' in document || document.documentMode >= 9 ? ['wheel'] : ['mousewheel', 'DomMouseScroll', 'MozMousePixelScroll'];\n      var lowestDelta, lowestDeltaXY;\n\n      var orgEvent   = event || window.event,\n          args       = [].slice.call(arguments, 1),\n          delta      = 0,\n          deltaX     = 0,\n          deltaY     = 0,\n          absDelta   = 0,\n          absDeltaXY = 0,\n          fn;\n\n      // event = $.event.fix(orgEvent);\n      // event.type = 'mousewheel';\n\n      // NOTE: jQuery masks the event and stores it in the event as originalEvent\n      if (orgEvent.originalEvent) {\n        orgEvent = orgEvent.originalEvent;\n      }\n\n      // Old school scrollwheel delta\n      if ( orgEvent.wheelDelta ) { delta = orgEvent.wheelDelta; }\n      if ( orgEvent.detail )     { delta = orgEvent.detail * -1; }\n\n      // At a minimum, setup the deltaY to be delta\n      deltaY = delta;\n\n      // Firefox < 17 related to DOMMouseScroll event\n      if ( orgEvent.axis !== undefined && orgEvent.axis === orgEvent.HORIZONTAL_AXIS ) {\n          deltaY = 0;\n          deltaX = delta * -1;\n      }\n\n      // New school wheel delta (wheel event)\n      if ( orgEvent.deltaY ) {\n          deltaY = orgEvent.deltaY * -1;\n          delta  = deltaY;\n      }\n      if ( orgEvent.deltaX ) {\n          deltaX = orgEvent.deltaX;\n          delta  = deltaX * -1;\n      }\n\n      // Webkit\n      if ( orgEvent.wheelDeltaY !== undefined ) { deltaY = orgEvent.wheelDeltaY; }\n      if ( orgEvent.wheelDeltaX !== undefined ) { deltaX = orgEvent.wheelDeltaX; }\n\n      // Look for lowest delta to normalize the delta values\n      absDelta = Math.abs(delta);\n      if ( !lowestDelta || absDelta < lowestDelta ) { lowestDelta = absDelta; }\n      absDeltaXY = Math.max(Math.abs(deltaY), Math.abs(deltaX));\n      if ( !lowestDeltaXY || absDeltaXY < lowestDeltaXY ) { lowestDeltaXY = absDeltaXY; }\n\n      // Get a whole value for the deltas\n      fn     = delta > 0 ? 'floor' : 'ceil';\n      delta  = Math[fn](delta  / lowestDelta);\n      deltaX = Math[fn](deltaX / lowestDeltaXY);\n      deltaY = Math[fn](deltaY / lowestDeltaXY);\n\n      return {\n        delta: delta,\n        deltaX: deltaX,\n        deltaY: deltaY\n      };\n    },\n\n    // Stolen from Modernizr\n    // TODO: make this, and everythign that flows from it, robust\n    //http://www.stucox.com/blog/you-cant-detect-a-touchscreen/\n    isTouchEnabled: function() {\n      var bool;\n\n      if (('ontouchstart' in $window) || $window.DocumentTouch && $document instanceof DocumentTouch) {\n        bool = true;\n      }\n\n      return bool;\n    },\n\n    isNullOrUndefined: function(obj) {\n      return (obj === undefined || obj === null);\n    },\n\n    endsWith: function(str, suffix) {\n      if (!str || !suffix || typeof str !== \"string\") {\n        return false;\n      }\n      return str.indexOf(suffix, str.length - suffix.length) !== -1;\n    },\n\n    arrayContainsObjectWithProperty: function(array, propertyName, propertyValue) {\n        var found = false;\n        angular.forEach(array, function (object) {\n            if (object[propertyName] === propertyValue) {\n                found = true;\n            }\n        });\n        return found;\n    },\n\n    //// Shim requestAnimationFrame\n    //requestAnimationFrame: $window.requestAnimationFrame && $window.requestAnimationFrame.bind($window) ||\n    //                       $window.webkitRequestAnimationFrame && $window.webkitRequestAnimationFrame.bind($window) ||\n    //                       function(fn) {\n    //                         return $timeout(fn, 10, false);\n    //                       },\n\n    numericAndNullSort: function (a, b) {\n      if (a === null) { return 1; }\n      if (b === null) { return -1; }\n      if (a === null && b === null) { return 0; }\n      return a - b;\n    },\n\n    // Disable ngAnimate animations on an element\n    disableAnimations: function (element) {\n      var $animate;\n      try {\n        $animate = $injector.get('$animate');\n        // See: http://brianhann.com/angular-1-4-breaking-changes-to-be-aware-of/#animate\n        if (angular.version.major > 1 || (angular.version.major === 1 && angular.version.minor >= 4)) {\n          $animate.enabled(element, false);\n        } else {\n          $animate.enabled(false, element);\n        }\n      }\n      catch (e) {}\n    },\n\n    enableAnimations: function (element) {\n      var $animate;\n      try {\n        $animate = $injector.get('$animate');\n        // See: http://brianhann.com/angular-1-4-breaking-changes-to-be-aware-of/#animate\n        if (angular.version.major > 1 || (angular.version.major === 1 && angular.version.minor >= 4)) {\n          $animate.enabled(element, true);\n        } else {\n          $animate.enabled(true, element);\n        }\n        return $animate;\n      }\n      catch (e) {}\n    },\n\n    // Blatantly stolen from Angular as it isn't exposed (yet)\n    nextUid: function nextUid() {\n      var index = uid.length;\n      var digit;\n\n      while (index) {\n        index--;\n        digit = uid[index].charCodeAt(0);\n        if (digit === 57 /*'9'*/) {\n          uid[index] = 'A';\n          return uidPrefix + uid.join('');\n        }\n        if (digit === 90  /*'Z'*/) {\n          uid[index] = '0';\n        } else {\n          uid[index] = String.fromCharCode(digit + 1);\n          return uidPrefix + uid.join('');\n        }\n      }\n      uid.unshift('0');\n\n      return uidPrefix + uid.join('');\n    },\n\n    // Blatantly stolen from Angular as it isn't exposed (yet)\n    hashKey: function hashKey(obj) {\n      var objType = typeof obj,\n          key;\n\n      if (objType === 'object' && obj !== null) {\n        if (typeof (key = obj.$$hashKey) === 'function') {\n          // must invoke on object to keep the right this\n          key = obj.$$hashKey();\n        }\n        else if (typeof(obj.$$hashKey) !== 'undefined' && obj.$$hashKey) {\n          key = obj.$$hashKey;\n        }\n        else if (key === undefined) {\n          key = obj.$$hashKey = s.nextUid();\n        }\n      }\n      else {\n        key = obj;\n      }\n\n      return objType + ':' + key;\n    },\n\n    resetUids: function () {\n      uid = ['0', '0', '0'];\n    },\n\n    /**\n     * @ngdoc method\n     * @methodOf ui.grid.service:GridUtil\n     * @name logError\n     * @description wraps the $log method, allowing us to choose different\n     * treatment within ui-grid if we so desired.  At present we only log\n     * error messages if uiGridConstants.LOG_ERROR_MESSAGES is set to true\n     * @param {string} logMessage message to be logged to the console\n     *\n     */\n    logError: function( logMessage ){\n      if ( uiGridConstants.LOG_ERROR_MESSAGES ){\n        $log.error( logMessage );\n      }\n    },\n\n    /**\n     * @ngdoc method\n     * @methodOf ui.grid.service:GridUtil\n     * @name logWarn\n     * @description wraps the $log method, allowing us to choose different\n     * treatment within ui-grid if we so desired.  At present we only log\n     * warning messages if uiGridConstants.LOG_WARN_MESSAGES is set to true\n     * @param {string} logMessage message to be logged to the console\n     *\n     */\n    logWarn: function( logMessage ){\n      if ( uiGridConstants.LOG_WARN_MESSAGES ){\n        $log.warn( logMessage );\n      }\n    },\n\n    /**\n     * @ngdoc method\n     * @methodOf ui.grid.service:GridUtil\n     * @name logDebug\n     * @description wraps the $log method, allowing us to choose different\n     * treatment within ui-grid if we so desired.  At present we only log\n     * debug messages if uiGridConstants.LOG_DEBUG_MESSAGES is set to true\n     *\n     */\n    logDebug: function() {\n      if ( uiGridConstants.LOG_DEBUG_MESSAGES ){\n        $log.debug.apply($log, arguments);\n      }\n    }\n\n  };\n\n  /**\n   * @ngdoc object\n   * @name focus\n   * @propertyOf ui.grid.service:GridUtil\n   * @description Provies a set of methods to set the document focus inside the grid.\n   * See {@link ui.grid.service:GridUtil.focus} for more information.\n   */\n\n  /**\n   * @ngdoc object\n   * @name ui.grid.service:GridUtil.focus\n   * @description Provies a set of methods to set the document focus inside the grid.\n   * Timeouts are utilized to ensure that the focus is invoked after any other event has been triggered.\n   * e.g. click events that need to run before the focus or\n   * inputs elements that are in a disabled state but are enabled when those events\n   * are triggered.\n   */\n  s.focus = {\n    queue: [],\n    //http://stackoverflow.com/questions/25596399/set-element-focus-in-angular-way\n    /**\n     * @ngdoc method\n     * @methodOf ui.grid.service:GridUtil.focus\n     * @name byId\n     * @description Sets the focus of the document to the given id value.\n     * If provided with the grid object it will automatically append the grid id.\n     * This is done to encourage unique dom id's as it allows for multiple grids on a\n     * page.\n     * @param {String} id the id of the dom element to set the focus on\n     * @param {Object=} Grid the grid object for this grid instance. See: {@link ui.grid.class:Grid}\n     * @param {Number} Grid.id the unique id for this grid. Already set on an initialized grid object.\n     * @returns {Promise} The `$timeout` promise that will be resolved once focus is set. If another focus is requested before this request is evaluated.\n     * then the promise will fail with the `'canceled'` reason.\n     */\n    byId: function (id, Grid) {\n      this._purgeQueue();\n      var promise = $timeout(function() {\n        var elementID = (Grid && Grid.id ? Grid.id + '-' : '') + id;\n        var element = $window.document.getElementById(elementID);\n        if (element) {\n          element.focus();\n        } else {\n          s.logWarn('[focus.byId] Element id ' + elementID + ' was not found.');\n        }\n      }, 0, false);\n      this.queue.push(promise);\n      return promise;\n    },\n\n    /**\n     * @ngdoc method\n     * @methodOf ui.grid.service:GridUtil.focus\n     * @name byElement\n     * @description Sets the focus of the document to the given dom element.\n     * @param {(element|angular.element)} element the DOM element to set the focus on\n     * @returns {Promise} The `$timeout` promise that will be resolved once focus is set. If another focus is requested before this request is evaluated.\n     * then the promise will fail with the `'canceled'` reason.\n     */\n    byElement: function(element){\n      if (!angular.isElement(element)){\n        s.logWarn(\"Trying to focus on an element that isn\\'t an element.\");\n        return $q.reject('not-element');\n      }\n      element = angular.element(element);\n      this._purgeQueue();\n      var promise = $timeout(function(){\n        if (element){\n          element[0].focus();\n        }\n      }, 0, false);\n      this.queue.push(promise);\n      return promise;\n    },\n    /**\n     * @ngdoc method\n     * @methodOf ui.grid.service:GridUtil.focus\n     * @name bySelector\n     * @description Sets the focus of the document to the given dom element.\n     * @param {(element|angular.element)} parentElement the parent/ancestor of the dom element that you are selecting using the query selector\n     * @param {String} querySelector finds the dom element using the {@link http://www.w3schools.com/jsref/met_document_queryselector.asp querySelector}\n     * @param {boolean} [aSync=false] If true then the selector will be querried inside of a timeout. Otherwise the selector will be querried imidately\n     * then the focus will be called.\n     * @returns {Promise} The `$timeout` promise that will be resolved once focus is set. If another focus is requested before this request is evaluated.\n     * then the promise will fail with the `'canceled'` reason.\n     */\n    bySelector: function(parentElement, querySelector, aSync){\n      var self = this;\n      if (!angular.isElement(parentElement)){\n        throw new Error(\"The parent element is not an element.\");\n      }\n      // Ensure that this is an angular element.\n      // It is fine if this is already an angular element.\n      parentElement = angular.element(parentElement);\n      var focusBySelector = function(){\n        var element = parentElement[0].querySelector(querySelector);\n        return self.byElement(element);\n      };\n      this._purgeQueue();\n      if (aSync){ //Do this asynchronysly\n        var promise = $timeout(focusBySelector, 0, false);\n        this.queue.push(promise);\n        return promise;\n      } else {\n        return focusBySelector();\n      }\n    },\n    _purgeQueue: function(){\n      this.queue.forEach(function(element){\n        $timeout.cancel(element);\n      });\n      this.queue = [];\n    }\n  };\n\n\n  ['width', 'height'].forEach(function (name) {\n    var capsName = angular.uppercase(name.charAt(0)) + name.substr(1);\n    s['element' + capsName] = function (elem, extra) {\n      var e = elem;\n      if (e && typeof(e.length) !== 'undefined' && e.length) {\n        e = elem[0];\n      }\n\n      if (e && e !== null) {\n        var styles = getStyles(e);\n        return e.offsetWidth === 0 && rdisplayswap.test(styles.display) ?\n                  s.swap(e, cssShow, function() {\n                    return getWidthOrHeight(e, name, extra );\n                  }) :\n                  getWidthOrHeight( e, name, extra );\n      }\n      else {\n        return null;\n      }\n    };\n\n    s['outerElement' + capsName] = function (elem, margin) {\n      return elem ? s['element' + capsName].call(this, elem, margin ? 'margin' : 'border') : null;\n    };\n  });\n\n  // http://stackoverflow.com/a/24107550/888165\n  s.closestElm = function closestElm(el, selector) {\n    if (typeof(el.length) !== 'undefined' && el.length) {\n      el = el[0];\n    }\n\n    var matchesFn;\n\n    // find vendor prefix\n    ['matches','webkitMatchesSelector','mozMatchesSelector','msMatchesSelector','oMatchesSelector'].some(function(fn) {\n        if (typeof document.body[fn] === 'function') {\n            matchesFn = fn;\n            return true;\n        }\n        return false;\n    });\n\n    // traverse parents\n    var parent;\n    while (el !== null) {\n      parent = el.parentElement;\n      if (parent !== null && parent[matchesFn](selector)) {\n          return parent;\n      }\n      el = parent;\n    }\n\n    return null;\n  };\n\n  s.type = function (obj) {\n    var text = Function.prototype.toString.call(obj.constructor);\n    return text.match(/function (.*?)\\(/)[1];\n  };\n\n  s.getBorderSize = function getBorderSize(elem, borderType) {\n    if (typeof(elem.length) !== 'undefined' && elem.length) {\n      elem = elem[0];\n    }\n\n    var styles = getStyles(elem);\n\n    // If a specific border is supplied, like 'top', read the 'borderTop' style property\n    if (borderType) {\n      borderType = 'border' + borderType.charAt(0).toUpperCase() + borderType.slice(1);\n    }\n    else {\n      borderType = 'border';\n    }\n\n    borderType += 'Width';\n\n    var val = parseInt(styles[borderType], 10);\n\n    if (isNaN(val)) {\n      return 0;\n    }\n    else {\n      return val;\n    }\n  };\n\n  // http://stackoverflow.com/a/22948274/888165\n  // TODO: Opera? Mobile?\n  s.detectBrowser = function detectBrowser() {\n    var userAgent = $window.navigator.userAgent;\n\n    var browsers = {chrome: /chrome/i, safari: /safari/i, firefox: /firefox/i, ie: /internet explorer|trident\\//i};\n\n    for (var key in browsers) {\n      if (browsers[key].test(userAgent)) {\n        return key;\n      }\n    }\n\n    return 'unknown';\n  };\n\n  // Borrowed from https://github.com/othree/jquery.rtl-scroll-type\n  // Determine the scroll \"type\" this browser is using for RTL\n  s.rtlScrollType = function rtlScrollType() {\n    if (rtlScrollType.type) {\n      return rtlScrollType.type;\n    }\n\n    var definer = angular.element('<div dir=\"rtl\" style=\"font-size: 14px; width: 1px; height: 1px; position: absolute; top: -1000px; overflow: scroll\">A</div>')[0],\n        type = 'reverse';\n\n    document.body.appendChild(definer);\n\n    if (definer.scrollLeft > 0) {\n      type = 'default';\n    }\n    else {\n      definer.scrollLeft = 1;\n      if (definer.scrollLeft === 0) {\n        type = 'negative';\n      }\n    }\n\n    angular.element(definer).remove();\n    rtlScrollType.type = type;\n\n    return type;\n  };\n\n    /**\n     * @ngdoc method\n     * @name normalizeScrollLeft\n     * @methodOf ui.grid.service:GridUtil\n     *\n     * @param {element} element The element to get the `scrollLeft` from.\n     * @param {grid} grid -  grid used to normalize (uses the rtl property)\n     *\n     * @returns {number} A normalized scrollLeft value for the current browser.\n     *\n     * @description\n     * Browsers currently handle RTL in different ways, resulting in inconsistent scrollLeft values. This method normalizes them\n     */\n  s.normalizeScrollLeft = function normalizeScrollLeft(element, grid) {\n    if (typeof(element.length) !== 'undefined' && element.length) {\n      element = element[0];\n    }\n\n    var scrollLeft = element.scrollLeft;\n\n    if (grid.isRTL()) {\n      switch (s.rtlScrollType()) {\n        case 'default':\n          return element.scrollWidth - scrollLeft - element.clientWidth;\n        case 'negative':\n          return Math.abs(scrollLeft);\n        case 'reverse':\n          return scrollLeft;\n      }\n    }\n\n    return scrollLeft;\n  };\n\n  /**\n  * @ngdoc method\n  * @name denormalizeScrollLeft\n  * @methodOf ui.grid.service:GridUtil\n  *\n  * @param {element} element The element to normalize the `scrollLeft` value for\n  * @param {number} scrollLeft The `scrollLeft` value to denormalize.\n  * @param {grid} grid The grid that owns the scroll event.\n  *\n  * @returns {number} A normalized scrollLeft value for the current browser.\n  *\n  * @description\n  * Browsers currently handle RTL in different ways, resulting in inconsistent scrollLeft values. This method denormalizes a value for the current browser.\n  */\n  s.denormalizeScrollLeft = function denormalizeScrollLeft(element, scrollLeft, grid) {\n    if (typeof(element.length) !== 'undefined' && element.length) {\n      element = element[0];\n    }\n\n    if (grid.isRTL()) {\n      switch (s.rtlScrollType()) {\n        case 'default':\n          // Get the max scroll for the element\n          var maxScrollLeft = element.scrollWidth - element.clientWidth;\n\n          // Subtract the current scroll amount from the max scroll\n          return maxScrollLeft - scrollLeft;\n        case 'negative':\n          return scrollLeft * -1;\n        case 'reverse':\n          return scrollLeft;\n      }\n    }\n\n    return scrollLeft;\n  };\n\n    /**\n     * @ngdoc method\n     * @name preEval\n     * @methodOf ui.grid.service:GridUtil\n     *\n     * @param {string} path Path to evaluate\n     *\n     * @returns {string} A path that is normalized.\n     *\n     * @description\n     * Takes a field path and converts it to bracket notation to allow for special characters in path\n     * @example\n     * <pre>\n     * gridUtil.preEval('property') == 'property'\n     * gridUtil.preEval('nested.deep.prop-erty') = \"nested['deep']['prop-erty']\"\n     * </pre>\n     */\n  s.preEval = function (path) {\n    var m = uiGridConstants.BRACKET_REGEXP.exec(path);\n    if (m) {\n      return (m[1] ? s.preEval(m[1]) : m[1]) + m[2] + (m[3] ? s.preEval(m[3]) : m[3]);\n    } else {\n      path = path.replace(uiGridConstants.APOS_REGEXP, '\\\\\\'');\n      var parts = path.split(uiGridConstants.DOT_REGEXP);\n      var preparsed = [parts.shift()];    // first item must be var notation, thus skip\n      angular.forEach(parts, function (part) {\n        preparsed.push(part.replace(uiGridConstants.FUNC_REGEXP, '\\']$1'));\n      });\n      return preparsed.join('[\\'');\n    }\n  };\n\n  /**\n   * @ngdoc method\n   * @name debounce\n   * @methodOf ui.grid.service:GridUtil\n   *\n   * @param {function} func function to debounce\n   * @param {number} wait milliseconds to delay\n   * @param {boolean} immediate execute before delay\n   *\n   * @returns {function} A function that can be executed as debounced function\n   *\n   * @description\n   * Copied from https://github.com/shahata/angular-debounce\n   * Takes a function, decorates it to execute only 1 time after multiple calls, and returns the decorated function\n   * @example\n   * <pre>\n   * var debouncedFunc =  gridUtil.debounce(function(){alert('debounced');}, 500);\n   * debouncedFunc();\n   * debouncedFunc();\n   * debouncedFunc();\n   * </pre>\n   */\n  s.debounce =  function (func, wait, immediate) {\n    var timeout, args, context, result;\n    function debounce() {\n      /* jshint validthis:true */\n      context = this;\n      args = arguments;\n      var later = function () {\n        timeout = null;\n        if (!immediate) {\n          result = func.apply(context, args);\n        }\n      };\n      var callNow = immediate && !timeout;\n      if (timeout) {\n        $timeout.cancel(timeout);\n      }\n      timeout = $timeout(later, wait, false);\n      if (callNow) {\n        result = func.apply(context, args);\n      }\n      return result;\n    }\n    debounce.cancel = function () {\n      $timeout.cancel(timeout);\n      timeout = null;\n    };\n    return debounce;\n  };\n\n  /**\n   * @ngdoc method\n   * @name throttle\n   * @methodOf ui.grid.service:GridUtil\n   *\n   * @param {function} func function to throttle\n   * @param {number} wait milliseconds to delay after first trigger\n   * @param {Object} params to use in throttle.\n   *\n   * @returns {function} A function that can be executed as throttled function\n   *\n   * @description\n   * Adapted from debounce function (above)\n   * Potential keys for Params Object are:\n   *    trailing (bool) - whether to trigger after throttle time ends if called multiple times\n   * Updated to use $interval rather than $timeout, as protractor (e2e tests) is able to work with $interval,\n   * but not with $timeout\n   *\n   * Note that when using throttle, you need to use throttle to create a new function upfront, then use the function\n   * return from that call each time you need to call throttle.  If you call throttle itself repeatedly, the lastCall\n   * variable will get overwritten and the throttling won't work\n   *\n   * @example\n   * <pre>\n   * var throttledFunc =  gridUtil.throttle(function(){console.log('throttled');}, 500, {trailing: true});\n   * throttledFunc(); //=> logs throttled\n   * throttledFunc(); //=> queues attempt to log throttled for ~500ms (since trailing param is truthy)\n   * throttledFunc(); //=> updates arguments to keep most-recent request, but does not do anything else.\n   * </pre>\n   */\n  s.throttle = function(func, wait, options){\n    options = options || {};\n    var lastCall = 0, queued = null, context, args;\n\n    function runFunc(endDate){\n      lastCall = +new Date();\n      func.apply(context, args);\n      $interval(function(){queued = null; }, 0, 1, false);\n    }\n\n    return function(){\n      /* jshint validthis:true */\n      context = this;\n      args = arguments;\n      if (queued === null){\n        var sinceLast = +new Date() - lastCall;\n        if (sinceLast > wait){\n          runFunc();\n        }\n        else if (options.trailing){\n          queued = $interval(runFunc, wait - sinceLast, 1, false);\n        }\n      }\n    };\n  };\n\n  s.on = {};\n  s.off = {};\n  s._events = {};\n\n  s.addOff = function (eventName) {\n    s.off[eventName] = function (elm, fn) {\n      var idx = s._events[eventName].indexOf(fn);\n      if (idx > 0) {\n        s._events[eventName].removeAt(idx);\n      }\n    };\n  };\n\n  var mouseWheeltoBind = ( 'onwheel' in document || document.documentMode >= 9 ) ? ['wheel'] : ['mousewheel', 'DomMouseScroll', 'MozMousePixelScroll'],\n      nullLowestDeltaTimeout,\n      lowestDelta;\n\n  s.on.mousewheel = function (elm, fn) {\n    if (!elm || !fn) { return; }\n\n    var $elm = angular.element(elm);\n\n    // Store the line height and page height for this particular element\n    $elm.data('mousewheel-line-height', getLineHeight($elm));\n    $elm.data('mousewheel-page-height', s.elementHeight($elm));\n    if (!$elm.data('mousewheel-callbacks')) { $elm.data('mousewheel-callbacks', {}); }\n\n    var cbs = $elm.data('mousewheel-callbacks');\n    cbs[fn] = (Function.prototype.bind || bindPolyfill).call(mousewheelHandler, $elm[0], fn);\n\n    // Bind all the mousew heel events\n    for ( var i = mouseWheeltoBind.length; i; ) {\n      $elm.on(mouseWheeltoBind[--i], cbs[fn]);\n    }\n    $elm.on('$destroy', function unbindEvents() {\n      for ( var i = mouseWheeltoBind.length; i; ) {\n        $elm.off(mouseWheeltoBind[--i], cbs[fn]);\n      }\n    });\n  };\n  s.off.mousewheel = function (elm, fn) {\n    var $elm = angular.element(elm);\n\n    var cbs = $elm.data('mousewheel-callbacks');\n    var handler = cbs[fn];\n\n    if (handler) {\n      for ( var i = mouseWheeltoBind.length; i; ) {\n        $elm.off(mouseWheeltoBind[--i], handler);\n      }\n    }\n\n    delete cbs[fn];\n\n    if (Object.keys(cbs).length === 0) {\n      $elm.removeData('mousewheel-line-height');\n      $elm.removeData('mousewheel-page-height');\n      $elm.removeData('mousewheel-callbacks');\n    }\n  };\n\n  function mousewheelHandler(fn, event) {\n    var $elm = angular.element(this);\n\n    var delta      = 0,\n        deltaX     = 0,\n        deltaY     = 0,\n        absDelta   = 0,\n        offsetX    = 0,\n        offsetY    = 0;\n\n    // jQuery masks events\n    if (event.originalEvent) { event = event.originalEvent; }\n\n    if ( 'detail'      in event ) { deltaY = event.detail * -1;      }\n    if ( 'wheelDelta'  in event ) { deltaY = event.wheelDelta;       }\n    if ( 'wheelDeltaY' in event ) { deltaY = event.wheelDeltaY;      }\n    if ( 'wheelDeltaX' in event ) { deltaX = event.wheelDeltaX * -1; }\n\n    // Firefox < 17 horizontal scrolling related to DOMMouseScroll event\n    if ( 'axis' in event && event.axis === event.HORIZONTAL_AXIS ) {\n      deltaX = deltaY * -1;\n      deltaY = 0;\n    }\n\n    // Set delta to be deltaY or deltaX if deltaY is 0 for backwards compatabilitiy\n    delta = deltaY === 0 ? deltaX : deltaY;\n\n    // New school wheel delta (wheel event)\n    if ( 'deltaY' in event ) {\n      deltaY = event.deltaY * -1;\n      delta  = deltaY;\n    }\n    if ( 'deltaX' in event ) {\n      deltaX = event.deltaX;\n      if ( deltaY === 0 ) { delta  = deltaX * -1; }\n    }\n\n    // No change actually happened, no reason to go any further\n    if ( deltaY === 0 && deltaX === 0 ) { return; }\n\n    // Need to convert lines and pages to pixels if we aren't already in pixels\n    // There are three delta modes:\n    //   * deltaMode 0 is by pixels, nothing to do\n    //   * deltaMode 1 is by lines\n    //   * deltaMode 2 is by pages\n    if ( event.deltaMode === 1 ) {\n        var lineHeight = $elm.data('mousewheel-line-height');\n        delta  *= lineHeight;\n        deltaY *= lineHeight;\n        deltaX *= lineHeight;\n    }\n    else if ( event.deltaMode === 2 ) {\n        var pageHeight = $elm.data('mousewheel-page-height');\n        delta  *= pageHeight;\n        deltaY *= pageHeight;\n        deltaX *= pageHeight;\n    }\n\n    // Store lowest absolute delta to normalize the delta values\n    absDelta = Math.max( Math.abs(deltaY), Math.abs(deltaX) );\n\n    if ( !lowestDelta || absDelta < lowestDelta ) {\n      lowestDelta = absDelta;\n\n      // Adjust older deltas if necessary\n      if ( shouldAdjustOldDeltas(event, absDelta) ) {\n        lowestDelta /= 40;\n      }\n    }\n\n    // Get a whole, normalized value for the deltas\n    delta  = Math[ delta  >= 1 ? 'floor' : 'ceil' ](delta  / lowestDelta);\n    deltaX = Math[ deltaX >= 1 ? 'floor' : 'ceil' ](deltaX / lowestDelta);\n    deltaY = Math[ deltaY >= 1 ? 'floor' : 'ceil' ](deltaY / lowestDelta);\n\n    // Normalise offsetX and offsetY properties\n    // if ($elm[0].getBoundingClientRect ) {\n    //   var boundingRect = $(elm)[0].getBoundingClientRect();\n    //   offsetX = event.clientX - boundingRect.left;\n    //   offsetY = event.clientY - boundingRect.top;\n    // }\n\n    // event.deltaX = deltaX;\n    // event.deltaY = deltaY;\n    // event.deltaFactor = lowestDelta;\n\n    var newEvent = {\n      originalEvent: event,\n      deltaX: deltaX,\n      deltaY: deltaY,\n      deltaFactor: lowestDelta,\n      preventDefault: function () { event.preventDefault(); },\n      stopPropagation: function () { event.stopPropagation(); }\n    };\n\n    // Clearout lowestDelta after sometime to better\n    // handle multiple device types that give\n    // a different lowestDelta\n    // Ex: trackpad = 3 and mouse wheel = 120\n    if (nullLowestDeltaTimeout) { clearTimeout(nullLowestDeltaTimeout); }\n    nullLowestDeltaTimeout = setTimeout(nullLowestDelta, 200);\n\n    fn.call($elm[0], newEvent);\n  }\n\n  function nullLowestDelta() {\n    lowestDelta = null;\n  }\n\n  function shouldAdjustOldDeltas(orgEvent, absDelta) {\n    // If this is an older event and the delta is divisable by 120,\n    // then we are assuming that the browser is treating this as an\n    // older mouse wheel event and that we should divide the deltas\n    // by 40 to try and get a more usable deltaFactor.\n    // Side note, this actually impacts the reported scroll distance\n    // in older browsers and can cause scrolling to be slower than native.\n    // Turn this off by setting $.event.special.mousewheel.settings.adjustOldDeltas to false.\n    return orgEvent.type === 'mousewheel' && absDelta % 120 === 0;\n  }\n\n  return s;\n}]);\n\n// Add 'px' to the end of a number string if it doesn't have it already\nmodule.filter('px', function() {\n  return function(str) {\n    if (str.match(/^[\\d\\.]+$/)) {\n      return str + 'px';\n    }\n    else {\n      return str;\n    }\n  };\n});\n\n})();\n\n(function () {\n    angular.module('ui.grid').config(['$provide', function($provide) {\n      $provide.decorator('i18nService', ['$delegate', function($delegate) {\n        $delegate.add('ar', {\n            \"headerCell\": {\n              \"aria\": {\n                \"defaultFilterLabel\": \"التصفيه بالعمود\",\n                \"removeFilter\": \"محو التصفيه\",\n                \"columnMenuButtonLabel\": \"قاءمه الاعمده\"\n              },\n              \"priority\": \"أولويه : \",\n              \"filterLabel\": \"تصفيه بالاعمده :\"\n            },\n            \"aggregate\": {\n              \"label\": \"العناصر\"\n            },\n            \"groupPanel\": {\n              \"description\": \"اسحب رأس العمود هنا وأسقطه لإنشاء مجموعه\"\n            },\n            \"search\": {\n              \"placeholder\": \"بحث  ...\",\n              \"showingItems\": \"العناصر الظاهره :\",\n              \"selectedItems\": \"العناصر المحدده :\",\n              \"totalItems\": \"عدد العناصر :\",\n              \"size\": \"حجم الصفحه :\",\n              \"first\": \"اول صفحه\",\n              \"next\": \"الصفحه التاليه\",\n              \"previous\": \"الصفحه الصابقه\",\n              \"last\": \"الصفحه الاخيره\"\n            },\n            \"menu\": {\n              \"text\": \"اختيار العمود :\"\n            },\n            \"sort\": {\n              \"ascending\": \"ترتيب تصاعدى\",\n              \"descending\": \"ترتيب تنازلى\",\n              \"none\": \"عدم التحديد\",\n              \"remove\": \"حذف الترتيب\"\n            },\n            \"column\": {\n              \"hide\": \"إخفاء عمود\"\n            },\n            \"aggregation\": {\n              \"count\": \"عدد الصفوف: \",\n              \"sum\": \"جمع: \",\n              \"avg\": \"المتوسط الحسابى: \",\n              \"min\": \"الادنى: \",\n              \"max\": \"الاقصى: \"\n            },\n            \"pinning\": {\n              \"pinLeft\": \"تثبيت لليسار\",\n              \"pinRight\": \"تثبيت لليمين\",\n              \"unpin\": \"فك التثبيت\"\n            },\n            \"columnMenu\": {\n              \"close\": \"غلق\"\n            },\n            \"gridMenu\": {\n              \"aria\": {\n                \"buttonLabel\": \"قائمه الجدول\"\n              },\n              \"columns\": \"الاعمده:\",\n              \"importerTitle\": \"إدخال ملف\",\n              \"exporterAllAsCsv\": \"إخراج كل البيانات ك(csv)\",\n              \"exporterVisibleAsCsv\": \"إخراج كل البيانات الواضحه ك (csv)\",\n              \"exporterSelectedAsCsv\": \"إخراج كل البيانات المحدده ك (csv)\",\n              \"exporterAllAsPdf\": \"إخراج كل البيانات ك(pdf)\",\n              \"exporterVisibleAsPdf\": \"إخراج كل البيانات الواضحه ك (pdf)\",\n              \"exporterSelectedAsPdf\": \"إخراج كل البيانات المحدده ك (pdf)\",\n              \"clearAllFilters\": \"محو كل الترشيح\"\n            },\n            \"importer\": {\n              \"noHeaders\": \"اسماء هؤلاء الاعمده غير واضحه، هل يوجد رأس للملف؟\",\n              \"noObjects\": \"Objects were not able to be derived, was there data in the file other than headers?\",\n              \"invalidCsv\": \"الملف غير قادر على الاتمام ، هل ال (CSV) صحيح؟\",\n              \"invalidJson\": \"الملف غير قادر على الاتمام ، هل ال (JSON) صحيح؟\",\n              \"jsonNotArray\": \"Imported json file must contain an array, aborting.\"\n            },\n            \"pagination\": {\n              \"aria\": {\n                \"pageToFirst\": \"الصفحه الاولى\",\n                \"pageBack\": \"الصفه السابقه\",\n                \"pageSelected\": \"الصفحه المحدده\",\n                \"pageForward\": \"الصفحه التاليه\",\n                \"pageToLast\": \"الصفحه الاخيره\"\n              },\n              \"sizes\": \"عدد العناصر فى الصفحه\",\n              \"totalItems\": \"عناصر\",\n              \"through\": \"إلى\",\n              \"of\": \"من\"\n            },\n            \"grouping\": {\n              \"group\": \"جمع\",\n              \"ungroup\": \"فك الجمع\",\n              \"aggregate_count\": \"جمله : العدد\",\n              \"aggregate_sum\": \"جمله : الحاصل\",\n              \"aggregate_max\": \"جمله : الاقصى\",\n              \"aggregate_min\": \"جمله : الاقل\",\n              \"aggregate_avg\": \"جمله :المتوسط \",\n              \"aggregate_remove\": \"جمله : حذف\"\n            },\n            \"validate\": {\n              \"error\": \"خطأ :\",\n              \"minLength\": \"القيمه لابد ان لا تقل عن THRESHOLD حرف.\",\n              \"maxLength\": \"القيمه لابد ان لا تزيد عن THRESHOLD حرف.\",\n              \"required\": \"مطلوب قيمه\"\n            }\n          });\n        return $delegate;\n      }]);\n    }]);\n  })();\n  \n(function () {\n  angular.module('ui.grid').config(['$provide', function($provide) {\n    $provide.decorator('i18nService', ['$delegate', function($delegate) {\n      $delegate.add('bg', {\n        headerCell: {\n          aria: {\n            defaultFilterLabel: 'Филттър за колоната',\n            removeFilter: 'Премахни филтър',\n            columnMenuButtonLabel: 'Меню на колоната'\n          },\n          priority: 'Приоритет:',\n          filterLabel: \"Филтър за колоната: \"\n        },\n        aggregate: {\n          label: 'обекти'\n        },\n        search: {\n          placeholder: 'Търсене...',\n          showingItems: 'Показани обекти:',\n          selectedItems: 'избрани обекти:',\n          totalItems: 'Общо:',\n          size: 'Размер на страницата:',\n          first: 'Първа страница',\n          next: 'Следваща страница',\n          previous: 'Предишна страница',\n          last: 'Последна страница'\n        },\n        menu: {\n          text: 'Избери колони:'\n        },\n        sort: {\n          ascending: 'Сортиране по възходящ ред',\n          descending: 'Сортиране по низходящ ред',\n          none: 'Без сортиране',\n          remove: 'Премахни сортирането'\n        },\n        column: {\n          hide: 'Скрий колоната'\n        },\n        aggregation: {\n          count: 'Общо редове: ',\n          sum: 'общо: ',\n          avg: 'средно: ',\n          min: 'най-малко: ',\n          max: 'най-много: '\n        },\n        pinning: {\n          pinLeft: 'Прикрепи вляво',\n          pinRight: 'Прикрепи вдясно',\n          unpin: 'Премахване'\n        },\n        columnMenu: {\n          close: 'Затвори'\n        },\n        gridMenu: {\n          aria: {\n            buttonLabel: 'Меню на таблицата'\n          },\n          columns: 'Колони:',\n          importerTitle: 'Импортиране на файл',\n          exporterAllAsCsv: 'Експортиране на данните като csv',\n          exporterVisibleAsCsv: 'Експортиране на видимите данни като csv',\n          exporterSelectedAsCsv: 'Експортиране на избраните данни като csv',\n          exporterAllAsPdf: 'Експортиране на данните като pdf',\n          exporterVisibleAsPdf: 'Експортиране на видимите данни като pdf',\n          exporterSelectedAsPdf: 'Експортиране на избраните данни като pdf',\n          clearAllFilters: 'Премахни всички филтри'\n        },\n        importer: {\n          noHeaders: 'Имената на колоните не успяха да бъдат извлечени, файлът има ли хедър?',\n          noObjects: 'Обектите не успяха да бъдат извлечени, файлът съдържа ли данни, различни от хедър?',\n          invalidCsv: 'Файлът не може да бъде обработеб, уверете се, че е валиден CSV файл',\n          invalidJson: 'Файлът не може да бъде обработеб, уверете се, че е валиден JSON файл',\n          jsonNotArray: 'Импортираният JSON файл трябва да съдържа масив, прекратяване.'\n        },\n        pagination: {\n          aria: {\n            pageToFirst: 'Към първа страница',\n            pageBack: 'Страница назад',\n            pageSelected: 'Избрана страница',\n            pageForward: 'Страница напред',\n            pageToLast: 'Към последна страница'\n          },\n          sizes: 'обекта на страница',\n          totalItems: 'обекта',\n          through: 'до',\n          of: 'от'\n        },\n        grouping: {\n          group: 'Групиране',\n          ungroup: 'Премахване на групирането',\n          aggregate_count: 'Сбор: Брой',\n          aggregate_sum: 'Сбор: Сума',\n          aggregate_max: 'Сбор: Максимум',\n          aggregate_min: 'Сбор: Минимум',\n          aggregate_avg: 'Сбор: Средно',\n          aggregate_remove: 'Сбор: Премахване'\n        },\n        validate: {\n          error: 'Грешка:',\n          minLength: 'Стойността трябва да съдържа поне THRESHOLD символа.',\n          maxLength: 'Стойността не трябва да съдържа повече от THRESHOLD символа.',\n          required: 'Необходима е стойност.'\n        }\n      });\n      return $delegate;\n    }]);\n  }]);\n})();\n\n(function () {\n  angular.module('ui.grid').config(['$provide', function($provide) {\n    $provide.decorator('i18nService', ['$delegate', function($delegate) {\n      var lang = {\n              aggregate: {\n                  label: 'položky'\n              },\n              groupPanel: {\n                  description: 'Přesuňte záhlaví zde pro vytvoření skupiny dle sloupce.'\n              },\n              search: {\n                  placeholder: 'Hledat...',\n                  showingItems: 'Zobrazuji položky:',\n                  selectedItems: 'Vybrané položky:',\n                  totalItems: 'Celkem položek:',\n                  size: 'Velikost strany:',\n                  first: 'První strana',\n                  next: 'Další strana',\n                  previous: 'Předchozí strana',\n                  last: 'Poslední strana'\n              },\n              menu: {\n                  text: 'Vyberte sloupec:'\n              },\n              sort: {\n                  ascending: 'Seřadit od A-Z',\n                  descending: 'Seřadit od Z-A',\n                  remove: 'Odebrat seřazení'\n              },\n              column: {\n                  hide: 'Schovat sloupec'\n              },\n              aggregation: {\n                  count: 'celkem řádků: ',\n                  sum: 'celkem: ',\n                  avg: 'avg: ',\n                  min: 'min.: ',\n                  max: 'max.: '\n              },\n              pinning: {\n                  pinLeft: 'Zamknout vlevo',\n                  pinRight: 'Zamknout vpravo',\n                  unpin: 'Odemknout'\n              },\n              gridMenu: {\n                  columns: 'Sloupce:',\n                  importerTitle: 'Importovat soubor',\n                  exporterAllAsCsv: 'Exportovat všechna data do csv',\n                  exporterVisibleAsCsv: 'Exportovat viditelná data do csv',\n                  exporterSelectedAsCsv: 'Exportovat vybraná data do csv',\n                  exporterAllAsPdf: 'Exportovat všechna data do pdf',\n                  exporterVisibleAsPdf: 'Exportovat viditelná data do pdf',\n                  exporterSelectedAsPdf: 'Exportovat vybraná data do pdf',\n                  exporterAllAsExcel: 'Exportovat všechna data do excel',\n                  exporterVisibleAsExcel: 'Exportovat viditelná data do excel',\n                  exporterSelectedAsExcel: 'Exportovat vybraná data do excel',\n                  clearAllFilters: 'Odstranit všechny filtry'\n              },\n              importer: {\n                  noHeaders: 'Názvy sloupců se nepodařilo získat, obsahuje soubor záhlaví?',\n                  noObjects: 'Data se nepodařilo zpracovat, obsahuje soubor řádky mimo záhlaví?',\n                  invalidCsv: 'Soubor nelze zpracovat, jedná se o CSV?',\n                  invalidJson: 'Soubor nelze zpracovat, je to JSON?',\n                  jsonNotArray: 'Soubor musí obsahovat json. Ukončuji..'\n              },\n              pagination: {\n                  sizes: 'položek na stránku',\n                  totalItems: 'položek'\n              },\n              grouping: {\n                  group: 'Seskupit',\n                  ungroup: 'Odebrat seskupení',\n                  aggregate_count: 'Agregace: Count',\n                  aggregate_sum: 'Agregace: Sum',\n                  aggregate_max: 'Agregace: Max',\n                  aggregate_min: 'Agregace: Min',\n                  aggregate_avg: 'Agregace: Avg',\n                  aggregate_remove: 'Agregace: Odebrat'\n              }\n          };\n\n          // support varianty of different czech keys.\n          $delegate.add('cs', lang);\n          $delegate.add('cz', lang);\n          $delegate.add('cs-cz', lang);\n          $delegate.add('cs-CZ', lang);\n      return $delegate;\n    }]);\n  }]);\n})();\n\n(function(){\n  angular.module('ui.grid').config(['$provide', function($provide) {\n    $provide.decorator('i18nService', ['$delegate', function($delegate) {\n      $delegate.add('da', {\n        aggregate:{\n          label: 'artikler'\n        },\n        groupPanel:{\n          description: 'Grupér rækker udfra en kolonne ved at trække dens overskift hertil.'\n        },\n        search:{\n          placeholder: 'Søg...',\n          showingItems: 'Viste rækker:',\n          selectedItems: 'Valgte rækker:',\n          totalItems: 'Rækker totalt:',\n          size: 'Side størrelse:',\n          first: 'Første side',\n          next: 'Næste side',\n          previous: 'Forrige side',\n          last: 'Sidste side'\n        },\n        menu:{\n          text: 'Vælg kolonner:'\n        },\n        sort: {\n          ascending: 'Sorter stigende',\n          descending: 'Sorter faldende',\n          none: 'Sorter ingen',\n          remove: 'Fjern sortering'\n        },\n        column: {\n          hide: 'Skjul kolonne'\n        },\n        aggregation: {\n          count: 'antal rækker: ',\n          sum: 'sum: ',\n          avg: 'gns: ',\n          min: 'min: ',\n          max: 'max: '\n        },\n        gridMenu: {\n          columns: 'Kolonner:',\n          importerTitle: 'Importer fil',\n          exporterAllAsCsv: 'Eksporter alle data som csv',\n          exporterVisibleAsCsv: 'Eksporter synlige data som csv',\n          exporterSelectedAsCsv: 'Eksporter markerede data som csv',\n          exporterAllAsPdf: 'Eksporter alle data som pdf',\n          exporterVisibleAsPdf: 'Eksporter synlige data som pdf',\n          exporterSelectedAsPdf: 'Eksporter markerede data som pdf',\n          exporterAllAsExcel: 'Eksporter alle data som excel',\n          exporterVisibleAsExcel: 'Eksporter synlige data som excel',\n          exporterSelectedAsExcel: 'Eksporter markerede data som excel',\n          clearAllFilters: 'Clear all filters'\n        },\n        importer: {\n          noHeaders: 'Column names were unable to be derived, does the file have a header?',\n          noObjects: 'Objects were not able to be derived, was there data in the file other than headers?',\n          invalidCsv: 'File was unable to be processed, is it valid CSV?',\n          invalidJson: 'File was unable to be processed, is it valid Json?',\n          jsonNotArray: 'Imported json file must contain an array, aborting.'\n        },\n        pagination: {\n          aria: {\n            pageToFirst: 'Gå til første',\n            pageBack: 'Gå tilbage',\n            pageSelected: 'Valgte side',\n            pageForward: 'Gå frem',\n            pageToLast: 'Gå til sidste'\n          },\n          sizes: 'genstande per side',\n          totalItems: 'genstande',\n          through: 'gennem',\n          of: 'af'\n        }\n      });\n      return $delegate;\n    }]);\n  }]);\n})();\n\n(function () {\n  angular.module('ui.grid').config(['$provide', function ($provide) {\n    $provide.decorator('i18nService', ['$delegate', function ($delegate) {\n      $delegate.add('de', {\n        headerCell: {\n          aria: {\n            defaultFilterLabel: 'Filter für Spalte',\n            removeFilter: 'Filter löschen',\n            columnMenuButtonLabel: 'Spaltenmenü',\n            column: 'Spalte'\n          },\n          priority: 'Priorität:',\n          filterLabel: \"Filter für Spalte: \"\n        },\n        aggregate: {\n          label: 'Eintrag'\n        },\n        groupPanel: {\n          description: 'Ziehen Sie eine Spaltenüberschrift hierhin, um nach dieser Spalte zu gruppieren.'\n        },\n        search: {\n          aria: {\n            selected: 'Zeile markiert',\n            notSelected: 'Zeile nicht markiert'\n          },\n          placeholder: 'Suche...',\n          showingItems: 'Zeige Einträge:',\n          selectedItems: 'Ausgewählte Einträge:',\n          totalItems: 'Einträge gesamt:',\n          size: 'Einträge pro Seite:',\n          first: 'Erste Seite',\n          next: 'Nächste Seite',\n          previous: 'Vorherige Seite',\n          last: 'Letzte Seite'\n        },\n        menu: {\n          text: 'Spalten auswählen:'\n        },\n        sort: {\n          ascending: 'aufsteigend sortieren',\n          descending: 'absteigend sortieren',\n          none: 'keine Sortierung',\n          remove: 'Sortierung zurücksetzen'\n        },\n        column: {\n          hide: 'Spalte ausblenden'\n        },\n        aggregation: {\n          count: 'Zeilen insgesamt: ',\n          sum: 'gesamt: ',\n          avg: 'Durchschnitt: ',\n          min: 'min: ',\n          max: 'max: '\n        },\n        pinning: {\n            pinLeft: 'Links anheften',\n            pinRight: 'Rechts anheften',\n            unpin: 'Lösen'\n        },\n        columnMenu: {\n          close: 'Schließen'\n        },\n        gridMenu: {\n          aria: {\n            buttonLabel: 'Tabellenmenü'\n          },\n          columns: 'Spalten:',\n          importerTitle: 'Datei importieren',\n          exporterAllAsCsv: 'Alle Daten als CSV exportieren',\n          exporterVisibleAsCsv: 'Sichtbare Daten als CSV exportieren',\n          exporterSelectedAsCsv: 'Markierte Daten als CSV exportieren',\n          exporterAllAsPdf: 'Alle Daten als PDF exportieren',\n          exporterVisibleAsPdf: 'Sichtbare Daten als PDF exportieren',\n          exporterSelectedAsPdf: 'Markierte Daten als PDF exportieren',\n          exporterAllAsExcel: 'Alle Daten als Excel exportieren',\n          exporterVisibleAsExcel: 'Sichtbare Daten als Excel exportieren',\n          exporterSelectedAsExcel: 'Markierte Daten als Excel exportieren',\n          clearAllFilters: 'Alle Filter zurücksetzen'\n        },\n        importer: {\n          noHeaders: 'Es konnten keine Spaltennamen ermittelt werden. Sind in der Datei Spaltendefinitionen enthalten?',\n          noObjects: 'Es konnten keine Zeileninformationen gelesen werden, Sind in der Datei außer den Spaltendefinitionen auch Daten enthalten?',\n          invalidCsv: 'Die Datei konnte nicht eingelesen werden, ist es eine gültige CSV-Datei?',\n          invalidJson: 'Die Datei konnte nicht eingelesen werden. Enthält sie gültiges JSON?',\n          jsonNotArray: 'Die importierte JSON-Datei muß ein Array enthalten. Breche Import ab.'\n        },\n        pagination: {\n          aria: {\n            pageToFirst: 'Zum Anfang',\n            pageBack: 'Seite zurück',\n            pageSelected: 'Ausgewählte Seite',\n            pageForward: 'Seite vor',\n            pageToLast: 'Zum Ende'\n          },\n          sizes: 'Einträge pro Seite',\n          totalItems: 'Einträgen',\n          through: 'bis',\n          of: 'von'\n        },\n        grouping: {\n            group: 'Gruppieren',\n            ungroup: 'Gruppierung aufheben',\n            aggregate_count: 'Agg: Anzahl',\n            aggregate_sum: 'Agg: Summe',\n            aggregate_max: 'Agg: Maximum',\n            aggregate_min: 'Agg: Minimum',\n            aggregate_avg: 'Agg: Mittelwert',\n            aggregate_remove: 'Aggregation entfernen'\n        }\n      });\n      return $delegate;\n    }]);\n  }]);\n})();\n\n(function () {\n  angular.module('ui.grid').config(['$provide', function($provide) {\n    $provide.decorator('i18nService', ['$delegate', function($delegate) {\n      $delegate.add('en', {\n        headerCell: {\n          aria: {\n            defaultFilterLabel: 'Filter for column',\n            removeFilter: 'Remove Filter',\n            columnMenuButtonLabel: 'Column Menu',\n            column: 'Column'\n          },\n          priority: 'Priority:',\n          filterLabel: \"Filter for column: \"\n        },\n        aggregate: {\n          label: 'items'\n        },\n        groupPanel: {\n          description: 'Drag a column header here and drop it to group by that column.'\n        },\n        search: {\n          aria: {\n            selected: 'Row selected',\n            notSelected: 'Row not selected'\n          },\n          placeholder: 'Search...',\n          showingItems: 'Showing Items:',\n          selectedItems: 'Selected Items:',\n          totalItems: 'Total Items:',\n          size: 'Page Size:',\n          first: 'First Page',\n          next: 'Next Page',\n          previous: 'Previous Page',\n          last: 'Last Page'\n        },\n        menu: {\n          text: 'Choose Columns:'\n        },\n        sort: {\n          ascending: 'Sort Ascending',\n          descending: 'Sort Descending',\n          none: 'Sort None',\n          remove: 'Remove Sort'\n        },\n        column: {\n          hide: 'Hide Column'\n        },\n        aggregation: {\n          count: 'total rows: ',\n          sum: 'total: ',\n          avg: 'avg: ',\n          min: 'min: ',\n          max: 'max: '\n        },\n        pinning: {\n          pinLeft: 'Pin Left',\n          pinRight: 'Pin Right',\n          unpin: 'Unpin'\n        },\n        columnMenu: {\n          close: 'Close'\n        },\n        gridMenu: {\n          aria: {\n            buttonLabel: 'Grid Menu'\n          },\n          columns: 'Columns:',\n          importerTitle: 'Import file',\n          exporterAllAsCsv: 'Export all data as csv',\n          exporterVisibleAsCsv: 'Export visible data as csv',\n          exporterSelectedAsCsv: 'Export selected data as csv',\n          exporterAllAsPdf: 'Export all data as pdf',\n          exporterVisibleAsPdf: 'Export visible data as pdf',\n          exporterSelectedAsPdf: 'Export selected data as pdf',\n          exporterAllAsExcel: 'Export all data as excel',\n          exporterVisibleAsExcel: 'Export visible data as excel',\n          exporterSelectedAsExcel: 'Export selected data as excel',\n          clearAllFilters: 'Clear all filters'\n        },\n        importer: {\n          noHeaders: 'Column names were unable to be derived, does the file have a header?',\n          noObjects: 'Objects were not able to be derived, was there data in the file other than headers?',\n          invalidCsv: 'File was unable to be processed, is it valid CSV?',\n          invalidJson: 'File was unable to be processed, is it valid Json?',\n          jsonNotArray: 'Imported json file must contain an array, aborting.'\n        },\n        pagination: {\n          aria: {\n            pageToFirst: 'Page to first',\n            pageBack: 'Page back',\n            pageSelected: 'Selected page',\n            pageForward: 'Page forward',\n            pageToLast: 'Page to last'\n          },\n          sizes: 'items per page',\n          totalItems: 'items',\n          through: 'through',\n          of: 'of'\n        },\n        grouping: {\n          group: 'Group',\n          ungroup: 'Ungroup',\n          aggregate_count: 'Agg: Count',\n          aggregate_sum: 'Agg: Sum',\n          aggregate_max: 'Agg: Max',\n          aggregate_min: 'Agg: Min',\n          aggregate_avg: 'Agg: Avg',\n          aggregate_remove: 'Agg: Remove'\n        },\n        validate: {\n          error: 'Error:',\n          minLength: 'Value should be at least THRESHOLD characters long.',\n          maxLength: 'Value should be at most THRESHOLD characters long.',\n          required: 'A value is needed.'\n        }\n      });\n      return $delegate;\n    }]);\n  }]);\n})();\n\n(function () {\n  angular.module('ui.grid').config(['$provide', function($provide) {\n    $provide.decorator('i18nService', ['$delegate', function($delegate) {\n      $delegate.add('es', {\n        aggregate: {\n          label: 'Artículos'\n        },\n        groupPanel: {\n          description: 'Arrastre un encabezado de columna aquí y suéltelo para agrupar por esa columna.'\n        },\n        search: {\n          placeholder: 'Buscar...',\n          showingItems: 'Artículos Mostrados:',\n          selectedItems: 'Artículos Seleccionados:',\n          totalItems: 'Artículos Totales:',\n          size: 'Tamaño de Página:',\n          first: 'Primera Página',\n          next: 'Página Siguiente',\n          previous: 'Página Anterior',\n          last: 'Última Página'\n        },\n        menu: {\n          text: 'Elegir columnas:'\n        },\n        sort: {\n          ascending: 'Orden Ascendente',\n          descending: 'Orden Descendente',\n          remove: 'Sin Ordenar'\n        },\n        column: {\n          hide: 'Ocultar la columna'\n        },\n        aggregation: {\n          count: 'filas totales: ',\n          sum: 'total: ',\n          avg: 'media: ',\n          min: 'min: ',\n          max: 'max: '\n        },\n        pinning: {\n          pinLeft: 'Fijar a la Izquierda',\n          pinRight: 'Fijar a la Derecha',\n          unpin: 'Quitar Fijación'\n        },\n        gridMenu: {\n          columns: 'Columnas:',\n          importerTitle: 'Importar archivo',\n          exporterAllAsCsv: 'Exportar todo como csv',\n          exporterVisibleAsCsv: 'Exportar vista como csv',\n          exporterSelectedAsCsv: 'Exportar selección como csv',\n          exporterAllAsPdf: 'Exportar todo como pdf',\n          exporterVisibleAsPdf: 'Exportar vista como pdf',\n          exporterSelectedAsPdf: 'Exportar selección como pdf',\n          exporterAllAsExcel: 'Exportar todo como excel',\n          exporterVisibleAsExcel: 'Exportar vista como excel',\n          exporterSelectedAsExcel: 'Exportar selección como excel',\n          clearAllFilters: 'Limpiar todos los filtros'\n        },\n        importer: {\n          noHeaders: 'No fue posible derivar los nombres de las columnas, ¿tiene encabezados el archivo?',\n          noObjects: 'No fue posible obtener registros, ¿contiene datos el archivo, aparte de los encabezados?',\n          invalidCsv: 'No fue posible procesar el archivo, ¿es un CSV válido?',\n          invalidJson: 'No fue posible procesar el archivo, ¿es un Json válido?',\n          jsonNotArray: 'El archivo json importado debe contener un array, abortando.'\n        },\n        pagination: {\n          sizes: 'registros por página',\n          totalItems: 'registros',\n          of: 'de'\n        },\n        grouping: {\n          group: 'Agrupar',\n          ungroup: 'Desagrupar',\n          aggregate_count: 'Agr: Cont',\n          aggregate_sum: 'Agr: Sum',\n          aggregate_max: 'Agr: Máx',\n          aggregate_min: 'Agr: Min',\n          aggregate_avg: 'Agr: Prom',\n          aggregate_remove: 'Agr: Quitar'\n        }\n      });\n      return $delegate;\n    }]);\n}]);\n})();\n\n/**\n * Translated by: R. Salarmehr\n *                M. Hosseynzade\n *                Using Vajje.com online dictionary.\n */\n(function () {\n  angular.module('ui.grid').config(['$provide', function ($provide) {\n    $provide.decorator('i18nService', ['$delegate', function ($delegate) {\n      $delegate.add('fa', {\n        aggregate: {\n          label: 'قلم'\n        },\n        groupPanel: {\n          description: 'عنوان یک ستون را بگیر و به گروهی از آن ستون رها کن.'\n        },\n        search: {\n          placeholder: 'جستجو...',\n          showingItems: 'نمایش اقلام:',\n          selectedItems: 'قلم\\u200cهای انتخاب شده:',\n          totalItems: 'مجموع اقلام:',\n          size: 'اندازه\\u200cی صفحه:',\n          first: 'اولین صفحه',\n          next: 'صفحه\\u200cی\\u200cبعدی',\n          previous: 'صفحه\\u200cی\\u200c قبلی',\n          last: 'آخرین صفحه'\n        },\n        menu: {\n          text: 'ستون\\u200cهای انتخابی:'\n        },\n        sort: {\n          ascending: 'ترتیب صعودی',\n          descending: 'ترتیب نزولی',\n          remove: 'حذف مرتب کردن'\n        },\n        column: {\n          hide: 'پنهان\\u200cکردن ستون'\n        },\n        aggregation: {\n          count: 'تعداد: ',\n          sum: 'مجموع: ',\n          avg: 'میانگین: ',\n          min: 'کمترین: ',\n          max: 'بیشترین: '\n        },\n        pinning: {\n          pinLeft: 'پین کردن سمت چپ',\n          pinRight: 'پین کردن سمت راست',\n          unpin: 'حذف پین'\n        },\n        gridMenu: {\n          columns: 'ستون\\u200cها:',\n          importerTitle: 'وارد کردن فایل',\n          exporterAllAsCsv: 'خروجی تمام داده\\u200cها در فایل csv',\n          exporterVisibleAsCsv: 'خروجی داده\\u200cهای قابل مشاهده در فایل csv',\n          exporterSelectedAsCsv: 'خروجی داده\\u200cهای انتخاب\\u200cشده در فایل csv',\n          exporterAllAsPdf: 'خروجی تمام داده\\u200cها در فایل pdf',\n          exporterVisibleAsPdf: 'خروجی داده\\u200cهای قابل مشاهده در فایل pdf',\n          exporterSelectedAsPdf: 'خروجی داده\\u200cهای انتخاب\\u200cشده در فایل pdf',\n          clearAllFilters: 'پاک کردن تمام فیلتر'\n        },\n        importer: {\n          noHeaders: 'نام ستون قابل استخراج نیست. آیا فایل عنوان دارد؟',\n          noObjects: 'اشیا قابل استخراج نیستند. آیا به جز عنوان\\u200cها در فایل داده وجود دارد؟',\n          invalidCsv: 'فایل قابل پردازش نیست. آیا فرمت  csv  معتبر است؟',\n          invalidJson: 'فایل قابل پردازش نیست. آیا فرمت json   معتبر است؟',\n          jsonNotArray: 'فایل json وارد شده باید حاوی آرایه باشد. عملیات ساقط شد.'\n        },\n        pagination: {\n          sizes: 'اقلام در هر صفحه',\n          totalItems: 'اقلام',\n          of: 'از'\n        },\n        grouping: {\n          group: 'گروه\\u200cبندی',\n          ungroup: 'حذف گروه\\u200cبندی',\n          aggregate_count: 'Agg: تعداد',\n          aggregate_sum: 'Agg: جمع',\n          aggregate_max: 'Agg: بیشینه',\n          aggregate_min: 'Agg: کمینه',\n          aggregate_avg: 'Agg: میانگین',\n          aggregate_remove: 'Agg: حذف'\n        }\n      });\n      return $delegate;\n    }]);\n  }]);\n})();\n\n(function () {\n  angular.module('ui.grid').config(['$provide', function($provide) {\n    $provide.decorator('i18nService', ['$delegate', function($delegate) {\n      $delegate.add('fi', {\n        aggregate: {\n          label: 'rivit'\n        },\n        groupPanel: {\n          description: 'Raahaa ja pudota otsikko tähän ryhmittääksesi sarakkeen mukaan.'\n        },\n        search: {\n          placeholder: 'Hae...',\n          showingItems: 'Näytetään rivejä:',\n          selectedItems: 'Valitut rivit:',\n          totalItems: 'Rivejä yht.:',\n          size: 'Näytä:',\n          first: 'Ensimmäinen sivu',\n          next: 'Seuraava sivu',\n          previous: 'Edellinen sivu',\n          last: 'Viimeinen sivu'\n        },\n        menu: {\n          text: 'Valitse sarakkeet:'\n        },\n        sort: {\n          ascending: 'Järjestä nouseva',\n          descending: 'Järjestä laskeva',\n          remove: 'Poista järjestys'\n        },\n        column: {\n          hide: 'Piilota sarake'\n        },\n        aggregation: {\n          count: 'Rivejä yht.: ',\n          sum: 'Summa: ',\n          avg: 'K.a.: ',\n          min: 'Min: ',\n          max: 'Max: '\n        },\n        pinning: {\n         pinLeft: 'Lukitse vasemmalle',\n          pinRight: 'Lukitse oikealle',\n          unpin: 'Poista lukitus'\n        },\n        gridMenu: {\n          columns: 'Sarakkeet:',\n          importerTitle: 'Tuo tiedosto',\n          exporterAllAsCsv: 'Vie tiedot csv-muodossa',\n          exporterVisibleAsCsv: 'Vie näkyvä tieto csv-muodossa',\n          exporterSelectedAsCsv: 'Vie valittu tieto csv-muodossa',\n          exporterAllAsPdf: 'Vie tiedot pdf-muodossa',\n          exporterVisibleAsPdf: 'Vie näkyvä tieto pdf-muodossa',\n          exporterSelectedAsPdf: 'Vie valittu tieto pdf-muodossa',\n          exporterAllAsExcel: 'Vie tiedot excel-muodossa',\n          exporterVisibleAsExcel: 'Vie näkyvä tieto excel-muodossa',\n          exporterSelectedAsExcel: 'Vie valittu tieto excel-muodossa',\n          clearAllFilters: 'Puhdista kaikki suodattimet'\n        },\n        importer: {\n          noHeaders: 'Sarakkeen nimiä ei voitu päätellä, onko tiedostossa otsikkoriviä?',\n          noObjects: 'Tietoja ei voitu lukea, onko tiedostossa muuta kuin otsikkot?',\n          invalidCsv: 'Tiedostoa ei voitu käsitellä, oliko se CSV-muodossa?',\n          invalidJson: 'Tiedostoa ei voitu käsitellä, oliko se JSON-muodossa?',\n          jsonNotArray: 'Tiedosto ei sisältänyt taulukkoa, lopetetaan.'\n        }\n      });\n      return $delegate;\n    }]);\n  }]);\n})();\n\n(function () {\n  angular.module('ui.grid').config(['$provide', function($provide) {\n    $provide.decorator('i18nService', ['$delegate', function($delegate) {\n      $delegate.add('fr', {\n        headerCell: {\n          aria: {\n            defaultFilterLabel: 'Filtre de la colonne',\n            removeFilter: 'Supprimer le filtre',\n            columnMenuButtonLabel: 'Menu de la colonne'\n          },\n          priority: 'Priorité:',\n          filterLabel: \"Filtre de la colonne: \"\n        },\n        aggregate: {\n          label: 'éléments'\n        },\n        groupPanel: {\n          description: 'Faites glisser une en-tête de colonne ici pour créer un groupe de colonnes.'\n        },\n        search: {\n          placeholder: 'Recherche...',\n          showingItems: 'Affichage des éléments :',\n          selectedItems: 'Éléments sélectionnés :',\n          totalItems: 'Nombre total d\\'éléments:',\n          size: 'Taille de page:',\n          first: 'Première page',\n          next: 'Page Suivante',\n          previous: 'Page précédente',\n          last: 'Dernière page'\n        },\n        menu: {\n          text: 'Choisir des colonnes :'\n        },\n        sort: {\n          ascending: 'Trier par ordre croissant',\n          descending: 'Trier par ordre décroissant',\n          none: 'Aucun tri',\n          remove: 'Enlever le tri'\n        },\n        column: {\n          hide: 'Cacher la colonne'\n        },\n        aggregation: {\n          count: 'lignes totales: ',\n          sum: 'total: ',\n          avg: 'moy: ',\n          min: 'min: ',\n          max: 'max: '\n        },\n        pinning: {\n          pinLeft: 'Épingler à gauche',\n          pinRight: 'Épingler à droite',\n          unpin: 'Détacher'\n        },\n        columnMenu: {\n          close: 'Fermer'\n        },\n        gridMenu: {\n          aria: {\n            buttonLabel: 'Menu du tableau'\n          },\n          columns: 'Colonnes:',\n          importerTitle: 'Importer un fichier',\n          exporterAllAsCsv: 'Exporter toutes les données en CSV',\n          exporterVisibleAsCsv: 'Exporter les données visibles en CSV',\n          exporterSelectedAsCsv: 'Exporter les données sélectionnées en CSV',\n          exporterAllAsPdf: 'Exporter toutes les données en PDF',\n          exporterVisibleAsPdf: 'Exporter les données visibles en PDF',\n          exporterSelectedAsPdf: 'Exporter les données sélectionnées en PDF',\n          exporterAllAsExcel: 'Exporter toutes les données en Excel',\n          exporterVisibleAsExcel: 'Exporter les données visibles en Excel',\n          exporterSelectedAsExcel: 'Exporter les données sélectionnées en Excel',\n          clearAllFilters: 'Nettoyez tous les filtres'\n        },\n        importer: {\n          noHeaders: 'Impossible de déterminer le nom des colonnes, le fichier possède-t-il une en-tête ?',\n          noObjects: 'Aucun objet trouvé, le fichier possède-t-il des données autres que l\\'en-tête ?',\n          invalidCsv: 'Le fichier n\\'a pas pu être traité, le CSV est-il valide ?',\n          invalidJson: 'Le fichier n\\'a pas pu être traité, le JSON est-il valide ?',\n          jsonNotArray: 'Le fichier JSON importé doit contenir un tableau, abandon.'\n        },\n        pagination: {\n          aria: {\n            pageToFirst: 'Aller à la première page',\n            pageBack: 'Page précédente',\n            pageSelected: 'Page sélectionnée',\n            pageForward: 'Page suivante',\n            pageToLast: 'Aller à la dernière page'\n          },\n          sizes: 'éléments par page',\n          totalItems: 'éléments',\n          through: 'à',\n          of: 'sur'\n        },\n        grouping: {\n          group: 'Grouper',\n          ungroup: 'Dégrouper',\n          aggregate_count: 'Agg: Compter',\n          aggregate_sum: 'Agg: Somme',\n          aggregate_max: 'Agg: Max',\n          aggregate_min: 'Agg: Min',\n          aggregate_avg: 'Agg: Moy',\n          aggregate_remove: 'Agg: Retirer'\n        },\n        validate: {\n          error: 'Erreur:',\n          minLength: 'La valeur doit être supérieure ou égale à THRESHOLD caractères.',\n          maxLength: 'La valeur doit être inférieure ou égale à THRESHOLD caractères.',\n          required: 'Une valeur est nécéssaire.'\n        }\n      });\n      return $delegate;\n    }]);\n  }]);\n})();\n\n(function () {\n  angular.module('ui.grid').config(['$provide', function ($provide) {\n    $provide.decorator('i18nService', ['$delegate', function ($delegate) {\n      $delegate.add('he', {\n        aggregate: {\n          label: 'items'\n        },\n        groupPanel: {\n          description: 'גרור עמודה לכאן ושחרר בכדי לקבץ עמודה זו.'\n        },\n        search: {\n          placeholder: 'חפש...',\n          showingItems: 'מציג:',\n          selectedItems: 'סה\"כ נבחרו:',\n          totalItems: 'סה\"כ רשומות:',\n          size: 'תוצאות בדף:',\n          first: 'דף ראשון',\n          next: 'דף הבא',\n          previous: 'דף קודם',\n          last: 'דף אחרון'\n        },\n        menu: {\n          text: 'בחר עמודות:'\n        },\n        sort: {\n          ascending: 'סדר עולה',\n          descending: 'סדר יורד',\n          remove: 'בטל'\n        },\n        column: {\n          hide: 'טור הסתר'\n        },\n        aggregation: {\n          count: 'total rows: ',\n          sum: 'total: ',\n          avg: 'avg: ',\n          min: 'min: ',\n          max: 'max: '\n        },\n        gridMenu: {\n          columns: 'Columns:',\n          importerTitle: 'Import file',\n          exporterAllAsCsv: 'Export all data as csv',\n          exporterVisibleAsCsv: 'Export visible data as csv',\n          exporterSelectedAsCsv: 'Export selected data as csv',\n          exporterAllAsPdf: 'Export all data as pdf',\n          exporterVisibleAsPdf: 'Export visible data as pdf',\n          exporterSelectedAsPdf: 'Export selected data as pdf',\n          exporterAllAsExcel: 'Export all data as excel',\n          exporterVisibleAsExcel: 'Export visible data as excel',\n          exporterSelectedAsExcel: 'Export selected data as excel',\n          clearAllFilters: 'Clean all filters'\n        },\n        importer: {\n          noHeaders: 'Column names were unable to be derived, does the file have a header?',\n          noObjects: 'Objects were not able to be derived, was there data in the file other than headers?',\n          invalidCsv: 'File was unable to be processed, is it valid CSV?',\n          invalidJson: 'File was unable to be processed, is it valid Json?',\n          jsonNotArray: 'Imported json file must contain an array, aborting.'\n        }\n      });\n      return $delegate;\n    }]);\n  }]);\n})();\n\n(function () {\n  angular.module('ui.grid').config(['$provide', function($provide) {\n    $provide.decorator('i18nService', ['$delegate', function($delegate) {\n      $delegate.add('hy', {\n        aggregate: {\n          label: 'տվյալներ'\n        },\n        groupPanel: {\n          description: 'Ըստ սյան խմբավորելու համար քաշեք և գցեք վերնագիրն այստեղ։'\n        },\n        search: {\n          placeholder: 'Փնտրում...',\n          showingItems: 'Ցուցադրված տվյալներ՝',\n          selectedItems: 'Ընտրված:',\n          totalItems: 'Ընդամենը՝',\n          size: 'Տողերի քանակը էջում՝',\n          first: 'Առաջին էջ',\n          next: 'Հաջորդ էջ',\n          previous: 'Նախորդ էջ',\n          last: 'Վերջին էջ'\n        },\n        menu: {\n          text: 'Ընտրել սյուները:'\n        },\n        sort: {\n          ascending: 'Աճման կարգով',\n          descending: 'Նվազման կարգով',\n          remove: 'Հանել '\n        },\n        column: {\n          hide: 'Թաքցնել սյունը'\n        },\n        aggregation: {\n          count: 'ընդամենը տող՝ ',\n          sum: 'ընդամենը՝ ',\n          avg: 'միջին՝ ',\n          min: 'մին՝ ',\n          max: 'մաքս՝ '\n        },\n        pinning: {\n          pinLeft: 'Կպցնել ձախ կողմում',\n          pinRight: 'Կպցնել աջ կողմում',\n          unpin: 'Արձակել'\n        },\n        gridMenu: {\n          columns: 'Սյուներ:',\n          importerTitle: 'Ներմուծել ֆայլ',\n          exporterAllAsCsv: 'Արտահանել ամբողջը CSV',\n          exporterVisibleAsCsv: 'Արտահանել երևացող տվյալները CSV',\n          exporterSelectedAsCsv: 'Արտահանել ընտրված տվյալները CSV',\n          exporterAllAsPdf: 'Արտահանել PDF',\n          exporterVisibleAsPdf: 'Արտահանել երևացող տվյալները PDF',\n          exporterSelectedAsPdf: 'Արտահանել ընտրված տվյալները PDF',\n          exporterAllAsExcel: 'Արտահանել excel',\n          exporterVisibleAsExcel: 'Արտահանել երևացող տվյալները excel',\n          exporterSelectedAsExcel: 'Արտահանել ընտրված տվյալները excel',\n          clearAllFilters: 'Մաքրել բոլոր ֆիլտրերը'\n        },\n        importer: {\n          noHeaders: 'Հնարավոր չեղավ որոշել սյան վերնագրերը։ Արդյո՞ք ֆայլը ունի վերնագրեր։',\n          noObjects: 'Հնարավոր չեղավ կարդալ տվյալները։ Արդյո՞ք ֆայլում կան տվյալներ։',\n          invalidCsv: 'Հնարավոր չեղավ մշակել ֆայլը։ Արդյո՞ք այն վավեր CSV է։',\n          invalidJson: 'Հնարավոր չեղավ մշակել ֆայլը։ Արդյո՞ք այն վավեր Json է։',\n          jsonNotArray: 'Ներմուծված json ֆայլը պետք է պարունակի զանգված, կասեցվում է։'\n        }\n      });\n      return $delegate;\n    }]);\n  }]);\n})();\n\n(function () {\n  angular.module('ui.grid').config(['$provide', function($provide) {\n    $provide.decorator('i18nService', ['$delegate', function($delegate) {\n      $delegate.add('is', {\n        headerCell: {\n          aria: {\n            defaultFilterLabel: 'Sía fyrir dálk',\n            removeFilter: 'Fjarlægja síu',\n            columnMenuButtonLabel: 'Dálkavalmynd'\n          },\n          priority: 'Forgangsröðun:',\n          filterLabel: \"Sía fyrir dálka: \"\n        },\n        aggregate: {\n          label: 'hlutir'\n        },\n        groupPanel: {\n          description: 'Dragðu dálkhaus hingað til að flokka saman eftir þeim dálki.'\n        },\n        search: {\n          placeholder: 'Leita...',\n          showingItems: 'Sýni hluti:',\n          selectedItems: 'Valdir hlutir:',\n          totalItems: 'Hlutir alls:',\n          size: 'Stærð síðu:',\n          first: 'Fyrsta síða',\n          next: 'Næsta síða',\n          previous: 'Fyrri síða',\n          last: 'Síðasta síða'\n        },\n        menu: {\n          text: 'Veldu dálka:'\n        },\n        sort: {\n          ascending: 'Raða hækkandi',\n          descending: 'Raða lækkandi',\n          none: 'Engin röðun',\n          remove: 'Fjarlægja röðun'\n        },\n        column: {\n          hide: 'Fela dálk'\n        },\n        aggregation: {\n          count: 'fjöldi raða: ',\n          sum: 'summa: ',\n          avg: 'meðaltal: ',\n          min: 'lágmark: ',\n          max: 'hámark: '\n        },\n        pinning: {\n          pinLeft: 'Festa til vinstri',\n          pinRight: 'Festa til hægri',\n          unpin: 'Losa'\n        },\n        columnMenu: {\n          close: 'Loka'\n        },\n        gridMenu: {\n          aria: {\n            buttonLabel: 'Töflu valmynd'\n          },\n          columns: 'Dálkar:',\n          importerTitle: 'Flytja inn skjal',\n          exporterAllAsCsv: 'Flytja út gögn sem csv',\n          exporterVisibleAsCsv: 'Flytja út sýnileg gögn sem csv',\n          exporterSelectedAsCsv: 'Flytja út valin gögn sem csv',\n          exporterAllAsPdf: 'Flytja út öll gögn sem pdf',\n          exporterVisibleAsPdf: 'Flytja út sýnileg gögn sem pdf',\n          exporterSelectedAsPdf: 'Flytja út valin gögn sem pdf',\n          clearAllFilters: 'Hreinsa allar síur'\n        },\n        importer: {\n          noHeaders: 'Ekki hægt að vinna dálkanöfn úr skjalinu, er skjalið örugglega með haus?',\n          noObjects: 'Ekki hægt að vinna hluti úr skjalinu, voru örugglega gögn í skjalinu önnur en hausinn?',\n          invalidCsv: 'Tókst ekki að vinna skjal, er það örggulega gilt CSV?',\n          invalidJson: 'Tókst ekki að vinna skjal, er það örugglega gilt Json?',\n          jsonNotArray: 'Innflutt json skjal verður að innihalda fylki, hætti við.'\n        },\n        pagination: {\n          aria: {\n            pageToFirst: 'Fletta að fyrstu',\n            pageBack: 'Fletta til baka',\n            pageSelected: 'Valin síða',\n            pageForward: 'Fletta áfram',\n            pageToLast: 'Fletta að síðustu'\n          },\n          sizes: 'hlutir á síðu',\n          totalItems: 'hlutir',\n          through: 'gegnum',\n          of: 'af'\n        },\n        grouping: {\n          group: 'Flokka',\n          ungroup: 'Sundurliða',\n          aggregate_count: 'Fjöldi: ',\n          aggregate_sum: 'Summa: ',\n          aggregate_max: 'Hámark: ',\n          aggregate_min: 'Lágmark: ',\n          aggregate_avg: 'Meðaltal: ',\n          aggregate_remove: 'Fjarlægja: '\n        },\n        validate: {\n          error: 'Villa:',\n          minLength: 'Gildi ætti að vera a.m.k. THRESHOLD stafa langt.',\n          maxLength: 'Gildi ætti að vera í mesta lagi THRESHOLD stafa langt.',\n          required: 'Þarf að hafa gildi.'\n        }\n      });\n      return $delegate;\n    }]);\n  }]);\n})();\n\n(function () {\n  angular.module('ui.grid').config(['$provide', function($provide) {\n    $provide.decorator('i18nService', ['$delegate', function($delegate) {\n      $delegate.add('it', {\n        aggregate: {\n          label: 'elementi'\n        },\n        groupPanel: {\n          description: 'Trascina un\\'intestazione all\\'interno del gruppo della colonna.'\n        },\n        search: {\n          placeholder: 'Ricerca...',\n          showingItems: 'Mostra:',\n          selectedItems: 'Selezionati:',\n          totalItems: 'Totali:',\n          size: 'Tot Pagine:',\n          first: 'Prima',\n          next: 'Prossima',\n          previous: 'Precedente',\n          last: 'Ultima'\n        },\n        menu: {\n          text: 'Scegli le colonne:'\n        },\n        sort: {\n          ascending: 'Asc.',\n          descending: 'Desc.',\n          remove: 'Annulla ordinamento'\n        },\n        column: {\n          hide: 'Nascondi'\n        },\n        aggregation: {\n          count: 'righe totali: ',\n          sum: 'tot: ',\n          avg: 'media: ',\n          min: 'minimo: ',\n          max: 'massimo: '\n        },\n        pinning: {\n         pinLeft: 'Blocca a sx',\n          pinRight: 'Blocca a dx',\n          unpin: 'Blocca in alto'\n        },\n        gridMenu: {\n          columns: 'Colonne:',\n          importerTitle: 'Importa',\n          exporterAllAsCsv: 'Esporta tutti i dati in CSV',\n          exporterVisibleAsCsv: 'Esporta i dati visibili in CSV',\n          exporterSelectedAsCsv: 'Esporta i dati selezionati in CSV',\n          exporterAllAsPdf: 'Esporta tutti i dati in PDF',\n          exporterVisibleAsPdf: 'Esporta i dati visibili in PDF',\n          exporterSelectedAsPdf: 'Esporta i dati selezionati in PDF',\n          exporterAllAsExcel: 'Esporta tutti i dati in excel',\n          exporterVisibleAsExcel: 'Esporta i dati visibili in excel',\n          exporterSelectedAsExcel: 'Esporta i dati selezionati in excel',\n          clearAllFilters: 'Pulire tutti i filtri'\n        },\n        importer: {\n          noHeaders: 'Impossibile reperire i nomi delle colonne, sicuro che siano indicati all\\'interno del file?',\n          noObjects: 'Impossibile reperire gli oggetti, sicuro che siano indicati all\\'interno del file?',\n          invalidCsv: 'Impossibile elaborare il file, sicuro che sia un CSV?',\n          invalidJson: 'Impossibile elaborare il file, sicuro che sia un JSON valido?',\n          jsonNotArray: 'Errore! Il file JSON da importare deve contenere un array.'\n        },\n        pagination: {\n          aria: {\n            pageToFirst: 'Prima',\n            pageBack: 'Indietro',\n            pageSelected: 'Pagina selezionata',\n            pageForward: 'Avanti',\n            pageToLast: 'Ultima'\n          },\n          sizes: 'elementi per pagina',\n          totalItems: 'elementi',\n          through: 'a',\n          of: 'di'\n        },\n        grouping: {\n          group: 'Raggruppa',\n          ungroup: 'Separa',\n          aggregate_count: 'Agg: N. Elem.',\n          aggregate_sum: 'Agg: Somma',\n          aggregate_max: 'Agg: Massimo',\n          aggregate_min: 'Agg: Minimo',\n          aggregate_avg: 'Agg: Media',\n          aggregate_remove: 'Agg: Rimuovi'\n        },\n        validate: {\n          error: 'Errore:',\n          minLength: 'Lunghezza minima pari a THRESHOLD caratteri.',\n          maxLength: 'Lunghezza massima pari a THRESHOLD caratteri.',\n          required: 'Necessario inserire un valore.'\n        }\n      });\n      return $delegate;\n    }]);\n  }]);\n})();\n\n(function() {\n  angular.module('ui.grid').config(['$provide', function($provide) {\n    $provide.decorator('i18nService', ['$delegate', function($delegate) {\n      $delegate.add('ja', {\n        headerCell: {\n          aria: {\n            defaultFilterLabel: '列のフィルター',\n            removeFilter: 'フィルターの解除',\n            columnMenuButtonLabel: '列のメニュー'\n          },\n          priority: '優先度:',\n          filterLabel: \"列フィルター: \"\n        },\n        aggregate: {\n          label: '項目'\n        },\n        groupPanel: {\n          description: 'ここに列ヘッダをドラッグアンドドロップして、その列でグループ化します。'\n        },\n        search: {\n          placeholder: '検索...',\n          showingItems: '表示中の項目:',\n          selectedItems: '選択した項目:',\n          totalItems: '項目の総数:',\n          size: 'ページサイズ:',\n          first: '最初のページ',\n          next: '次のページ',\n          previous: '前のページ',\n          last: '前のページ'\n        },\n        menu: {\n          text: '列の選択:'\n        },\n        sort: {\n          ascending: '昇順に並べ替え',\n          descending: '降順に並べ替え',\n          none: '並べ替え無し',\n          remove: '並べ替えの解除'\n        },\n        column: {\n          hide: '列の非表示'\n        },\n        aggregation: {\n          count: '行数: ',\n          sum: '合計: ',\n          avg: '平均: ',\n          min: '最小: ',\n          max: '最大: '\n        },\n        pinning: {\n          pinLeft: '左に固定',\n          pinRight: '右に固定',\n          unpin: '固定解除'\n        },\n        columnMenu: {\n          close: '閉じる'\n        },\n        gridMenu: {\n          aria: {\n            buttonLabel: 'グリッドメニュー'\n          },\n          columns: '列の表示/非表示:',\n          importerTitle: 'ファイルのインポート',\n          exporterAllAsCsv: 'すべてのデータをCSV形式でエクスポート',\n          exporterVisibleAsCsv: '表示中のデータをCSV形式でエクスポート',\n          exporterSelectedAsCsv: '選択したデータをCSV形式でエクスポート',\n          exporterAllAsPdf: 'すべてのデータをPDF形式でエクスポート',\n          exporterVisibleAsPdf: '表示中のデータをPDF形式でエクスポート',\n          exporterSelectedAsPdf: '選択したデータをPDF形式でエクスポート',\n          clearAllFilters: 'すべてのフィルタをクリア'\n        },\n        importer: {\n          noHeaders: '列名を取得できません。ファイルにヘッダが含まれていることを確認してください。',\n          noObjects: 'オブジェクトを取得できません。ファイルにヘッダ以外のデータが含まれていることを確認してください。',\n          invalidCsv: 'ファイルを処理できません。ファイルが有効なCSV形式であることを確認してください。',\n          invalidJson: 'ファイルを処理できません。ファイルが有効なJSON形式であることを確認してください。',\n          jsonNotArray: 'インポートしたJSONファイルには配列が含まれている必要があります。処理を中止します。'\n        },\n        pagination: {\n          aria: {\n            pageToFirst: '最初のページ',\n            pageBack: '前のページ',\n            pageSelected: '現在のページ',\n            pageForward: '次のページ',\n            pageToLast: '最後のページ'\n          },\n          sizes: '項目/ページ',\n          totalItems: '項目',\n          through: 'から',\n          of: '項目/全'\n        },\n        grouping: {\n          group: 'グループ化',\n          ungroup: 'グループ化の解除',\n          aggregate_count: '集計表示: 行数',\n          aggregate_sum: '集計表示: 合計',\n          aggregate_max: '集計表示: 最大',\n          aggregate_min: '集計表示: 最小',\n          aggregate_avg: '集計表示: 平均',\n          aggregate_remove: '集計表示: 解除'\n        },\n        validate: {\n          error: 'Error:',\n          minLength: 'THRESHOLD 文字以上で入力してください。',\n          maxLength: 'THRESHOLD 文字以下で入力してください。',\n          required: '値が必要です。'\n        }\n      });\n      return $delegate;\n    }]);\n  }]);\n})();\n\n(function () {\n  angular.module('ui.grid').config(['$provide', function($provide) {\n    $provide.decorator('i18nService', ['$delegate', function($delegate) {\n      $delegate.add('ko', {\n        aggregate: {\n          label: '아이템'\n        },\n        groupPanel: {\n          description: '컬럼으로 그룹핑하기 위해서는 컬럼 헤더를 끌어 떨어뜨려 주세요.'\n        },\n        search: {\n          placeholder: '검색...',\n          showingItems: '항목 보여주기:',\n          selectedItems: '선택 항목:',\n          totalItems: '전체 항목:',\n          size: '페이지 크기:',\n          first: '첫번째 페이지',\n          next: '다음 페이지',\n          previous: '이전 페이지',\n          last: '마지막 페이지'\n        },\n        menu: {\n          text: '컬럼을 선택하세요:'\n        },\n        sort: {\n          ascending: '오름차순 정렬',\n          descending: '내림차순 정렬',\n          remove: '소팅 제거'\n        },\n        column: {\n          hide: '컬럼 제거'\n        },\n        aggregation: {\n          count: '전체 갯수: ',\n          sum: '전체: ',\n          avg: '평균: ',\n          min: '최소: ',\n          max: '최대: '\n        },\n        pinning: {\n         pinLeft: '왼쪽 핀',\n          pinRight: '오른쪽 핀',\n          unpin: '핀 제거'\n        },\n        gridMenu: {\n          columns: '컬럼:',\n          importerTitle: '파일 가져오기',\n          exporterAllAsCsv: 'csv로 모든 데이터 내보내기',\n          exporterVisibleAsCsv: 'csv로 보이는 데이터 내보내기',\n          exporterSelectedAsCsv: 'csv로 선택된 데이터 내보내기',\n          exporterAllAsPdf: 'pdf로 모든 데이터 내보내기',\n          exporterVisibleAsPdf: 'pdf로 보이는 데이터 내보내기',\n          exporterSelectedAsPdf: 'pdf로 선택 데이터 내보내기',\n          clearAllFilters: '모든 필터를 청소'\n        },\n        importer: {\n          noHeaders: '컬럼명이 지정되어 있지 않습니다. 파일에 헤더가 명시되어 있는지 확인해 주세요.',\n          noObjects: '데이터가 지정되어 있지 않습니다. 데이터가 파일에 있는지 확인해 주세요.',\n          invalidCsv: '파일을 처리할 수 없습니다. 올바른 csv인지 확인해 주세요.',\n          invalidJson: '파일을 처리할 수 없습니다. 올바른 json인지 확인해 주세요.',\n          jsonNotArray: 'json 파일은 배열을 포함해야 합니다.'\n        },\n        pagination: {\n          sizes: '페이지당 항목',\n          totalItems: '전체 항목'\n        }\n      });\n      return $delegate;\n    }]);\n  }]);\n})();\n\n(function () {\n  angular.module('ui.grid').config(['$provide', function($provide) {\n    $provide.decorator('i18nService', ['$delegate', function($delegate) {\n      $delegate.add('nl', {\n        aggregate: {\n          label: 'items'\n        },\n        groupPanel: {\n          description: 'Sleep hier een kolomnaam heen om op te groeperen.'\n        },\n        search: {\n          placeholder: 'Zoeken...',\n          showingItems: 'Getoonde items:',\n          selectedItems: 'Geselecteerde items:',\n          totalItems: 'Totaal aantal items:',\n          size: 'Items per pagina:',\n          first: 'Eerste pagina',\n          next: 'Volgende pagina',\n          previous: 'Vorige pagina',\n          last: 'Laatste pagina'\n        },\n        menu: {\n          text: 'Kies kolommen:'\n        },\n        sort: {\n          ascending: 'Sorteer oplopend',\n          descending: 'Sorteer aflopend',\n          remove: 'Verwijder sortering'\n        },\n        column: {\n          hide: 'Verberg kolom'\n        },\n        aggregation: {\n          count: 'Aantal rijen: ',\n          sum: 'Som: ',\n          avg: 'Gemiddelde: ',\n          min: 'Min: ',\n          max: 'Max: '\n        },\n        pinning: {\n          pinLeft: 'Zet links vast',\n          pinRight: 'Zet rechts vast',\n          unpin: 'Maak los'\n        },\n        gridMenu: {\n          columns: 'Kolommen:',\n          importerTitle: 'Importeer bestand',\n          exporterAllAsCsv: 'Exporteer alle data als csv',\n          exporterVisibleAsCsv: 'Exporteer zichtbare data als csv',\n          exporterSelectedAsCsv: 'Exporteer geselecteerde data als csv',\n          exporterAllAsPdf: 'Exporteer alle data als pdf',\n          exporterVisibleAsPdf: 'Exporteer zichtbare data als pdf',\n          exporterSelectedAsPdf: 'Exporteer geselecteerde data als pdf',\n          exporterAllAsExcel: 'Exporteer alle data als excel',\n          exporterVisibleAsExcel: 'Exporteer zichtbare data als excel',\n          exporterSelectedAsExcel: 'Exporteer alle data als excel',\n          clearAllFilters: 'Reinig alle filters'\n        },\n        importer: {\n          noHeaders: 'Kolomnamen kunnen niet worden afgeleid. Heeft het bestand een header?',\n          noObjects: 'Objecten kunnen niet worden afgeleid. Bevat het bestand data naast de headers?',\n          invalidCsv: 'Het bestand kan niet verwerkt worden. Is het een valide csv bestand?',\n          invalidJson: 'Het bestand kan niet verwerkt worden. Is het valide json?',\n          jsonNotArray: 'Het json bestand moet een array bevatten. De actie wordt geannuleerd.'\n        },\n        pagination: {\n            sizes: 'items per pagina',\n            totalItems: 'items',\n            of: 'van de'\n        },\n        grouping: {\n            group: 'Groepeer',\n            ungroup: 'Groepering opheffen',\n            aggregate_count: 'Agg: Aantal',\n            aggregate_sum: 'Agg: Som',\n            aggregate_max: 'Agg: Max',\n            aggregate_min: 'Agg: Min',\n            aggregate_avg: 'Agg: Gem',\n            aggregate_remove: 'Agg: Verwijder'\n        }\n      });\n      return $delegate;\n    }]);\n  }]);\n})();\n\n(function () {\n  angular.module('ui.grid').config(['$provide', function($provide) {\n    $provide.decorator('i18nService', ['$delegate', function($delegate) {\n      $delegate.add('no', {\n        headerCell: {\n          aria: {\n            defaultFilterLabel: 'Filter for kolonne',\n            removeFilter: 'Fjern filter',\n            columnMenuButtonLabel: 'Kolonnemeny'\n          },\n          priority: 'Prioritet:',\n          filterLabel: \"Filter for kolonne: \"\n        },\n        aggregate: {\n          label: 'elementer'\n        },\n        groupPanel: {\n          description: 'Trekk en kolonneoverskrift hit og slipp den for å gruppere etter den kolonnen.'\n        },\n        search: {\n          placeholder: 'Søk...',\n          showingItems: 'Viste elementer:',\n          selectedItems: 'Valgte elementer:',\n          totalItems: 'Antall elementer:',\n          size: 'Sidestørrelse:',\n          first: 'Første side',\n          next: 'Neste side',\n          previous: 'Forrige side',\n          last: 'Siste side'\n        },\n        menu: {\n          text: 'Velg kolonner:'\n        },\n        sort: {\n          ascending: 'Sortere stigende',\n          descending: 'Sortere fallende',\n          none: 'Ingen sortering',\n          remove: 'Fjern sortering'\n        },\n        column: {\n          hide: 'Skjul kolonne'\n        },\n        aggregation: {\n          count: 'antall rader: ',\n          sum: 'total: ',\n          avg: 'gjennomsnitt: ',\n          min: 'minimum: ',\n          max: 'maksimum: '\n        },\n        pinning: {\n          pinLeft: 'Fest til venstre',\n          pinRight: 'Fest til høyre',\n          unpin: 'Løsne'\n        },\n        columnMenu: {\n          close: 'Lukk'\n        },\n        gridMenu: {\n          aria: {\n            buttonLabel: 'Grid Menu'\n          },\n          columns: 'Kolonner:',\n          importerTitle: 'Importer fil',\n          exporterAllAsCsv: 'Eksporter alle data som csv',\n          exporterVisibleAsCsv: 'Eksporter synlige data som csv',\n          exporterSelectedAsCsv: 'Eksporter utvalgte data som csv',\n          exporterAllAsPdf: 'Eksporter alle data som pdf',\n          exporterVisibleAsPdf: 'Eksporter synlige data som pdf',\n          exporterSelectedAsPdf: 'Eksporter utvalgte data som pdf',\n          exporterAllAsExcel: 'Eksporter alle data som excel',\n          exporterVisibleAsExcel: 'Eksporter synlige data som excel',\n          exporterSelectedAsExcel: 'Eksporter utvalgte data som excel',\n          clearAllFilters: 'Clear all filters'\n        },\n        importer: {\n          noHeaders: 'Kolonnenavn kunne ikke avledes. Har filen en overskrift?',\n          noObjects: 'Objekter kunne ikke avledes. Er der andre data i filen enn overskriften?',\n          invalidCsv: 'Filen kunne ikke behandles. Er den gyldig CSV?',\n          invalidJson: 'Filen kunne ikke behandles. Er den gyldig JSON?',\n          jsonNotArray: 'Importert JSON-fil må inneholde en liste. Avbryter.'\n        },\n        pagination: {\n          aria: {\n            pageToFirst: 'Gå til første side',\n            pageBack: 'Gå til forrige side',\n            pageSelected: 'Valgte side',\n            pageForward: 'Gå til neste side',\n            pageToLast: 'Gå til siste side'\n          },\n          sizes: 'elementer per side',\n          totalItems: 'elementer',\n          through: 'til',\n          of: 'av'\n        },\n        grouping: {\n          group: 'Gruppere',\n          ungroup: 'Fjerne gruppering',\n          aggregate_count: 'Agr: Antall',\n          aggregate_sum: 'Agr: Sum',\n          aggregate_max: 'Agr: Maksimum',\n          aggregate_min: 'Agr: Minimum',\n          aggregate_avg: 'Agr: Gjennomsnitt',\n          aggregate_remove: 'Agr: Fjern'\n        }\n      });\n      return $delegate;\n    }]);\n  }]);\n})();\n\n(function () {\n  angular.module('ui.grid').config(['$provide', function($provide) {\n    $provide.decorator('i18nService', ['$delegate', function($delegate) {\n      $delegate.add('pl', {\n        headerCell: {\n          aria: {\n            defaultFilterLabel: 'Filtr dla kolumny',\n            removeFilter: 'Usuń filtr',\n            columnMenuButtonLabel: 'Opcje kolumny',\n            column: 'Kolumna'\n          },\n          priority: 'Priorytet:',\n          filterLabel: \"Filtr dla kolumny: \"\n        },\n        aggregate: {\n          label: 'pozycji'\n        },\n        groupPanel: {\n          description: 'Przeciągnij nagłówek kolumny tutaj, aby pogrupować według niej.'\n        },\n        search: {\n          aria: {\n            selected: 'Wiersz zaznaczony',\n            notSelected: 'Wiersz niezaznaczony'\n          },\n          placeholder: 'Szukaj...',\n          showingItems: 'Widoczne pozycje:',\n          selectedItems: 'Zaznaczone pozycje:',\n          totalItems: 'Wszystkich pozycji:',\n          size: 'Rozmiar strony:',\n          first: 'Pierwsza strona',\n          next: 'Następna strona',\n          previous: 'Poprzednia strona',\n          last: 'Ostatnia strona'\n        },\n        menu: {\n          text: 'Wybierz kolumny:'\n        },\n        sort: {\n          ascending: 'Sortuj rosnąco',\n          descending: 'Sortuj malejąco',\n          none: 'Brak sortowania',\n          remove: 'Wyłącz sortowanie'\n        },\n        column: {\n          hide: 'Ukryj kolumnę'\n        },\n        aggregation: {\n          count: 'Razem pozycji: ',\n            sum: 'Razem: ',\n            avg: 'Średnia: ',\n            min: 'Min: ',\n            max: 'Max: '\n        },\n        pinning: {\n          pinLeft: 'Przypnij do lewej',\n          pinRight: 'Przypnij do prawej',\n          unpin: 'Odepnij'\n        },\n        columnMenu: {\n          close: 'Zamknij'\n        },\n        gridMenu: {\n          aria: {\n            buttonLabel: 'Opcje tabeli'\n          },\n          columns: 'Kolumny:',\n          importerTitle: 'Importuj plik',\n          exporterAllAsCsv: 'Eksportuj wszystkie dane do csv',\n          exporterVisibleAsCsv: 'Eksportuj widoczne dane do csv',\n          exporterSelectedAsCsv: 'Eksportuj zaznaczone dane do csv',\n          exporterAllAsPdf: 'Eksportuj wszystkie dane do pdf',\n          exporterVisibleAsPdf: 'Eksportuj widoczne dane do pdf',\n          exporterSelectedAsPdf: 'Eksportuj zaznaczone dane do pdf',\n          exporterAllAsExcel: 'Eksportuj wszystkie dane do excel',\n          exporterVisibleAsExcel: 'Eksportuj widoczne dane do excel',\n          exporterSelectedAsExcel: 'Eksportuj zaznaczone dane do excel',\n          clearAllFilters: 'Wyczyść filtry'\n        },\n        importer: {\n          noHeaders: 'Nie udało się wczytać nazw kolumn. Czy plik posiada nagłówek?',\n          noObjects: 'Nie udalo się wczytać pozycji. Czy plik zawiera dane?',\n          invalidCsv: 'Nie udało się przetworzyć pliku. Czy to prawidłowy plik CSV?',\n          invalidJson: 'Nie udało się przetworzyć pliku. Czy to prawidłowy plik JSON?',\n          jsonNotArray: 'Importowany plik JSON musi zawierać tablicę. Importowanie przerwane.'\n        },\n        pagination: {\n          aria: {\n            pageToFirst: 'Pierwsza strona',\n            pageBack: 'Poprzednia strona',\n            pageSelected: 'Wybrana strona',\n            pageForward: 'Następna strona',\n            pageToLast: 'Ostatnia strona'\n          },\n          sizes: 'pozycji na stronę',\n          totalItems: 'pozycji',\n          through: 'do',\n          of: 'z'\n        },\n        grouping: {\n          group: 'Grupuj',\n          ungroup: 'Rozgrupuj',\n          aggregate_count: 'Zbiorczo: Razem',\n          aggregate_sum: 'Zbiorczo: Suma',\n          aggregate_max: 'Zbiorczo: Max',\n          aggregate_min: 'Zbiorczo: Min',\n          aggregate_avg: 'Zbiorczo: Średnia',\n          aggregate_remove: 'Zbiorczo: Usuń'\n        },\n        validate: {\n          error: 'Błąd:',\n          minLength: 'Wartość powinna składać się z co najmniej THRESHOLD znaków.',\n          maxLength: 'Wartość powinna składać się z przynajmniej THRESHOLD znaków.',\n          required: 'Wartość jest wymagana.'\n        }\n      });\n      return $delegate;\n    }]);\n  }]);\n})();\n\n(function () {\n  angular.module('ui.grid').config(['$provide', function($provide) {\n    $provide.decorator('i18nService', ['$delegate', function($delegate) {\n      $delegate.add('pt-br', {\n        headerCell: {\n          aria: {\n            defaultFilterLabel: 'Filtro por coluna',\n            removeFilter: 'Remover filtro',\n            columnMenuButtonLabel: 'Menu coluna'\n          },\n          priority: 'Prioridade:',\n          filterLabel: \"Filtro por coluna: \"\n        },\n        aggregate: {\n          label: 'itens'\n        },\n        groupPanel: {\n          description: 'Arraste e solte uma coluna aqui para agrupar por essa coluna'\n        },\n        search: {\n          placeholder: 'Procurar...',\n          showingItems: 'Mostrando os Itens:',\n          selectedItems: 'Items Selecionados:',\n          totalItems: 'Total de Itens:',\n          size: 'Tamanho da Página:',\n          first: 'Primeira Página',\n          next: 'Próxima Página',\n          previous: 'Página Anterior',\n          last: 'Última Página'\n        },\n        menu: {\n          text: 'Selecione as colunas:'\n        },\n        sort: {\n          ascending: 'Ordenar Ascendente',\n          descending: 'Ordenar Descendente',\n          none: 'Nenhuma Ordem',\n          remove: 'Remover Ordenação'\n        },\n        column: {\n          hide: 'Esconder coluna'\n        },\n        aggregation: {\n          count: 'total de linhas: ',\n          sum: 'total: ',\n          avg: 'med: ',\n          min: 'min: ',\n          max: 'max: '\n        },\n        pinning: {\n          pinLeft: 'Fixar Esquerda',\n          pinRight: 'Fixar Direita',\n          unpin: 'Desprender'\n        },\n        columnMenu: {\n          close: 'Fechar'\n        },\n        gridMenu: {\n          aria: {\n            buttonLabel: 'Menu Grid'\n          },\n          columns: 'Colunas:',\n          importerTitle: 'Importar arquivo',\n          exporterAllAsCsv: 'Exportar todos os dados como csv',\n          exporterVisibleAsCsv: 'Exportar dados visíveis como csv',\n          exporterSelectedAsCsv: 'Exportar dados selecionados como csv',\n          exporterAllAsPdf: 'Exportar todos os dados como pdf',\n          exporterVisibleAsPdf: 'Exportar dados visíveis como pdf',\n          exporterSelectedAsPdf: 'Exportar dados selecionados como pdf',\n          exporterAllAsExcel: 'Exportar todos os dados como excel',\n          exporterVisibleAsExcel: 'Exportar dados visíveis como excel',\n          clearAllFilters: 'Limpar todos os filtros'\n        },\n        importer: {\n          noHeaders: 'Nomes de colunas não puderam ser derivados. O arquivo tem um cabeçalho?',\n          noObjects: 'Objetos não puderam ser derivados. Havia dados no arquivo, além dos cabeçalhos?',\n          invalidCsv: 'Arquivo não pode ser processado. É um CSV válido?',\n          invalidJson: 'Arquivo não pode ser processado. É um Json válido?',\n          jsonNotArray: 'Arquivo json importado tem que conter um array. Abortando.'\n        },\n        pagination: {\n          aria: {\n            pageToFirst: 'Primeira página',\n            pageBack: 'Página anterior',\n            pageSelected: 'Página Selecionada',\n            pageForward: 'Proxima',\n            pageToLast: 'Anterior'\n          },\n          sizes: 'itens por página',\n          totalItems: 'itens',\n          through: 'através dos',\n          of: 'de'\n        },\n        grouping: {\n          group: 'Agrupar',\n          ungroup: 'Desagrupar',\n          aggregate_count: 'Agr: Contar',\n          aggregate_sum: 'Agr: Soma',\n          aggregate_max: 'Agr: Max',\n          aggregate_min: 'Agr: Min',\n          aggregate_avg: 'Agr: Med',\n          aggregate_remove: 'Agr: Remover'\n        }\n      });\n      return $delegate;\n    }]);\n}]);\n})();\n\n(function () {\n  angular.module('ui.grid').config(['$provide', function($provide) {\n    $provide.decorator('i18nService', ['$delegate', function($delegate) {\n      $delegate.add('pt', {\n        headerCell: {\n          aria: {\n            defaultFilterLabel: 'Filtro por coluna',\n            removeFilter: 'Remover filtro',\n            columnMenuButtonLabel: 'Menu coluna'\n          },\n          priority: 'Prioridade:',\n          filterLabel: \"Filtro por coluna: \"\n        },\n        aggregate: {\n          label: 'itens'\n        },\n        groupPanel: {\n          description: 'Arraste e solte uma coluna aqui para agrupar por essa coluna'\n        },\n        search: {\n          placeholder: 'Procurar...',\n          showingItems: 'Mostrando os Itens:',\n          selectedItems: 'Itens Selecionados:',\n          totalItems: 'Total de Itens:',\n          size: 'Tamanho da Página:',\n          first: 'Primeira Página',\n          next: 'Próxima Página',\n          previous: 'Página Anterior',\n          last: 'Última Página'\n        },\n        menu: {\n          text: 'Selecione as colunas:'\n        },\n        sort: {\n          ascending: 'Ordenar Ascendente',\n          descending: 'Ordenar Descendente',\n          none: 'Nenhuma Ordem',\n          remove: 'Remover Ordenação'\n        },\n        column: {\n          hide: 'Esconder coluna'\n        },\n        aggregation: {\n          count: 'total de linhas: ',\n          sum: 'total: ',\n          avg: 'med: ',\n          min: 'min: ',\n          max: 'max: '\n        },\n        pinning: {\n          pinLeft: 'Fixar Esquerda',\n          pinRight: 'Fixar Direita',\n          unpin: 'Desprender'\n        },\n        columnMenu: {\n          close: 'Fechar'\n        },\n        gridMenu: {\n          aria: {\n            buttonLabel: 'Menu Grid'\n          },\n          columns: 'Colunas:',\n          importerTitle: 'Importar ficheiro',\n          exporterAllAsCsv: 'Exportar todos os dados como csv',\n          exporterVisibleAsCsv: 'Exportar dados visíveis como csv',\n          exporterSelectedAsCsv: 'Exportar dados selecionados como csv',\n          exporterAllAsPdf: 'Exportar todos os dados como pdf',\n          exporterVisibleAsPdf: 'Exportar dados visíveis como pdf',\n          exporterSelectedAsPdf: 'Exportar dados selecionados como pdf',\n          clearAllFilters: 'Limpar todos os filtros'\n        },\n        importer: {\n          noHeaders: 'Nomes de colunas não puderam ser derivados. O ficheiro tem um cabeçalho?',\n          noObjects: 'Objetos não puderam ser derivados. Havia dados no ficheiro, além dos cabeçalhos?',\n          invalidCsv: 'Ficheiro não pode ser processado. É um CSV válido?',\n          invalidJson: 'Ficheiro não pode ser processado. É um Json válido?',\n          jsonNotArray: 'Ficheiro json importado tem que conter um array. Interrompendo.'\n        },\n        pagination: {\n          aria: {\n            pageToFirst: 'Primeira página',\n            pageBack: 'Página anterior',\n            pageSelected: 'Página Selecionada',\n            pageForward: 'Próxima',\n            pageToLast: 'Anterior'\n          },\n          sizes: 'itens por página',\n          totalItems: 'itens',\n          through: 'a',\n          of: 'de'\n        },\n        grouping: {\n          group: 'Agrupar',\n          ungroup: 'Desagrupar',\n          aggregate_count: 'Agr: Contar',\n          aggregate_sum: 'Agr: Soma',\n          aggregate_max: 'Agr: Max',\n          aggregate_min: 'Agr: Min',\n          aggregate_avg: 'Agr: Med',\n          aggregate_remove: 'Agr: Remover'\n        }\n      });\n      return $delegate;\n    }]);\n}]);\n})();\n\n(function () {\n  angular.module('ui.grid').config(['$provide', function($provide) {\n    $provide.decorator('i18nService', ['$delegate', function($delegate) {\n      $delegate.add('ro', {\n        headerCell: {\n          aria: {\n            defaultFilterLabel: 'Filtru pentru coloana',\n            removeFilter: 'Sterge filtru',\n            columnMenuButtonLabel: 'Column Menu'\n          },\n          priority: 'Prioritate:',\n          filterLabel: \"Filtru pentru coloana:\"\n        },\n        aggregate: {\n          label: 'Elemente'\n        },\n        groupPanel: {\n          description: 'Trage un cap de coloana aici pentru a grupa elementele dupa coloana respectiva'\n        },\n        search: {\n          placeholder: 'Cauta...',\n          showingItems: 'Arata elementele:',\n          selectedItems: 'Elementele selectate:',\n          totalItems: 'Total elemente:',\n          size: 'Marime pagina:',\n          first: 'Prima pagina',\n          next: 'Pagina urmatoare',\n          previous: 'Pagina anterioara',\n          last: 'Ultima pagina'\n        },\n        menu: {\n          text: 'Alege coloane:'\n        },\n        sort: {\n          ascending: 'Ordoneaza crescator',\n          descending: 'Ordoneaza descrescator',\n          none: 'Fara ordonare',\n          remove: 'Sterge ordonarea'\n        },\n        column: {\n          hide: 'Ascunde coloana'\n        },\n        aggregation: {\n          count: 'total linii: ',\n          sum: 'total: ',\n          avg: 'medie: ',\n          min: 'min: ',\n          max: 'max: '\n        },\n        pinning: {\n          pinLeft: 'Pin la stanga',\n          pinRight: 'Pin la dreapta',\n          unpin: 'Sterge pinul'\n        },\n        columnMenu: {\n          close: 'Inchide'\n        },\n        gridMenu: {\n          aria: {\n            buttonLabel: 'Grid Menu'\n          },\n          columns: 'Coloane:',\n          importerTitle: 'Incarca fisier',\n          exporterAllAsCsv: 'Exporta toate datele ca csv',\n          exporterVisibleAsCsv: 'Exporta datele vizibile ca csv',\n          exporterSelectedAsCsv: 'Exporta datele selectate ca csv',\n          exporterAllAsPdf: 'Exporta toate datele ca pdf',\n          exporterVisibleAsPdf: 'Exporta datele vizibile ca pdf',\n          exporterSelectedAsPdf: 'Exporta datele selectate ca csv pdf',\n          clearAllFilters: 'Sterge toate filtrele'\n        },\n        importer: {\n          noHeaders: 'Numele coloanelor nu a putut fi incarcat, acest fisier are un header?',\n          noObjects: 'Datele nu au putut fi incarcate, exista date in fisier in afara numelor de coloane?',\n          invalidCsv: 'Fisierul nu a putut fi procesat, ati incarcat un CSV valid ?',\n          invalidJson: 'Fisierul nu a putut fi procesat, ati incarcat un Json valid?',\n          jsonNotArray: 'Json-ul incarcat trebuie sa contina un array, inchidere.'\n        },\n        pagination: {\n          aria: {\n            pageToFirst: 'Prima pagina',\n            pageBack: 'O pagina inapoi',\n            pageSelected: 'Pagina selectata',\n            pageForward: 'O pagina inainte',\n            pageToLast: 'Ultima pagina'\n          },\n          sizes: 'Elemente per pagina',\n          totalItems: 'elemente',\n          through: 'prin',\n          of: 'of'\n        },\n        grouping: {\n          group: 'Grupeaza',\n          ungroup: 'Opreste gruparea',\n          aggregate_count: 'Agg: Count',\n          aggregate_sum: 'Agg: Sum',\n          aggregate_max: 'Agg: Max',\n          aggregate_min: 'Agg: Min',\n          aggregate_avg: 'Agg: Avg',\n          aggregate_remove: 'Agg: Remove'\n        }\n      });\n      return $delegate;\n    }]);\n  }]);\n})();\n\n(function () {\n  angular.module('ui.grid').config(['$provide', function($provide) {\n    $provide.decorator('i18nService', ['$delegate', function($delegate) {\n      $delegate.add('ru', {\n        headerCell: {\n          aria: {\n            defaultFilterLabel: 'Фильтр столбца',\n            removeFilter: 'Удалить фильтр',\n            columnMenuButtonLabel: 'Меню столбца'\n          },\n          priority: 'Приоритет:',\n          filterLabel: \"Фильтр столбца: \"\n        },\n        aggregate: {\n          label: 'элементы'\n        },\n        groupPanel: {\n          description: 'Для группировки по столбцу перетащите сюда его название.'\n        },\n        search: {\n          placeholder: 'Поиск...',\n          showingItems: 'Показать элементы:',\n          selectedItems: 'Выбранные элементы:',\n          totalItems: 'Всего элементов:',\n          size: 'Размер страницы:',\n          first: 'Первая страница',\n          next: 'Следующая страница',\n          previous: 'Предыдущая страница',\n          last: 'Последняя страница'\n        },\n        menu: {\n          text: 'Выбрать столбцы:'\n        },\n        sort: {\n          ascending: 'По возрастанию',\n          descending: 'По убыванию',\n          none: 'Без сортировки',\n          remove: 'Убрать сортировку'\n        },\n        column: {\n          hide: 'Спрятать столбец'\n        },\n        aggregation: {\n          count: 'всего строк: ',\n          sum: 'итого: ',\n          avg: 'среднее: ',\n          min: 'мин: ',\n          max: 'макс: '\n        },\n\t\t\t\tpinning: {\n\t\t\t\t\tpinLeft: 'Закрепить слева',\n\t\t\t\t\tpinRight: 'Закрепить справа',\n\t\t\t\t\tunpin: 'Открепить'\n\t\t\t\t},\n        columnMenu: {\n          close: 'Закрыть'\n        },\n        gridMenu: {\n          aria: {\n            buttonLabel: 'Меню'\n          },\n          columns: 'Столбцы:',\n          importerTitle: 'Импортировать файл',\n          exporterAllAsCsv: 'Экспортировать всё в CSV',\n          exporterVisibleAsCsv: 'Экспортировать видимые данные в CSV',\n          exporterSelectedAsCsv: 'Экспортировать выбранные данные в CSV',\n          exporterAllAsPdf: 'Экспортировать всё в PDF',\n          exporterVisibleAsPdf: 'Экспортировать видимые данные в PDF',\n          exporterSelectedAsPdf: 'Экспортировать выбранные данные в PDF',\n          clearAllFilters: 'Очистите все фильтры'\n        },\n        importer: {\n          noHeaders: 'Не удалось получить названия столбцов, есть ли в файле заголовок?',\n          noObjects: 'Не удалось получить данные, есть ли в файле строки кроме заголовка?',\n          invalidCsv: 'Не удалось обработать файл, это правильный CSV-файл?',\n          invalidJson: 'Не удалось обработать файл, это правильный JSON?',\n          jsonNotArray: 'Импортируемый JSON-файл должен содержать массив, операция отменена.'\n        },\n        pagination: {\n          aria: {\n            pageToFirst: 'Первая страница',\n            pageBack: 'Предыдущая страница',\n            pageSelected: 'Выбранная страница',\n            pageForward: 'Следующая страница',\n            pageToLast: 'Последняя страница'\n          },\n          sizes: 'строк на страницу',\n          totalItems: 'строк',\n          through: 'по',\n          of: 'из'\n        },\n        grouping: {\n          group: 'Группировать',\n          ungroup: 'Разгруппировать',\n          aggregate_count: 'Группировать: Count',\n          aggregate_sum: 'Для группы: Сумма',\n          aggregate_max: 'Для группы: Максимум',\n          aggregate_min: 'Для группы: Минимум',\n          aggregate_avg: 'Для группы: Среднее',\n          aggregate_remove: 'Для группы: Пусто'\n        }\n      });\n      return $delegate;\n    }]);\n  }]);\n})();\n\n(function () {\n  angular.module('ui.grid').config(['$provide', function($provide) {\n    $provide.decorator('i18nService', ['$delegate', function($delegate) {\n      $delegate.add('sk', {\n        aggregate: {\n          label: 'items'\n        },\n        groupPanel: {\n          description: 'Pretiahni sem názov stĺpca pre zoskupenie podľa toho stĺpca.'\n        },\n        search: {\n          placeholder: 'Hľadaj...',\n          showingItems: 'Zobrazujem položky:',\n          selectedItems: 'Vybraté položky:',\n          totalItems: 'Počet položiek:',\n          size: 'Počet:',\n          first: 'Prvá strana',\n          next: 'Ďalšia strana',\n          previous: 'Predchádzajúca strana',\n          last: 'Posledná strana'\n        },\n        menu: {\n          text: 'Vyberte stĺpce:'\n        },\n        sort: {\n          ascending: 'Zotriediť vzostupne',\n          descending: 'Zotriediť zostupne',\n          remove: 'Vymazať triedenie'\n        },\n        aggregation: {\n          count: 'total rows: ',\n          sum: 'total: ',\n          avg: 'avg: ',\n          min: 'min: ',\n          max: 'max: '\n        },\n        gridMenu: {\n          columns: 'Columns:',\n          importerTitle: 'Import file',\n          exporterAllAsCsv: 'Export all data as csv',\n          exporterVisibleAsCsv: 'Export visible data as csv',\n          exporterSelectedAsCsv: 'Export selected data as csv',\n          exporterAllAsPdf: 'Export all data as pdf',\n          exporterVisibleAsPdf: 'Export visible data as pdf',\n          exporterSelectedAsPdf: 'Export selected data as pdf',\n          exporterAllAsExcel: 'Export all data as excel',\n          exporterVisibleAsExcel: 'Export visible data as excel',\n          exporterSelectedAsExcel: 'Export selected data as excel',\n          clearAllFilters: 'Clear all filters'\n        },\n        importer: {\n          noHeaders: 'Column names were unable to be derived, does the file have a header?',\n          noObjects: 'Objects were not able to be derived, was there data in the file other than headers?',\n          invalidCsv: 'File was unable to be processed, is it valid CSV?',\n          invalidJson: 'File was unable to be processed, is it valid Json?',\n          jsonNotArray: 'Imported json file must contain an array, aborting.'\n        }\n      });\n      return $delegate;\n    }]);\n  }]);\n})();\n\n(function () {\n  angular.module('ui.grid').config(['$provide', function($provide) {\n    $provide.decorator('i18nService', ['$delegate', function($delegate) {\n      $delegate.add('sv', {\n        aggregate: {\n          label: 'Artiklar'\n        },\n        groupPanel: {\n          description: 'Dra en kolumnrubrik hit och släpp den för att gruppera efter den kolumnen.'\n        },\n        search: {\n          placeholder: 'Sök...',\n          showingItems: 'Visar artiklar:',\n          selectedItems: 'Valda artiklar:',\n          totalItems: 'Antal artiklar:',\n          size: 'Sidstorlek:',\n          first: 'Första sidan',\n          next: 'Nästa sida',\n          previous: 'Föregående sida',\n          last: 'Sista sidan'\n        },\n        menu: {\n          text: 'Välj kolumner:'\n        },\n        sort: {\n          ascending: 'Sortera stigande',\n          descending: 'Sortera fallande',\n          remove: 'Inaktivera sortering'\n        },\n        column: {\n          hide: 'Göm kolumn'\n        },\n        aggregation: {\n          count: 'Antal rader: ',\n          sum: 'Summa: ',\n          avg: 'Genomsnitt: ',\n          min: 'Min: ',\n          max: 'Max: '\n        },\n        pinning: {\n          pinLeft: 'Fäst vänster',\n          pinRight: 'Fäst höger',\n          unpin: 'Lösgör'\n        },\n        gridMenu: {\n          columns: 'Kolumner:',\n          importerTitle: 'Importera fil',\n          exporterAllAsCsv: 'Exportera all data som CSV',\n          exporterVisibleAsCsv: 'Exportera synlig data som CSV',\n          exporterSelectedAsCsv: 'Exportera markerad data som CSV',\n          exporterAllAsPdf: 'Exportera all data som PDF',\n          exporterVisibleAsPdf: 'Exportera synlig data som PDF',\n          exporterSelectedAsPdf: 'Exportera markerad data som PDF',\n          clearAllFilters: 'Rengör alla filter'\n        },\n        importer: {\n          noHeaders: 'Kolumnnamn kunde inte härledas. Har filen ett sidhuvud?',\n          noObjects: 'Objekt kunde inte härledas. Har filen data undantaget sidhuvud?',\n          invalidCsv: 'Filen kunde inte behandlas, är den en giltig CSV?',\n          invalidJson: 'Filen kunde inte behandlas, är den en giltig JSON?',\n          jsonNotArray: 'Importerad JSON-fil måste innehålla ett fält. Import avbruten.'\n        },\n        pagination: {\n          sizes: 'Artiklar per sida',\n          totalItems: 'Artiklar'\n        }\n      });\n      return $delegate;\n    }]);\n  }]);\n})();\n\n(function () {\n  angular.module('ui.grid').config(['$provide', function($provide) {\n    $provide.decorator('i18nService', ['$delegate', function($delegate) {\n      $delegate.add('ta', {\n        aggregate: {\n          label: 'உருப்படிகள்'\n        },\n        groupPanel: {\n          description: 'ஒரு பத்தியை குழுவாக அமைக்க அப்பத்தியின் தலைப்பை இங்கே  இழுத்து வரவும் '\n        },\n        search: {\n          placeholder: 'தேடல் ...',\n          showingItems: 'உருப்படிகளை காண்பித்தல்:',\n          selectedItems: 'தேர்ந்தெடுக்கப்பட்ட  உருப்படிகள்:',\n          totalItems: 'மொத்த உருப்படிகள்:',\n          size: 'பக்க அளவு: ',\n          first: 'முதல் பக்கம்',\n          next: 'அடுத்த பக்கம்',\n          previous: 'முந்தைய பக்கம் ',\n          last: 'இறுதி பக்கம்'\n        },\n        menu: {\n          text: 'பத்திகளை தேர்ந்தெடு:'\n        },\n        sort: {\n          ascending: 'மேலிருந்து கீழாக',\n          descending: 'கீழிருந்து மேலாக',\n          remove: 'வரிசையை நீக்கு'\n        },\n        column: {\n          hide: 'பத்தியை மறைத்து வை '\n        },\n        aggregation: {\n          count: 'மொத்த வரிகள்:',\n          sum: 'மொத்தம்: ',\n          avg: 'சராசரி: ',\n          min: 'குறைந்தபட்ச: ',\n          max: 'அதிகபட்ச: '\n        },\n        pinning: {\n         pinLeft: 'இடதுபுறமாக தைக்க ',\n          pinRight: 'வலதுபுறமாக தைக்க',\n          unpin: 'பிரி'\n        },\n        gridMenu: {\n          columns: 'பத்திகள்:',\n          importerTitle: 'கோப்பு : படித்தல்',\n          exporterAllAsCsv: 'எல்லா தரவுகளையும் கோப்பாக்கு: csv',\n          exporterVisibleAsCsv: 'இருக்கும் தரவுகளை கோப்பாக்கு: csv',\n          exporterSelectedAsCsv: 'தேர்ந்தெடுத்த தரவுகளை கோப்பாக்கு: csv',\n          exporterAllAsPdf: 'எல்லா தரவுகளையும் கோப்பாக்கு: pdf',\n          exporterVisibleAsPdf: 'இருக்கும் தரவுகளை கோப்பாக்கு: pdf',\n          exporterSelectedAsPdf: 'தேர்ந்தெடுத்த தரவுகளை கோப்பாக்கு: pdf',\n          clearAllFilters: 'Clear all filters'\n        },\n        importer: {\n          noHeaders: 'பத்தியின் தலைப்புகளை பெற இயலவில்லை, கோப்பிற்கு தலைப்பு உள்ளதா?',\n          noObjects: 'இலக்குகளை உருவாக்க முடியவில்லை, கோப்பில் தலைப்புகளை தவிர தரவு ஏதேனும் உள்ளதா? ',\n          invalidCsv:\t'சரிவர நடைமுறை படுத்த இயலவில்லை, கோப்பு சரிதானா? - csv',\n          invalidJson: 'சரிவர நடைமுறை படுத்த இயலவில்லை, கோப்பு சரிதானா? - json',\n          jsonNotArray: 'படித்த கோப்பில் வரிசைகள் உள்ளது, நடைமுறை ரத்து செய் : json'\n        },\n        pagination: {\n          sizes\t\t: 'உருப்படிகள் / பக்கம்',\n          totalItems\t: 'உருப்படிகள் '\n        },\n        grouping: {\n          group\t: 'குழு',\n          ungroup : 'பிரி',\n          aggregate_count\t: 'மதிப்பீட்டு : எண்ணு',\n          aggregate_sum : 'மதிப்பீட்டு : கூட்டல்',\n          aggregate_max\t: 'மதிப்பீட்டு : அதிகபட்சம்',\n          aggregate_min\t: 'மதிப்பீட்டு : குறைந்தபட்சம்',\n          aggregate_avg\t: 'மதிப்பீட்டு : சராசரி',\n          aggregate_remove : 'மதிப்பீட்டு : நீக்கு'\n        }\n      });\n      return $delegate;\n    }]);\n  }]);\n})();\n\n(function () {\n  angular.module('ui.grid').config(['$provide', function($provide) {\n    $provide.decorator('i18nService', ['$delegate', function($delegate) {\n      $delegate.add('tr', {\n        headerCell: {\n          aria: {\n            defaultFilterLabel: 'Sütun için filtre',\n            removeFilter: 'Filtreyi Kaldır',\n            columnMenuButtonLabel: 'Sütun Menüsü'\n          },\n          priority: 'Öncelik:',\n          filterLabel: \"Sütun için filtre: \"\n        },\n        aggregate: {\n          label: 'kayıtlar'\n        },\n        groupPanel: {\n          description: 'Sütuna göre gruplamak için sütun başlığını buraya sürükleyin ve bırakın.'\n        },\n        search: {\n          placeholder: 'Arama...',\n          showingItems: 'Gösterilen Kayıt:',\n          selectedItems: 'Seçili Kayıt:',\n          totalItems: 'Toplam Kayıt:',\n          size: 'Sayfa Boyutu:',\n          first: 'İlk Sayfa',\n          next: 'Sonraki Sayfa',\n          previous: 'Önceki Sayfa',\n          last: 'Son Sayfa'\n        },\n        menu: {\n          text: 'Sütunları Seç:'\n        },\n        sort: {\n          ascending: 'Artan Sırada Sırala',\n          descending: 'Azalan Sırada Sırala',\n          none: 'Sıralama Yapma',\n          remove: 'Sıralamayı Kaldır'\n        },\n        column: {\n          hide: 'Sütunu Gizle'\n        },\n        aggregation: {\n          count: 'toplam satır: ',\n          sum: 'toplam: ',\n          avg: 'ort: ',\n          min: 'min: ',\n          max: 'maks: '\n        },\n        pinning: {\n          pinLeft: 'Sola Sabitle',\n          pinRight: 'Sağa Sabitle',\n          unpin: 'Sabitlemeyi Kaldır'\n        },\n        columnMenu: {\n          close: 'Kapat'\n        },\n        gridMenu: {\n          aria: {\n            buttonLabel: 'Tablo Menü'\n          },\n          columns: 'Sütunlar:',\n          importerTitle: 'Dosya içeri aktar',\n          exporterAllAsCsv: 'Bütün veriyi CSV olarak dışarı aktar',\n          exporterVisibleAsCsv: 'Görünen veriyi CSV olarak dışarı aktar',\n          exporterSelectedAsCsv: 'Seçili veriyi CSV olarak dışarı aktar',\n          exporterAllAsPdf: 'Bütün veriyi PDF olarak dışarı aktar',\n          exporterVisibleAsPdf: 'Görünen veriyi PDF olarak dışarı aktar',\n          exporterSelectedAsPdf: 'Seçili veriyi PDF olarak dışarı aktar',\n          clearAllFilters: 'Bütün filtreleri kaldır'\n        },\n        importer: {\n          noHeaders: 'Sütun isimleri üretilemiyor, dosyanın bir başlığı var mı?',\n          noObjects: 'Nesneler üretilemiyor, dosyada başlıktan başka bir veri var mı?',\n          invalidCsv: 'Dosya işlenemedi, geçerli bir CSV dosyası mı?',\n          invalidJson: 'Dosya işlenemedi, geçerli bir Json dosyası mı?',\n          jsonNotArray: 'Alınan Json dosyasında bir dizi bulunmalıdır, işlem iptal ediliyor.'\n        },\n        pagination: {\n          aria: {\n            pageToFirst: 'İlk sayfaya',\n            pageBack: 'Geri git',\n            pageSelected: 'Seçili sayfa',\n            pageForward: 'İleri git',\n            pageToLast: 'Sona git'\n          },\n          sizes: 'Sayfadaki nesne sayısı',\n          totalItems: 'kayıtlar',\n          through: '', //note(fsw) : turkish dont have this preposition \n          of: '' //note(fsw) : turkish dont have this preposition\n        },\n        grouping: {\n          group: 'Grupla',\n          ungroup: 'Gruplama',\n          aggregate_count: 'Yekun: Sayı',\n          aggregate_sum: 'Yekun: Toplam',\n          aggregate_max: 'Yekun: Maks',\n          aggregate_min: 'Yekun: Min',\n          aggregate_avg: 'Yekun: Ort',\n          aggregate_remove: 'Yekun: Sil'\n        }\n      });\n      return $delegate;\n    }]);\n  }]);\n})();\n(function () {\n  angular.module('ui.grid').config(['$provide', function($provide) {\n    $provide.decorator('i18nService', ['$delegate', function($delegate) {\n      $delegate.add('ua', {\n        headerCell: {\n          aria: {\n            defaultFilterLabel: 'Фільтр стовпчика',\n            removeFilter: 'Видалити фільтр',\n            columnMenuButtonLabel: 'Меню ствпчика'\n          },\n          priority: 'Пріоритет:',\n          filterLabel: \"Фільтр стовпчика: \"\n        },\n        aggregate: {\n          label: 'елементи'\n        },\n        groupPanel: {\n          description: 'Для групування за стовпчиком перетягніть сюди його назву.'\n        },\n        search: {\n          placeholder: 'Пошук...',\n          showingItems: 'Показати елементи:',\n          selectedItems: 'Обрані елементи:',\n          totalItems: 'Усього елементів:',\n          size: 'Розмір сторінки:',\n          first: 'Перша сторінка',\n          next: 'Наступна сторінка',\n          previous: 'Попередня сторінка',\n          last: 'Остання сторінка'\n        },\n        menu: {\n          text: 'Обрати ствпчики:'\n        },\n        sort: {\n          ascending: 'За зростанням',\n          descending: 'За спаданням',\n          none: 'Без сортування',\n          remove: 'Прибрати сортування'\n        },\n        column: {\n          hide: 'Приховати стовпчик'\n        },\n        aggregation: {\n          count: 'усього рядків: ',\n          sum: 'ітого: ',\n          avg: 'середнє: ',\n          min: 'мін: ',\n          max: 'макс: '\n        },\n\t\t\t\tpinning: {\n\t\t\t\t\tpinLeft: 'Закріпити ліворуч',\n\t\t\t\t\tpinRight: 'Закріпити праворуч',\n\t\t\t\t\tunpin: 'Відкріпити'\n\t\t\t\t},\n        columnMenu: {\n          close: 'Закрити'\n        },\n        gridMenu: {\n          aria: {\n            buttonLabel: 'Меню'\n          },\n          columns: 'Стовпчики:',\n          importerTitle: 'Імпортувати файл',\n          exporterAllAsCsv: 'Експортувати все в CSV',\n          exporterVisibleAsCsv: 'Експортувати видимі дані в CSV',\n          exporterSelectedAsCsv: 'Експортувати обрані дані в CSV',\n          exporterAllAsPdf: 'Експортувати все в PDF',\n          exporterVisibleAsPdf: 'Експортувати видимі дані в PDF',\n          exporterSelectedAsPdf: 'Експортувати обрані дані в PDF',\n          clearAllFilters: 'Очистити всі фільтри'\n        },\n        importer: {\n          noHeaders: 'Не вдалося отримати назви стовпчиків, чи є в файлі заголовок?',\n          noObjects: 'Не вдалося отримати дані, чи є в файлі рядки окрім заголовка?',\n          invalidCsv: 'Не вдалося обробити файл, чи це коректний CSV-файл?',\n          invalidJson: 'Не вдалося обробити файл, чи це коректний JSON?',\n          jsonNotArray: 'JSON-файл що імпортується повинен містити масив, операцію скасовано.'\n        },\n        pagination: {\n          aria: {\n            pageToFirst: 'Перша сторінка',\n            pageBack: 'Попередня сторінка',\n            pageSelected: 'Обрана сторінка',\n            pageForward: 'Наступна сторінка',\n            pageToLast: 'Остання сторінка'\n          },\n          sizes: 'рядків на сторінку',\n          totalItems: 'рядків',\n          through: 'по',\n          of: 'з'\n        },\n        grouping: {\n          group: 'Групувати',\n          ungroup: 'Розгрупувати',\n          aggregate_count: 'Групувати: Кількість',\n          aggregate_sum: 'Для групи: Сума',\n          aggregate_max: 'Для групи: Максимум',\n          aggregate_min: 'Для групи: Мінімум',\n          aggregate_avg: 'Для групи: Серднє',\n          aggregate_remove: 'Для групи: Пусто'\n        }\n      });\n      return $delegate;\n    }]);\n  }]);\n})();\n\n/**\n * @ngdoc overview\n * @name ui.grid.i18n\n * @description\n *\n *  # ui.grid.i18n\n * This module provides i18n functions to ui.grid and any application that wants to use it\n\n *\n * <div doc-module-components=\"ui.grid.i18n\"></div>\n */\n\n(function () {\n  var DIRECTIVE_ALIASES = ['uiT', 'uiTranslate'];\n  var FILTER_ALIASES = ['t', 'uiTranslate'];\n\n  var module = angular.module('ui.grid.i18n');\n\n\n  /**\n   *  @ngdoc object\n   *  @name ui.grid.i18n.constant:i18nConstants\n   *\n   *  @description constants available in i18n module\n   */\n  module.constant('i18nConstants', {\n    MISSING: '[MISSING]',\n    UPDATE_EVENT: '$uiI18n',\n\n    LOCALE_DIRECTIVE_ALIAS: 'uiI18n',\n    // default to english\n    DEFAULT_LANG: 'en'\n  });\n\n//    module.config(['$provide', function($provide) {\n//        $provide.decorator('i18nService', ['$delegate', function($delegate) {}])}]);\n\n  /**\n   *  @ngdoc service\n   *  @name ui.grid.i18n.service:i18nService\n   *\n   *  @description Services for i18n\n   */\n  module.service('i18nService', ['$log', 'i18nConstants', '$rootScope',\n    function ($log, i18nConstants, $rootScope) {\n\n      var langCache = {\n        _langs: {},\n        current: null,\n        get: function (lang) {\n          return this._langs[lang.toLowerCase()];\n        },\n        add: function (lang, strings) {\n          var lower = lang.toLowerCase();\n          if (!this._langs[lower]) {\n            this._langs[lower] = {};\n          }\n          angular.extend(this._langs[lower], strings);\n        },\n        getAllLangs: function () {\n          var langs = [];\n          if (!this._langs) {\n            return langs;\n          }\n\n          for (var key in this._langs) {\n            langs.push(key);\n          }\n\n          return langs;\n        },\n        setCurrent: function (lang) {\n          this.current = lang.toLowerCase();\n        },\n        getCurrentLang: function () {\n          return this.current;\n        }\n      };\n\n      var service = {\n\n        /**\n         * @ngdoc service\n         * @name add\n         * @methodOf ui.grid.i18n.service:i18nService\n         * @description  Adds the languages and strings to the cache. Decorate this service to\n         * add more translation strings\n         * @param {string} lang language to add\n         * @param {object} stringMaps of strings to add grouped by property names\n         * @example\n         * <pre>\n         *      i18nService.add('en', {\n         *         aggregate: {\n         *                 label1: 'items',\n         *                 label2: 'some more items'\n         *                 }\n         *         },\n         *         groupPanel: {\n         *              description: 'Drag a column header here and drop it to group by that column.'\n         *           }\n         *      }\n         * </pre>\n         */\n        add: function (langs, stringMaps) {\n          if (typeof(langs) === 'object') {\n            angular.forEach(langs, function (lang) {\n              if (lang) {\n                langCache.add(lang, stringMaps);\n              }\n            });\n          } else {\n            langCache.add(langs, stringMaps);\n          }\n        },\n\n        /**\n         * @ngdoc service\n         * @name getAllLangs\n         * @methodOf ui.grid.i18n.service:i18nService\n         * @description  return all currently loaded languages\n         * @returns {array} string\n         */\n        getAllLangs: function () {\n          return langCache.getAllLangs();\n        },\n\n        /**\n         * @ngdoc service\n         * @name get\n         * @methodOf ui.grid.i18n.service:i18nService\n         * @description  return all currently loaded languages\n         * @param {string} lang to return.  If not specified, returns current language\n         * @returns {object} the translation string maps for the language\n         */\n        get: function (lang) {\n          var language = lang ? lang : service.getCurrentLang();\n          return langCache.get(language);\n        },\n\n        /**\n         * @ngdoc service\n         * @name getSafeText\n         * @methodOf ui.grid.i18n.service:i18nService\n         * @description  returns the text specified in the path or a Missing text if text is not found\n         * @param {String} path property path to use for retrieving text from string map\n         * @param {String} [lang] to return.  If not specified, returns current language\n         * @returns {object} the translation for the path\n         * @example\n         * <pre>\n         * i18nService.getSafeText('sort.ascending')\n         * </pre>\n         */\n        getSafeText: function (path, lang) {\n          var language = lang || service.getCurrentLang();\n          var trans = langCache.get(language);\n\n          if (!trans) {\n            return i18nConstants.MISSING;\n          }\n\n          var paths = path.split('.');\n          var current = trans;\n\n          for (var i = 0; i < paths.length; ++i) {\n            if (current[paths[i]] === undefined || current[paths[i]] === null) {\n              return i18nConstants.MISSING;\n            } else {\n              current = current[paths[i]];\n            }\n          }\n\n          return current;\n\n        },\n\n        /**\n         * @ngdoc service\n         * @name setCurrentLang\n         * @methodOf ui.grid.i18n.service:i18nService\n         * @description sets the current language to use in the application\n         * $broadcasts the i18nConstants.UPDATE_EVENT on the $rootScope\n         * @param {string} lang to set\n         * @example\n         * <pre>\n         * i18nService.setCurrentLang('fr');\n         * </pre>\n         */\n\n        setCurrentLang: function (lang) {\n          if (lang) {\n            langCache.setCurrent(lang);\n            $rootScope.$broadcast(i18nConstants.UPDATE_EVENT);\n          }\n        },\n\n        /**\n         * @ngdoc service\n         * @name getCurrentLang\n         * @methodOf ui.grid.i18n.service:i18nService\n         * @description returns the current language used in the application\n         */\n        getCurrentLang: function () {\n          var lang = langCache.getCurrentLang();\n          if (!lang) {\n            lang = i18nConstants.DEFAULT_LANG;\n            langCache.setCurrent(lang);\n          }\n          return lang;\n        }\n\n      };\n\n      return service;\n\n    }]);\n\n  var localeDirective = function (i18nService, i18nConstants) {\n    return {\n      compile: function () {\n        return {\n          pre: function ($scope, $elm, $attrs) {\n            var alias = i18nConstants.LOCALE_DIRECTIVE_ALIAS;\n            // check for watchable property\n            var lang = $scope.$eval($attrs[alias]);\n            if (lang) {\n              $scope.$watch($attrs[alias], function () {\n                i18nService.setCurrentLang(lang);\n              });\n            } else if ($attrs.$$observers) {\n              $attrs.$observe(alias, function () {\n                i18nService.setCurrentLang($attrs[alias] || i18nConstants.DEFAULT_LANG);\n              });\n            }\n          }\n        };\n      }\n    };\n  };\n\n  module.directive('uiI18n', ['i18nService', 'i18nConstants', localeDirective]);\n\n  // directive syntax\n  var uitDirective = function ($parse, i18nService, i18nConstants) {\n    return {\n      restrict: 'EA',\n      compile: function () {\n        return {\n          pre: function ($scope, $elm, $attrs) {\n            var alias1 = DIRECTIVE_ALIASES[0],\n              alias2 = DIRECTIVE_ALIASES[1];\n            var token = $attrs[alias1] || $attrs[alias2] || $elm.html();\n            var missing = i18nConstants.MISSING + token;\n            var observer;\n            if ($attrs.$$observers) {\n              var prop = $attrs[alias1] ? alias1 : alias2;\n              observer = $attrs.$observe(prop, function (result) {\n                if (result) {\n                  $elm.html($parse(result)(i18nService.getCurrentLang()) || missing);\n                }\n              });\n            }\n            var getter = $parse(token);\n            var listener = $scope.$on(i18nConstants.UPDATE_EVENT, function (evt) {\n              if (observer) {\n                observer($attrs[alias1] || $attrs[alias2]);\n              } else {\n                // set text based on i18n current language\n                $elm.html(getter(i18nService.get()) || missing);\n              }\n            });\n            $scope.$on('$destroy', listener);\n\n            $elm.html(getter(i18nService.get()) || missing);\n          }\n        };\n      }\n    };\n  };\n\n  angular.forEach( DIRECTIVE_ALIASES, function ( alias ) {\n    module.directive( alias, ['$parse', 'i18nService', 'i18nConstants', uitDirective] );\n  } );\n\n  // optional filter syntax\n  var uitFilter = function ($parse, i18nService, i18nConstants) {\n    return function (data) {\n      var getter = $parse(data);\n      // set text based on i18n current language\n      return getter(i18nService.get()) || i18nConstants.MISSING + data;\n    };\n  };\n\n  angular.forEach( FILTER_ALIASES, function ( alias ) {\n    module.filter( alias, ['$parse', 'i18nService', 'i18nConstants', uitFilter] );\n  } );\n\n\n})();\n(function() {\n  angular.module('ui.grid').config(['$provide', function($provide) {\n    $provide.decorator('i18nService', ['$delegate', function($delegate) {\n      $delegate.add('zh-cn', {\n        headerCell: {\n          aria: {\n            defaultFilterLabel: '列过滤器',\n            removeFilter: '移除过滤器',\n            columnMenuButtonLabel: '列菜单'\n          },\n          priority: '优先级:',\n          filterLabel: \"列过滤器: \"\n        },\n        aggregate: {\n          label: '行'\n        },\n        groupPanel: {\n          description: '拖曳表头到此处进行分组'\n        },\n        search: {\n          placeholder: '查找',\n          showingItems: '已显示行数：',\n          selectedItems: '已选择行数：',\n          totalItems: '总行数：',\n          size: '每页显示行数：',\n          first: '首页',\n          next: '下一页',\n          previous: '上一页',\n          last: '末页'\n        },\n        menu: {\n          text: '选择列：'\n        },\n        sort: {\n          ascending: '升序',\n          descending: '降序',\n          none: '无序',\n          remove: '取消排序'\n        },\n        column: {\n          hide: '隐藏列'\n        },\n        aggregation: {\n          count: '计数：',\n          sum: '求和：',\n          avg: '均值：',\n          min: '最小值：',\n          max: '最大值：'\n        },\n        pinning: {\n          pinLeft: '左侧固定',\n          pinRight: '右侧固定',\n          unpin: '取消固定'\n        },\n        columnMenu: {\n          close: '关闭'\n        },\n        gridMenu: {\n          aria: {\n            buttonLabel: '表格菜单'\n          },\n          columns: '列：',\n          importerTitle: '导入文件',\n          exporterAllAsCsv: '导出全部数据到CSV',\n          exporterVisibleAsCsv: '导出可见数据到CSV',\n          exporterSelectedAsCsv: '导出已选数据到CSV',\n          exporterAllAsPdf: '导出全部数据到PDF',\n          exporterVisibleAsPdf: '导出可见数据到PDF',\n          exporterSelectedAsPdf: '导出已选数据到PDF',\n          clearAllFilters: '清除所有过滤器'\n        },\n        importer: {\n          noHeaders: '无法获取列名，确定文件包含表头？',\n          noObjects: '无法获取数据，确定文件包含数据？',\n          invalidCsv: '无法处理文件，确定是合法的CSV文件？',\n          invalidJson: '无法处理文件，确定是合法的JSON文件？',\n          jsonNotArray: '导入的文件不是JSON数组！'\n        },\n        pagination: {\n          aria: {\n            pageToFirst: '第一页',\n            pageBack: '上一页',\n            pageSelected: '当前页',\n            pageForward: '下一页',\n            pageToLast: '最后一页'\n          },\n          sizes: '行每页',\n          totalItems: '行',\n          through: '至',\n          of: '共'\n        },\n        grouping: {\n          group: '分组',\n          ungroup: '取消分组',\n          aggregate_count: '合计: 计数',\n          aggregate_sum: '合计: 求和',\n          aggregate_max: '合计: 最大',\n          aggregate_min: '合计: 最小',\n          aggregate_avg: '合计: 平均',\n          aggregate_remove: '合计: 移除'\n        }\n      });\n      return $delegate;\n    }]);\n  }]);\n})();\n\n(function() {\n  angular.module('ui.grid').config(['$provide', function($provide) {\n    $provide.decorator('i18nService', ['$delegate', function($delegate) {\n      $delegate.add('zh-tw', {\n        aggregate: {\n          label: '行'\n        },\n        groupPanel: {\n          description: '拖曳表頭到此處進行分組'\n        },\n        search: {\n          placeholder: '查找',\n          showingItems: '已顯示行數：',\n          selectedItems: '已選擇行數：',\n          totalItems: '總行數：',\n          size: '每頁顯示行數：',\n          first: '首頁',\n          next: '下壹頁',\n          previous: '上壹頁',\n          last: '末頁'\n        },\n        menu: {\n          text: '選擇列：'\n        },\n        sort: {\n          ascending: '升序',\n          descending: '降序',\n          remove: '取消排序'\n        },\n        column: {\n          hide: '隱藏列'\n        },\n        aggregation: {\n          count: '計數：',\n          sum: '求和：',\n          avg: '均值：',\n          min: '最小值：',\n          max: '最大值：'\n        },\n        pinning: {\n          pinLeft: '左側固定',\n          pinRight: '右側固定',\n          unpin: '取消固定'\n        },\n        gridMenu: {\n          columns: '列：',\n          importerTitle: '導入文件',\n          exporterAllAsCsv: '導出全部數據到CSV',\n          exporterVisibleAsCsv: '導出可見數據到CSV',\n          exporterSelectedAsCsv: '導出已選數據到CSV',\n          exporterAllAsPdf: '導出全部數據到PDF',\n          exporterVisibleAsPdf: '導出可見數據到PDF',\n          exporterSelectedAsPdf: '導出已選數據到PDF',\n          clearAllFilters: '清除所有过滤器'\n        },\n        importer: {\n          noHeaders: '無法獲取列名，確定文件包含表頭？',\n          noObjects: '無法獲取數據，確定文件包含數據？',\n          invalidCsv: '無法處理文件，確定是合法的CSV文件？',\n          invalidJson: '無法處理文件，確定是合法的JSON文件？',\n          jsonNotArray: '導入的文件不是JSON數組！'\n        },\n        pagination: {\n          sizes: '行每頁',\n          totalItems: '行'\n        }\n      });\n      return $delegate;\n    }]);\n  }]);\n})();\n\n(function() {\n  'use strict';\n  /**\n   *  @ngdoc overview\n   *  @name ui.grid.autoResize\n   *\n   *  @description\n   *\n   *  #ui.grid.autoResize\n   *\n   *  <div class=\"alert alert-warning\" role=\"alert\"><strong>Beta</strong> This feature is ready for testing, but it either hasn't seen a lot of use or has some known bugs.</div>\n   *\n   *  This module provides auto-resizing functionality to UI-Grid.\n   */\n  var module = angular.module('ui.grid.autoResize', ['ui.grid']);\n\n  module.directive('uiGridAutoResize', ['gridUtil', function(gridUtil) {\n    return {\n      require: 'uiGrid',\n      scope: false,\n      link: function($scope, $elm, $attrs, uiGridCtrl) {\n        var elementWidth,\n          elementHeight;\n\n        var updateWidth = gridUtil.throttle(function() {\n          elementWidth = gridUtil.elementWidth($elm);\n        }, 200);\n\n        var updateHeight = gridUtil.throttle(function() {\n          elementHeight = gridUtil.elementHeight($elm);\n        }, 200);\n\n        var refresh = gridUtil.throttle(function(width, height) {\n          uiGridCtrl.grid.gridWidth = width;\n          uiGridCtrl.grid.gridHeight = height;\n          uiGridCtrl.grid.refresh();\n        }, 300);\n\n        $scope.$watchGroup([\n          function() {\n            updateWidth();\n            return elementWidth;\n          },\n          function() {\n            updateHeight();\n            return elementHeight;\n          }\n        ], function(newValues, oldValues, scope) {\n          if (!angular.equals(newValues, oldValues)) {\n            refresh(newValues[0], newValues[1]);\n          }\n        });\n      }\n    };\n  }]);\n})();\n\n(function () {\n  'use strict';\n\n  /**\n   *  @ngdoc overview\n   *  @name ui.grid.cellNav\n   *\n   *  @description\n\n      #ui.grid.cellNav\n\n      <div class=\"alert alert-success\" role=\"alert\"><strong>Stable</strong> This feature is stable. There should no longer be breaking api changes without a deprecation warning.</div>\n\n      This module provides cell navigation functionality to UI-Grid.\n   */\n  var module = angular.module('ui.grid.cellNav', ['ui.grid']);\n\n  /**\n   *  @ngdoc object\n   *  @name ui.grid.cellNav.constant:uiGridCellNavConstants\n   *\n   *  @description constants available in cellNav\n   */\n  module.constant('uiGridCellNavConstants', {\n    FEATURE_NAME: 'gridCellNav',\n    CELL_NAV_EVENT: 'cellNav',\n    direction: {LEFT: 0, RIGHT: 1, UP: 2, DOWN: 3, PG_UP: 4, PG_DOWN: 5},\n    EVENT_TYPE: {\n      KEYDOWN: 0,\n      CLICK: 1,\n      CLEAR: 2\n    }\n  });\n\n\n  module.factory('uiGridCellNavFactory', ['gridUtil', 'uiGridConstants', 'uiGridCellNavConstants', 'GridRowColumn', '$q',\n    function (gridUtil, uiGridConstants, uiGridCellNavConstants, GridRowColumn, $q) {\n      /**\n       *  @ngdoc object\n       *  @name ui.grid.cellNav.object:CellNav\n       *  @description returns a CellNav prototype function\n       *  @param {object} rowContainer container for rows\n       *  @param {object} colContainer parent column container\n       *  @param {object} leftColContainer column container to the left of parent\n       *  @param {object} rightColContainer column container to the right of parent\n       */\n      var UiGridCellNav = function UiGridCellNav(rowContainer, colContainer, leftColContainer, rightColContainer) {\n        this.rows = rowContainer.visibleRowCache;\n        this.columns = colContainer.visibleColumnCache;\n        this.leftColumns = leftColContainer ? leftColContainer.visibleColumnCache : [];\n        this.rightColumns = rightColContainer ? rightColContainer.visibleColumnCache : [];\n        this.bodyContainer = rowContainer;\n      };\n\n      /** returns focusable columns of all containers */\n      UiGridCellNav.prototype.getFocusableCols = function () {\n        var allColumns = this.leftColumns.concat(this.columns, this.rightColumns);\n\n        return allColumns.filter(function (col) {\n          return col.colDef.allowCellFocus;\n        });\n      };\n\n      /**\n       *  @ngdoc object\n       *  @name ui.grid.cellNav.api:GridRow\n       *\n       *  @description GridRow settings for cellNav feature, these are available to be\n       *  set only internally (for example, by other features)\n       */\n\n      /**\n       *  @ngdoc object\n       *  @name allowCellFocus\n       *  @propertyOf  ui.grid.cellNav.api:GridRow\n       *  @description Enable focus on a cell within this row.  If set to false then no cells\n       *  in this row can be focused - group header rows as an example would set this to false.\n       *  <br/>Defaults to true\n       */\n      /** returns focusable rows */\n      UiGridCellNav.prototype.getFocusableRows = function () {\n        return this.rows.filter(function(row) {\n          return row.allowCellFocus !== false;\n        });\n      };\n\n      UiGridCellNav.prototype.getNextRowCol = function (direction, curRow, curCol) {\n        switch (direction) {\n          case uiGridCellNavConstants.direction.LEFT:\n            return this.getRowColLeft(curRow, curCol);\n          case uiGridCellNavConstants.direction.RIGHT:\n            return this.getRowColRight(curRow, curCol);\n          case uiGridCellNavConstants.direction.UP:\n            return this.getRowColUp(curRow, curCol);\n          case uiGridCellNavConstants.direction.DOWN:\n            return this.getRowColDown(curRow, curCol);\n          case uiGridCellNavConstants.direction.PG_UP:\n            return this.getRowColPageUp(curRow, curCol);\n          case uiGridCellNavConstants.direction.PG_DOWN:\n            return this.getRowColPageDown(curRow, curCol);\n        }\n\n      };\n\n      UiGridCellNav.prototype.initializeSelection = function () {\n        var focusableCols = this.getFocusableCols();\n        var focusableRows = this.getFocusableRows();\n        if (focusableCols.length === 0 || focusableRows.length === 0) {\n          return null;\n        }\n\n        var curRowIndex = 0;\n        var curColIndex = 0;\n        return new GridRowColumn(focusableRows[0], focusableCols[0]); //return same row\n      };\n\n      UiGridCellNav.prototype.getRowColLeft = function (curRow, curCol) {\n        var focusableCols = this.getFocusableCols();\n        var focusableRows = this.getFocusableRows();\n        var curColIndex = focusableCols.indexOf(curCol);\n        var curRowIndex = focusableRows.indexOf(curRow);\n\n        //could not find column in focusable Columns so set it to 1\n        if (curColIndex === -1) {\n          curColIndex = 1;\n        }\n\n        var nextColIndex = curColIndex === 0 ? focusableCols.length - 1 : curColIndex - 1;\n\n        //get column to left\n        if (nextColIndex >= curColIndex) {\n          // On the first row\n          // if (curRowIndex === 0 && curColIndex === 0) {\n          //   return null;\n          // }\n          if (curRowIndex === 0) {\n            return new GridRowColumn(curRow, focusableCols[nextColIndex]); //return same row\n          }\n          else {\n            //up one row and far right column\n            return new GridRowColumn(focusableRows[curRowIndex - 1], focusableCols[nextColIndex]);\n          }\n        }\n        else {\n          return new GridRowColumn(curRow, focusableCols[nextColIndex]);\n        }\n      };\n\n\n\n      UiGridCellNav.prototype.getRowColRight = function (curRow, curCol) {\n        var focusableCols = this.getFocusableCols();\n        var focusableRows = this.getFocusableRows();\n        var curColIndex = focusableCols.indexOf(curCol);\n        var curRowIndex = focusableRows.indexOf(curRow);\n\n        //could not find column in focusable Columns so set it to 0\n        if (curColIndex === -1) {\n          curColIndex = 0;\n        }\n        var nextColIndex = curColIndex === focusableCols.length - 1 ? 0 : curColIndex + 1;\n\n        if (nextColIndex <= curColIndex) {\n          if (curRowIndex === focusableRows.length - 1) {\n            return new GridRowColumn(curRow, focusableCols[nextColIndex]); //return same row\n          }\n          else {\n            //down one row and far left column\n            return new GridRowColumn(focusableRows[curRowIndex + 1], focusableCols[nextColIndex]);\n          }\n        }\n        else {\n          return new GridRowColumn(curRow, focusableCols[nextColIndex]);\n        }\n      };\n\n      UiGridCellNav.prototype.getRowColDown = function (curRow, curCol) {\n        var focusableCols = this.getFocusableCols();\n        var focusableRows = this.getFocusableRows();\n        var curColIndex = focusableCols.indexOf(curCol);\n        var curRowIndex = focusableRows.indexOf(curRow);\n\n        //could not find column in focusable Columns so set it to 0\n        if (curColIndex === -1) {\n          curColIndex = 0;\n        }\n\n        if (curRowIndex === focusableRows.length - 1) {\n          return new GridRowColumn(curRow, focusableCols[curColIndex]); //return same row\n        }\n        else {\n          //down one row\n          return new GridRowColumn(focusableRows[curRowIndex + 1], focusableCols[curColIndex]);\n        }\n      };\n\n      UiGridCellNav.prototype.getRowColPageDown = function (curRow, curCol) {\n        var focusableCols = this.getFocusableCols();\n        var focusableRows = this.getFocusableRows();\n        var curColIndex = focusableCols.indexOf(curCol);\n        var curRowIndex = focusableRows.indexOf(curRow);\n\n        //could not find column in focusable Columns so set it to 0\n        if (curColIndex === -1) {\n          curColIndex = 0;\n        }\n\n        var pageSize = this.bodyContainer.minRowsToRender();\n        if (curRowIndex >= focusableRows.length - pageSize) {\n          return new GridRowColumn(focusableRows[focusableRows.length - 1], focusableCols[curColIndex]); //return last row\n        }\n        else {\n          //down one page\n          return new GridRowColumn(focusableRows[curRowIndex + pageSize], focusableCols[curColIndex]);\n        }\n      };\n\n      UiGridCellNav.prototype.getRowColUp = function (curRow, curCol) {\n        var focusableCols = this.getFocusableCols();\n        var focusableRows = this.getFocusableRows();\n        var curColIndex = focusableCols.indexOf(curCol);\n        var curRowIndex = focusableRows.indexOf(curRow);\n\n        //could not find column in focusable Columns so set it to 0\n        if (curColIndex === -1) {\n          curColIndex = 0;\n        }\n\n        if (curRowIndex === 0) {\n          return new GridRowColumn(curRow, focusableCols[curColIndex]); //return same row\n        }\n        else {\n          //up one row\n          return new GridRowColumn(focusableRows[curRowIndex - 1], focusableCols[curColIndex]);\n        }\n      };\n\n      UiGridCellNav.prototype.getRowColPageUp = function (curRow, curCol) {\n        var focusableCols = this.getFocusableCols();\n        var focusableRows = this.getFocusableRows();\n        var curColIndex = focusableCols.indexOf(curCol);\n        var curRowIndex = focusableRows.indexOf(curRow);\n\n        //could not find column in focusable Columns so set it to 0\n        if (curColIndex === -1) {\n          curColIndex = 0;\n        }\n\n        var pageSize = this.bodyContainer.minRowsToRender();\n        if (curRowIndex - pageSize < 0) {\n          return new GridRowColumn(focusableRows[0], focusableCols[curColIndex]); //return first row\n        }\n        else {\n          //up one page\n          return new GridRowColumn(focusableRows[curRowIndex - pageSize], focusableCols[curColIndex]);\n        }\n      };\n      return UiGridCellNav;\n    }]);\n\n  /**\n   *  @ngdoc service\n   *  @name ui.grid.cellNav.service:uiGridCellNavService\n   *\n   *  @description Services for cell navigation features. If you don't like the key maps we use,\n   *  or the direction cells navigation, override with a service decorator (see angular docs)\n   */\n  module.service('uiGridCellNavService', ['gridUtil', 'uiGridConstants', 'uiGridCellNavConstants', '$q', 'uiGridCellNavFactory', 'GridRowColumn', 'ScrollEvent',\n    function (gridUtil, uiGridConstants, uiGridCellNavConstants, $q, UiGridCellNav, GridRowColumn, ScrollEvent) {\n\n      var service = {\n\n        initializeGrid: function (grid) {\n          grid.registerColumnBuilder(service.cellNavColumnBuilder);\n\n\n          /**\n           *  @ngdoc object\n           *  @name ui.grid.cellNav:Grid.cellNav\n           * @description cellNav properties added to grid class\n           */\n          grid.cellNav = {};\n          grid.cellNav.lastRowCol = null;\n          grid.cellNav.focusedCells = [];\n\n          service.defaultGridOptions(grid.options);\n\n          /**\n           *  @ngdoc object\n           *  @name ui.grid.cellNav.api:PublicApi\n           *\n           *  @description Public Api for cellNav feature\n           */\n          var publicApi = {\n            events: {\n              cellNav: {\n                /**\n                 * @ngdoc event\n                 * @name navigate\n                 * @eventOf  ui.grid.cellNav.api:PublicApi\n                 * @description raised when the active cell is changed\n                 * <pre>\n                 *      gridApi.cellNav.on.navigate(scope,function(newRowcol, oldRowCol){})\n                 * </pre>\n                 * @param {object} newRowCol new position\n                 * @param {object} oldRowCol old position\n                 */\n                navigate: function (newRowCol, oldRowCol) {},\n                /**\n                 * @ngdoc event\n                 * @name viewPortKeyDown\n                 * @eventOf  ui.grid.cellNav.api:PublicApi\n                 * @description  is raised when the viewPort receives a keyDown event. Cells never get focus in uiGrid\n                 * due to the difficulties of setting focus on a cell that is not visible in the viewport.  Use this\n                 * event whenever you need a keydown event on a cell\n                 * <br/>\n                 * @param {object} event keydown event\n                 * @param {object} rowCol current rowCol position\n                 */\n                viewPortKeyDown: function (event, rowCol) {},\n\n                /**\n                 * @ngdoc event\n                 * @name viewPortKeyPress\n                 * @eventOf  ui.grid.cellNav.api:PublicApi\n                 * @description  is raised when the viewPort receives a keyPress event. Cells never get focus in uiGrid\n                 * due to the difficulties of setting focus on a cell that is not visible in the viewport.  Use this\n                 * event whenever you need a keypress event on a cell\n                 * <br/>\n                 * @param {object} event keypress event\n                 * @param {object} rowCol current rowCol position\n                 */\n                viewPortKeyPress: function (event, rowCol) {}\n              }\n            },\n            methods: {\n              cellNav: {\n                /**\n                 * @ngdoc function\n                 * @name scrollToFocus\n                 * @methodOf  ui.grid.cellNav.api:PublicApi\n                 * @description brings the specified row and column into view, and sets focus\n                 * to that cell\n                 * @param {object} rowEntity gridOptions.data[] array instance to make visible and set focus\n                 * @param {object} colDef to make visible and set focus\n                 * @returns {promise} a promise that is resolved after any scrolling is finished\n                 */\n                scrollToFocus: function (rowEntity, colDef) {\n                  return service.scrollToFocus(grid, rowEntity, colDef);\n                },\n\n                /**\n                 * @ngdoc function\n                 * @name getFocusedCell\n                 * @methodOf  ui.grid.cellNav.api:PublicApi\n                 * @description returns the current (or last if Grid does not have focus) focused row and column\n                 * <br> value is null if no selection has occurred\n                 */\n                getFocusedCell: function () {\n                  return grid.cellNav.lastRowCol;\n                },\n\n                /**\n                 * @ngdoc function\n                 * @name getCurrentSelection\n                 * @methodOf  ui.grid.cellNav.api:PublicApi\n                 * @description returns an array containing the current selection\n                 * <br> array is empty if no selection has occurred\n                 */\n                getCurrentSelection: function () {\n                  return grid.cellNav.focusedCells;\n                },\n\n                /**\n                 * @ngdoc function\n                 * @name rowColSelectIndex\n                 * @methodOf  ui.grid.cellNav.api:PublicApi\n                 * @description returns the index in the order in which the GridRowColumn was selected, returns -1 if the GridRowColumn\n                 * isn't selected\n                 * @param {object} rowCol the rowCol to evaluate\n                 */\n                rowColSelectIndex: function (rowCol) {\n                  //return gridUtil.arrayContainsObjectWithProperty(grid.cellNav.focusedCells, 'col.uid', rowCol.col.uid) &&\n                  var index = -1;\n                  for (var i = 0; i < grid.cellNav.focusedCells.length; i++) {\n                    if (grid.cellNav.focusedCells[i].col.uid === rowCol.col.uid &&\n                      grid.cellNav.focusedCells[i].row.uid === rowCol.row.uid) {\n                      index = i;\n                      break;\n                    }\n                  }\n                  return index;\n                }\n              }\n            }\n          };\n\n          grid.api.registerEventsFromObject(publicApi.events);\n\n          grid.api.registerMethodsFromObject(publicApi.methods);\n\n        },\n\n        defaultGridOptions: function (gridOptions) {\n          /**\n           *  @ngdoc object\n           *  @name ui.grid.cellNav.api:GridOptions\n           *\n           *  @description GridOptions for cellNav feature, these are available to be\n           *  set using the ui-grid {@link ui.grid.class:GridOptions gridOptions}\n           */\n\n          /**\n           *  @ngdoc object\n           *  @name modifierKeysToMultiSelectCells\n           *  @propertyOf  ui.grid.cellNav.api:GridOptions\n           *  @description Enable multiple cell selection only when using the ctrlKey or shiftKey.\n           *  <br/>Defaults to false\n           */\n          gridOptions.modifierKeysToMultiSelectCells = gridOptions.modifierKeysToMultiSelectCells === true;\n\n          /**\n           *  @ngdoc array\n           *  @name keyDownOverrides\n           *  @propertyOf  ui.grid.cellNav.api:GridOptions\n           *  @description An array of event objects to override on keydown. If an event is overridden, the viewPortKeyDown event will\n           *               be raised with the overridden events, allowing custom keydown behavior.\n           *  <br/>Defaults to []\n           */\n          gridOptions.keyDownOverrides = gridOptions.keyDownOverrides || [];\n\n        },\n\n        /**\n         * @ngdoc service\n         * @name decorateRenderContainers\n         * @methodOf ui.grid.cellNav.service:uiGridCellNavService\n         * @description  decorates grid renderContainers with cellNav functions\n         */\n        decorateRenderContainers: function (grid) {\n\n          var rightContainer = grid.hasRightContainer() ? grid.renderContainers.right : null;\n          var leftContainer = grid.hasLeftContainer() ? grid.renderContainers.left : null;\n\n          if (leftContainer !== null) {\n            grid.renderContainers.left.cellNav = new UiGridCellNav(grid.renderContainers.body, leftContainer, rightContainer, grid.renderContainers.body);\n          }\n          if (rightContainer !== null) {\n            grid.renderContainers.right.cellNav = new UiGridCellNav(grid.renderContainers.body, rightContainer, grid.renderContainers.body, leftContainer);\n          }\n\n          grid.renderContainers.body.cellNav = new UiGridCellNav(grid.renderContainers.body, grid.renderContainers.body, leftContainer, rightContainer);\n        },\n\n        /**\n         * @ngdoc service\n         * @name getDirection\n         * @methodOf ui.grid.cellNav.service:uiGridCellNavService\n         * @description  determines which direction to for a given keyDown event\n         * @returns {uiGridCellNavConstants.direction} direction\n         */\n        getDirection: function (evt) {\n          if (evt.keyCode === uiGridConstants.keymap.LEFT ||\n            (evt.keyCode === uiGridConstants.keymap.TAB && evt.shiftKey)) {\n            return uiGridCellNavConstants.direction.LEFT;\n          }\n          if (evt.keyCode === uiGridConstants.keymap.RIGHT ||\n            evt.keyCode === uiGridConstants.keymap.TAB) {\n            return uiGridCellNavConstants.direction.RIGHT;\n          }\n\n          if (evt.keyCode === uiGridConstants.keymap.UP ||\n            (evt.keyCode === uiGridConstants.keymap.ENTER && evt.shiftKey) ) {\n            return uiGridCellNavConstants.direction.UP;\n          }\n\n          if (evt.keyCode === uiGridConstants.keymap.PG_UP){\n            return uiGridCellNavConstants.direction.PG_UP;\n          }\n\n          if (evt.keyCode === uiGridConstants.keymap.DOWN ||\n            evt.keyCode === uiGridConstants.keymap.ENTER && !(evt.ctrlKey || evt.altKey)) {\n            return uiGridCellNavConstants.direction.DOWN;\n          }\n\n          if (evt.keyCode === uiGridConstants.keymap.PG_DOWN){\n            return uiGridCellNavConstants.direction.PG_DOWN;\n          }\n\n          return null;\n        },\n\n        /**\n         * @ngdoc service\n         * @name cellNavColumnBuilder\n         * @methodOf ui.grid.cellNav.service:uiGridCellNavService\n         * @description columnBuilder function that adds cell navigation properties to grid column\n         * @returns {promise} promise that will load any needed templates when resolved\n         */\n        cellNavColumnBuilder: function (colDef, col, gridOptions) {\n          var promises = [];\n\n          /**\n           *  @ngdoc object\n           *  @name ui.grid.cellNav.api:ColumnDef\n           *\n           *  @description Column Definitions for cellNav feature, these are available to be\n           *  set using the ui-grid {@link ui.grid.class:GridOptions.columnDef gridOptions.columnDefs}\n           */\n\n          /**\n           *  @ngdoc object\n           *  @name allowCellFocus\n           *  @propertyOf  ui.grid.cellNav.api:ColumnDef\n           *  @description Enable focus on a cell within this column.\n           *  <br/>Defaults to true\n           */\n          colDef.allowCellFocus = colDef.allowCellFocus === undefined ? true : colDef.allowCellFocus;\n\n          return $q.all(promises);\n        },\n\n        /**\n         * @ngdoc method\n         * @methodOf ui.grid.cellNav.service:uiGridCellNavService\n         * @name scrollToFocus\n         * @description Scroll the grid such that the specified\n         * row and column is in view, and set focus to the cell in that row and column\n         * @param {Grid} grid the grid you'd like to act upon, usually available\n         * from gridApi.grid\n         * @param {object} rowEntity gridOptions.data[] array instance to make visible and set focus to\n         * @param {object} colDef to make visible and set focus to\n         * @returns {promise} a promise that is resolved after any scrolling is finished\n         */\n        scrollToFocus: function (grid, rowEntity, colDef) {\n          var gridRow = null, gridCol = null;\n\n          if (typeof(rowEntity) !== 'undefined' && rowEntity !== null) {\n            gridRow = grid.getRow(rowEntity);\n          }\n\n          if (typeof(colDef) !== 'undefined' && colDef !== null) {\n            gridCol = grid.getColumn(colDef.name ? colDef.name : colDef.field);\n          }\n          return grid.api.core.scrollToIfNecessary(gridRow, gridCol).then(function () {\n            var rowCol = { row: gridRow, col: gridCol };\n\n            // Broadcast the navigation\n            if (gridRow !== null && gridCol !== null) {\n              grid.cellNav.broadcastCellNav(rowCol);\n            }\n          });\n\n\n\n        },\n\n\n        /**\n         * @ngdoc method\n         * @methodOf ui.grid.cellNav.service:uiGridCellNavService\n         * @name getLeftWidth\n         * @description Get the current drawn width of the columns in the\n         * grid up to the numbered column, and add an apportionment for the\n         * column that we're on.  So if we are on column 0, we want to scroll\n         * 0% (i.e. exclude this column from calc).  If we're on the last column\n         * we want to scroll to 100% (i.e. include this column in the calc). So\n         * we include (thisColIndex / totalNumberCols) % of this column width\n         * @param {Grid} grid the grid you'd like to act upon, usually available\n         * from gridApi.grid\n         * @param {GridColumn} upToCol the column to total up to and including\n         */\n        getLeftWidth: function (grid, upToCol) {\n          var width = 0;\n\n          if (!upToCol) {\n            return width;\n          }\n\n          var lastIndex = grid.renderContainers.body.visibleColumnCache.indexOf( upToCol );\n\n          // total column widths up-to but not including the passed in column\n          grid.renderContainers.body.visibleColumnCache.forEach( function( col, index ) {\n            if ( index < lastIndex ){\n              width += col.drawnWidth;\n            }\n          });\n\n          // pro-rata the final column based on % of total columns.\n          var percentage = lastIndex === 0 ? 0 : (lastIndex + 1) / grid.renderContainers.body.visibleColumnCache.length;\n          width += upToCol.drawnWidth * percentage;\n\n          return width;\n        }\n      };\n\n      return service;\n    }]);\n\n  /**\n   *  @ngdoc directive\n   *  @name ui.grid.cellNav.directive:uiCellNav\n   *  @element div\n   *  @restrict EA\n   *\n   *  @description Adds cell navigation features to the grid columns\n   *\n   *  @example\n   <example module=\"app\">\n   <file name=\"app.js\">\n   var app = angular.module('app', ['ui.grid', 'ui.grid.cellNav']);\n\n   app.controller('MainCtrl', ['$scope', function ($scope) {\n      $scope.data = [\n        { name: 'Bob', title: 'CEO' },\n            { name: 'Frank', title: 'Lowly Developer' }\n      ];\n\n      $scope.columnDefs = [\n        {name: 'name'},\n        {name: 'title'}\n      ];\n    }]);\n   </file>\n   <file name=\"index.html\">\n   <div ng-controller=\"MainCtrl\">\n   <div ui-grid=\"{ data: data, columnDefs: columnDefs }\" ui-grid-cellnav></div>\n   </div>\n   </file>\n   </example>\n   */\n  module.directive('uiGridCellnav', ['gridUtil', 'uiGridCellNavService', 'uiGridCellNavConstants', 'uiGridConstants', 'GridRowColumn', '$timeout', '$compile', 'i18nService',\n    function (gridUtil, uiGridCellNavService, uiGridCellNavConstants, uiGridConstants, GridRowColumn, $timeout, $compile, i18nService) {\n      return {\n        replace: true,\n        priority: -150,\n        require: '^uiGrid',\n        scope: false,\n        controller: function () {},\n        compile: function () {\n          return {\n            pre: function ($scope, $elm, $attrs, uiGridCtrl) {\n              var _scope = $scope;\n\n              var grid = uiGridCtrl.grid;\n              uiGridCellNavService.initializeGrid(grid);\n\n              uiGridCtrl.cellNav = {};\n\n              //Ensure that the object has all of the methods we expect it to\n              uiGridCtrl.cellNav.makeRowCol = function (obj) {\n                if (!(obj instanceof GridRowColumn)) {\n                  obj = new GridRowColumn(obj.row, obj.col);\n                }\n                return obj;\n              };\n\n              uiGridCtrl.cellNav.getActiveCell = function () {\n                var elms = $elm[0].getElementsByClassName('ui-grid-cell-focus');\n                if (elms.length > 0){\n                  return elms[0];\n                }\n\n                return undefined;\n              };\n\n              uiGridCtrl.cellNav.broadcastCellNav = grid.cellNav.broadcastCellNav = function (newRowCol, modifierDown, originEvt) {\n                modifierDown = !(modifierDown === undefined || !modifierDown);\n\n                newRowCol = uiGridCtrl.cellNav.makeRowCol(newRowCol);\n\n                uiGridCtrl.cellNav.broadcastFocus(newRowCol, modifierDown, originEvt);\n                _scope.$broadcast(uiGridCellNavConstants.CELL_NAV_EVENT, newRowCol, modifierDown, originEvt);\n              };\n\n              uiGridCtrl.cellNav.clearFocus = grid.cellNav.clearFocus = function () {\n                grid.cellNav.focusedCells = [];\n                _scope.$broadcast(uiGridCellNavConstants.CELL_NAV_EVENT);\n              };\n\n              uiGridCtrl.cellNav.broadcastFocus = function (rowCol, modifierDown, originEvt) {\n                modifierDown = !(modifierDown === undefined || !modifierDown);\n\n                rowCol = uiGridCtrl.cellNav.makeRowCol(rowCol);\n\n                var row = rowCol.row,\n                  col = rowCol.col;\n\n                var rowColSelectIndex = uiGridCtrl.grid.api.cellNav.rowColSelectIndex(rowCol);\n\n                if (grid.cellNav.lastRowCol === null || rowColSelectIndex === -1 || (grid.cellNav.lastRowCol.col === col && grid.cellNav.lastRowCol.row === row)) {\n                  var newRowCol = new GridRowColumn(row, col);\n\n                  if (grid.cellNav.lastRowCol === null || grid.cellNav.lastRowCol.row !== newRowCol.row || grid.cellNav.lastRowCol.col !== newRowCol.col || grid.options.enableCellEditOnFocus){\n                    grid.api.cellNav.raise.navigate(newRowCol, grid.cellNav.lastRowCol, originEvt);\n                    grid.cellNav.lastRowCol = newRowCol;\n                  }\n                  if (uiGridCtrl.grid.options.modifierKeysToMultiSelectCells && modifierDown) {\n                    grid.cellNav.focusedCells.push(rowCol);\n                  } else {\n                    grid.cellNav.focusedCells = [rowCol];\n                  }\n                } else if (grid.options.modifierKeysToMultiSelectCells && modifierDown &&\n                  rowColSelectIndex >= 0) {\n\n                  grid.cellNav.focusedCells.splice(rowColSelectIndex, 1);\n                }\n              };\n\n              uiGridCtrl.cellNav.handleKeyDown = function (evt) {\n                var direction = uiGridCellNavService.getDirection(evt);\n                if (direction === null) {\n                  return null;\n                }\n\n                var containerId = 'body';\n                if (evt.uiGridTargetRenderContainerId) {\n                  containerId = evt.uiGridTargetRenderContainerId;\n                }\n\n                // Get the last-focused row+col combo\n                var lastRowCol = uiGridCtrl.grid.api.cellNav.getFocusedCell();\n                if (lastRowCol) {\n                  // Figure out which new row+combo we're navigating to\n                  var rowCol = uiGridCtrl.grid.renderContainers[containerId].cellNav.getNextRowCol(direction, lastRowCol.row, lastRowCol.col);\n                  var focusableCols = uiGridCtrl.grid.renderContainers[containerId].cellNav.getFocusableCols();\n                  var rowColSelectIndex = uiGridCtrl.grid.api.cellNav.rowColSelectIndex(rowCol);\n                  // Shift+tab on top-left cell should exit cellnav on render container\n                  if (\n                    // Navigating left\n                    direction === uiGridCellNavConstants.direction.LEFT &&\n                    // New col is last col (i.e. wrap around)\n                    rowCol.col === focusableCols[focusableCols.length - 1] &&\n                    // Staying on same row, which means we're at first row\n                    rowCol.row === lastRowCol.row &&\n                    evt.keyCode === uiGridConstants.keymap.TAB &&\n                    evt.shiftKey\n                  ) {\n                    grid.cellNav.focusedCells.splice(rowColSelectIndex, 1);\n                    uiGridCtrl.cellNav.clearFocus();\n                    return true;\n                  }\n                  // Tab on bottom-right cell should exit cellnav on render container\n                  else if (\n                    direction === uiGridCellNavConstants.direction.RIGHT &&\n                    // New col is first col (i.e. wrap around)\n                    rowCol.col === focusableCols[0] &&\n                    // Staying on same row, which means we're at first row\n                    rowCol.row === lastRowCol.row &&\n                    evt.keyCode === uiGridConstants.keymap.TAB &&\n                    !evt.shiftKey\n                  ) {\n                    grid.cellNav.focusedCells.splice(rowColSelectIndex, 1);\n                    uiGridCtrl.cellNav.clearFocus();\n                    return true;\n                  }\n\n                  // Scroll to the new cell, if it's not completely visible within the render container's viewport\n                  grid.scrollToIfNecessary(rowCol.row, rowCol.col).then(function () {\n                    uiGridCtrl.cellNav.broadcastCellNav(rowCol, null, evt);\n                  });\n\n\n                  evt.stopPropagation();\n                  evt.preventDefault();\n\n                  return false;\n                }\n              };\n            },\n            post: function ($scope, $elm, $attrs, uiGridCtrl) {\n              var _scope = $scope;\n              var grid = uiGridCtrl.grid;\n              var usesAria = true;\n\n              // Detect whether we are using ngAria\n              // (if ngAria module is not used then the stuff inside addAriaLiveRegion\n              // is not used and provides extra fluff)\n              try {\n                angular.module('ngAria');\n              }\n              catch (err) {\n                usesAria = false;\n              }\n\n              function addAriaLiveRegion(){\n                // Thanks to google docs for the inspiration behind how to do this\n                // XXX: Why is this entire mess nessasary?\n                // Because browsers take a lot of coercing to get them to read out live regions\n                //http://www.paciellogroup.com/blog/2012/06/html5-accessibility-chops-aria-rolealert-browser-support/\n                var ariaNotifierDomElt = '<div ' +\n                                           'id=\"' + grid.id +'-aria-speakable\" ' +\n                                           'class=\"ui-grid-a11y-ariascreenreader-speakable ui-grid-offscreen\" ' +\n                                           'aria-live=\"assertive\" ' +\n                                           'role=\"alert\" ' +\n                                           'aria-atomic=\"true\" ' +\n                                           'aria-hidden=\"false\" ' +\n                                           'aria-relevant=\"additions\" ' +\n                                           '>' +\n                                           '&nbsp;' +\n                                         '</div>';\n\n                var ariaNotifier = $compile(ariaNotifierDomElt)($scope);\n                $elm.prepend(ariaNotifier);\n                $scope.$on(uiGridCellNavConstants.CELL_NAV_EVENT, function (evt, rowCol, modifierDown, originEvt) {\n                  /*\n                   * If the cell nav event was because of a focus event then we don't want to\n                   * change the notifier text.\n                   * Reasoning: Voice Over fires a focus events when moving arround the grid.\n                   * If the screen reader is handing the grid nav properly then we don't need to\n                   * use the alert to notify the user of the movement.\n                   * In all other cases we do want a notification event.\n                   */\n                  if (originEvt && originEvt.type === 'focus'){return;}\n\n                  function setNotifyText(text){\n                    if (text === ariaNotifier.text().trim()){return;}\n                    ariaNotifier[0].style.clip = 'rect(0px,0px,0px,0px)';\n                    /*\n                     * This is how google docs handles clearing the div. Seems to work better than setting the text of the div to ''\n                     */\n                    ariaNotifier[0].innerHTML = \"\";\n                    ariaNotifier[0].style.visibility = 'hidden';\n                    ariaNotifier[0].style.visibility = 'visible';\n                    if (text !== ''){\n                      ariaNotifier[0].style.clip = 'auto';\n                      /*\n                       * The space after the text is something that google docs does.\n                       */\n                      ariaNotifier[0].appendChild(document.createTextNode(text + \" \"));\n                      ariaNotifier[0].style.visibility = 'hidden';\n                      ariaNotifier[0].style.visibility = 'visible';\n                    }\n                  }\n\n                  function getAppendedColumnHeaderText(col) {\n                    return ', ' + i18nService.getSafeText('headerCell.aria.column') + ' ' + col.displayName;\n                  }\n\n                  function getCellDisplayValue(currentRowColumn) {\n                    if (currentRowColumn.col.field === 'selectionRowHeaderCol') {\n                      // This is the case when the 'selection' feature is used in the grid and the user has moved\n                      // to or inside of the left grid container which holds the checkboxes for selecting rows.\n                      // This is necessary for Accessibility. Without this a screen reader cannot determine if the row\n                      // is or is not currently selected.\n                        return currentRowColumn.row.isSelected ? i18nService.getSafeText('search.aria.selected') : i18nService.getSafeText('search.aria.notSelected');\n                      } else {\n                        return grid.getCellDisplayValue(currentRowColumn.row, currentRowColumn.col);\n                      }\n                    }\n\n                  var values = [];\n                  var currentSelection = grid.api.cellNav.getCurrentSelection();\n                  for (var i = 0; i < currentSelection.length; i++) {\n                    var cellDisplayValue = getCellDisplayValue(currentSelection[i]) + getAppendedColumnHeaderText(currentSelection[i].col);\n                    values.push(cellDisplayValue);\n                  }\n                  var cellText = values.toString();\n                  setNotifyText(cellText);\n\n                });\n              }\n              // Only add the ngAria stuff it will be used\n              if (usesAria) {\n                addAriaLiveRegion();\n              }\n            }\n          };\n        }\n      };\n    }]);\n\n  module.directive('uiGridRenderContainer', ['$timeout', '$document', 'gridUtil', 'uiGridConstants', 'uiGridCellNavService', '$compile','uiGridCellNavConstants',\n    function ($timeout, $document, gridUtil, uiGridConstants, uiGridCellNavService, $compile, uiGridCellNavConstants) {\n      return {\n        replace: true,\n        priority: -99999, //this needs to run very last\n        require: ['^uiGrid', 'uiGridRenderContainer', '?^uiGridCellnav'],\n        scope: false,\n        compile: function () {\n          return {\n            post: function ($scope, $elm, $attrs, controllers) {\n              var uiGridCtrl = controllers[0],\n                 renderContainerCtrl = controllers[1],\n                 uiGridCellnavCtrl = controllers[2];\n\n              // Skip attaching cell-nav specific logic if the directive is not attached above us\n              if (!uiGridCtrl.grid.api.cellNav) { return; }\n\n              var containerId = renderContainerCtrl.containerId;\n\n              var grid = uiGridCtrl.grid;\n\n              //run each time a render container is created\n              uiGridCellNavService.decorateRenderContainers(grid);\n\n              // focusser only created for body\n              if (containerId !== 'body') {\n                return;\n              }\n\n\n\n              if (uiGridCtrl.grid.options.modifierKeysToMultiSelectCells){\n                $elm.attr('aria-multiselectable', true);\n              } else {\n                $elm.attr('aria-multiselectable', false);\n              }\n\n              //add an element with no dimensions that can be used to set focus and capture keystrokes\n              var focuser = $compile('<div class=\"ui-grid-focuser\" role=\"region\" aria-live=\"assertive\" aria-atomic=\"false\" tabindex=\"0\" aria-controls=\"' + grid.id +'-aria-speakable '+ grid.id + '-grid-container' +'\" aria-owns=\"' + grid.id + '-grid-container' + '\"></div>')($scope);\n              $elm.append(focuser);\n\n              focuser.on('focus', function (evt) {\n                evt.uiGridTargetRenderContainerId = containerId;\n                var rowCol = uiGridCtrl.grid.api.cellNav.getFocusedCell();\n                if (rowCol === null) {\n                  rowCol = uiGridCtrl.grid.renderContainers[containerId].cellNav.getNextRowCol(uiGridCellNavConstants.direction.DOWN, null, null);\n                  if (rowCol.row && rowCol.col) {\n                    uiGridCtrl.cellNav.broadcastCellNav(rowCol);\n                  }\n                }\n              });\n\n              uiGridCellnavCtrl.setAriaActivedescendant = function(id){\n                $elm.attr('aria-activedescendant', id);\n              };\n\n              uiGridCellnavCtrl.removeAriaActivedescendant = function(id){\n                if ($elm.attr('aria-activedescendant') === id){\n                  $elm.attr('aria-activedescendant', '');\n                }\n              };\n\n\n              uiGridCtrl.focus = function () {\n                gridUtil.focus.byElement(focuser[0]);\n                //allow for first time grid focus\n              };\n\n              var viewPortKeyDownWasRaisedForRowCol = null;\n              // Bind to keydown events in the render container\n              focuser.on('keydown', function (evt) {\n                evt.uiGridTargetRenderContainerId = containerId;\n                var rowCol = uiGridCtrl.grid.api.cellNav.getFocusedCell();\n                var raiseViewPortKeyDown = uiGridCtrl.grid.options.keyDownOverrides.some(function (override) {\n                    return Object.keys(override).every( function (property) {\n                        return override[property] === evt[property];\n                    });\n                });\n                var result = raiseViewPortKeyDown ? null : uiGridCtrl.cellNav.handleKeyDown(evt);\n                if (result === null) {\n                  uiGridCtrl.grid.api.cellNav.raise.viewPortKeyDown(evt, rowCol, uiGridCtrl.cellNav.handleKeyDown);\n                  viewPortKeyDownWasRaisedForRowCol = rowCol;\n                }\n              });\n              //Bind to keypress events in the render container\n              //keypress events are needed by edit function so the key press\n              //that initiated an edit is not lost\n              //must fire the event in a timeout so the editor can\n              //initialize and subscribe to the event on another event loop\n              focuser.on('keypress', function (evt) {\n                if (viewPortKeyDownWasRaisedForRowCol) {\n                  $timeout(function () {\n                    uiGridCtrl.grid.api.cellNav.raise.viewPortKeyPress(evt, viewPortKeyDownWasRaisedForRowCol);\n                  },4);\n\n                  viewPortKeyDownWasRaisedForRowCol = null;\n                }\n              });\n\n              $scope.$on('$destroy', function(){\n                //Remove all event handlers associated with this focuser.\n                focuser.off();\n              });\n\n            }\n          };\n        }\n      };\n    }]);\n\n  module.directive('uiGridViewport', ['$timeout', '$document', 'gridUtil', 'uiGridConstants', 'uiGridCellNavService', 'uiGridCellNavConstants','$log','$compile',\n    function ($timeout, $document, gridUtil, uiGridConstants, uiGridCellNavService, uiGridCellNavConstants, $log, $compile) {\n      return {\n        replace: true,\n        priority: -99999, //this needs to run very last\n        require: ['^uiGrid', '^uiGridRenderContainer', '?^uiGridCellnav'],\n        scope: false,\n        compile: function () {\n          return {\n            pre: function ($scope, $elm, $attrs, uiGridCtrl) {\n            },\n            post: function ($scope, $elm, $attrs, controllers) {\n              var uiGridCtrl = controllers[0],\n                renderContainerCtrl = controllers[1];\n\n              // Skip attaching cell-nav specific logic if the directive is not attached above us\n              if (!uiGridCtrl.grid.api.cellNav) { return; }\n\n              var containerId = renderContainerCtrl.containerId;\n              //no need to process for other containers\n              if (containerId !== 'body') {\n                return;\n              }\n\n              var grid = uiGridCtrl.grid;\n\n              grid.api.core.on.scrollBegin($scope, function (args) {\n\n                // Skip if there's no currently-focused cell\n                var lastRowCol = uiGridCtrl.grid.api.cellNav.getFocusedCell();\n                if (lastRowCol === null) {\n                  return;\n                }\n\n                //if not in my container, move on\n                //todo: worry about horiz scroll\n                if (!renderContainerCtrl.colContainer.containsColumn(lastRowCol.col)) {\n                  return;\n                }\n\n                uiGridCtrl.cellNav.clearFocus();\n\n              });\n\n              grid.api.core.on.scrollEnd($scope, function (args) {\n                // Skip if there's no currently-focused cell\n                var lastRowCol = uiGridCtrl.grid.api.cellNav.getFocusedCell();\n                if (lastRowCol === null) {\n                  return;\n                }\n\n                //if not in my container, move on\n                //todo: worry about horiz scroll\n                if (!renderContainerCtrl.colContainer.containsColumn(lastRowCol.col)) {\n                  return;\n                }\n\n                uiGridCtrl.cellNav.broadcastCellNav(lastRowCol);\n\n              });\n\n              grid.api.cellNav.on.navigate($scope, function () {\n                //focus again because it can be lost\n                 uiGridCtrl.focus();\n              });\n\n            }\n          };\n        }\n      };\n    }]);\n\n  /**\n   *  @ngdoc directive\n   *  @name ui.grid.cellNav.directive:uiGridCell\n   *  @element div\n   *  @restrict A\n   *  @description Stacks on top of ui.grid.uiGridCell to provide cell navigation\n   */\n  module.directive('uiGridCell', ['$timeout', '$document', 'uiGridCellNavService', 'gridUtil', 'uiGridCellNavConstants', 'uiGridConstants', 'GridRowColumn',\n    function ($timeout, $document, uiGridCellNavService, gridUtil, uiGridCellNavConstants, uiGridConstants, GridRowColumn) {\n      return {\n        priority: -150, // run after default uiGridCell directive and ui.grid.edit uiGridCell\n        restrict: 'A',\n        require: ['^uiGrid', '?^uiGridCellnav'],\n        scope: false,\n        link: function ($scope, $elm, $attrs, controllers) {\n          var uiGridCtrl = controllers[0],\n              uiGridCellnavCtrl = controllers[1];\n          // Skip attaching cell-nav specific logic if the directive is not attached above us\n          if (!uiGridCtrl.grid.api.cellNav) { return; }\n\n          if (!$scope.col.colDef.allowCellFocus) {\n            return;\n          }\n\n          //Convinience local variables\n          var grid = uiGridCtrl.grid;\n          $scope.focused = false;\n\n          // Make this cell focusable but only with javascript/a mouse click\n          $elm.attr('tabindex', -1);\n\n          // When a cell is clicked, broadcast a cellNav event saying that this row+col combo is now focused\n          $elm.find('div').on('click', function (evt) {\n            uiGridCtrl.cellNav.broadcastCellNav(new GridRowColumn($scope.row, $scope.col), evt.ctrlKey || evt.metaKey, evt);\n\n            evt.stopPropagation();\n            $scope.$apply();\n          });\n\n\n          /*\n           * XXX Hack for screen readers.\n           * This allows the grid to focus using only the screen reader cursor.\n           * Since the focus event doesn't include key press information we can't use it\n           * as our primary source of the event.\n           */\n          $elm.on('mousedown', preventMouseDown);\n\n          //turn on and off for edit events\n          if (uiGridCtrl.grid.api.edit) {\n            uiGridCtrl.grid.api.edit.on.beginCellEdit($scope, function () {\n              $elm.off('mousedown', preventMouseDown);\n            });\n\n            uiGridCtrl.grid.api.edit.on.afterCellEdit($scope, function () {\n              $elm.on('mousedown', preventMouseDown);\n            });\n\n            uiGridCtrl.grid.api.edit.on.cancelCellEdit($scope, function () {\n              $elm.on('mousedown', preventMouseDown);\n            });\n          }\n\n          // In case we created a new row, and we are the new created row by ngRepeat\n          // then this cell content might have been selected previously\n          refreshCellFocus();\n\n          function preventMouseDown(evt) {\n            //Prevents the foucus event from firing if the click event is already going to fire.\n            //If both events fire it will cause bouncing behavior.\n            evt.preventDefault();\n          }\n\n          //You can only focus on elements with a tabindex value\n          $elm.on('focus', function (evt) {\n            uiGridCtrl.cellNav.broadcastCellNav(new GridRowColumn($scope.row, $scope.col), false, evt);\n            evt.stopPropagation();\n            $scope.$apply();\n          });\n\n          // This event is fired for all cells.  If the cell matches, then focus is set\n          $scope.$on(uiGridCellNavConstants.CELL_NAV_EVENT, refreshCellFocus);\n\n          // Refresh cell focus when a new row id added to the grid\n          var dataChangeDereg = uiGridCtrl.grid.registerDataChangeCallback(function (grid) {\n            // Clear the focus if it's set to avoid the wrong cell getting focused during\n            // a short period of time (from now until $timeout function executed)\n            clearFocus();\n\n            $scope.$applyAsync(refreshCellFocus);\n          }, [uiGridConstants.dataChange.ROW]);\n\n          function refreshCellFocus() {\n            var isFocused = grid.cellNav.focusedCells.some(function (focusedRowCol, index) {\n              return (focusedRowCol.row === $scope.row && focusedRowCol.col === $scope.col);\n            });\n            if (isFocused) {\n              setFocused();\n            } else {\n              clearFocus();\n            }\n          }\n\n          function setFocused() {\n            if (!$scope.focused){\n              var div = $elm.find('div');\n              div.addClass('ui-grid-cell-focus');\n              $elm.attr('aria-selected', true);\n              uiGridCellnavCtrl.setAriaActivedescendant($elm.attr('id'));\n              $scope.focused = true;\n            }\n          }\n\n          function clearFocus() {\n            if ($scope.focused){\n              var div = $elm.find('div');\n              div.removeClass('ui-grid-cell-focus');\n              $elm.attr('aria-selected', false);\n              uiGridCellnavCtrl.removeAriaActivedescendant($elm.attr('id'));\n              $scope.focused = false;\n            }\n          }\n\n          $scope.$on('$destroy', function () {\n            dataChangeDereg();\n\n            //.off withouth paramaters removes all handlers\n            $elm.find('div').off();\n            $elm.off();\n          });\n        }\n      };\n    }]);\n\n})();\n\n(function () {\n  'use strict';\n\n  /**\n   * @ngdoc overview\n   * @name ui.grid.edit\n   * @description\n   *\n   * # ui.grid.edit\n   *\n   * <div class=\"alert alert-success\" role=\"alert\"><strong>Stable</strong> This feature is stable. There should no longer be breaking api changes without a deprecation warning.</div>\n   *\n   * This module provides cell editing capability to ui.grid. The goal was to emulate keying data in a spreadsheet via\n   * a keyboard.\n   * <br/>\n   * <br/>\n   * To really get the full spreadsheet-like data entry, the ui.grid.cellNav module should be used. This will allow the\n   * user to key data and then tab, arrow, or enter to the cells beside or below.\n   *\n   * <div doc-module-components=\"ui.grid.edit\"></div>\n   */\n\n  var module = angular.module('ui.grid.edit', ['ui.grid']);\n\n  /**\n   *  @ngdoc object\n   *  @name ui.grid.edit.constant:uiGridEditConstants\n   *\n   *  @description constants available in edit module\n   */\n  module.constant('uiGridEditConstants', {\n    EDITABLE_CELL_TEMPLATE: /EDITABLE_CELL_TEMPLATE/g,\n    //must be lowercase because template bulder converts to lower\n    EDITABLE_CELL_DIRECTIVE: /editable_cell_directive/g,\n    events: {\n      BEGIN_CELL_EDIT: 'uiGridEventBeginCellEdit',\n      END_CELL_EDIT: 'uiGridEventEndCellEdit',\n      CANCEL_CELL_EDIT: 'uiGridEventCancelCellEdit'\n    }\n  });\n\n  /**\n   *  @ngdoc service\n   *  @name ui.grid.edit.service:uiGridEditService\n   *\n   *  @description Services for editing features\n   */\n  module.service('uiGridEditService', ['$q', 'uiGridConstants', 'gridUtil',\n    function ($q, uiGridConstants, gridUtil) {\n\n      var service = {\n\n        initializeGrid: function (grid) {\n\n          service.defaultGridOptions(grid.options);\n\n          grid.registerColumnBuilder(service.editColumnBuilder);\n          grid.edit = {};\n\n          /**\n           *  @ngdoc object\n           *  @name ui.grid.edit.api:PublicApi\n           *\n           *  @description Public Api for edit feature\n           */\n          var publicApi = {\n            events: {\n              edit: {\n                /**\n                 * @ngdoc event\n                 * @name afterCellEdit\n                 * @eventOf  ui.grid.edit.api:PublicApi\n                 * @description raised when cell editing is complete\n                 * <pre>\n                 *      gridApi.edit.on.afterCellEdit(scope,function(rowEntity, colDef){})\n                 * </pre>\n                 * @param {object} rowEntity the options.data element that was edited\n                 * @param {object} colDef the column that was edited\n                 * @param {object} newValue new value\n                 * @param {object} oldValue old value\n                 */\n                afterCellEdit: function (rowEntity, colDef, newValue, oldValue) {\n                },\n                /**\n                 * @ngdoc event\n                 * @name beginCellEdit\n                 * @eventOf  ui.grid.edit.api:PublicApi\n                 * @description raised when cell editing starts on a cell\n                 * <pre>\n                 *      gridApi.edit.on.beginCellEdit(scope,function(rowEntity, colDef){})\n                 * </pre>\n                 * @param {object} rowEntity the options.data element that was edited\n                 * @param {object} colDef the column that was edited\n                 * @param {object} triggerEvent the event that triggered the edit.  Useful to prevent losing keystrokes on some\n                 *                 complex editors\n                 */\n                beginCellEdit: function (rowEntity, colDef, triggerEvent) {\n                },\n                /**\n                 * @ngdoc event\n                 * @name cancelCellEdit\n                 * @eventOf  ui.grid.edit.api:PublicApi\n                 * @description raised when cell editing is cancelled on a cell\n                 * <pre>\n                 *      gridApi.edit.on.cancelCellEdit(scope,function(rowEntity, colDef){})\n                 * </pre>\n                 * @param {object} rowEntity the options.data element that was edited\n                 * @param {object} colDef the column that was edited\n                 */\n                cancelCellEdit: function (rowEntity, colDef) {\n                }\n              }\n            },\n            methods: {\n              edit: { }\n            }\n          };\n\n          grid.api.registerEventsFromObject(publicApi.events);\n          //grid.api.registerMethodsFromObject(publicApi.methods);\n\n        },\n\n        defaultGridOptions: function (gridOptions) {\n\n          /**\n           *  @ngdoc object\n           *  @name ui.grid.edit.api:GridOptions\n           *\n           *  @description Options for configuring the edit feature, these are available to be\n           *  set using the ui-grid {@link ui.grid.class:GridOptions gridOptions}\n           */\n\n          /**\n           *  @ngdoc object\n           *  @name enableCellEdit\n           *  @propertyOf  ui.grid.edit.api:GridOptions\n           *  @description If defined, sets the default value for the editable flag on each individual colDefs\n           *  if their individual enableCellEdit configuration is not defined. Defaults to undefined.\n           */\n\n          /**\n           *  @ngdoc object\n           *  @name cellEditableCondition\n           *  @propertyOf  ui.grid.edit.api:GridOptions\n           *  @description If specified, either a value or function to be used by all columns before editing.\n           *  If false, then editing of cell is not allowed.\n           *  @example\n           *  <pre>\n           *  function($scope, triggerEvent){\n           *    //use $scope.row.entity, $scope.col.colDef and triggerEvent to determine if editing is allowed\n           *    return true;\n           *  }\n           *  </pre>\n           */\n          gridOptions.cellEditableCondition = gridOptions.cellEditableCondition === undefined ? true : gridOptions.cellEditableCondition;\n\n          /**\n           *  @ngdoc object\n           *  @name editableCellTemplate\n           *  @propertyOf  ui.grid.edit.api:GridOptions\n           *  @description If specified, cellTemplate to use as the editor for all columns.\n           *  <br/> defaults to 'ui-grid/cellTextEditor'\n           */\n\n          /**\n           *  @ngdoc object\n           *  @name enableCellEditOnFocus\n           *  @propertyOf  ui.grid.edit.api:GridOptions\n           *  @description If true, then editor is invoked as soon as cell receives focus. Default false.\n           *  <br/>_requires cellNav feature and the edit feature to be enabled_\n           */\n            //enableCellEditOnFocus can only be used if cellnav module is used\n          gridOptions.enableCellEditOnFocus = gridOptions.enableCellEditOnFocus === undefined ? false : gridOptions.enableCellEditOnFocus;\n        },\n\n        /**\n         * @ngdoc service\n         * @name editColumnBuilder\n         * @methodOf ui.grid.edit.service:uiGridEditService\n         * @description columnBuilder function that adds edit properties to grid column\n         * @returns {promise} promise that will load any needed templates when resolved\n         */\n        editColumnBuilder: function (colDef, col, gridOptions) {\n\n          var promises = [];\n\n          /**\n           *  @ngdoc object\n           *  @name ui.grid.edit.api:ColumnDef\n           *\n           *  @description Column Definition for edit feature, these are available to be\n           *  set using the ui-grid {@link ui.grid.class:GridOptions.columnDef gridOptions.columnDefs}\n           */\n\n          /**\n           *  @ngdoc object\n           *  @name enableCellEdit\n           *  @propertyOf  ui.grid.edit.api:ColumnDef\n           *  @description enable editing on column\n           */\n          colDef.enableCellEdit = colDef.enableCellEdit === undefined ? (gridOptions.enableCellEdit === undefined ?\n            (colDef.type !== 'object') : gridOptions.enableCellEdit) : colDef.enableCellEdit;\n\n          /**\n           *  @ngdoc object\n           *  @name cellEditableCondition\n           *  @propertyOf  ui.grid.edit.api:ColumnDef\n           *  @description If specified, either a value or function evaluated before editing cell.  If falsy, then editing of cell is not allowed.\n           *  @example\n           *  <pre>\n           *  function($scope, triggerEvent){\n           *    //use $scope.row.entity, $scope.col.colDef and triggerEvent to determine if editing is allowed\n           *    return true;\n           *  }\n           *  </pre>\n           */\n          colDef.cellEditableCondition = colDef.cellEditableCondition === undefined ? gridOptions.cellEditableCondition :  colDef.cellEditableCondition;\n\n          /**\n           *  @ngdoc object\n           *  @name editableCellTemplate\n           *  @propertyOf  ui.grid.edit.api:ColumnDef\n           *  @description cell template to be used when editing this column. Can be Url or text template\n           *  <br/>Defaults to gridOptions.editableCellTemplate\n           */\n          if (colDef.enableCellEdit) {\n            colDef.editableCellTemplate = colDef.editableCellTemplate || gridOptions.editableCellTemplate || 'ui-grid/cellEditor';\n\n            promises.push(gridUtil.getTemplate(colDef.editableCellTemplate)\n              .then(\n              function (template) {\n                col.editableCellTemplate = template;\n              },\n              function (res) {\n                // Todo handle response error here?\n                throw new Error(\"Couldn't fetch/use colDef.editableCellTemplate '\" + colDef.editableCellTemplate + \"'\");\n              }));\n          }\n\n          /**\n           *  @ngdoc object\n           *  @name enableCellEditOnFocus\n           *  @propertyOf  ui.grid.edit.api:ColumnDef\n           *  @requires ui.grid.cellNav\n           *  @description If true, then editor is invoked as soon as cell receives focus. Default false.\n           *  <br>_requires both the cellNav feature and the edit feature to be enabled_\n           */\n            //enableCellEditOnFocus can only be used if cellnav module is used\n          colDef.enableCellEditOnFocus = colDef.enableCellEditOnFocus === undefined ? gridOptions.enableCellEditOnFocus : colDef.enableCellEditOnFocus;\n\n\n          /**\n           *  @ngdoc string\n           *  @name editModelField\n           *  @propertyOf  ui.grid.edit.api:ColumnDef\n           *  @description a bindable string value that is used when binding to edit controls instead of colDef.field\n           *  <br/> example: You have a complex property on and object like state:{abbrev:'MS',name:'Mississippi'}.  The\n           *  grid should display state.name in the cell and sort/filter based on the state.name property but the editor\n           *  requires the full state object.\n           *  <br/>colDef.field = 'state.name'\n           *  <br/>colDef.editModelField = 'state'\n           */\n          //colDef.editModelField\n\n          return $q.all(promises);\n        },\n\n        /**\n         * @ngdoc service\n         * @name isStartEditKey\n         * @methodOf ui.grid.edit.service:uiGridEditService\n         * @description  Determines if a keypress should start editing.  Decorate this service to override with your\n         * own key events.  See service decorator in angular docs.\n         * @param {Event} evt keydown event\n         * @returns {boolean} true if an edit should start\n         */\n        isStartEditKey: function (evt) {\n          if (evt.metaKey ||\n              evt.keyCode === uiGridConstants.keymap.ESC ||\n              evt.keyCode === uiGridConstants.keymap.SHIFT ||\n              evt.keyCode === uiGridConstants.keymap.CTRL ||\n              evt.keyCode === uiGridConstants.keymap.ALT ||\n              evt.keyCode === uiGridConstants.keymap.WIN ||\n              evt.keyCode === uiGridConstants.keymap.CAPSLOCK ||\n\n             evt.keyCode === uiGridConstants.keymap.LEFT ||\n            (evt.keyCode === uiGridConstants.keymap.TAB && evt.shiftKey) ||\n\n            evt.keyCode === uiGridConstants.keymap.RIGHT ||\n            evt.keyCode === uiGridConstants.keymap.TAB ||\n\n            evt.keyCode === uiGridConstants.keymap.UP ||\n            (evt.keyCode === uiGridConstants.keymap.ENTER && evt.shiftKey) ||\n\n            evt.keyCode === uiGridConstants.keymap.DOWN ||\n            evt.keyCode === uiGridConstants.keymap.ENTER) {\n            return false;\n\n          }\n          return true;\n        }\n\n\n      };\n\n      return service;\n\n    }]);\n\n  /**\n   *  @ngdoc directive\n   *  @name ui.grid.edit.directive:uiGridEdit\n   *  @element div\n   *  @restrict A\n   *\n   *  @description Adds editing features to the ui-grid directive.\n   *\n   *  @example\n   <example module=\"app\">\n   <file name=\"app.js\">\n   var app = angular.module('app', ['ui.grid', 'ui.grid.edit']);\n\n   app.controller('MainCtrl', ['$scope', function ($scope) {\n      $scope.data = [\n        { name: 'Bob', title: 'CEO' },\n            { name: 'Frank', title: 'Lowly Developer' }\n      ];\n\n      $scope.columnDefs = [\n        {name: 'name', enableCellEdit: true},\n        {name: 'title', enableCellEdit: true}\n      ];\n    }]);\n   </file>\n   <file name=\"index.html\">\n   <div ng-controller=\"MainCtrl\">\n   <div ui-grid=\"{ data: data, columnDefs: columnDefs }\" ui-grid-edit></div>\n   </div>\n   </file>\n   </example>\n   */\n  module.directive('uiGridEdit', ['gridUtil', 'uiGridEditService', function (gridUtil, uiGridEditService) {\n    return {\n      replace: true,\n      priority: 0,\n      require: '^uiGrid',\n      scope: false,\n      compile: function () {\n        return {\n          pre: function ($scope, $elm, $attrs, uiGridCtrl) {\n            uiGridEditService.initializeGrid(uiGridCtrl.grid);\n          },\n          post: function ($scope, $elm, $attrs, uiGridCtrl) {\n          }\n        };\n      }\n    };\n  }]);\n\n  /**\n   *  @ngdoc directive\n   *  @name ui.grid.edit.directive:uiGridRenderContainer\n   *  @element div\n   *  @restrict A\n   *\n   *  @description Adds keydown listeners to renderContainer element so we can capture when to begin edits\n   *\n   */\n  module.directive('uiGridViewport', [ 'uiGridEditConstants',\n    function ( uiGridEditConstants) {\n      return {\n        replace: true,\n        priority: -99998, //run before cellNav\n        require: ['^uiGrid', '^uiGridRenderContainer'],\n        scope: false,\n        compile: function () {\n          return {\n            post: function ($scope, $elm, $attrs, controllers) {\n              var uiGridCtrl = controllers[0];\n\n              // Skip attaching if edit and cellNav is not enabled\n              if (!uiGridCtrl.grid.api.edit || !uiGridCtrl.grid.api.cellNav) { return; }\n\n              var containerId =  controllers[1].containerId;\n              //no need to process for other containers\n              if (containerId !== 'body') {\n                return;\n              }\n\n              //refocus on the grid\n              $scope.$on(uiGridEditConstants.events.CANCEL_CELL_EDIT, function () {\n                uiGridCtrl.focus();\n              });\n              $scope.$on(uiGridEditConstants.events.END_CELL_EDIT, function () {\n                uiGridCtrl.focus();\n              });\n\n            }\n          };\n        }\n      };\n    }]);\n\n  /**\n   *  @ngdoc directive\n   *  @name ui.grid.edit.directive:uiGridCell\n   *  @element div\n   *  @restrict A\n   *\n   *  @description Stacks on top of ui.grid.uiGridCell to provide in-line editing capabilities to the cell\n   *  Editing Actions.\n   *\n   *  Binds edit start events to the uiGridCell element.  When the events fire, the gridCell element is appended\n   *  with the columnDef.editableCellTemplate element ('cellEditor.html' by default).\n   *\n   *  The editableCellTemplate should respond to uiGridEditConstants.events.BEGIN\\_CELL\\_EDIT angular event\n   *  and do the initial steps needed to edit the cell (setfocus on input element, etc).\n   *\n   *  When the editableCellTemplate recognizes that the editing is ended (blur event, Enter key, etc.)\n   *  it should emit the uiGridEditConstants.events.END\\_CELL\\_EDIT event.\n   *\n   *  If editableCellTemplate recognizes that the editing has been cancelled (esc key)\n   *  it should emit the uiGridEditConstants.events.CANCEL\\_CELL\\_EDIT event.  The original value\n   *  will be set back on the model by the uiGridCell directive.\n   *\n   *  Events that invoke editing:\n   *    - dblclick\n   *    - F2 keydown (when using cell selection)\n   *\n   *  Events that end editing:\n   *    - Dependent on the specific editableCellTemplate\n   *    - Standards should be blur and enter keydown\n   *\n   *  Events that cancel editing:\n   *    - Dependent on the specific editableCellTemplate\n   *    - Standards should be Esc keydown\n   *\n   *  Grid Events that end editing:\n   *    - uiGridConstants.events.GRID_SCROLL\n   *\n   */\n\n  /**\n   *  @ngdoc object\n   *  @name ui.grid.edit.api:GridRow\n   *\n   *  @description GridRow options for edit feature, these are available to be\n   *  set internally only, by other features\n   */\n\n  /**\n   *  @ngdoc object\n   *  @name enableCellEdit\n   *  @propertyOf  ui.grid.edit.api:GridRow\n   *  @description enable editing on row, grouping for example might disable editing on group header rows\n   */\n\n  module.directive('uiGridCell',\n    ['$compile', '$injector', '$timeout', 'uiGridConstants', 'uiGridEditConstants', 'gridUtil', '$parse', 'uiGridEditService', '$rootScope', '$q',\n      function ($compile, $injector, $timeout, uiGridConstants, uiGridEditConstants, gridUtil, $parse, uiGridEditService, $rootScope, $q) {\n        var touchstartTimeout = 500;\n        if ($injector.has('uiGridCellNavService')) {\n          var uiGridCellNavService = $injector.get('uiGridCellNavService');\n        }\n\n        return {\n          priority: -100, // run after default uiGridCell directive\n          restrict: 'A',\n          scope: false,\n          require: '?^uiGrid',\n          link: function ($scope, $elm, $attrs, uiGridCtrl) {\n            var html;\n            var origCellValue;\n            var inEdit = false;\n            var cellModel;\n            var cancelTouchstartTimeout;\n\n            var editCellScope;\n\n            if (!$scope.col.colDef.enableCellEdit) {\n              return;\n            }\n\n            var cellNavNavigateDereg = function() {};\n            var viewPortKeyDownDereg = function() {};\n\n\n            var setEditable = function() {\n              if ($scope.col.colDef.enableCellEdit && $scope.row.enableCellEdit !== false) {\n                if (!$scope.beginEditEventsWired) { //prevent multiple attachments\n                  registerBeginEditEvents();\n                }\n              } else {\n                if ($scope.beginEditEventsWired) {\n                  cancelBeginEditEvents();\n                }\n              }\n            };\n\n            setEditable();\n\n            var rowWatchDereg = $scope.$watch('row', function (n, o) {\n              if (n !== o) {\n                setEditable();\n              }\n            });\n\n\n            $scope.$on('$destroy', function destroyEvents() {\n              rowWatchDereg();\n              // unbind all jquery events in order to avoid memory leaks\n              $elm.off();\n            });\n\n            function registerBeginEditEvents() {\n              $elm.on('dblclick', beginEdit);\n\n              // Add touchstart handling. If the users starts a touch and it doesn't end after X milliseconds, then start the edit\n              $elm.on('touchstart', touchStart);\n\n              if (uiGridCtrl && uiGridCtrl.grid.api.cellNav) {\n\n                viewPortKeyDownDereg = uiGridCtrl.grid.api.cellNav.on.viewPortKeyDown($scope, function (evt, rowCol) {\n                  if (rowCol === null) {\n                    return;\n                  }\n\n                  if (rowCol.row === $scope.row && rowCol.col === $scope.col && !$scope.col.colDef.enableCellEditOnFocus) {\n                    //important to do this before scrollToIfNecessary\n                    beginEditKeyDown(evt);\n                  }\n                });\n\n                cellNavNavigateDereg = uiGridCtrl.grid.api.cellNav.on.navigate($scope, function (newRowCol, oldRowCol, evt) {\n                  if ($scope.col.colDef.enableCellEditOnFocus) {\n                    // Don't begin edit if the cell hasn't changed\n                    if (newRowCol.row === $scope.row && newRowCol.col === $scope.col &&\n                      (!evt || (evt && (evt.type === 'click' || evt.type === 'keydown')))) {\n                      $timeout(function() {\n                        beginEdit(evt);\n                      });\n                    }\n                  }\n                });\n              }\n\n              $scope.beginEditEventsWired = true;\n            }\n\n            function touchStart(event) {\n              // jQuery masks events\n              if (typeof(event.originalEvent) !== 'undefined' && event.originalEvent !== undefined) {\n                event = event.originalEvent;\n              }\n\n              // Bind touchend handler\n              $elm.on('touchend', touchEnd);\n\n              // Start a timeout\n              cancelTouchstartTimeout = $timeout(function() { }, touchstartTimeout);\n\n              // Timeout's done! Start the edit\n              cancelTouchstartTimeout.then(function () {\n                // Use setTimeout to start the edit because beginEdit expects to be outside of $digest\n                setTimeout(beginEdit, 0);\n\n                // Undbind the touchend handler, we don't need it anymore\n                $elm.off('touchend', touchEnd);\n              });\n            }\n\n            // Cancel any touchstart timeout\n            function touchEnd(event) {\n              $timeout.cancel(cancelTouchstartTimeout);\n              $elm.off('touchend', touchEnd);\n            }\n\n            function cancelBeginEditEvents() {\n              $elm.off('dblclick', beginEdit);\n              $elm.off('keydown', beginEditKeyDown);\n              $elm.off('touchstart', touchStart);\n              cellNavNavigateDereg();\n              viewPortKeyDownDereg();\n              $scope.beginEditEventsWired = false;\n            }\n\n            function beginEditKeyDown(evt) {\n              if (uiGridEditService.isStartEditKey(evt)) {\n                beginEdit(evt);\n              }\n            }\n\n            function shouldEdit(col, row, triggerEvent) {\n              return !row.isSaving &&\n                ( angular.isFunction(col.colDef.cellEditableCondition) ?\n                    col.colDef.cellEditableCondition($scope, triggerEvent) :\n                    col.colDef.cellEditableCondition );\n            }\n\n\n            function beginEdit(triggerEvent) {\n              //we need to scroll the cell into focus before invoking the editor\n              $scope.grid.api.core.scrollToIfNecessary($scope.row, $scope.col)\n                .then(function () {\n                  beginEditAfterScroll(triggerEvent);\n                });\n            }\n\n            /**\n             *  @ngdoc property\n             *  @name editDropdownOptionsArray\n             *  @propertyOf ui.grid.edit.api:ColumnDef\n             *  @description an array of values in the format\n             *  [ {id: xxx, value: xxx} ], which is populated\n             *  into the edit dropdown\n             *\n             */\n            /**\n             *  @ngdoc property\n             *  @name editDropdownIdLabel\n             *  @propertyOf ui.grid.edit.api:ColumnDef\n             *  @description the label for the \"id\" field\n             *  in the editDropdownOptionsArray.  Defaults\n             *  to 'id'\n             *  @example\n             *  <pre>\n             *    $scope.gridOptions = {\n             *      columnDefs: [\n             *        {name: 'status', editableCellTemplate: 'ui-grid/dropdownEditor',\n             *          editDropdownOptionsArray: [{code: 1, status: 'active'}, {code: 2, status: 'inactive'}],\n             *          editDropdownIdLabel: 'code', editDropdownValueLabel: 'status' }\n             *      ],\n             *  </pre>\n             *\n             */\n            /**\n             *  @ngdoc property\n             *  @name editDropdownRowEntityOptionsArrayPath\n             *  @propertyOf ui.grid.edit.api:ColumnDef\n             *  @description a path to a property on row.entity containing an\n             *  array of values in the format\n             *  [ {id: xxx, value: xxx} ], which will be used to populate\n             *  the edit dropdown.  This can be used when the dropdown values are dependent on\n             *  the backing row entity.\n             *  If this property is set then editDropdownOptionsArray will be ignored.\n             *  @example\n             *  <pre>\n             *    $scope.gridOptions = {\n             *      columnDefs: [\n             *        {name: 'status', editableCellTemplate: 'ui-grid/dropdownEditor',\n             *          editDropdownRowEntityOptionsArrayPath: 'foo.bars[0].baz',\n             *          editDropdownIdLabel: 'code', editDropdownValueLabel: 'status' }\n             *      ],\n             *  </pre>\n             *\n             */\n            /**\n             *  @ngdoc service\n             *  @name editDropdownOptionsFunction\n             *  @methodOf ui.grid.edit.api:ColumnDef\n             *  @description a function returning an array of values in the format\n             *  [ {id: xxx, value: xxx} ], which will be used to populate\n             *  the edit dropdown.  This can be used when the dropdown values are dependent on\n             *  the backing row entity with some kind of algorithm.\n             *  If this property is set then both editDropdownOptionsArray and\n             *  editDropdownRowEntityOptionsArrayPath will be ignored.\n             *  @param {object} rowEntity the options.data element that the returned array refers to\n             *  @param {object} colDef the column that implements this dropdown\n             *  @returns {object} an array of values in the format\n             *  [ {id: xxx, value: xxx} ] used to populate the edit dropdown\n             *  @example\n             *  <pre>\n             *    $scope.gridOptions = {\n             *      columnDefs: [\n             *        {name: 'status', editableCellTemplate: 'ui-grid/dropdownEditor',\n             *          editDropdownOptionsFunction: function(rowEntity, colDef) {\n             *            if (rowEntity.foo === 'bar') {\n             *              return [{id: 'bar1', value: 'BAR 1'},\n             *                      {id: 'bar2', value: 'BAR 2'},\n             *                      {id: 'bar3', value: 'BAR 3'}];\n             *            } else {\n             *              return [{id: 'foo1', value: 'FOO 1'},\n             *                      {id: 'foo2', value: 'FOO 2'}];\n             *            }\n             *          },\n             *          editDropdownIdLabel: 'code', editDropdownValueLabel: 'status' }\n             *      ],\n             *  </pre>\n             *\n             */\n            /**\n             *  @ngdoc property\n             *  @name editDropdownValueLabel\n             *  @propertyOf ui.grid.edit.api:ColumnDef\n             *  @description the label for the \"value\" field\n             *  in the editDropdownOptionsArray.  Defaults\n             *  to 'value'\n             *  @example\n             *  <pre>\n             *    $scope.gridOptions = {\n             *      columnDefs: [\n             *        {name: 'status', editableCellTemplate: 'ui-grid/dropdownEditor',\n             *          editDropdownOptionsArray: [{code: 1, status: 'active'}, {code: 2, status: 'inactive'}],\n             *          editDropdownIdLabel: 'code', editDropdownValueLabel: 'status' }\n             *      ],\n             *  </pre>\n             *\n             */\n            /**\n             *  @ngdoc property\n             *  @name editDropdownFilter\n             *  @propertyOf ui.grid.edit.api:ColumnDef\n             *  @description A filter that you would like to apply to the values in the options list\n             *  of the dropdown.  For example if you were using angular-translate you might set this\n             *  to `'translate'`\n             *  @example\n             *  <pre>\n             *    $scope.gridOptions = {\n             *      columnDefs: [\n             *        {name: 'status', editableCellTemplate: 'ui-grid/dropdownEditor',\n             *          editDropdownOptionsArray: [{code: 1, status: 'active'}, {code: 2, status: 'inactive'}],\n             *          editDropdownIdLabel: 'code', editDropdownValueLabel: 'status', editDropdownFilter: 'translate' }\n             *      ],\n             *  </pre>\n             *\n             */\n            function beginEditAfterScroll(triggerEvent) {\n              // If we are already editing, then just skip this so we don't try editing twice...\n              if (inEdit) {\n                return;\n              }\n\n              if (!shouldEdit($scope.col, $scope.row, triggerEvent)) {\n                return;\n              }\n\n              var modelField = $scope.row.getQualifiedColField($scope.col);\n              if ($scope.col.colDef.editModelField) {\n                modelField = gridUtil.preEval('row.entity.' + $scope.col.colDef.editModelField);\n              }\n\n              cellModel = $parse(modelField);\n\n              //get original value from the cell\n              origCellValue = cellModel($scope);\n\n              html = $scope.col.editableCellTemplate;\n              html = html.replace(uiGridConstants.MODEL_COL_FIELD, modelField);\n              html = html.replace(uiGridConstants.COL_FIELD, 'grid.getCellValue(row, col)');\n\n              var optionFilter = $scope.col.colDef.editDropdownFilter ? '|' + $scope.col.colDef.editDropdownFilter : '';\n              html = html.replace(uiGridConstants.CUSTOM_FILTERS, optionFilter);\n\n              var inputType = 'text';\n              switch ($scope.col.colDef.type){\n                case 'boolean':\n                  inputType = 'checkbox';\n                  break;\n                case 'number':\n                  inputType = 'number';\n                  break;\n                case 'date':\n                  inputType = 'date';\n                  break;\n              }\n              html = html.replace('INPUT_TYPE', inputType);\n\n              // In order to fill dropdown options we use:\n              // - A function/promise or\n              // - An array inside of row entity if no function exists or\n              // - A single array for the whole column if none of the previous exists.\n              var editDropdownOptionsFunction = $scope.col.colDef.editDropdownOptionsFunction;\n              if (editDropdownOptionsFunction) {\n                $q.when(editDropdownOptionsFunction($scope.row.entity, $scope.col.colDef))\n                        .then(function(result) {\n                  $scope.editDropdownOptionsArray = result;\n                });\n              } else {\n                var editDropdownRowEntityOptionsArrayPath = $scope.col.colDef.editDropdownRowEntityOptionsArrayPath;\n                if (editDropdownRowEntityOptionsArrayPath) {\n                  $scope.editDropdownOptionsArray =  resolveObjectFromPath($scope.row.entity, editDropdownRowEntityOptionsArrayPath);\n                }\n                else {\n                  $scope.editDropdownOptionsArray = $scope.col.colDef.editDropdownOptionsArray;\n                }\n              }\n              $scope.editDropdownIdLabel = $scope.col.colDef.editDropdownIdLabel ? $scope.col.colDef.editDropdownIdLabel : 'id';\n              $scope.editDropdownValueLabel = $scope.col.colDef.editDropdownValueLabel ? $scope.col.colDef.editDropdownValueLabel : 'value';\n\n              var cellElement;\n              var createEditor = function(){\n                inEdit = true;\n                cancelBeginEditEvents();\n                var cellElement = angular.element(html);\n                $elm.append(cellElement);\n                editCellScope = $scope.$new();\n                $compile(cellElement)(editCellScope);\n                var gridCellContentsEl = angular.element($elm.children()[0]);\n                gridCellContentsEl.addClass('ui-grid-cell-contents-hidden');\n              };\n              if (!$rootScope.$$phase) {\n                $scope.$apply(createEditor);\n              } else {\n                createEditor();\n              }\n\n              //stop editing when grid is scrolled\n              var deregOnGridScroll = $scope.col.grid.api.core.on.scrollBegin($scope, function () {\n                if ($scope.grid.disableScrolling) {\n                  return;\n                }\n                endEdit();\n                $scope.grid.api.edit.raise.afterCellEdit($scope.row.entity, $scope.col.colDef, cellModel($scope), origCellValue);\n                deregOnGridScroll();\n                deregOnEndCellEdit();\n                deregOnCancelCellEdit();\n              });\n\n              //end editing\n              var deregOnEndCellEdit = $scope.$on(uiGridEditConstants.events.END_CELL_EDIT, function () {\n                endEdit();\n                $scope.grid.api.edit.raise.afterCellEdit($scope.row.entity, $scope.col.colDef, cellModel($scope), origCellValue);\n                deregOnEndCellEdit();\n                deregOnGridScroll();\n                deregOnCancelCellEdit();\n              });\n\n              //cancel editing\n              var deregOnCancelCellEdit = $scope.$on(uiGridEditConstants.events.CANCEL_CELL_EDIT, function () {\n                cancelEdit();\n                deregOnCancelCellEdit();\n                deregOnGridScroll();\n                deregOnEndCellEdit();\n              });\n\n              $scope.$broadcast(uiGridEditConstants.events.BEGIN_CELL_EDIT, triggerEvent);\n              $timeout(function () {\n                // execute in a timeout to give any complex editor templates a cycle to completely render\n                $scope.grid.api.edit.raise.beginCellEdit($scope.row.entity, $scope.col.colDef, triggerEvent);\n              });\n            }\n\n            function endEdit() {\n              $scope.grid.disableScrolling = false;\n              if (!inEdit) {\n                return;\n              }\n\n              //sometimes the events can't keep up with the keyboard and grid focus is lost, so always focus\n              //back to grid here. The focus call needs to be before the $destroy and removal of the control,\n              //otherwise ng-model-options of UpdateOn: 'blur' will not work.\n              if (uiGridCtrl && uiGridCtrl.grid.api.cellNav) {\n                uiGridCtrl.focus();\n              }\n\n              var gridCellContentsEl = angular.element($elm.children()[0]);\n              //remove edit element\n              editCellScope.$destroy();\n              var children = $elm.children();\n              for (var i = 1; i < children.length; i++) {\n                angular.element(children[i]).remove();\n              }\n              gridCellContentsEl.removeClass('ui-grid-cell-contents-hidden');\n              inEdit = false;\n              registerBeginEditEvents();\n              $scope.grid.api.core.notifyDataChange( uiGridConstants.dataChange.EDIT );\n            }\n\n            function cancelEdit() {\n              $scope.grid.disableScrolling = false;\n              if (!inEdit) {\n                return;\n              }\n              cellModel.assign($scope, origCellValue);\n              $scope.$apply();\n\n              $scope.grid.api.edit.raise.cancelCellEdit($scope.row.entity, $scope.col.colDef);\n              endEdit();\n            }\n\n            // resolves a string path against the given object\n            // shamelessly borrowed from\n            // http://stackoverflow.com/questions/6491463/accessing-nested-javascript-objects-with-string-key\n            function resolveObjectFromPath(object, path) {\n              path = path.replace(/\\[(\\w+)\\]/g, '.$1'); // convert indexes to properties\n              path = path.replace(/^\\./, '');           // strip a leading dot\n              var a = path.split('.');\n              while (a.length) {\n                  var n = a.shift();\n                  if (n in object) {\n                      object = object[n];\n                  } else {\n                      return;\n                  }\n              }\n              return object;\n            }\n          }\n        };\n      }]);\n\n  /**\n   *  @ngdoc directive\n   *  @name ui.grid.edit.directive:uiGridEditor\n   *  @element div\n   *  @restrict A\n   *\n   *  @description input editor directive for editable fields.\n   *  Provides EndEdit and CancelEdit events\n   *\n   *  Events that end editing:\n   *     blur and enter keydown\n   *\n   *  Events that cancel editing:\n   *    - Esc keydown\n   *\n   */\n  module.directive('uiGridEditor',\n    ['gridUtil', 'uiGridConstants', 'uiGridEditConstants','$timeout', 'uiGridEditService',\n      function (gridUtil, uiGridConstants, uiGridEditConstants, $timeout, uiGridEditService) {\n        return {\n          scope: true,\n          require: ['?^uiGrid', '?^uiGridRenderContainer', 'ngModel'],\n          compile: function () {\n            return {\n              pre: function ($scope, $elm, $attrs) {\n\n              },\n              post: function ($scope, $elm, $attrs, controllers) {\n                var uiGridCtrl, renderContainerCtrl, ngModel;\n                if (controllers[0]) { uiGridCtrl = controllers[0]; }\n                if (controllers[1]) { renderContainerCtrl = controllers[1]; }\n                if (controllers[2]) { ngModel = controllers[2]; }\n\n                //set focus at start of edit\n                $scope.$on(uiGridEditConstants.events.BEGIN_CELL_EDIT, function (evt,triggerEvent) {\n                  // must be in a timeout since it requires a new digest cycle\n                  $timeout(function () {\n                    $elm[0].focus();\n                    //only select text if it is not being replaced below in the cellNav viewPortKeyPress\n                    if ($elm[0].select && ($scope.col.colDef.enableCellEditOnFocus || !(uiGridCtrl && uiGridCtrl.grid.api.cellNav))) {\n                      $elm[0].select();\n                    }\n                    else {\n                      //some browsers (Chrome) stupidly, imo, support the w3 standard that number, email, ...\n                      //fields should not allow setSelectionRange.  We ignore the error for those browsers\n                      //https://www.w3.org/Bugs/Public/show_bug.cgi?id=24796\n                      try {\n                        $elm[0].setSelectionRange($elm[0].value.length, $elm[0].value.length);\n                      }\n                      catch (ex) {\n                        //ignore\n                      }\n                    }\n                  });\n\n                  //set the keystroke that started the edit event\n                  //we must do this because the BeginEdit is done in a different event loop than the intitial\n                  //keydown event\n                  //fire this event for the keypress that is received\n                  if (uiGridCtrl && uiGridCtrl.grid.api.cellNav) {\n                    var viewPortKeyDownUnregister = uiGridCtrl.grid.api.cellNav.on.viewPortKeyPress($scope, function (evt, rowCol) {\n                      if (uiGridEditService.isStartEditKey(evt)) {\n                        var code = typeof evt.which === 'number' ? evt.which : evt.keyCode;\n                        if (code > 0) {\n                          ngModel.$setViewValue(String.fromCharCode(code), evt);\n                          ngModel.$render();\n                        }\n                      }\n                      viewPortKeyDownUnregister();\n                    });\n                  }\n\n                  // macOS will blur the checkbox when clicked in Safari and Firefox,\n                  // to get around this, we disable the blur handler on mousedown,\n                  // and then focus the checkbox and re-enable the blur handler after $timeout\n                  $elm.on('mousedown', function(evt) {\n                    if ($elm[0].type === 'checkbox') {\n                      $elm.off('blur', $scope.stopEdit);\n                      $timeout(function() {\n                        $elm[0].focus();\n                        $elm.on('blur', $scope.stopEdit);\n                      });\n                    }\n                  });\n\n                  $elm.on('blur', $scope.stopEdit);\n                });\n\n\n                $scope.deepEdit = false;\n\n                $scope.stopEdit = function (evt) {\n                  if ($scope.inputForm && !$scope.inputForm.$valid) {\n                    evt.stopPropagation();\n                    $scope.$emit(uiGridEditConstants.events.CANCEL_CELL_EDIT);\n                  }\n                  else {\n                    $scope.$emit(uiGridEditConstants.events.END_CELL_EDIT);\n                  }\n                  $scope.deepEdit = false;\n                };\n\n\n                $elm.on('click', function (evt) {\n                  if ($elm[0].type !== 'checkbox') {\n                    $scope.deepEdit = true;\n                    $scope.$applyAsync(function () {\n                      $scope.grid.disableScrolling = true;\n                    });\n                  }\n                });\n\n                $elm.on('keydown', function (evt) {\n                  switch (evt.keyCode) {\n                    case uiGridConstants.keymap.ESC:\n                      evt.stopPropagation();\n                      $scope.$emit(uiGridEditConstants.events.CANCEL_CELL_EDIT);\n                      break;\n                  }\n\n                  if ($scope.deepEdit &&\n                    (evt.keyCode === uiGridConstants.keymap.LEFT ||\n                     evt.keyCode === uiGridConstants.keymap.RIGHT ||\n                     evt.keyCode === uiGridConstants.keymap.UP ||\n                     evt.keyCode === uiGridConstants.keymap.DOWN)) {\n                    evt.stopPropagation();\n                  }\n                  // Pass the keydown event off to the cellNav service, if it exists\n                  else if (uiGridCtrl && uiGridCtrl.grid.api.cellNav) {\n                    evt.uiGridTargetRenderContainerId = renderContainerCtrl.containerId;\n                    if (uiGridCtrl.cellNav.handleKeyDown(evt) !== null) {\n                      $scope.stopEdit(evt);\n                    }\n                  }\n                  else {\n                    //handle enter and tab for editing not using cellNav\n                    switch (evt.keyCode) {\n                      case uiGridConstants.keymap.ENTER: // Enter (Leave Field)\n                      case uiGridConstants.keymap.TAB:\n                        evt.stopPropagation();\n                        evt.preventDefault();\n                        $scope.stopEdit(evt);\n                        break;\n                    }\n                  }\n\n                  return true;\n                });\n\n                $scope.$on('$destroy', function unbindEvents() {\n                  // unbind all jquery events in order to avoid memory leaks\n                  $elm.off();\n                });\n              }\n            };\n          }\n        };\n      }]);\n\n  /**\n   *  @ngdoc directive\n   *  @name ui.grid.edit.directive:input\n   *  @element input\n   *  @restrict E\n   *\n   *  @description directive to provide binding between input[date] value and ng-model for angular 1.2\n   *  It is similar to input[date] directive of angular 1.3\n   *\n   *  Supported date format for input is 'yyyy-MM-dd'\n   *  The directive will set the $valid property of input element and the enclosing form to false if\n   *  model is invalid date or value of input is entered wrong.\n   *\n   */\n    module.directive('uiGridEditor', ['$filter', function ($filter) {\n      function parseDateString(dateString) {\n        if (typeof(dateString) === 'undefined' || dateString === '') {\n          return null;\n        }\n        var parts = dateString.split('-');\n        if (parts.length !== 3) {\n          return null;\n        }\n        var year = parseInt(parts[0], 10);\n        var month = parseInt(parts[1], 10);\n        var day = parseInt(parts[2], 10);\n\n        if (month < 1 || year < 1 || day < 1) {\n          return null;\n        }\n        return new Date(year, (month - 1), day);\n      }\n      return {\n        priority: -100, // run after default uiGridEditor directive\n        require: '?ngModel',\n        link: function (scope, element, attrs, ngModel) {\n\n          if (angular.version.minor === 2 && attrs.type && attrs.type === 'date' && ngModel) {\n\n            ngModel.$formatters.push(function (modelValue) {\n              ngModel.$setValidity(null,(!modelValue || !isNaN(modelValue.getTime())));\n              return $filter('date')(modelValue, 'yyyy-MM-dd');\n            });\n\n            ngModel.$parsers.push(function (viewValue) {\n              if (viewValue && viewValue.length > 0) {\n                var dateValue = parseDateString(viewValue);\n                ngModel.$setValidity(null, (dateValue && !isNaN(dateValue.getTime())));\n                return dateValue;\n              }\n              else {\n                ngModel.$setValidity(null, true);\n                return null;\n              }\n            });\n          }\n        }\n      };\n    }]);\n\n\n  /**\n   *  @ngdoc directive\n   *  @name ui.grid.edit.directive:uiGridEditDropdown\n   *  @element div\n   *  @restrict A\n   *\n   *  @description dropdown editor for editable fields.\n   *  Provides EndEdit and CancelEdit events\n   *\n   *  Events that end editing:\n   *     blur and enter keydown, and any left/right nav\n   *\n   *  Events that cancel editing:\n   *    - Esc keydown\n   *\n   */\n  module.directive('uiGridEditDropdown',\n    ['uiGridConstants', 'uiGridEditConstants', '$timeout',\n      function (uiGridConstants, uiGridEditConstants, $timeout) {\n        return {\n          require: ['?^uiGrid', '?^uiGridRenderContainer'],\n          scope: true,\n          compile: function () {\n            return {\n              pre: function ($scope, $elm, $attrs) {\n\n              },\n              post: function ($scope, $elm, $attrs, controllers) {\n                var uiGridCtrl = controllers[0];\n                var renderContainerCtrl = controllers[1];\n\n                //set focus at start of edit\n                $scope.$on(uiGridEditConstants.events.BEGIN_CELL_EDIT, function () {\n                  $timeout(function(){\n                    $elm[0].focus();\n                  });\n\n                  $elm[0].style.width = ($elm[0].parentElement.offsetWidth - 1) + 'px';\n                  $elm.on('blur', function (evt) {\n                    $scope.stopEdit(evt);\n                  });\n                });\n\n\n                $scope.stopEdit = function (evt) {\n                  // no need to validate a dropdown - invalid values shouldn't be\n                  // available in the list\n                  $scope.$emit(uiGridEditConstants.events.END_CELL_EDIT);\n                };\n\n                $elm.on('keydown', function (evt) {\n                  switch (evt.keyCode) {\n                    case uiGridConstants.keymap.ESC:\n                      evt.stopPropagation();\n                      $scope.$emit(uiGridEditConstants.events.CANCEL_CELL_EDIT);\n                      break;\n                  }\n                  if (uiGridCtrl && uiGridCtrl.grid.api.cellNav) {\n                    evt.uiGridTargetRenderContainerId = renderContainerCtrl.containerId;\n                    if (uiGridCtrl.cellNav.handleKeyDown(evt) !== null) {\n                      $scope.stopEdit(evt);\n                    }\n                  }\n                  else {\n                    //handle enter and tab for editing not using cellNav\n                    switch (evt.keyCode) {\n                      case uiGridConstants.keymap.ENTER: // Enter (Leave Field)\n                      case uiGridConstants.keymap.TAB:\n                        evt.stopPropagation();\n                        evt.preventDefault();\n                        $scope.stopEdit(evt);\n                        break;\n                    }\n                  }\n                  return true;\n                });\n\n                $scope.$on('$destroy', function unbindEvents() {\n                  // unbind jquery events to prevent memory leaks\n                  $elm.off();\n                });\n              }\n            };\n          }\n        };\n      }]);\n\n  /**\n   *  @ngdoc directive\n   *  @name ui.grid.edit.directive:uiGridEditFileChooser\n   *  @element div\n   *  @restrict A\n   *\n   *  @description input editor directive for editable fields.\n   *  Provides EndEdit and CancelEdit events\n   *\n   *  Events that end editing:\n   *     blur and enter keydown\n   *\n   *  Events that cancel editing:\n   *    - Esc keydown\n   *\n   */\n  module.directive('uiGridEditFileChooser',\n    ['gridUtil', 'uiGridConstants', 'uiGridEditConstants',\n      function (gridUtil, uiGridConstants, uiGridEditConstants) {\n        return {\n          scope: true,\n          require: ['?^uiGrid', '?^uiGridRenderContainer'],\n          compile: function () {\n            return {\n              pre: function ($scope, $elm, $attrs) {\n\n              },\n              post: function ($scope, $elm) {\n                function handleFileSelect(event) {\n                  var target = event.srcElement || event.target;\n\n                  if (target && target.files && target.files.length > 0) {\n                    /**\n                     *  @ngdoc property\n                     *  @name editFileChooserCallback\n                     *  @propertyOf  ui.grid.edit.api:ColumnDef\n                     *  @description A function that should be called when any files have been chosen\n                     *  by the user.  You should use this to process the files appropriately for your\n                     *  application.\n                     *\n                     *  It passes the gridCol, the gridRow (from which you can get gridRow.entity),\n                     *  and the files.  The files are in the format as returned from the file chooser,\n                     *  an array of files, with each having useful information such as:\n                     *  - `files[0].lastModifiedDate`\n                     *  - `files[0].name`\n                     *  - `files[0].size`  (appears to be in bytes)\n                     *  - `files[0].type`  (MIME type by the looks)\n                     *\n                     *  Typically you would do something with these files - most commonly you would\n                     *  use the filename or read the file itself in.  The example function does both.\n                     *\n                     *  @example\n                     *  <pre>\n                     *  editFileChooserCallBack: function(gridRow, gridCol, files ){\n                     *    // ignore all but the first file, it can only choose one anyway\n                     *    // set the filename into this column\n                     *    gridRow.entity.filename = file[0].name;\n                     *\n                     *    // read the file and set it into a hidden column, which we may do stuff with later\n                     *    var setFile = function(fileContent){\n                     *      gridRow.entity.file = fileContent.currentTarget.result;\n                     *    };\n                     *    var reader = new FileReader();\n                     *    reader.onload = setFile;\n                     *    reader.readAsText( files[0] );\n                     *  }\n                     *  </pre>\n                     */\n                    if ( typeof($scope.col.colDef.editFileChooserCallback) === 'function' ) {\n                      $scope.col.colDef.editFileChooserCallback($scope.row, $scope.col, target.files);\n                    } else {\n                      gridUtil.logError('You need to set colDef.editFileChooserCallback to use the file chooser');\n                    }\n\n                    target.form.reset();\n                    $scope.$emit(uiGridEditConstants.events.END_CELL_EDIT);\n                  } else {\n                    $scope.$emit(uiGridEditConstants.events.CANCEL_CELL_EDIT);\n                  }\n                  $elm[0].removeEventListener('change', handleFileSelect, false);\n                }\n\n                $elm[0].addEventListener('change', handleFileSelect, false);\n\n                $scope.$on(uiGridEditConstants.events.BEGIN_CELL_EDIT, function () {\n                  $elm[0].focus();\n                  $elm[0].select();\n\n                  $elm.on('blur', function () {\n                    $scope.$emit(uiGridEditConstants.events.END_CELL_EDIT);\n                    $elm.off();\n                  });\n                });\n              }\n            };\n          }\n        };\n      }]);\n})();\n\n(function () {\n  'use strict';\n\n  /**\n   * @ngdoc overview\n   * @name ui.grid.emptyBaseLayer\n   * @description\n   *\n   * # ui.grid.emptyBaseLayer\n   *\n   * <div class=\"alert alert-warning\" role=\"alert\"><strong>Alpha</strong> This feature is in development. There will almost certainly be breaking api changes, or there are major outstanding bugs.</div>\n   *\n   * This module provides the ability to have the background of the ui-grid be empty rows, this would be displayed in the case were\n   * the grid height is greater then the amount of rows displayed.\n   *\n   * <div doc-module-components=\"ui.grid.emptyBaseLayer\"></div>\n   */\n  var module = angular.module('ui.grid.emptyBaseLayer', ['ui.grid']);\n\n\n  /**\n   *  @ngdoc service\n   *  @name ui.grid.emptyBaseLayer.service:uiGridBaseLayerService\n   *\n   *  @description Services for the empty base layer grid\n   */\n  module.service('uiGridBaseLayerService', ['gridUtil', '$compile', function (gridUtil, $compile) {\n    var service = {\n      initializeGrid: function (grid, disableEmptyBaseLayer) {\n\n        /**\n         *  @ngdoc object\n         *  @name ui.grid.emptyBaseLayer.api:GridOptions\n         *\n         *  @description GridOptions for emptyBaseLayer feature, these are available to be\n         *  set using the ui-grid {@link ui.grid.class:GridOptions gridOptions}\n         */\n        grid.baseLayer = {\n          emptyRows: []\n        };\n\n        /**\n         *  @ngdoc object\n         *  @name enableEmptyGridBaseLayer\n         *  @propertyOf  ui.grid.emptyBaseLayer.api:GridOptions\n         *  @description Enable empty base layer, which shows empty rows as background on the entire grid\n         *  <br/>Defaults to true, if the directive is used.\n         *  <br/>Set to false either by setting this attribute or passing false to the directive.\n         */\n        //default option to true unless it was explicitly set to false\n        if (grid.options.enableEmptyGridBaseLayer !== false) {\n          grid.options.enableEmptyGridBaseLayer = !disableEmptyBaseLayer;\n        }\n      },\n\n      setNumberOfEmptyRows: function(viewportHeight, grid) {\n        var rowHeight = grid.options.rowHeight,\n          rows = Math.ceil(viewportHeight / rowHeight);\n        if (rows > 0) {\n          grid.baseLayer.emptyRows = [];\n          for (var i = 0; i < rows; i++) {\n            grid.baseLayer.emptyRows.push({});\n          }\n        }\n      }\n    };\n    return service;\n  }]);\n\n  /**\n   *  @ngdoc object\n   *  @name ui.grid.emptyBaseLayer.directive:uiGridEmptyBaseLayer\n   *  @description Shows empty rows in the background of the ui-grid, these span\n   *  the full height of the ui-grid, so that there won't be blank space below the shown rows.\n   *  @example\n   *  <pre>\n   *  <div ui-grid=\"gridOptions\" class=\"grid\" ui-grid-empty-base-layer></div>\n   *  </pre>\n   *  Or you can enable/disable it dynamically by passing in true or false. It doesn't\n   *  the value, so it would only be set on initial render.\n   *  <pre>\n   *  <div ui-grid=\"gridOptions\" class=\"grid\" ui-grid-empty-base-layer=\"false\"></div>\n   *  </pre>\n   */\n  module.directive('uiGridEmptyBaseLayer', ['gridUtil', 'uiGridBaseLayerService',\n      '$parse',\n    function (gridUtil, uiGridBaseLayerService, $parse) {\n      return {\n        require: '^uiGrid',\n        scope: false,\n        compile: function ($elm, $attrs) {\n          return {\n            pre: function ($scope, $elm, $attrs, uiGridCtrl) {\n              var disableEmptyBaseLayer = $parse($attrs.uiGridEmptyBaseLayer)($scope) === false;\n              uiGridBaseLayerService.initializeGrid(uiGridCtrl.grid, disableEmptyBaseLayer);\n            },\n            post: function ($scope, $elm, $attrs, uiGridCtrl) {\n              if (!uiGridCtrl.grid.options.enableEmptyGridBaseLayer) {\n                return;\n              }\n\n              var renderBodyContainer = uiGridCtrl.grid.renderContainers.body,\n                viewportHeight = renderBodyContainer.getViewportHeight();\n\n              function heightHasChanged() {\n                var newViewPortHeight = renderBodyContainer.getViewportHeight();\n\n                if (newViewPortHeight !== viewportHeight) {\n                  viewportHeight = newViewPortHeight;\n                  return true;\n                }\n                return false;\n              }\n\n              function getEmptyBaseLayerCss(viewportHeight) {\n                // Set ui-grid-empty-base-layer height\n                return '.grid' + uiGridCtrl.grid.id +\n                  ' .ui-grid-render-container ' +\n                  '.ui-grid-empty-base-layer-container.ui-grid-canvas ' +\n                  '{ height: ' + viewportHeight + 'px; }';\n              }\n\n              uiGridCtrl.grid.registerStyleComputation({\n                func: function() {\n                  if (heightHasChanged()) {\n                    uiGridBaseLayerService.setNumberOfEmptyRows(viewportHeight, uiGridCtrl.grid);\n                  }\n                  return getEmptyBaseLayerCss(viewportHeight);\n                }\n              });\n            }\n          };\n        }\n      };\n    }]);\n\n  /**\n   *  @ngdoc directive\n   *  @name ui.grid.emptyBaseLayer.directive:uiGridViewport\n   *  @description stacks on the uiGridViewport directive to append the empty grid base layer html elements to the\n   *  default gridRow template\n   */\n  module.directive('uiGridViewport',\n    ['$compile', 'gridUtil', '$templateCache',\n      function ($compile, gridUtil, $templateCache) {\n        return {\n          priority: -200,\n          scope: false,\n          compile: function ($elm, $attrs) {\n            var emptyBaseLayerContainer = $templateCache.get('ui-grid/emptyBaseLayerContainer');\n            $elm.prepend(emptyBaseLayerContainer);\n            return {\n              pre: function ($scope, $elm, $attrs, controllers) {\n              },\n              post: function ($scope, $elm, $attrs, controllers) {\n              }\n            };\n          }\n        };\n      }]);\n\n})();\n\n(function () {\n  'use strict';\n\n  /**\n   * @ngdoc overview\n   * @name ui.grid.expandable\n   * @description\n   *\n   * # ui.grid.expandable\n   *\n   * <div class=\"alert alert-warning\" role=\"alert\"><strong>Alpha</strong> This feature is in development. There will almost certainly be breaking api changes, or there are major outstanding bugs.</div>\n   *\n   * This module provides the ability to create subgrids with the ability to expand a row\n   * to show the subgrid.\n   *\n   * <div doc-module-components=\"ui.grid.expandable\"></div>\n   */\n  var module = angular.module('ui.grid.expandable', ['ui.grid']);\n\n  /**\n   *  @ngdoc service\n   *  @name ui.grid.expandable.service:uiGridExpandableService\n   *\n   *  @description Services for the expandable grid\n   */\n  module.service('uiGridExpandableService', ['gridUtil', '$compile', function (gridUtil, $compile) {\n    var service = {\n      initializeGrid: function (grid) {\n\n        grid.expandable = {};\n        grid.expandable.expandedAll = false;\n\n        /**\n         *  @ngdoc object\n         *  @name enableExpandable\n         *  @propertyOf  ui.grid.expandable.api:GridOptions\n         *  @description Whether or not to use expandable feature, allows you to turn off expandable on specific grids\n         *  within your application, or in specific modes on _this_ grid. Defaults to true.\n         *  @example\n         *  <pre>\n         *    $scope.gridOptions = {\n         *      enableExpandable: false\n         *    }\n         *  </pre>\n         */\n        grid.options.enableExpandable = grid.options.enableExpandable !== false;\n\n        /**\n         *  @ngdoc object\n         *  @name showExpandAllButton\n         *  @propertyOf  ui.grid.expandable.api:GridOptions\n         *  @description Whether or not to display the expand all button, allows you to hide expand all button on specific grids\n         *  within your application, or in specific modes on _this_ grid. Defaults to true.\n         *  @example\n         *  <pre>\n         *    $scope.gridOptions = {\n         *      showExpandAllButton: false\n         *    }\n         *  </pre>\n         */\n        grid.options.showExpandAllButton = grid.options.showExpandAllButton !== false;\n\n        /**\n         *  @ngdoc object\n         *  @name expandableRowHeight\n         *  @propertyOf  ui.grid.expandable.api:GridOptions\n         *  @description Height in pixels of the expanded subgrid.  Defaults to\n         *  150\n         *  @example\n         *  <pre>\n         *    $scope.gridOptions = {\n         *      expandableRowHeight: 150\n         *    }\n         *  </pre>\n         */\n        grid.options.expandableRowHeight = grid.options.expandableRowHeight || 150;\n\n        /**\n         *  @ngdoc object\n         *  @name expandableRowHeaderWidth\n         *  @propertyOf  ui.grid.expandable.api:GridOptions\n         *  @description Width in pixels of the expandable column. Defaults to 40\n         *  @example\n         *  <pre>\n         *    $scope.gridOptions = {\n         *      expandableRowHeaderWidth: 40\n         *    }\n         *  </pre>\n         */\n        grid.options.expandableRowHeaderWidth = grid.options.expandableRowHeaderWidth || 40;\n\n        /**\n         *  @ngdoc object\n         *  @name expandableRowTemplate\n         *  @propertyOf  ui.grid.expandable.api:GridOptions\n         *  @description Mandatory. The template for your expanded row\n         *  @example\n         *  <pre>\n         *    $scope.gridOptions = {\n         *      expandableRowTemplate: 'expandableRowTemplate.html'\n         *    }\n         *  </pre>\n         */\n        if ( grid.options.enableExpandable && !grid.options.expandableRowTemplate ){\n          gridUtil.logError( 'You have not set the expandableRowTemplate, disabling expandable module' );\n          grid.options.enableExpandable = false;\n        }\n\n        /**\n         *  @ngdoc object\n         *  @name ui.grid.expandable.api:PublicApi\n         *\n         *  @description Public Api for expandable feature\n         */\n        /**\n         *  @ngdoc object\n         *  @name ui.grid.expandable.api:GridRow\n         *\n         *  @description Additional properties added to GridRow when using the expandable module\n         */\n        /**\n         *  @ngdoc object\n         *  @name ui.grid.expandable.api:GridOptions\n         *\n         *  @description Options for configuring the expandable feature, these are available to be\n         *  set using the ui-grid {@link ui.grid.class:GridOptions gridOptions}\n         */\n        var publicApi = {\n          events: {\n            expandable: {\n              /**\n               * @ngdoc event\n               * @name rowExpandedBeforeStateChanged\n               * @eventOf  ui.grid.expandable.api:PublicApi\n               * @description raised when row is expanding or collapsing\n               * <pre>\n               *      gridApi.expandable.on.rowExpandedBeforeStateChanged(scope,function(row){})\n               * </pre>\n               * @param {scope} scope the application scope\n               * @param {GridRow} row the row that was expanded\n               */\n              rowExpandedBeforeStateChanged: function(scope, row){\n              },\n              /**\n               * @ngdoc event\n               * @name rowExpandedStateChanged\n               * @eventOf  ui.grid.expandable.api:PublicApi\n               * @description raised when row expanded or collapsed\n               * <pre>\n               *      gridApi.expandable.on.rowExpandedStateChanged(scope,function(row){})\n               * </pre>\n               * @param {scope} scope the application scope\n               * @param {GridRow} row the row that was expanded\n               */\n              rowExpandedStateChanged: function (scope, row) {\n              }\n            }\n          },\n\n          methods: {\n            expandable: {\n              /**\n               * @ngdoc method\n               * @name toggleRowExpansion\n               * @methodOf  ui.grid.expandable.api:PublicApi\n               * @description Toggle a specific row\n               * <pre>\n               *      gridApi.expandable.toggleRowExpansion(rowEntity);\n               * </pre>\n               * @param {object} rowEntity the data entity for the row you want to expand\n               */\n              toggleRowExpansion: function (rowEntity) {\n                var row = grid.getRow(rowEntity);\n                if (row !== null) {\n                  service.toggleRowExpansion(grid, row);\n                }\n              },\n\n              /**\n               * @ngdoc method\n               * @name expandAllRows\n               * @methodOf  ui.grid.expandable.api:PublicApi\n               * @description Expand all subgrids.\n               * <pre>\n               *      gridApi.expandable.expandAllRows();\n               * </pre>\n               */\n              expandAllRows: function() {\n                service.expandAllRows(grid);\n              },\n\n              /**\n               * @ngdoc method\n               * @name collapseAllRows\n               * @methodOf  ui.grid.expandable.api:PublicApi\n               * @description Collapse all subgrids.\n               * <pre>\n               *      gridApi.expandable.collapseAllRows();\n               * </pre>\n               */\n              collapseAllRows: function() {\n                service.collapseAllRows(grid);\n              },\n\n              /**\n               * @ngdoc method\n               * @name toggleAllRows\n               * @methodOf  ui.grid.expandable.api:PublicApi\n               * @description Toggle all subgrids.\n               * <pre>\n               *      gridApi.expandable.toggleAllRows();\n               * </pre>\n               */\n              toggleAllRows: function() {\n                service.toggleAllRows(grid);\n              },\n              /**\n               * @ngdoc function\n               * @name expandRow\n               * @methodOf  ui.grid.expandable.api:PublicApi\n               * @description Expand the data row\n               * @param {object} rowEntity gridOptions.data[] array instance\n               */\n              expandRow: function (rowEntity) {\n                var row = grid.getRow(rowEntity);\n                if (row !== null && !row.isExpanded) {\n                  service.toggleRowExpansion(grid, row);\n                }\n              },\n              /**\n               * @ngdoc function\n               * @name collapseRow\n               * @methodOf  ui.grid.expandable.api:PublicApi\n               * @description Collapse the data row\n               * @param {object} rowEntity gridOptions.data[] array instance\n               */\n              collapseRow: function (rowEntity) {\n                var row = grid.getRow(rowEntity);\n                if (row !== null && row.isExpanded) {\n                  service.toggleRowExpansion(grid, row);\n                }\n              },\n              /**\n               * @ngdoc function\n               * @name getExpandedRows\n               * @methodOf  ui.grid.expandable.api:PublicApi\n               * @description returns all expandedRow's entity references\n               */\n              getExpandedRows: function () {\n                return service.getExpandedRows(grid).map(function (gridRow) {\n                  return gridRow.entity;\n                });\n              }\n            }\n          }\n        };\n        grid.api.registerEventsFromObject(publicApi.events);\n        grid.api.registerMethodsFromObject(publicApi.methods);\n      },\n\n      toggleRowExpansion: function (grid, row) {\n        // trigger the \"before change\" event. Can change row height dynamically this way.\n        grid.api.expandable.raise.rowExpandedBeforeStateChanged(row);\n        /**\n         *  @ngdoc object\n         *  @name isExpanded\n         *  @propertyOf  ui.grid.expandable.api:GridRow\n         *  @description Whether or not the row is currently expanded.\n         *  @example\n         *  <pre>\n         *    $scope.api.expandable.on.rowExpandedStateChanged($scope, function (row) {\n         *      if (row.isExpanded) {\n         *        //...\n         *      }\n         *    });\n         *  </pre>\n         */\n        row.isExpanded = !row.isExpanded;\n        if (angular.isUndefined(row.expandedRowHeight)){\n          row.expandedRowHeight = grid.options.expandableRowHeight;\n        }\n\n        if (row.isExpanded) {\n          row.height = row.grid.options.rowHeight + row.expandedRowHeight;\n          grid.expandable.expandedAll = service.getExpandedRows(grid).length === grid.rows.length;\n        } else {\n          row.height = row.grid.options.rowHeight;\n          grid.expandable.expandedAll = false;\n        }\n        grid.api.expandable.raise.rowExpandedStateChanged(row);\n      },\n\n      expandAllRows: function(grid) {\n        grid.renderContainers.body.visibleRowCache.forEach( function(row) {\n          if (!row.isExpanded && !(row.entity.subGridOptions && row.entity.subGridOptions.disableRowExpandable)) {\n            service.toggleRowExpansion(grid, row);\n          }\n        });\n        grid.expandable.expandedAll = true;\n        grid.queueGridRefresh();\n      },\n\n      collapseAllRows: function(grid) {\n        grid.renderContainers.body.visibleRowCache.forEach( function(row) {\n          if (row.isExpanded) {\n            service.toggleRowExpansion(grid, row);\n          }\n        });\n        grid.expandable.expandedAll = false;\n        grid.queueGridRefresh();\n      },\n\n      toggleAllRows: function(grid) {\n        if (grid.expandable.expandedAll) {\n          service.collapseAllRows(grid);\n        }\n        else {\n          service.expandAllRows(grid);\n        }\n      },\n\n      getExpandedRows: function (grid) {\n        return grid.rows.filter(function (row) {\n          return row.isExpanded;\n        });\n      }\n    };\n    return service;\n  }]);\n\n  /**\n   *  @ngdoc object\n   *  @name enableExpandableRowHeader\n   *  @propertyOf  ui.grid.expandable.api:GridOptions\n   *  @description Show a rowHeader to provide the expandable buttons.  If set to false then implies\n   *  you're going to use a custom method for expanding and collapsing the subgrids. Defaults to true.\n   *  @example\n   *  <pre>\n   *    $scope.gridOptions = {\n   *      enableExpandableRowHeader: false\n   *    }\n   *  </pre>\n   */\n  module.directive('uiGridExpandable', ['uiGridExpandableService', '$templateCache',\n    function (uiGridExpandableService, $templateCache) {\n      return {\n        replace: true,\n        priority: 0,\n        require: '^uiGrid',\n        scope: false,\n        compile: function () {\n          return {\n            pre: function ($scope, $elm, $attrs, uiGridCtrl) {\n              uiGridExpandableService.initializeGrid(uiGridCtrl.grid);\n\n              if (!uiGridCtrl.grid.options.enableExpandable) {\n                return;\n              }\n\n              if (uiGridCtrl.grid.options.enableExpandableRowHeader !== false ) {\n                var expandableRowHeaderColDef = {\n                  name: 'expandableButtons',\n                  displayName: '',\n                  exporterSuppressExport: true,\n                  enableColumnResizing: false,\n                  enableColumnMenu: false,\n                  width: uiGridCtrl.grid.options.expandableRowHeaderWidth || 40\n                };\n                expandableRowHeaderColDef.cellTemplate = $templateCache.get('ui-grid/expandableRowHeader');\n                expandableRowHeaderColDef.headerCellTemplate = $templateCache.get('ui-grid/expandableTopRowHeader');\n                uiGridCtrl.grid.addRowHeaderColumn(expandableRowHeaderColDef, -90);\n              }\n\n            },\n            post: function ($scope, $elm, $attrs, uiGridCtrl) {\n            }\n          };\n        }\n      };\n    }]);\n\n  /**\n   *  @ngdoc directive\n   *  @name ui.grid.expandable.directive:uiGrid\n   *  @description stacks on the uiGrid directive to register child grid with parent row when child is created\n   */\n  module.directive('uiGrid', ['uiGridExpandableService', '$templateCache',\n    function (uiGridExpandableService, $templateCache) {\n      return {\n        replace: true,\n        priority: 599,\n        require: '^uiGrid',\n        scope: false,\n        compile: function () {\n          return {\n            pre: function ($scope, $elm, $attrs, uiGridCtrl) {\n\n              uiGridCtrl.grid.api.core.on.renderingComplete($scope, function() {\n                //if a parent grid row is on the scope, then add the parentRow property to this childGrid\n                if ($scope.row && $scope.row.grid && $scope.row.grid.options && $scope.row.grid.options.enableExpandable) {\n\n                  /**\n                   *  @ngdoc directive\n                   *  @name ui.grid.expandable.class:Grid\n                   *  @description Additional Grid properties added by expandable module\n                   */\n\n                  /**\n                   *  @ngdoc object\n                   *  @name parentRow\n                   *  @propertyOf ui.grid.expandable.class:Grid\n                   *  @description reference to the expanded parent row that owns this grid\n                   */\n                  uiGridCtrl.grid.parentRow = $scope.row;\n\n                  //todo: adjust height on parent row when child grid height changes. we need some sort of gridHeightChanged event\n                 // uiGridCtrl.grid.core.on.canvasHeightChanged($scope, function(oldHeight, newHeight) {\n                 //   uiGridCtrl.grid.parentRow = newHeight;\n                 // });\n                }\n\n              });\n            },\n            post: function ($scope, $elm, $attrs, uiGridCtrl) {\n\n            }\n          };\n        }\n      };\n    }]);\n\n  /**\n   *  @ngdoc directive\n   *  @name ui.grid.expandable.directive:uiGridExpandableRow\n   *  @description directive to render the expandable row template\n   */\n  module.directive('uiGridExpandableRow',\n  ['uiGridExpandableService', '$timeout', '$compile', 'uiGridConstants','gridUtil','$interval', '$log',\n    function (uiGridExpandableService, $timeout, $compile, uiGridConstants, gridUtil, $interval, $log) {\n\n      return {\n        replace: false,\n        priority: 0,\n        scope: false,\n\n        compile: function () {\n          return {\n            pre: function ($scope, $elm, $attrs, uiGridCtrl) {\n              gridUtil.getTemplate($scope.grid.options.expandableRowTemplate).then(\n                function (template) {\n                  if ($scope.grid.options.expandableRowScope) {\n                    /**\n                     *  @ngdoc object\n                     *  @name expandableRowScope\n                     *  @propertyOf  ui.grid.expandable.api:GridOptions\n                     *  @description  Variables of object expandableScope will be available in the scope of the expanded subgrid\n                     *  @example\n                     *  <pre>\n                     *    $scope.gridOptions = {\n                     *      expandableRowScope: expandableScope\n                     *    }\n                     *  </pre>\n                     */\n                    var expandableRowScope = $scope.grid.options.expandableRowScope;\n                    for (var property in expandableRowScope) {\n                      if (expandableRowScope.hasOwnProperty(property)) {\n                        $scope[property] = expandableRowScope[property];\n                      }\n                    }\n                  }\n                  var expandedRowElement = angular.element(template);\n                  $elm.append(expandedRowElement);\n                  expandedRowElement = $compile(expandedRowElement)($scope);\n                  $scope.row.expandedRendered = true;\n              });\n            },\n\n            post: function ($scope, $elm, $attrs, uiGridCtrl) {\n              $scope.$on('$destroy', function() {\n                $scope.row.expandedRendered = false;\n              });\n            }\n          };\n        }\n      };\n    }]);\n\n  /**\n   *  @ngdoc directive\n   *  @name ui.grid.expandable.directive:uiGridRow\n   *  @description stacks on the uiGridRow directive to add support for expandable rows\n   */\n  module.directive('uiGridRow',\n    ['$compile', 'gridUtil', '$templateCache',\n      function ($compile, gridUtil, $templateCache) {\n        return {\n          priority: -200,\n          scope: false,\n          compile: function ($elm, $attrs) {\n            return {\n              pre: function ($scope, $elm, $attrs, controllers) {\n\n                if (!$scope.grid.options.enableExpandable) {\n                  return;\n                }\n\n                $scope.expandableRow = {};\n\n                $scope.expandableRow.shouldRenderExpand = function () {\n                  var ret = $scope.colContainer.name === 'body' &&  $scope.grid.options.enableExpandable !== false && $scope.row.isExpanded && (!$scope.grid.isScrollingVertically || $scope.row.expandedRendered);\n                  return ret;\n                };\n\n                $scope.expandableRow.shouldRenderFiller = function () {\n                  var ret = $scope.row.isExpanded && ( $scope.colContainer.name !== 'body' || ($scope.grid.isScrollingVertically && !$scope.row.expandedRendered));\n                  return ret;\n                };\n\n /*\n  * Commented out @PaulL1.  This has no purpose that I can see, and causes #2964.  If this code needs to be reinstated for some\n  * reason it needs to use drawnWidth, not width, and needs to check column visibility.  It should really use render container\n  * visible column cache also instead of checking column.renderContainer.\n                  function updateRowContainerWidth() {\n                      var grid = $scope.grid;\n                      var colWidth = 0;\n                      grid.columns.forEach( function (column) {\n                          if (column.renderContainer === 'left') {\n                            colWidth += column.width;\n                          }\n                      });\n                      colWidth = Math.floor(colWidth);\n                      return '.grid' + grid.id + ' .ui-grid-pinned-container-' + $scope.colContainer.name + ', .grid' + grid.id +\n                          ' .ui-grid-pinned-container-' + $scope.colContainer.name + ' .ui-grid-render-container-' + $scope.colContainer.name +\n                          ' .ui-grid-viewport .ui-grid-canvas .ui-grid-row { width: ' + colWidth + 'px; }';\n                  }\n\n                  if ($scope.colContainer.name === 'left') {\n                      $scope.grid.registerStyleComputation({\n                          priority: 15,\n                          func: updateRowContainerWidth\n                      });\n                  }*/\n\n              },\n              post: function ($scope, $elm, $attrs, controllers) {\n              }\n            };\n          }\n        };\n      }]);\n\n  /**\n   *  @ngdoc directive\n   *  @name ui.grid.expandable.directive:uiGridViewport\n   *  @description stacks on the uiGridViewport directive to append the expandable row html elements to the\n   *  default gridRow template\n   */\n  module.directive('uiGridViewport',\n    ['$compile', 'gridUtil', '$templateCache',\n      function ($compile, gridUtil, $templateCache) {\n        return {\n          priority: -200,\n          scope: false,\n          compile: function ($elm, $attrs) {\n\n             //todo: this adds ng-if watchers to each row even if the grid is not using expandable directive\n             //      or options.enableExpandable == false\n             //      The alternative is to compile the template and append to each row in a uiGridRow directive\n\n            var rowRepeatDiv = angular.element($elm.children().children()[0]);\n            var expandedRowFillerElement = $templateCache.get('ui-grid/expandableScrollFiller');\n            var expandedRowElement = $templateCache.get('ui-grid/expandableRow');\n            rowRepeatDiv.append(expandedRowElement);\n            rowRepeatDiv.append(expandedRowFillerElement);\n            return {\n              pre: function ($scope, $elm, $attrs, controllers) {\n              },\n              post: function ($scope, $elm, $attrs, controllers) {\n              }\n            };\n          }\n        };\n      }]);\n\n})();\n\n/* global ExcelBuilder */\n/* global console */\n\n(function () {\n  'use strict';\n\n  /**\n   * @ngdoc overview\n   * @name ui.grid.exporter\n   * @description\n   *\n   * # ui.grid.exporter\n   *\n   * <div class=\"alert alert-success\" role=\"alert\"><strong>Stable</strong> This feature is stable. There should no longer be breaking api changes without a deprecation warning.</div>\n   *\n   * This module provides the ability to export data from the grid.\n   *\n   * Data can be exported in a range of formats, and all data, visible\n   * data, or selected rows can be exported, with all columns or visible\n   * columns.\n   *\n   * No UI is provided, the caller should provide their own UI/buttons\n   * as appropriate, or enable the gridMenu\n   *\n   * <br/>\n   * <br/>\n   *\n   * <div doc-module-components=\"ui.grid.exporter\"></div>\n   */\n\n  var module = angular.module('ui.grid.exporter', ['ui.grid']);\n\n  /**\n   *  @ngdoc object\n   *  @name ui.grid.exporter.constant:uiGridExporterConstants\n   *\n   *  @description constants available in exporter module\n   */\n  /**\n   * @ngdoc property\n   * @propertyOf ui.grid.exporter.constant:uiGridExporterConstants\n   * @name ALL\n   * @description export all data, including data not visible.  Can\n   * be set for either rowTypes or colTypes\n   */\n  /**\n   * @ngdoc property\n   * @propertyOf ui.grid.exporter.constant:uiGridExporterConstants\n   * @name VISIBLE\n   * @description export only visible data, including data not visible.  Can\n   * be set for either rowTypes or colTypes\n   */\n  /**\n   * @ngdoc property\n   * @propertyOf ui.grid.exporter.constant:uiGridExporterConstants\n   * @name SELECTED\n   * @description export all data, including data not visible.  Can\n   * be set only for rowTypes, selection of only some columns is\n   * not supported\n   */\n  module.constant('uiGridExporterConstants', {\n    featureName: 'exporter',\n    ALL: 'all',\n    VISIBLE: 'visible',\n    SELECTED: 'selected',\n    CSV_CONTENT: 'CSV_CONTENT',\n    BUTTON_LABEL: 'BUTTON_LABEL',\n    FILE_NAME: 'FILE_NAME'\n  });\n\n  /**\n   *  @ngdoc service\n   *  @name ui.grid.exporter.service:uiGridExporterService\n   *\n   *  @description Services for exporter feature\n   */\n  module.service('uiGridExporterService', ['$filter', '$q', 'uiGridExporterConstants', 'gridUtil', '$compile', '$interval', 'i18nService',\n    function ($filter, $q, uiGridExporterConstants, gridUtil, $compile, $interval, i18nService) {\n      var service = {\n\n        delay: 100,\n\n        initializeGrid: function (grid) {\n\n          //add feature namespace and any properties to grid for needed state\n          grid.exporter = {};\n          this.defaultGridOptions(grid.options);\n\n          /**\n           *  @ngdoc object\n           *  @name ui.grid.exporter.api:PublicApi\n           *\n           *  @description Public Api for exporter feature\n           */\n          var publicApi = {\n            events: {\n              exporter: {\n              }\n            },\n            methods: {\n              exporter: {\n                /**\n                 * @ngdoc function\n                 * @name csvExport\n                 * @methodOf  ui.grid.exporter.api:PublicApi\n                 * @description Exports rows from the grid in csv format,\n                 * the data exported is selected based on the provided options\n                 * @param {string} rowTypes which rows to export, valid values are\n                 * uiGridExporterConstants.ALL, uiGridExporterConstants.VISIBLE,\n                 * uiGridExporterConstants.SELECTED\n                 * @param {string} colTypes which columns to export, valid values are\n                 * uiGridExporterConstants.ALL, uiGridExporterConstants.VISIBLE\n                 */\n                csvExport: function (rowTypes, colTypes) {\n                  service.csvExport(grid, rowTypes, colTypes);\n                },\n                /**\n                 * @ngdoc function\n                 * @name pdfExport\n                 * @methodOf  ui.grid.exporter.api:PublicApi\n                 * @description Exports rows from the grid in pdf format,\n                 * the data exported is selected based on the provided options\n                 * Note that this function has a dependency on pdfMake, all\n                 * going well this has been installed for you.\n                 * The resulting pdf opens in a new browser window.\n                 * @param {string} rowTypes which rows to export, valid values are\n                 * uiGridExporterConstants.ALL, uiGridExporterConstants.VISIBLE,\n                 * uiGridExporterConstants.SELECTED\n                 * @param {string} colTypes which columns to export, valid values are\n                 * uiGridExporterConstants.ALL, uiGridExporterConstants.VISIBLE\n                 */\n                pdfExport: function (rowTypes, colTypes) {\n                  service.pdfExport(grid, rowTypes, colTypes);\n                },\n                /**\n                 * @ngdoc function\n                 * @name excelExport\n                 * @methodOf  ui.grid.exporter.api:PublicApi\n                 * @description Exports rows from the grid in excel format,\n                 * the data exported is selected based on the provided options\n                 * @param {string} rowTypes which rows to export, valid values are\n                 * uiGridExporterConstants.ALL, uiGridExporterConstants.VISIBLE,\n                 * uiGridExporterConstants.SELECTED\n                 * @param {string} colTypes which columns to export, valid values are\n                 * uiGridExporterConstants.ALL, uiGridExporterConstants.VISIBLE\n                 */\n                excelExport: function (rowTypes, colTypes) {\n                  service.excelExport(grid, rowTypes, colTypes);\n                }\n              }\n            }\n          };\n\n          grid.api.registerEventsFromObject(publicApi.events);\n\n          grid.api.registerMethodsFromObject(publicApi.methods);\n\n          if (grid.api.core.addToGridMenu){\n            service.addToMenu( grid );\n          } else {\n            // order of registration is not guaranteed, register in a little while\n            $interval( function() {\n              if (grid.api.core.addToGridMenu){\n                service.addToMenu( grid );\n              }\n            }, this.delay, 1);\n          }\n\n        },\n\n        defaultGridOptions: function (gridOptions) {\n          //default option to true unless it was explicitly set to false\n          /**\n           * @ngdoc object\n           * @name ui.grid.exporter.api:GridOptions\n           *\n           * @description GridOptions for exporter feature, these are available to be\n           * set using the ui-grid {@link ui.grid.class:GridOptions gridOptions}\n           */\n          /**\n           * @ngdoc object\n           * @name ui.grid.exporter.api:ColumnDef\n           * @description ColumnDef settings for exporter\n           */\n          /**\n           * @ngdoc object\n           * @name exporterSuppressMenu\n           * @propertyOf  ui.grid.exporter.api:GridOptions\n           * @description Don't show the export menu button, implying the user\n           * will roll their own UI for calling the exporter\n           * <br/>Defaults to false\n           */\n          gridOptions.exporterSuppressMenu = gridOptions.exporterSuppressMenu === true;\n          /**\n           * @ngdoc object\n           * @name exporterMenuLabel\n           * @propertyOf  ui.grid.exporter.api:GridOptions\n           * @description The text to show on the exporter menu button\n           * link\n           * <br/>Defaults to 'Export'\n           */\n          gridOptions.exporterMenuLabel = gridOptions.exporterMenuLabel ? gridOptions.exporterMenuLabel : 'Export';\n          /**\n           * @ngdoc object\n           * @name exporterSuppressColumns\n           * @propertyOf  ui.grid.exporter.api:GridOptions\n           * @description Columns that should not be exported.  The selectionRowHeader is already automatically\n           * suppressed, but if you had a button column or some other \"system\" column that shouldn't be shown in the\n           * output then add it in this list.  You should provide an array of column names.\n           * <br/>Defaults to: []\n           * <pre>\n           *   gridOptions.exporterSuppressColumns = [ 'buttons' ];\n           * </pre>\n           */\n          gridOptions.exporterSuppressColumns = gridOptions.exporterSuppressColumns ? gridOptions.exporterSuppressColumns : [];\n          /**\n           * @ngdoc object\n           * @name exporterCsvColumnSeparator\n           * @propertyOf  ui.grid.exporter.api:GridOptions\n           * @description The character to use as column separator\n           * link\n           * <br/>Defaults to ','\n           */\n          gridOptions.exporterCsvColumnSeparator = gridOptions.exporterCsvColumnSeparator ? gridOptions.exporterCsvColumnSeparator : ',';\n          /**\n           * @ngdoc object\n           * @name exporterCsvFilename\n           * @propertyOf  ui.grid.exporter.api:GridOptions\n           * @description The default filename to use when saving the downloaded csv.\n           * This will only work in some browsers.\n           * <br/>Defaults to 'download.csv'\n           */\n          gridOptions.exporterCsvFilename = gridOptions.exporterCsvFilename ? gridOptions.exporterCsvFilename : 'download.csv';\n          /**\n           * @ngdoc object\n           * @name exporterPdfFilename\n           * @propertyOf  ui.grid.exporter.api:GridOptions\n           * @description The default filename to use when saving the downloaded pdf, only used in IE (other browsers open pdfs in a new window)\n           * <br/>Defaults to 'download.pdf'\n           */\n          gridOptions.exporterPdfFilename = gridOptions.exporterPdfFilename ? gridOptions.exporterPdfFilename : 'download.pdf';\n          /**\n           * @ngdoc object\n           * @name exporterOlderExcelCompatibility\n           * @propertyOf  ui.grid.exporter.api:GridOptions\n           * @description Some versions of excel don't like the utf-16 BOM on the front, and it comes\n           * through as ï»¿ in the first column header.  Setting this option to false will suppress this, at the\n           * expense of proper utf-16 handling in applications that do recognise the BOM\n           * <br/>Defaults to false\n           */\n          gridOptions.exporterOlderExcelCompatibility = gridOptions.exporterOlderExcelCompatibility === true;\n          /**\n           * @ngdoc object\n           * @name exporterIsExcelCompatible\n           * @propertyOf  ui.grid.exporter.api:GridOptions\n           * @description Separator header, used to set a custom column separator in a csv file, only works on MS Excel.\n           * Used it on other programs will make csv content display unproperly. Setting this option to false won't add this header.\n           * <br/>Defaults to false\n           */\n          gridOptions.exporterIsExcelCompatible = gridOptions.exporterIsExcelCompatible === true;\n          /**\n           * @ngdoc object\n           * @name exporterMenuItemOrder\n           * @propertyOf  ui.grid.exporter.api:GridOptions\n           * @description An option to determine the starting point for the menu items created by the exporter\n           * <br/>Defaults to 200\n           */\n          gridOptions.exporterMenuItemOrder = gridOptions.exporterMenuItemOrder ? gridOptions.exporterMenuItemOrder : 200;\n          /**\n           * @ngdoc object\n           * @name exporterPdfDefaultStyle\n           * @propertyOf  ui.grid.exporter.api:GridOptions\n           * @description The default style in pdfMake format\n           * <br/>Defaults to:\n           * <pre>\n           *   {\n           *     fontSize: 11\n           *   }\n           * </pre>\n           */\n          gridOptions.exporterPdfDefaultStyle = gridOptions.exporterPdfDefaultStyle ? gridOptions.exporterPdfDefaultStyle : { fontSize: 11 };\n          /**\n           * @ngdoc object\n           * @name exporterPdfTableStyle\n           * @propertyOf  ui.grid.exporter.api:GridOptions\n           * @description The table style in pdfMake format\n           * <br/>Defaults to:\n           * <pre>\n           *   {\n           *     margin: [0, 5, 0, 15]\n           *   }\n           * </pre>\n           */\n          gridOptions.exporterPdfTableStyle = gridOptions.exporterPdfTableStyle ? gridOptions.exporterPdfTableStyle : { margin: [0, 5, 0, 15] };\n          /**\n           * @ngdoc object\n           * @name exporterPdfTableHeaderStyle\n           * @propertyOf  ui.grid.exporter.api:GridOptions\n           * @description The tableHeader style in pdfMake format\n           * <br/>Defaults to:\n           * <pre>\n           *   {\n           *     bold: true,\n           *     fontSize: 12,\n           *     color: 'black'\n           *   }\n           * </pre>\n           */\n          gridOptions.exporterPdfTableHeaderStyle = gridOptions.exporterPdfTableHeaderStyle ? gridOptions.exporterPdfTableHeaderStyle : { bold: true, fontSize: 12, color: 'black' };\n          /**\n           * @ngdoc object\n           * @name exporterPdfHeader\n           * @propertyOf  ui.grid.exporter.api:GridOptions\n           * @description The header section for pdf exports.  Can be\n           * simple text:\n           * <pre>\n           *   gridOptions.exporterPdfHeader = 'My Header';\n           * </pre>\n           * Can be a more complex object in pdfMake format:\n           * <pre>\n           *   gridOptions.exporterPdfHeader = {\n           *     columns: [\n           *       'Left part',\n           *       { text: 'Right part', alignment: 'right' }\n           *     ]\n           *   };\n           * </pre>\n           * Or can be a function, allowing page numbers and the like\n           * <pre>\n           *   gridOptions.exporterPdfHeader: function(currentPage, pageCount) { return currentPage.toString() + ' of ' + pageCount; };\n           * </pre>\n           */\n          gridOptions.exporterPdfHeader = gridOptions.exporterPdfHeader ? gridOptions.exporterPdfHeader : null;\n          /**\n           * @ngdoc object\n           * @name exporterPdfFooter\n           * @propertyOf  ui.grid.exporter.api:GridOptions\n           * @description The header section for pdf exports.  Can be\n           * simple text:\n           * <pre>\n           *   gridOptions.exporterPdfFooter = 'My Footer';\n           * </pre>\n           * Can be a more complex object in pdfMake format:\n           * <pre>\n           *   gridOptions.exporterPdfFooter = {\n           *     columns: [\n           *       'Left part',\n           *       { text: 'Right part', alignment: 'right' }\n           *     ]\n           *   };\n           * </pre>\n           * Or can be a function, allowing page numbers and the like\n           * <pre>\n           *   gridOptions.exporterPdfFooter: function(currentPage, pageCount) { return currentPage.toString() + ' of ' + pageCount; };\n           * </pre>\n           */\n          gridOptions.exporterPdfFooter = gridOptions.exporterPdfFooter ? gridOptions.exporterPdfFooter : null;\n          /**\n           * @ngdoc object\n           * @name exporterPdfOrientation\n           * @propertyOf  ui.grid.exporter.api:GridOptions\n           * @description The orientation, should be a valid pdfMake value,\n           * 'landscape' or 'portrait'\n           * <br/>Defaults to landscape\n           */\n          gridOptions.exporterPdfOrientation = gridOptions.exporterPdfOrientation ? gridOptions.exporterPdfOrientation : 'landscape';\n          /**\n           * @ngdoc object\n           * @name exporterPdfPageSize\n           * @propertyOf  ui.grid.exporter.api:GridOptions\n           * @description The orientation, should be a valid pdfMake\n           * paper size, usually 'A4' or 'LETTER'\n           * {@link https://github.com/bpampuch/pdfmake/blob/master/src/standardPageSizes.js pdfMake page sizes}\n           * <br/>Defaults to A4\n           */\n          gridOptions.exporterPdfPageSize = gridOptions.exporterPdfPageSize ? gridOptions.exporterPdfPageSize : 'A4';\n          /**\n           * @ngdoc object\n           * @name exporterPdfMaxGridWidth\n           * @propertyOf  ui.grid.exporter.api:GridOptions\n           * @description The maxium grid width - the current grid width\n           * will be scaled to match this, with any fixed width columns\n           * being adjusted accordingly.\n           * <br/>Defaults to 720 (for A4 landscape), use 670 for LETTER\n           */\n          gridOptions.exporterPdfMaxGridWidth = gridOptions.exporterPdfMaxGridWidth ? gridOptions.exporterPdfMaxGridWidth : 720;\n          /**\n           * @ngdoc object\n           * @name exporterPdfTableLayout\n           * @propertyOf  ui.grid.exporter.api:GridOptions\n           * @description A tableLayout in pdfMake format,\n           * controls gridlines and the like.  We use the default\n           * layout usually.\n           * <br/>Defaults to null, which means no layout\n           */\n\n          /**\n           * @ngdoc object\n           * @name exporterMenuAllData\n           * @porpertyOf  ui.grid.exporter.api:GridOptions\n           * @description Add export all data as cvs/pdf menu items to the ui-grid grid menu, if it's present.  Defaults to true.\n           */\n          gridOptions.exporterMenuAllData = gridOptions.exporterMenuAllData !== undefined ? gridOptions.exporterMenuAllData : true;\n\n          /**\n           * @ngdoc object\n           * @name exporterMenuVisibleData\n           * @porpertyOf  ui.grid.exporter.api:GridOptions\n           * @description Add export visible data as cvs/pdf menu items to the ui-grid grid menu, if it's present.  Defaults to true.\n           */\n          gridOptions.exporterMenuVisibleData = gridOptions.exporterMenuVisibleData !== undefined ? gridOptions.exporterMenuVisibleData : true;\n\n          /**\n           * @ngdoc object\n           * @name exporterMenuSelectedData\n           * @porpertyOf  ui.grid.exporter.api:GridOptions\n           * @description Add export selected data as cvs/pdf menu items to the ui-grid grid menu, if it's present.  Defaults to true.\n           */\n          gridOptions.exporterMenuSelectedData = gridOptions.exporterMenuSelectedData !== undefined ? gridOptions.exporterMenuSelectedData : true;\n\n          /**\n           * @ngdoc object\n           * @name exporterMenuCsv\n           * @propertyOf  ui.grid.exporter.api:GridOptions\n           * @description Add csv export menu items to the ui-grid grid menu, if it's present.  Defaults to true.\n           */\n          gridOptions.exporterMenuCsv = gridOptions.exporterMenuCsv !== undefined ? gridOptions.exporterMenuCsv : true;\n\n          /**\n           * @ngdoc object\n           * @name exporterMenuPdf\n           * @propertyOf  ui.grid.exporter.api:GridOptions\n           * @description Add pdf export menu items to the ui-grid grid menu, if it's present.  Defaults to true.\n           */\n          gridOptions.exporterMenuPdf = gridOptions.exporterMenuPdf !== undefined ? gridOptions.exporterMenuPdf : true;\n\n          /**\n           * @ngdoc object\n           * @name exporterMenuExcel\n           * @propertyOf  ui.grid.exporter.api:GridOptions\n           * @description Add excel export menu items to the ui-grid grid menu, if it's present.  Defaults to true.\n           */\n          gridOptions.exporterMenuExcel = gridOptions.exporterMenuExcel !== undefined ? gridOptions.exporterMenuExcel : true;\n\n          /**\n           * @ngdoc object\n           * @name exporterPdfCustomFormatter\n           * @propertyOf  ui.grid.exporter.api:GridOptions\n           * @description A custom callback routine that changes the pdf document, adding any\n           * custom styling or content that is supported by pdfMake.  Takes in the complete docDefinition, and\n           * must return an updated docDefinition ready for pdfMake.\n           * @example\n           * In this example we add a style to the style array, so that we can use it in our\n           * footer definition.\n           * <pre>\n           *   gridOptions.exporterPdfCustomFormatter = function ( docDefinition ) {\n           *     docDefinition.styles.footerStyle = { bold: true, fontSize: 10 };\n           *     return docDefinition;\n           *   }\n           *\n           *   gridOptions.exporterPdfFooter = { text: 'My footer', style: 'footerStyle' }\n           * </pre>\n           */\n          gridOptions.exporterPdfCustomFormatter = ( gridOptions.exporterPdfCustomFormatter && typeof( gridOptions.exporterPdfCustomFormatter ) === 'function' ) ? gridOptions.exporterPdfCustomFormatter : function ( docDef ) { return docDef; };\n\n          /**\n           * @ngdoc object\n           * @name exporterHeaderFilterUseName\n           * @propertyOf  ui.grid.exporter.api:GridOptions\n           * @description Defaults to false, which leads to `displayName` being passed into the headerFilter.\n           * If set to true, then will pass `name` instead.\n           *\n           *\n           * @example\n           * <pre>\n           *   gridOptions.exporterHeaderFilterUseName = true;\n           * </pre>\n           */\n          gridOptions.exporterHeaderFilterUseName = gridOptions.exporterHeaderFilterUseName === true;\n\n          /**\n           * @ngdoc object\n           * @name exporterHeaderFilter\n           * @propertyOf  ui.grid.exporter.api:GridOptions\n           * @description A function to apply to the header displayNames before exporting.  Useful for internationalisation,\n           * for example if you were using angular-translate you'd set this to `$translate.instant`.  Note that this\n           * call must be synchronous, it cannot be a call that returns a promise.\n           *\n           * Behaviour can be changed to pass in `name` instead of `displayName` through use of `exporterHeaderFilterUseName: true`.\n           *\n           * @example\n           * <pre>\n           *   gridOptions.exporterHeaderFilter = function( displayName ){ return 'col: ' + name; };\n           * </pre>\n           * OR\n           * <pre>\n           *   gridOptions.exporterHeaderFilter = $translate.instant;\n           * </pre>\n           */\n\n          /**\n           * @ngdoc function\n           * @name exporterFieldCallback\n           * @propertyOf  ui.grid.exporter.api:GridOptions\n           * @description A function to call for each field before exporting it.  Allows\n           * massaging of raw data into a display format, for example if you have applied\n           * filters to convert codes into decodes, or you require\n           * a specific date format in the exported content.\n           *\n           * The method is called once for each field exported, and provides the grid, the\n           * gridCol and the GridRow for you to use as context in massaging the data.\n           *\n           * @param {Grid} grid provides the grid in case you have need of it\n           * @param {GridRow} row the row from which the data comes\n           * @param {GridColumn} col the column from which the data comes\n           * @param {object} value the value for your massaging\n           * @returns {object} you must return the massaged value ready for exporting\n           *\n           * @example\n           * <pre>\n           *   gridOptions.exporterFieldCallback = function ( grid, row, col, value ){\n           *     if ( col.name === 'status' ){\n           *       value = decodeStatus( value );\n           *     }\n           *     return value;\n           *   }\n           * </pre>\n           */\n          gridOptions.exporterFieldCallback = gridOptions.exporterFieldCallback ? gridOptions.exporterFieldCallback : defaultExporterFieldCallback;\n\n          /**\n           * @ngdoc function\n           * @name exporterFieldFormatCallback\n           * @propertyOf  ui.grid.exporter.api:GridOptions\n           * @description A function to call for each field before exporting it.  Allows\n           * general object to be return to modify the format of a cell in the case of\n           * excel exports\n           *\n           * The method is called once for each field exported, and provides the grid, the\n           * gridCol and the GridRow for you to use as context in massaging the data.\n           *\n           * @param {Grid} grid provides the grid in case you have need of it\n           * @param {GridRow} row the row from which the data comes\n           * @param {GridColumn} col the column from which the data comes\n           * @param {object} value the value for your massaging\n           * @returns {object} you must return the massaged value ready for exporting\n           *\n           * @example\n           * <pre>\n           *   gridOptions.exporterFieldCallback = function ( grid, row, col, value ){\n           *     if ( col.name === 'status' ){\n           *       value = decodeStatus( value );\n           *     }\n           *     return value;\n           *   }\n           * </pre>\n           */\n          gridOptions.exporterFieldFormatCallback = gridOptions.exporterFieldFormatCallback ? gridOptions.exporterFieldFormatCallback : function( grid, row, col, value ) { return null; };\n\n          /**\n           * @ngdoc object\n           * @name exporterFieldApplyFilters\n           * @propertyOf  ui.grid.exporter.api:GridOptions\n           * @description Defaults to false, which leads to filters being evaluated on export           *\n           *\n           * @example\n           * <pre>\n           *   gridOptions.exporterFieldApplyFilters = true;\n           * </pre>\n           */\n          gridOptions.exporterFieldApplyFilters = gridOptions.exporterFieldApplyFilters === true;\n\n          /**\n           * @ngdoc function\n           * @name exporterAllDataFn\n           * @propertyOf  ui.grid.exporter.api:GridOptions\n           * @description This promise is needed when exporting all rows,\n           * and the data need to be provided by server side. Default is null.\n           * @returns {Promise} a promise to load all data from server\n           *\n           * @example\n           * <pre>\n           *   gridOptions.exporterAllDataFn = function () {\n           *     return $http.get('/data/100.json')\n           *   }\n           * </pre>\n           */\n          gridOptions.exporterAllDataFn = gridOptions.exporterAllDataFn ? gridOptions.exporterAllDataFn : null;\n\n          /**\n           * @ngdoc function\n           * @name exporterAllDataPromise\n           * @propertyOf  ui.grid.exporter.api:GridOptions\n           * @description DEPRECATED - exporterAllDataFn used to be\n           * called this, but it wasn't a promise, it was a function that returned\n           * a promise.  Deprecated, but supported for backward compatibility, use\n           * exporterAllDataFn instead.\n           * @returns {Promise} a promise to load all data from server\n           *\n           * @example\n           * <pre>\n           *   gridOptions.exporterAllDataFn = function () {\n           *     return $http.get('/data/100.json')\n           *   }\n           * </pre>\n           */\n          if ( gridOptions.exporterAllDataFn === null && gridOptions.exporterAllDataPromise ) {\n            gridOptions.exporterAllDataFn = gridOptions.exporterAllDataPromise;\n          }\n        },\n\n\n        /**\n         * @ngdoc function\n         * @name addToMenu\n         * @methodOf  ui.grid.exporter.service:uiGridExporterService\n         * @description Adds export items to the grid menu,\n         * allowing the user to select export options\n         * @param {Grid} grid the grid from which data should be exported\n         */\n        addToMenu: function ( grid ) {\n          grid.api.core.addToGridMenu( grid, [\n            {\n              title: i18nService.getSafeText('gridMenu.exporterAllAsCsv'),\n              action: function ($event) {\n                grid.api.exporter.csvExport( uiGridExporterConstants.ALL, uiGridExporterConstants.ALL );\n              },\n              shown: function() {\n                return grid.options.exporterMenuCsv && grid.options.exporterMenuAllData;\n              },\n              order: grid.options.exporterMenuItemOrder\n            },\n            {\n              title: i18nService.getSafeText('gridMenu.exporterVisibleAsCsv'),\n              action: function ($event) {\n                grid.api.exporter.csvExport( uiGridExporterConstants.VISIBLE, uiGridExporterConstants.VISIBLE );\n              },\n              shown: function() {\n                return grid.options.exporterMenuCsv && grid.options.exporterMenuVisibleData;\n              },\n              order: grid.options.exporterMenuItemOrder + 1\n            },\n            {\n              title: i18nService.getSafeText('gridMenu.exporterSelectedAsCsv'),\n              action: function ($event) {\n                grid.api.exporter.csvExport( uiGridExporterConstants.SELECTED, uiGridExporterConstants.VISIBLE );\n              },\n              shown: function() {\n                return grid.options.exporterMenuCsv && grid.options.exporterMenuSelectedData &&\n                       ( grid.api.selection && grid.api.selection.getSelectedRows().length > 0 );\n              },\n              order: grid.options.exporterMenuItemOrder + 2\n            },\n            {\n              title: i18nService.getSafeText('gridMenu.exporterAllAsPdf'),\n              action: function ($event) {\n                grid.api.exporter.pdfExport( uiGridExporterConstants.ALL, uiGridExporterConstants.ALL );\n              },\n              shown: function() {\n                return grid.options.exporterMenuPdf && grid.options.exporterMenuAllData;\n              },\n              order: grid.options.exporterMenuItemOrder + 3\n            },\n            {\n              title: i18nService.getSafeText('gridMenu.exporterVisibleAsPdf'),\n              action: function ($event) {\n                grid.api.exporter.pdfExport( uiGridExporterConstants.VISIBLE, uiGridExporterConstants.VISIBLE );\n              },\n              shown: function() {\n                return grid.options.exporterMenuPdf && grid.options.exporterMenuVisibleData;\n              },\n              order: grid.options.exporterMenuItemOrder + 4\n            },\n            {\n              title: i18nService.getSafeText('gridMenu.exporterSelectedAsPdf'),\n              action: function ($event) {\n                grid.api.exporter.pdfExport( uiGridExporterConstants.SELECTED, uiGridExporterConstants.VISIBLE );\n              },\n              shown: function() {\n                return grid.options.exporterMenuPdf && grid.options.exporterMenuSelectedData &&\n                       ( grid.api.selection && grid.api.selection.getSelectedRows().length > 0 );\n              },\n              order: grid.options.exporterMenuItemOrder + 5\n            },\n            {\n              title: i18nService.getSafeText('gridMenu.exporterAllAsExcel'),\n              action: function ($event) {\n                grid.api.exporter.excelExport( uiGridExporterConstants.ALL, uiGridExporterConstants.ALL );\n              },\n              shown: function() {\n                return grid.options.exporterMenuExcel && grid.options.exporterMenuAllData;\n              },\n              order: grid.options.exporterMenuItemOrder + 6\n            },\n            {\n              title: i18nService.getSafeText('gridMenu.exporterVisibleAsExcel'),\n              action: function ($event) {\n                grid.api.exporter.excelExport( uiGridExporterConstants.VISIBLE, uiGridExporterConstants.VISIBLE );\n              },\n              shown: function() {\n                return grid.options.exporterMenuExcel && grid.options.exporterMenuVisibleData;\n              },\n              order: grid.options.exporterMenuItemOrder + 7\n            },\n            {\n              title: i18nService.getSafeText('gridMenu.exporterSelectedAsExcel'),\n              action: function ($event) {\n                grid.api.exporter.excelExport( uiGridExporterConstants.SELECTED, uiGridExporterConstants.VISIBLE );\n              },\n              shown: function() {\n                return grid.options.exporterMenuExcel && grid.options.exporterMenuSelectedData &&\n                  ( grid.api.selection && grid.api.selection.getSelectedRows().length > 0 );\n              },\n              order: grid.options.exporterMenuItemOrder + 8\n            }\n          ]);\n        },\n\n\n        /**\n         * @ngdoc function\n         * @name csvExport\n         * @methodOf  ui.grid.exporter.service:uiGridExporterService\n         * @description Exports rows from the grid in csv format,\n         * the data exported is selected based on the provided options\n         * @param {Grid} grid the grid from which data should be exported\n         * @param {string} rowTypes which rows to export, valid values are\n         * uiGridExporterConstants.ALL, uiGridExporterConstants.VISIBLE,\n         * uiGridExporterConstants.SELECTED\n         * @param {string} colTypes which columns to export, valid values are\n         * uiGridExporterConstants.ALL, uiGridExporterConstants.VISIBLE,\n         * uiGridExporterConstants.SELECTED\n         */\n        csvExport: function (grid, rowTypes, colTypes) {\n          var self = this;\n          this.loadAllDataIfNeeded(grid, rowTypes, colTypes).then(function() {\n            var exportColumnHeaders = grid.options.showHeader ? self.getColumnHeaders(grid, colTypes) : [];\n            var exportData = self.getData(grid, rowTypes, colTypes);\n            var csvContent = self.formatAsCsv(exportColumnHeaders, exportData, grid.options.exporterCsvColumnSeparator);\n\n            self.downloadFile (grid.options.exporterCsvFilename, csvContent, grid.options.exporterCsvColumnSeparator, grid.options.exporterOlderExcelCompatibility, grid.options.exporterIsExcelCompatible);\n          });\n        },\n\n        /**\n         * @ngdoc function\n         * @name loadAllDataIfNeeded\n         * @methodOf  ui.grid.exporter.service:uiGridExporterService\n         * @description When using server side pagination, use exporterAllDataFn to\n         * load all data before continuing processing.\n         * When using client side pagination, return a resolved promise so processing\n         * continues immediately\n         * @param {Grid} grid the grid from which data should be exported\n         * @param {string} rowTypes which rows to export, valid values are\n         * uiGridExporterConstants.ALL, uiGridExporterConstants.VISIBLE,\n         * uiGridExporterConstants.SELECTED\n         * @param {string} colTypes which columns to export, valid values are\n         * uiGridExporterConstants.ALL, uiGridExporterConstants.VISIBLE,\n         * uiGridExporterConstants.SELECTED\n         */\n        loadAllDataIfNeeded: function (grid, rowTypes, colTypes) {\n          if ( rowTypes === uiGridExporterConstants.ALL && grid.rows.length !== grid.options.totalItems && grid.options.exporterAllDataFn) {\n            return grid.options.exporterAllDataFn()\n              .then(function(allData) {\n                grid.modifyRows(allData);\n              });\n          } else {\n            var deferred = $q.defer();\n            deferred.resolve();\n            return deferred.promise;\n          }\n        },\n\n        /**\n         * @ngdoc property\n         * @propertyOf ui.grid.exporter.api:ColumnDef\n         * @name exporterSuppressExport\n         * @description Suppresses export for this column.  Used by selection and expandable.\n         */\n\n        /**\n         * @ngdoc function\n         * @name getColumnHeaders\n         * @methodOf  ui.grid.exporter.service:uiGridExporterService\n         * @description Gets the column headers from the grid to use\n         * as a title row for the exported file, all headers have\n         * headerCellFilters applied as appropriate.\n         *\n         * Column headers are an array of objects, each object has\n         * name, displayName, width and align attributes.  Only name is\n         * used for csv, all attributes are used for pdf.\n         *\n         * @param {Grid} grid the grid from which data should be exported\n         * @param {string} colTypes which columns to export, valid values are\n         * uiGridExporterConstants.ALL, uiGridExporterConstants.VISIBLE,\n         * uiGridExporterConstants.SELECTED\n         */\n        getColumnHeaders: function (grid, colTypes) {\n          var headers = [];\n          var columns;\n\n          if ( colTypes === uiGridExporterConstants.ALL ){\n            columns = grid.columns;\n          } else {\n            var leftColumns = grid.renderContainers.left ? grid.renderContainers.left.visibleColumnCache.filter( function( column ){ return column.visible; } ) : [];\n            var bodyColumns = grid.renderContainers.body ? grid.renderContainers.body.visibleColumnCache.filter( function( column ){ return column.visible; } ) : [];\n            var rightColumns = grid.renderContainers.right ? grid.renderContainers.right.visibleColumnCache.filter( function( column ){ return column.visible; } ) : [];\n\n            columns = leftColumns.concat(bodyColumns,rightColumns);\n          }\n\n          columns.forEach( function( gridCol ) {\n            // $$hashKey check since when grouping and sorting pragmatically this ends up in export. Filtering it out\n            if ( gridCol.colDef.exporterSuppressExport !== true  && gridCol.field !== '$$hashKey' &&\n                 grid.options.exporterSuppressColumns.indexOf( gridCol.name ) === -1 ){\n              var headerEntry = {\n                name: gridCol.field,\n                displayName: getDisplayName(grid, gridCol),\n                width: gridCol.drawnWidth ? gridCol.drawnWidth : gridCol.width,\n                align: gridCol.colDef.align ? gridCol.colDef.align : (gridCol.colDef.type === 'number' ? 'right' : 'left')\n              };\n              headers.push(headerEntry);\n            }\n          });\n\n          return headers;\n        },\n\n\n        /**\n         * @ngdoc property\n         * @propertyOf ui.grid.exporter.api:ColumnDef\n         * @name exporterPdfAlign\n         * @description the alignment you'd like for this specific column when\n         * exported into a pdf.  Can be 'left', 'right', 'center' or any other\n         * valid pdfMake alignment option.\n         */\n\n\n        /**\n         * @ngdoc object\n         * @name ui.grid.exporter.api:GridRow\n         * @description GridRow settings for exporter\n         */\n        /**\n         * @ngdoc object\n         * @name exporterEnableExporting\n         * @propertyOf  ui.grid.exporter.api:GridRow\n         * @description If set to false, then don't export this row, notwithstanding visible or\n         * other settings\n         * <br/>Defaults to true\n         */\n\n\n        /**\n         * @ngdoc function\n         * @name getRowsFromNode\n         * @methodOf  ui.grid.exporter.service:uiGridExporterService\n         * @description Gets rows from a node. If the node is grouped it will\n         * recurse down into the children to get to the raw data element\n         * which is a row without children (a leaf).\n         * @param {Node} aNode the tree node on the grid\n         * @returns {Array} an array of leaf nodes\n         */\n        getRowsFromNode: function(aNode) {\n          var rows = [];\n          for (var i = 0; i<aNode.children.length; i++) {\n            if (aNode.children[i].children && aNode.children[i].children.length === 0) {\n              rows.push(aNode.children[i]);\n            } else {\n              var nodeRows = this.getRowsFromNode(aNode.children[i]);\n              rows = rows.concat(nodeRows);\n            }\n          }\n          return rows;\n        },\n\n        /**\n         * @ngdoc function\n         * @name getDataSorted\n         * @methodOf  ui.grid.exporter.service:uiGridExporterService\n         * @description Gets rows from a node. If the node is grouped it will\n         * recurse down into the children to get to the raw data element\n         * which is a row without children (a leaf). If the grid is not\n         * grouped this will return just the raw rows\n         * @param {Grid} grid the grid from which data should be exported\n         * @param {string} rowTypes which rows to export, valid values are\n         * uiGridExporterConstants.ALL, uiGridExporterConstants.VISIBLE,\n         * uiGridExporterConstants.SELECTED\n         * @param {string} colTypes which columns to export, valid values are\n         * uiGridExporterConstants.ALL, uiGridExporterConstants.VISIBLE,\n         * uiGridExporterConstants.SELECTED\n         * @param {boolean} applyCellFilters whether or not to get the display value or the raw value of the data\n         * @returns {Array} an array of leaf nodes\n         */\n        getDataSorted: function (grid, rowTypes, colTypes, applyCellFilters) {\n          if (!grid.treeBase || grid.treeBase.numberLevels === 0) {\n            return grid.rows;\n          }\n          var rows = [];\n\n          for (var i = 0; i< grid.treeBase.tree.length; i++) {\n            var nodeRows = this.getRowsFromNode(grid.treeBase.tree[i]);\n            for (var j = 0; j<nodeRows.length; j++) {\n              rows.push(nodeRows[j].row);\n            }\n          }\n          return rows;\n        },\n\n        /**\n         * @ngdoc function\n         * @name getData\n         * @methodOf  ui.grid.exporter.service:uiGridExporterService\n         * @description Gets data from the grid based on the provided options,\n         * all cells have cellFilters applied as appropriate.  Any rows marked\n         * `exporterEnableExporting: false` will not be exported\n         * @param {Grid} grid the grid from which data should be exported\n         * @param {string} rowTypes which rows to export, valid values are\n         * uiGridExporterConstants.ALL, uiGridExporterConstants.VISIBLE,\n         * uiGridExporterConstants.SELECTED\n         * @param {string} colTypes which columns to export, valid values are\n         * uiGridExporterConstants.ALL, uiGridExporterConstants.VISIBLE,\n         * uiGridExporterConstants.SELECTED\n         * @param {boolean} applyCellFilters whether or not to get the display value or the raw value of the data\n         */\n        getData: function (grid, rowTypes, colTypes, applyCellFilters) {\n          var data = [];\n          var rows;\n          var columns;\n\n          switch ( rowTypes ) {\n            case uiGridExporterConstants.ALL:\n              rows = this.getDataSorted(grid, rowTypes, colTypes, applyCellFilters);\n              break;\n            case uiGridExporterConstants.VISIBLE:\n              rows = grid.getVisibleRows();\n              break;\n            case uiGridExporterConstants.SELECTED:\n              if ( grid.api.selection ){\n                rows = grid.api.selection.getSelectedGridRows();\n              } else {\n                gridUtil.logError('selection feature must be enabled to allow selected rows to be exported');\n              }\n              break;\n          }\n\n          if ( colTypes === uiGridExporterConstants.ALL ){\n            columns = grid.columns;\n          } else {\n            var leftColumns = grid.renderContainers.left ? grid.renderContainers.left.visibleColumnCache.filter( function( column ){ return column.visible; } ) : [];\n            var bodyColumns = grid.renderContainers.body ? grid.renderContainers.body.visibleColumnCache.filter( function( column ){ return column.visible; } ) : [];\n            var rightColumns = grid.renderContainers.right ? grid.renderContainers.right.visibleColumnCache.filter( function( column ){ return column.visible; } ) : [];\n\n            columns = leftColumns.concat(bodyColumns,rightColumns);\n          }\n\n          rows.forEach( function( row, index ) {\n\n            if (row.exporterEnableExporting !== false) {\n              var extractedRow = [];\n\n\n              columns.forEach( function( gridCol, index ) {\n              // $$hashKey check since when grouping and sorting programmatically this ends up in export. Filtering it out\n              if ( (gridCol.visible || colTypes === uiGridExporterConstants.ALL ) &&\n                   gridCol.colDef.exporterSuppressExport !== true && gridCol.field !== '$$hashKey' &&\n                   grid.options.exporterSuppressColumns.indexOf( gridCol.name ) === -1 ){\n                  var cellValue = applyCellFilters ? grid.getCellDisplayValue( row, gridCol ) : grid.getCellValue( row, gridCol );\n                  var extractedField = { value: grid.options.exporterFieldCallback( grid, row, gridCol, cellValue ) };\n                  var extension = grid.options.exporterFieldFormatCallback( grid, row, gridCol, cellValue );\n                  if (extension) {\n                    Object.assign(extractedField, extension);\n                  }\n                  if ( gridCol.colDef.exporterPdfAlign ) {\n                    extractedField.alignment = gridCol.colDef.exporterPdfAlign;\n                  }\n                  extractedRow.push(extractedField);\n                }\n              });\n\n              data.push(extractedRow);\n            }\n          });\n\n          return data;\n        },\n\n\n        /**\n         * @ngdoc function\n         * @name formatAsCsv\n         * @methodOf  ui.grid.exporter.service:uiGridExporterService\n         * @description Formats the column headers and data as a CSV,\n         * and sends that data to the user\n         * @param {array} exportColumnHeaders an array of column headers,\n         * where each header is an object with name, width and maybe alignment\n         * @param {array} exportData an array of rows, where each row is\n         * an array of column data\n         * @param {string} separator a string that represents the separator to be used in the csv file\n         * @returns {string} csv the formatted csv as a string\n         */\n        formatAsCsv: function (exportColumnHeaders, exportData, separator) {\n          var self = this;\n\n          var bareHeaders = exportColumnHeaders.map(function(header){return { value: header.displayName };});\n\n          var csv = bareHeaders.length > 0 ? (self.formatRowAsCsv(this, separator)(bareHeaders) + '\\n') : '';\n\n          csv += exportData.map(this.formatRowAsCsv(this, separator)).join('\\n');\n\n          return csv;\n        },\n\n        /**\n         * @ngdoc function\n         * @name formatRowAsCsv\n         * @methodOf  ui.grid.exporter.service:uiGridExporterService\n         * @description Renders a single field as a csv field, including\n         * quotes around the value\n         * @param {exporterService} exporter pass in exporter\n         * @param {array} row the row to be turned into a csv string\n         * @returns {string} a csv-ified version of the row\n         */\n        formatRowAsCsv: function (exporter, separator) {\n          return function (row) {\n            return row.map(exporter.formatFieldAsCsv).join(separator);\n          };\n        },\n\n        /**\n         * @ngdoc function\n         * @name formatFieldAsCsv\n         * @methodOf  ui.grid.exporter.service:uiGridExporterService\n         * @description Renders a single field as a csv field, including\n         * quotes around the value\n         * @param {field} field the field to be turned into a csv string,\n         * may be of any type\n         * @returns {string} a csv-ified version of the field\n         */\n        formatFieldAsCsv: function (field) {\n          if (field.value == null) { // we want to catch anything null-ish, hence just == not ===\n            return '';\n          }\n          if (typeof(field.value) === 'number') {\n            return field.value;\n          }\n          if (typeof(field.value) === 'boolean') {\n            return (field.value ? 'TRUE' : 'FALSE') ;\n          }\n          if (typeof(field.value) === 'string') {\n            return '\"' + field.value.replace(/\"/g,'\"\"') + '\"';\n          }\n\n          return JSON.stringify(field.value);\n        },\n\n\n        /**\n         * @ngdoc function\n         * @name isIE\n         * @methodOf  ui.grid.exporter.service:uiGridExporterService\n         * @description Checks whether current browser is IE and returns it's version if it is\n        */\n        isIE: function () {\n          var match = navigator.userAgent.search(/(?:Edge|MSIE|Trident\\/.*; rv:)/);\n          var isIE = false;\n\n          if (match !== -1) {\n            isIE = true;\n          }\n\n          return isIE;\n        },\n\n\n        /**\n         * @ngdoc function\n         * @name downloadFile\n         * @methodOf  ui.grid.exporter.service:uiGridExporterService\n         * @description Triggers download of a csv file.  Logic provided\n         * by @cssensei (from his colleagues at https://github.com/ifeelgoods) in issue #2391\n         * @param {string} fileName the filename we'd like our file to be\n         * given\n         * @param {string} csvContent the csv content that we'd like to\n         * download as a file\n         * @param {boolean} exporterOlderExcelCompatibility whether or not we put a utf-16 BOM on the from (\\uFEFF)\n          * @param {boolean} exporterIsExcelCompatible whether or not we add separator header ('sep=X')\n         */\n        downloadFile: function (fileName, csvContent, columnSeparator, exporterOlderExcelCompatibility, exporterIsExcelCompatible) {\n          var D = document;\n          var a = D.createElement('a');\n          var strMimeType = 'application/octet-stream;charset=utf-8';\n          var rawFile;\n          var ieVersion = this.isIE();\n\n          if (exporterIsExcelCompatible) {\n              csvContent = 'sep=' + columnSeparator + '\\r\\n' + csvContent;\n          }\n\n          // IE10+\n          if (navigator.msSaveBlob) {\n            return navigator.msSaveOrOpenBlob(\n              new Blob(\n                [exporterOlderExcelCompatibility ? \"\\uFEFF\" : '', csvContent],\n                { type: strMimeType } ),\n              fileName\n            );\n          }\n\n          if (ieVersion) {\n            var frame = D.createElement('iframe');\n            document.body.appendChild(frame);\n\n            frame.contentWindow.document.open('text/html', 'replace');\n            frame.contentWindow.document.write(csvContent);\n            frame.contentWindow.document.close();\n            frame.contentWindow.focus();\n            frame.contentWindow.document.execCommand('SaveAs', true, fileName);\n\n            document.body.removeChild(frame);\n            return true;\n          }\n\n          //html5 A[download]\n          if ('download' in a) {\n            var blob = new Blob(\n              [exporterOlderExcelCompatibility ? \"\\uFEFF\" : '', csvContent],\n              { type: strMimeType }\n            );\n            rawFile = URL.createObjectURL(blob);\n            a.setAttribute('download', fileName);\n          } else {\n            rawFile = 'data:' + strMimeType + ',' + encodeURIComponent(csvContent);\n            a.setAttribute('target', '_blank');\n          }\n\n          a.href = rawFile;\n          a.setAttribute('style', 'display:none;');\n          D.body.appendChild(a);\n          setTimeout(function() {\n            if (a.click) {\n              a.click();\n              // Workaround for Safari 5\n            } else if (document.createEvent) {\n              var eventObj = document.createEvent('MouseEvents');\n              eventObj.initEvent('click', true, true);\n              a.dispatchEvent(eventObj);\n            }\n            D.body.removeChild(a);\n\n          }, this.delay);\n        },\n\n        /**\n         * @ngdoc function\n         * @name pdfExport\n         * @methodOf  ui.grid.exporter.service:uiGridExporterService\n         * @description Exports rows from the grid in pdf format,\n         * the data exported is selected based on the provided options.\n         * Note that this function has a dependency on pdfMake, which must\n         * be installed.  The resulting pdf opens in a new\n         * browser window.\n         * @param {Grid} grid the grid from which data should be exported\n         * @param {string} rowTypes which rows to export, valid values are\n         * uiGridExporterConstants.ALL, uiGridExporterConstants.VISIBLE,\n         * uiGridExporterConstants.SELECTED\n         * @param {string} colTypes which columns to export, valid values are\n         * uiGridExporterConstants.ALL, uiGridExporterConstants.VISIBLE,\n         * uiGridExporterConstants.SELECTED\n         */\n        pdfExport: function (grid, rowTypes, colTypes) {\n          var self = this;\n          this.loadAllDataIfNeeded(grid, rowTypes, colTypes).then(function () {\n            var exportColumnHeaders = self.getColumnHeaders(grid, colTypes);\n            var exportData = self.getData(grid, rowTypes, colTypes);\n            var docDefinition = self.prepareAsPdf(grid, exportColumnHeaders, exportData);\n\n            if (self.isIE() || navigator.appVersion.indexOf(\"Edge\") !== -1) {\n              self.downloadPDF(grid.options.exporterPdfFilename, docDefinition);\n            } else {\n              pdfMake.createPdf(docDefinition).open();\n            }\n          });\n        },\n\n\n        /**\n         * @ngdoc function\n         * @name downloadPdf\n         * @methodOf  ui.grid.exporter.service:uiGridExporterService\n         * @description Generates and retrieves the pdf as a blob, then downloads\n         * it as a file.  Only used in IE, in all other browsers we use the native\n         * pdfMake.open function to just open the PDF\n         * @param {string} fileName the filename to give to the pdf, can be set\n         * through exporterPdfFilename\n         * @param {object} docDefinition a pdf docDefinition that we can generate\n         * and get a blob from\n         */\n        downloadPDF: function (fileName, docDefinition) {\n          var D = document;\n          var a = D.createElement('a');\n          var strMimeType = 'application/octet-stream;charset=utf-8';\n          var rawFile;\n          var ieVersion;\n\n          ieVersion = this.isIE(); // This is now a boolean value\n          var doc = pdfMake.createPdf(docDefinition);\n          var blob;\n\n          doc.getBuffer( function (buffer) {\n            blob = new Blob([buffer]);\n\n            // IE10+\n            if (navigator.msSaveBlob) {\n              return navigator.msSaveBlob(\n                blob, fileName\n              );\n            }\n\n            // Previously:  && ieVersion < 10\n            // ieVersion now returns a boolean for the\n            // sake of sanity. We just check `msSaveBlob` first.\n            if (ieVersion) {\n              var frame = D.createElement('iframe');\n              document.body.appendChild(frame);\n\n              frame.contentWindow.document.open(\"text/html\", \"replace\");\n              frame.contentWindow.document.write(blob);\n              frame.contentWindow.document.close();\n              frame.contentWindow.focus();\n              frame.contentWindow.document.execCommand('SaveAs', true, fileName);\n\n              document.body.removeChild(frame);\n              return true;\n            }\n          });\n        },\n\n\n        /**\n         * @ngdoc function\n         * @name renderAsPdf\n         * @methodOf  ui.grid.exporter.service:uiGridExporterService\n         * @description Renders the data into a pdf, and opens that pdf.\n         *\n         * @param {Grid} grid the grid from which data should be exported\n         * @param {array} exportColumnHeaders an array of column headers,\n         * where each header is an object with name, width and maybe alignment\n         * @param {array} exportData an array of rows, where each row is\n         * an array of column data\n         * @returns {object} a pdfMake format document definition, ready\n         * for generation\n         */\n        prepareAsPdf: function(grid, exportColumnHeaders, exportData) {\n          var headerWidths = this.calculatePdfHeaderWidths( grid, exportColumnHeaders );\n\n          var headerColumns = exportColumnHeaders.map( function( header ) {\n            return { text: header.displayName, style: 'tableHeader' };\n          });\n\n          var stringData = exportData.map(this.formatRowAsPdf(this));\n\n          var allData = [headerColumns].concat(stringData);\n\n          var docDefinition = {\n            pageOrientation: grid.options.exporterPdfOrientation,\n            pageSize: grid.options.exporterPdfPageSize,\n            content: [{\n              style: 'tableStyle',\n              table: {\n                headerRows: 1,\n                widths: headerWidths,\n                body: allData\n              }\n            }],\n            styles: {\n              tableStyle: grid.options.exporterPdfTableStyle,\n              tableHeader: grid.options.exporterPdfTableHeaderStyle\n            },\n            defaultStyle: grid.options.exporterPdfDefaultStyle\n          };\n\n          if ( grid.options.exporterPdfLayout ){\n            docDefinition.layout = grid.options.exporterPdfLayout;\n          }\n\n          if ( grid.options.exporterPdfHeader ){\n            docDefinition.header = grid.options.exporterPdfHeader;\n          }\n\n          if ( grid.options.exporterPdfFooter ){\n            docDefinition.footer = grid.options.exporterPdfFooter;\n          }\n\n          if ( grid.options.exporterPdfCustomFormatter ){\n            docDefinition = grid.options.exporterPdfCustomFormatter( docDefinition );\n          }\n          return docDefinition;\n\n        },\n\n\n        /**\n         * @ngdoc function\n         * @name calculatePdfHeaderWidths\n         * @methodOf  ui.grid.exporter.service:uiGridExporterService\n         * @description Determines the column widths base on the\n         * widths we got from the grid.  If the column is drawn\n         * then we have a drawnWidth.  If the column is not visible\n         * then we have '*', 'x%' or a width.  When columns are\n         * not visible they don't contribute to the overall gridWidth,\n         * so we need to adjust to allow for extra columns\n         *\n         * Our basic heuristic is to take the current gridWidth, plus\n         * numeric columns and call this the base gridwidth.\n         *\n         * To that we add 100 for any '*' column, and x% of the base gridWidth\n         * for any column that is a %\n         *\n         * @param {Grid} grid the grid from which data should be exported\n         * @param {array} exportHeaders array of header information\n         * @returns {object} an array of header widths\n         */\n        calculatePdfHeaderWidths: function ( grid, exportHeaders ) {\n          var baseGridWidth = 0;\n          exportHeaders.forEach( function(value){\n            if (typeof(value.width) === 'number'){\n              baseGridWidth += value.width;\n            }\n          });\n\n          var extraColumns = 0;\n          exportHeaders.forEach( function(value){\n            if (value.width === '*'){\n              extraColumns += 100;\n            }\n            if (typeof(value.width) === 'string' && value.width.match(/(\\d)*%/)) {\n              var percent = parseInt(value.width.match(/(\\d)*%/)[0]);\n\n              value.width = baseGridWidth * percent / 100;\n              extraColumns += value.width;\n            }\n          });\n\n          var gridWidth = baseGridWidth + extraColumns;\n\n          return exportHeaders.map(function( header ) {\n            return header.width === '*' ? header.width : header.width * grid.options.exporterPdfMaxGridWidth / gridWidth;\n          });\n\n        },\n\n        /**\n         * @ngdoc function\n         * @name formatRowAsPdf\n         * @methodOf  ui.grid.exporter.service:uiGridExporterService\n         * @description Renders a row in a format consumable by PDF,\n         * mainly meaning casting everything to a string\n         * @param {exporterService} exporter pass in exporter\n         * @param {array} row the row to be turned into a csv string\n         * @returns {string} a csv-ified version of the row\n         */\n        formatRowAsPdf: function ( exporter ) {\n          return function( row ) {\n            return row.map(exporter.formatFieldAsPdfString);\n          };\n        },\n\n\n        /**\n         * @ngdoc function\n         * @name formatFieldAsCsv\n         * @methodOf  ui.grid.exporter.service:uiGridExporterService\n         * @description Renders a single field as a pdf-able field, which\n         * is different from a csv field only in that strings don't have quotes\n         * around them\n         * @param {field} field the field to be turned into a pdf string,\n         * may be of any type\n         * @returns {string} a string-ified version of the field\n         */\n        formatFieldAsPdfString: function (field) {\n          var returnVal;\n          if (field.value == null) { // we want to catch anything null-ish, hence just == not ===\n            returnVal = '';\n          } else if (typeof(field.value) === 'number') {\n            returnVal = field.value.toString();\n          } else if (typeof(field.value) === 'boolean') {\n            returnVal = (field.value ? 'TRUE' : 'FALSE') ;\n          } else if (typeof(field.value) === 'string') {\n            returnVal = field.value.replace(/\"/g,'\"\"');\n          } else if (field.value instanceof Date) {\n            returnVal = JSON.stringify(field.value).replace(/^\"/,'').replace(/\"$/,'');\n          } else if (typeof(field.value) === 'object') {\n            returnVal = field.value;\n          } else {\n            returnVal = JSON.stringify(field.value).replace(/^\"/,'').replace(/\"$/,'');\n          }\n\n          if (field.alignment && typeof(field.alignment) === 'string' ){\n            returnVal = { text: returnVal, alignment: field.alignment };\n          }\n\n          return returnVal;\n        },\n\n        /**\n         * @ngdoc function\n         * @name formatAsExcel\n         * @methodOf  ui.grid.exporter.service:uiGridExporterService\n         * @description Formats the column headers and data as a excel,\n         * and sends that data to the user\n         * @param {array} exportColumnHeaders an array of column headers,\n         * where each header is an object with name, width and maybe alignment\n         * @param {array} exportData an array of rows, where each row is\n         * an array of column data\n         * @param {string} separator a string that represents the separator to be used in the csv file\n         * @returns {string} csv the formatted excel as a string\n         */\n        formatAsExcel: function (exportColumnHeaders, exportData, workbook, sheet, docDefinition) {\n          var self = this;\n\n          var bareHeaders = exportColumnHeaders.map(function(header){return { value: header.displayName };});\n\n          var sheetData = [];\n          var headerData = [];\n          for (var i = 0; i < bareHeaders.length; i++) {\n            // TODO - probably need callback to determine header value and header styling\n            var exportStyle = 'header';\n            switch (exportColumnHeaders[i].align) {\n              case 'center':\n                exportStyle = 'headerCenter';\n                break;\n              case 'right':\n                exportStyle = 'headerRight';\n                break;\n            }\n            var metadata = (docDefinition.styles && docDefinition.styles[exportStyle]) ? {style: docDefinition.styles[exportStyle].id} : null;\n            headerData.push({value: bareHeaders[i].value, metadata: metadata});\n          }\n          sheetData.push(headerData);\n\n          var result = exportData.map(this.formatRowAsExcel(this, workbook, sheet));\n          for (var j = 0; j<result.length; j++) {\n            sheetData.push(result[j]);\n          }\n          return sheetData;\n        },\n\n        /**\n         * @ngdoc function\n         * @name formatRowAsExcel\n         * @methodOf  ui.grid.exporter.service:uiGridExporterService\n         * @description Renders a single field as a csv field, including\n         * quotes around the value\n         * @param {exporterService} exporter pass in exporter\n         * @param {array} row the row to be turned into a excel string\n         * @returns {array} array of cell objects (i.e. {value: x, metadata: y})\n         */\n        formatRowAsExcel: function (exporter, workbook, sheet) {\n          return function (row) {\n            var values = [];\n            for (var i = 0; i<row.length; i++) {\n              var value = exporter.formatFieldAsExcel(row[i], workbook, sheet);\n              values.push({value: value, metadata: row[i].metadata});\n            }\n            return values;\n          };\n        },\n\n        /**\n         * @ngdoc function\n         * @name formatFieldAsExcel\n         * @methodOf  ui.grid.exporter.service:uiGridExporterService\n         * @description Renders a single field as a csv field, including\n         * quotes around the value\n         * @param {field} field the field to be turned into a csv string,\n         * may be of any type\n         * @returns {string} a excel-ified version of the field\n         */\n        formatFieldAsExcel: function (field, workbook, sheet, formatters) {\n          if (field.value == null) { // we want to catch anything null-ish, hence just == not ===\n            return '';\n          }\n          if (typeof(field.value) === 'number') {\n            return field.value;\n          }\n          if (typeof(field.value) === 'boolean') {\n            return (field.value ? 'TRUE' : 'FALSE') ;\n          }\n          if (typeof(field.value) === 'string') {\n            return field.value.replace(/\"/g,'\"\"');\n          }\n\n          return JSON.stringify(field.value);\n        },\n\n        prepareAsExcel: function(grid, workbook, sheet) {\n          var docDefinition = {\n            styles: {\n\n            }\n          };\n\n          if ( grid.options.exporterExcelCustomFormatters ){\n            docDefinition = grid.options.exporterExcelCustomFormatters( grid, workbook, docDefinition );\n          }\n          if ( grid.options.exporterExcelHeader ) {\n            if (angular.isFunction( grid.options.exporterExcelHeader )) {\n              grid.options.exporterExcelHeader(grid, workbook, sheet, docDefinition);\n            } else {\n              var headerText = grid.options.exporterExcelHeader.text;\n              var style = grid.options.exporterExcelHeader.style;\n              sheet.data.push([{value: headerText, metadata: {style: docDefinition.styles[style].id}}]);\n            }\n          }\n\n          return docDefinition;\n        },\n\n        excelExport: function (grid, rowTypes, colTypes) {\n          var self = this;\n          this.loadAllDataIfNeeded(grid, rowTypes, colTypes).then(function() {\n            var exportColumnHeaders = grid.options.showHeader ? self.getColumnHeaders(grid, colTypes) : [];\n\n            var workbook = new ExcelBuilder.Workbook();\n            var aName = grid.options.exporterExcelSheetName ? grid.options.exporterExcelSheetName : 'Sheet1';\n            var sheet = new ExcelBuilder.Worksheet({name: aName});\n            workbook.addWorksheet(sheet);\n            var docDefinition = self.prepareAsExcel(grid, workbook, sheet);\n\n            // The standard column width in Microsoft Excel 2000 is 8.43 characters based on fixed-width Courier font\n            // Width of 10 in excel is 75 pixels\n            var colWidths = [];\n            var startDataIndex = grid.treeBase ? grid.treeBase.numberLevels : (grid.enableRowSelection !== false ? 1 : 0);\n            for (var i = startDataIndex; i < grid.columns.length; i++) {\n              colWidths.push({width: (grid.columns[i].drawnWidth / 75) * 10});\n            }\n            sheet.setColumns(colWidths);\n\n            var exportData = self.getData(grid, rowTypes, colTypes, grid.options.exporterFieldApplyFilters);\n\n            // set column widhths. See function called from prepareAsExcel method\n            //sheet.setColumns(docDefinition.columnWidths);\n\n            //for (var i=0; i< grid.treeBase.tree.length; i++) {\n            //  console.log(grid.treeBase.tree[i]);\n            //}\n            var excelContent = self.formatAsExcel(exportColumnHeaders, exportData, workbook, sheet, docDefinition);\n            sheet.setData(sheet.data.concat(excelContent));\n\n            ExcelBuilder.Builder.createFile(workbook, {type:\"blob\"}).then(function(result) {\n              self.downloadFile (grid.options.exporterExcelFilename, result, grid.options.exporterCsvColumnSeparator, grid.options.exporterOlderExcelCompatibility);\n            });\n\n          });\n        }\n\n      };\n\n      function getDisplayName(grid, gridCol) {\n        if (grid.options.exporterHeaderFilter) {\n          return grid.options.exporterHeaderFilterUseName ?\n            grid.options.exporterHeaderFilter(gridCol.name) :\n            grid.options.exporterHeaderFilter(gridCol.displayName);\n        }\n\n        return gridCol.headerCellFilter ?\n          $filter(gridCol.headerCellFilter)(gridCol.displayName) :\n          gridCol.displayName;\n      }\n\n      function defaultExporterFieldCallback(grid, row, col, value) {\n        return col.cellFilter ? $filter(col.cellFilter)(value) : value;\n      }\n\n      return service;\n    }\n  ]);\n\n  /**\n   *  @ngdoc directive\n   *  @name ui.grid.exporter.directive:uiGridExporter\n   *  @element div\n   *  @restrict A\n   *\n   *  @description Adds exporter features to grid\n   *\n   *  @example\n   <example module=\"app\">\n   <file name=\"app.js\">\n   var app = angular.module('app', ['ui.grid', 'ui.grid.exporter']);\n\n   app.controller('MainCtrl', ['$scope', function ($scope) {\n      $scope.data = [\n        { name: 'Bob', title: 'CEO' },\n            { name: 'Frank', title: 'Lowly Developer' }\n      ];\n\n      $scope.gridOptions = {\n        enableGridMenu: true,\n        exporterMenuCsv: false,\n        columnDefs: [\n          {name: 'name', enableCellEdit: true},\n          {name: 'title', enableCellEdit: true}\n        ],\n        data: $scope.data\n      };\n    }]);\n   </file>\n   <file name=\"index.html\">\n   <div ng-controller=\"MainCtrl\">\n   <div ui-grid=\"gridOptions\" ui-grid-exporter></div>\n   </div>\n   </file>\n   </example>\n   */\n  module.directive('uiGridExporter', ['uiGridExporterConstants', 'uiGridExporterService', 'gridUtil', '$compile',\n    function (uiGridExporterConstants, uiGridExporterService, gridUtil, $compile) {\n      return {\n        replace: true,\n        priority: 0,\n        require: '^uiGrid',\n        scope: false,\n        link: function ($scope, $elm, $attrs, uiGridCtrl) {\n          uiGridExporterService.initializeGrid(uiGridCtrl.grid);\n          uiGridCtrl.grid.exporter.$scope = $scope;\n        }\n      };\n    }\n  ]);\n})();\n\n(function () {\n  'use strict';\n\n  /**\n   * @ngdoc overview\n   * @name ui.grid.grouping\n   * @description\n   *\n   * # ui.grid.grouping\n   *\n   * <div class=\"alert alert-warning\" role=\"alert\"><strong>Beta</strong> This feature is ready for testing, but it either hasn't seen a lot of use or has some known bugs.</div>\n   *\n   * This module provides grouping of rows based on the data in them, similar\n   * in concept to excel grouping.  You can group multiple columns, resulting in\n   * nested grouping.\n   *\n   * In concept this feature is similar to sorting + grid footer/aggregation, it\n   * sorts the data based on the grouped columns, then creates group rows that\n   * reflect a break in the data.  Each of those group rows can have aggregations for\n   * the data within that group.\n   *\n   * This feature leverages treeBase to provide the tree functionality itself,\n   * the key thing this feature does therefore is to set treeLevels on the rows\n   * and insert the group headers.\n   *\n   * Design information:\n   * -------------------\n   *\n   * Each column will get new menu items - group by, and aggregate by.  Group by\n   * will cause this column to be sorted (if not already), and will move this column\n   * to the front of the sorted columns (i.e. grouped columns take precedence over\n   * sorted columns).  It will respect the sort order already set if there is one,\n   * and it will allow the sorting logic to change that sort order, it just forces\n   * the column to the front of the sorting.  You can group by multiple columns, the\n   * logic will add this column to the sorting after any already grouped columns.\n   *\n   * Once a grouping is defined, grouping logic is added to the rowsProcessors.  This\n   * will process the rows, identifying a break in the data value, and inserting a grouping row.\n   * Grouping rows have specific attributes on them:\n   *\n   *  - internalRow = true: tells us that this isn't a real row, so we can ignore it\n   *    from any processing that it looking at core data rows.  This is used by the core\n   *    logic (or will be one day), as it's not grouping specific\n   *  - groupHeader = true: tells us this is a groupHeader.  This is used by the grouping logic\n   *    to know if this is a groupHeader row or not\n   *\n   * Since the logic is baked into the rowsProcessors, it should get triggered whenever\n   * row order or filtering or anything like that is changed.  In order to avoid the row instantiation\n   * time, and to preserve state across invocations, we hold a cache of the rows that we created\n   * last time, and we use them again this time if we can.\n   *\n   * By default rows are collapsed, which means all data rows have their visible property\n   * set to false, and only level 0 group rows are set to visible.\n   *\n   * <br/>\n   * <br/>\n   *\n   * <div doc-module-components=\"ui.grid.grouping\"></div>\n   */\n\n  var module = angular.module('ui.grid.grouping', ['ui.grid', 'ui.grid.treeBase']);\n\n  /**\n   *  @ngdoc object\n   *  @name ui.grid.grouping.constant:uiGridGroupingConstants\n   *\n   *  @description constants available in grouping module, this includes\n   *  all the constants declared in the treeBase module (these are manually copied\n   *  as there isn't an easy way to include constants in another constants file, and\n   *  we don't want to make users include treeBase)\n   *\n   */\n  module.constant('uiGridGroupingConstants', {\n    featureName: \"grouping\",\n    rowHeaderColName: 'treeBaseRowHeaderCol',\n    EXPANDED: 'expanded',\n    COLLAPSED: 'collapsed',\n    aggregation: {\n      COUNT: 'count',\n      SUM: 'sum',\n      MAX: 'max',\n      MIN: 'min',\n      AVG: 'avg'\n    }\n  });\n\n  /**\n   *  @ngdoc service\n   *  @name ui.grid.grouping.service:uiGridGroupingService\n   *\n   *  @description Services for grouping features\n   */\n  module.service('uiGridGroupingService', ['$q', 'uiGridGroupingConstants', 'gridUtil', 'rowSorter', 'GridRow', 'gridClassFactory', 'i18nService', 'uiGridConstants', 'uiGridTreeBaseService',\n  function ($q, uiGridGroupingConstants, gridUtil, rowSorter, GridRow, gridClassFactory, i18nService, uiGridConstants, uiGridTreeBaseService) {\n\n    var service = {\n\n      initializeGrid: function (grid, $scope) {\n        uiGridTreeBaseService.initializeGrid( grid, $scope );\n\n        //add feature namespace and any properties to grid for needed\n        /**\n         *  @ngdoc object\n         *  @name ui.grid.grouping.grid:grouping\n         *\n         *  @description Grid properties and functions added for grouping\n         */\n        grid.grouping = {};\n\n        /**\n         *  @ngdoc property\n         *  @propertyOf ui.grid.grouping.grid:grouping\n         *  @name groupHeaderCache\n         *\n         *  @description Cache that holds the group header rows we created last time, we'll\n         *  reuse these next time, not least because they hold our expanded states.\n         *\n         *  We need to take care with these that they don't become a memory leak, we\n         *  create a new cache each time using the values from the old cache.  This works\n         *  so long as we're creating group rows for invisible rows as well.\n         *\n         *  The cache is a nested hash, indexed on the value we grouped by.  So if we\n         *  grouped by gender then age, we'd maybe have something like:\n         *  ```\n         *    {\n         *      male: {\n         *        row: <pointer to the old row>,\n         *        children: {\n         *          22: { row: <pointer to the old row> },\n         *          31: { row: <pointer to the old row> }\n         *      },\n         *      female: {\n         *        row: <pointer to the old row>,\n         *        children: {\n         *          28: { row: <pointer to the old row> },\n         *          55: { row: <pointer to the old row> }\n         *      }\n         *    }\n         *  ```\n         *\n         *  We create new rows for any missing rows, this means that they come in as collapsed.\n         *\n         */\n        grid.grouping.groupHeaderCache = {};\n\n        service.defaultGridOptions(grid.options);\n\n        grid.registerRowsProcessor(service.groupRows, 400);\n\n        grid.registerColumnBuilder( service.groupingColumnBuilder);\n\n        grid.registerColumnsProcessor(service.groupingColumnProcessor, 400);\n\n        /**\n         *  @ngdoc object\n         *  @name ui.grid.grouping.api:PublicApi\n         *\n         *  @description Public Api for grouping feature\n         */\n        var publicApi = {\n          events: {\n            grouping: {\n              /**\n               * @ngdoc event\n               * @eventOf ui.grid.grouping.api:PublicApi\n               * @name aggregationChanged\n               * @description raised whenever aggregation is changed, added or removed from a column\n               *\n               * <pre>\n               *      gridApi.grouping.on.aggregationChanged(scope,function(col){})\n               * </pre>\n               * @param {GridColumn} col the column which on which aggregation changed. The aggregation\n               * type is available as `col.treeAggregation.type`\n               */\n              aggregationChanged: {},\n              /**\n               * @ngdoc event\n               * @eventOf ui.grid.grouping.api:PublicApi\n               * @name groupingChanged\n               * @description raised whenever the grouped columns changes\n               *\n               * <pre>\n               *      gridApi.grouping.on.groupingChanged(scope,function(col){})\n               * </pre>\n               * @param {GridColumn} col the column which on which grouping changed. The new grouping is\n               * available as `col.grouping`\n               */\n              groupingChanged: {}\n            }\n          },\n          methods: {\n            grouping: {\n              /**\n               * @ngdoc function\n               * @name getGrouping\n               * @methodOf  ui.grid.grouping.api:PublicApi\n               * @description Get the grouping configuration for this grid,\n               * used by the saveState feature.  Adds expandedState to the information\n               * provided by the internal getGrouping, and removes any aggregations that have a source\n               * of grouping (i.e. will be automatically reapplied when we regroup the column)\n               * Returned grouping is an object\n               *   `{ grouping: groupArray, treeAggregations: aggregateArray, expandedState: hash }`\n               * where grouping contains an array of objects:\n               *   `{ field: column.field, colName: column.name, groupPriority: column.grouping.groupPriority }`\n               * and aggregations contains an array of objects:\n               *   `{ field: column.field, colName: column.name, aggregation: column.grouping.aggregation }`\n               * and expandedState is a hash of the currently expanded nodes\n               *\n               * The groupArray will be sorted by groupPriority.\n               *\n               * @param {boolean} getExpanded whether or not to return the expanded state\n               * @returns {object} grouping configuration\n               */\n              getGrouping: function ( getExpanded ) {\n                var grouping = service.getGrouping(grid);\n\n                grouping.grouping.forEach( function( group ) {\n                  group.colName = group.col.name;\n                  delete group.col;\n                });\n\n                grouping.aggregations.forEach( function( aggregation ) {\n                  aggregation.colName = aggregation.col.name;\n                  delete aggregation.col;\n                });\n\n                grouping.aggregations = grouping.aggregations.filter( function( aggregation ){\n                  return !aggregation.aggregation.source || aggregation.aggregation.source !== 'grouping';\n                });\n\n                if ( getExpanded ){\n                  grouping.rowExpandedStates = service.getRowExpandedStates( grid.grouping.groupingHeaderCache );\n                }\n\n                return grouping;\n              },\n\n              /**\n               * @ngdoc function\n               * @name setGrouping\n               * @methodOf  ui.grid.grouping.api:PublicApi\n               * @description Set the grouping configuration for this grid,\n               * used by the saveState feature, but can also be used by any\n               * user to specify a combined grouping and aggregation configuration\n               * @param {object} config the config you want to apply, in the format\n               * provided out by getGrouping\n               */\n              setGrouping: function ( config ) {\n                service.setGrouping(grid, config);\n              },\n\n              /**\n               * @ngdoc function\n               * @name groupColumn\n               * @methodOf  ui.grid.grouping.api:PublicApi\n               * @description Adds this column to the existing grouping, at the end of the priority order.\n               * If the column doesn't have a sort, adds one, by default ASC\n               *\n               * This column will move to the left of any non-group columns, the\n               * move is handled in a columnProcessor, so gets called as part of refresh\n               *\n               * @param {string} columnName the name of the column we want to group\n               */\n              groupColumn: function( columnName ) {\n                var column = grid.getColumn(columnName);\n                service.groupColumn(grid, column);\n              },\n\n              /**\n               * @ngdoc function\n               * @name ungroupColumn\n               * @methodOf  ui.grid.grouping.api:PublicApi\n               * @description Removes the groupPriority from this column.  If the\n               * column was previously aggregated the aggregation will come back.\n               * The sort will remain.\n               *\n               * This column will move to the right of any other group columns, the\n               * move is handled in a columnProcessor, so gets called as part of refresh\n               *\n               * @param {string} columnName the name of the column we want to ungroup\n               */\n              ungroupColumn: function( columnName ) {\n                var column = grid.getColumn(columnName);\n                service.ungroupColumn(grid, column);\n              },\n\n              /**\n               * @ngdoc function\n               * @name clearGrouping\n               * @methodOf  ui.grid.grouping.api:PublicApi\n               * @description Clear any grouped columns and any aggregations.  Doesn't remove sorting,\n               * as we don't know whether that sorting was added by grouping or was there beforehand\n               *\n               */\n              clearGrouping: function() {\n                service.clearGrouping(grid);\n              },\n\n              /**\n               * @ngdoc function\n               * @name aggregateColumn\n               * @methodOf  ui.grid.grouping.api:PublicApi\n               * @description Sets the aggregation type on a column, if the\n               * column is currently grouped then it removes the grouping first.\n               * If the aggregationDef is null then will result in the aggregation\n               * being removed\n               *\n               * @param {string} columnName the column we want to aggregate\n               * @param {string} or {function} aggregationDef one of the recognised types\n               * from uiGridGroupingConstants or a custom aggregation function.\n               * @param {string} aggregationLabel (optional) The label to use for this aggregation.\n               */\n              aggregateColumn: function( columnName, aggregationDef, aggregationLabel){\n                var column = grid.getColumn(columnName);\n                service.aggregateColumn( grid, column, aggregationDef, aggregationLabel);\n              }\n\n            }\n          }\n        };\n\n        grid.api.registerEventsFromObject(publicApi.events);\n\n        grid.api.registerMethodsFromObject(publicApi.methods);\n\n        grid.api.core.on.sortChanged( $scope, service.tidyPriorities);\n\n      },\n\n      defaultGridOptions: function (gridOptions) {\n        //default option to true unless it was explicitly set to false\n        /**\n         *  @ngdoc object\n         *  @name ui.grid.grouping.api:GridOptions\n         *\n         *  @description GridOptions for grouping feature, these are available to be\n         *  set using the ui-grid {@link ui.grid.class:GridOptions gridOptions}\n         */\n\n        /**\n         *  @ngdoc object\n         *  @name enableGrouping\n         *  @propertyOf  ui.grid.grouping.api:GridOptions\n         *  @description Enable row grouping for entire grid.\n         *  <br/>Defaults to true\n         */\n        gridOptions.enableGrouping = gridOptions.enableGrouping !== false;\n\n        /**\n         *  @ngdoc object\n         *  @name groupingShowCounts\n         *  @propertyOf  ui.grid.grouping.api:GridOptions\n         *  @description shows counts on the groupHeader rows. Not that if you are using a cellFilter or a\n         *  sortingAlgorithm which relies on a specific format or data type, showing counts may cause that\n         *  to break, since the group header rows will always be a string with groupingShowCounts enabled.\n         *  <br/>Defaults to true except on columns of types 'date' and 'object'\n         */\n        gridOptions.groupingShowCounts = gridOptions.groupingShowCounts !== false;\n\n        /**\n         *  @ngdoc object\n         *  @name groupingNullLabel\n         *  @propertyOf  ui.grid.grouping.api:GridOptions\n         *  @description The string to use for the grouping header row label on rows which contain a null or undefined value in the grouped column.\n         *  <br/>Defaults to \"Null\"\n         */\n        gridOptions.groupingNullLabel = typeof(gridOptions.groupingNullLabel) === 'undefined' ? 'Null' : gridOptions.groupingNullLabel;\n\n        /**\n         *  @ngdoc object\n         *  @name enableGroupHeaderSelection\n         *  @propertyOf  ui.grid.grouping.api:GridOptions\n         *  @description Allows group header rows to be selected.\n         *  <br/>Defaults to false\n         */\n        gridOptions.enableGroupHeaderSelection = gridOptions.enableGroupHeaderSelection === true;\n      },\n\n\n      /**\n       * @ngdoc function\n       * @name groupingColumnBuilder\n       * @methodOf  ui.grid.grouping.service:uiGridGroupingService\n       * @description Sets the grouping defaults based on the columnDefs\n       *\n       * @param {object} colDef columnDef we're basing on\n       * @param {GridColumn} col the column we're to update\n       * @param {object} gridOptions the options we should use\n       * @returns {promise} promise for the builder - actually we do it all inline so it's immediately resolved\n       */\n      groupingColumnBuilder: function (colDef, col, gridOptions) {\n        /**\n         *  @ngdoc object\n         *  @name ui.grid.grouping.api:ColumnDef\n         *\n         *  @description ColumnDef for grouping feature, these are available to be\n         *  set using the ui-grid {@link ui.grid.class:GridOptions.columnDef gridOptions.columnDefs}\n         */\n\n        /**\n         *  @ngdoc object\n         *  @name enableGrouping\n         *  @propertyOf  ui.grid.grouping.api:ColumnDef\n         *  @description Enable grouping on this column\n         *  <br/>Defaults to true.\n         */\n        if (colDef.enableGrouping === false){\n          return;\n        }\n\n        /**\n         *  @ngdoc object\n         *  @name grouping\n         *  @propertyOf  ui.grid.grouping.api:ColumnDef\n         *  @description Set the grouping for a column.  Format is:\n         *  ```\n         *    {\n         *      groupPriority: <number, starts at 0, if less than 0 or undefined then we're aggregating in this column>\n         *    }\n         *  ```\n         *\n         *  **Note that aggregation used to be included in grouping, but is now separately set on the column via treeAggregation\n         *  setting in treeBase**\n         *\n         *  We group in the priority order given, this will also put these columns to the high order of the sort irrespective\n         *  of the sort priority given them.  If there is no sort defined then we sort ascending, if there is a sort defined then\n         *  we use that sort.\n         *\n         *  If the groupPriority is undefined or less than 0, then we expect to be aggregating, and we look at the\n         *  aggregation types to determine what sort of aggregation we can do.  Values are in the constants file, but\n         *  include SUM, COUNT, MAX, MIN\n         *\n         *  groupPriorities should generally be sequential, if they're not then the next time getGrouping is called\n         *  we'll renumber them to be sequential.\n         *  <br/>Defaults to undefined.\n         */\n\n        if ( typeof(col.grouping) === 'undefined' && typeof(colDef.grouping) !== 'undefined') {\n          col.grouping = angular.copy(colDef.grouping);\n          if ( typeof(col.grouping.groupPriority) !== 'undefined' && col.grouping.groupPriority > -1 ){\n            col.treeAggregationFn = uiGridTreeBaseService.nativeAggregations()[uiGridGroupingConstants.aggregation.COUNT].aggregationFn;\n            col.treeAggregationFinalizerFn = service.groupedFinalizerFn;\n          }\n        } else if (typeof(col.grouping) === 'undefined'){\n          col.grouping = {};\n        }\n\n        if (typeof(col.grouping) !== 'undefined' && typeof(col.grouping.groupPriority) !== 'undefined' && col.grouping.groupPriority >= 0){\n          col.suppressRemoveSort = true;\n        }\n\n        var groupColumn = {\n          name: 'ui.grid.grouping.group',\n          title: i18nService.get().grouping.group,\n          icon: 'ui-grid-icon-indent-right',\n          shown: function () {\n            return typeof(this.context.col.grouping) === 'undefined' ||\n                   typeof(this.context.col.grouping.groupPriority) === 'undefined' ||\n                   this.context.col.grouping.groupPriority < 0;\n          },\n          action: function () {\n            service.groupColumn( this.context.col.grid, this.context.col );\n          }\n        };\n\n        var ungroupColumn = {\n          name: 'ui.grid.grouping.ungroup',\n          title: i18nService.get().grouping.ungroup,\n          icon: 'ui-grid-icon-indent-left',\n          shown: function () {\n            return typeof(this.context.col.grouping) !== 'undefined' &&\n                   typeof(this.context.col.grouping.groupPriority) !== 'undefined' &&\n                   this.context.col.grouping.groupPriority >= 0;\n          },\n          action: function () {\n            service.ungroupColumn( this.context.col.grid, this.context.col );\n          }\n        };\n\n        var aggregateRemove = {\n          name: 'ui.grid.grouping.aggregateRemove',\n          title: i18nService.get().grouping.aggregate_remove,\n          shown: function () {\n            return typeof(this.context.col.treeAggregationFn) !== 'undefined';\n          },\n          action: function () {\n            service.aggregateColumn( this.context.col.grid, this.context.col, null);\n          }\n        };\n\n        // generic adder for the aggregation menus, which follow a pattern\n        var addAggregationMenu = function(type, title){\n          title = title || i18nService.get().grouping['aggregate_' + type] || type;\n          var menuItem = {\n            name: 'ui.grid.grouping.aggregate' + type,\n            title: title,\n            shown: function () {\n              return typeof(this.context.col.treeAggregation) === 'undefined' ||\n                     typeof(this.context.col.treeAggregation.type) === 'undefined' ||\n                     this.context.col.treeAggregation.type !== type;\n            },\n            action: function () {\n              service.aggregateColumn( this.context.col.grid, this.context.col, type);\n            }\n          };\n\n          if (!gridUtil.arrayContainsObjectWithProperty(col.menuItems, 'name', 'ui.grid.grouping.aggregate' + type)) {\n            col.menuItems.push(menuItem);\n          }\n        };\n\n        /**\n         *  @ngdoc object\n         *  @name groupingShowGroupingMenu\n         *  @propertyOf  ui.grid.grouping.api:ColumnDef\n         *  @description Show the grouping (group and ungroup items) menu on this column\n         *  <br/>Defaults to true.\n         */\n        if ( col.colDef.groupingShowGroupingMenu !== false ){\n          if (!gridUtil.arrayContainsObjectWithProperty(col.menuItems, 'name', 'ui.grid.grouping.group')) {\n            col.menuItems.push(groupColumn);\n          }\n\n          if (!gridUtil.arrayContainsObjectWithProperty(col.menuItems, 'name', 'ui.grid.grouping.ungroup')) {\n            col.menuItems.push(ungroupColumn);\n          }\n        }\n\n\n        /**\n         *  @ngdoc object\n         *  @name groupingShowAggregationMenu\n         *  @propertyOf  ui.grid.grouping.api:ColumnDef\n         *  @description Show the aggregation menu on this column\n         *  <br/>Defaults to true.\n         */\n        if ( col.colDef.groupingShowAggregationMenu !== false ){\n          angular.forEach(uiGridTreeBaseService.nativeAggregations(), function(aggregationDef, name){\n            addAggregationMenu(name);\n          });\n          angular.forEach(gridOptions.treeCustomAggregations, function(aggregationDef, name){\n            addAggregationMenu(name, aggregationDef.menuTitle);\n          });\n\n          if (!gridUtil.arrayContainsObjectWithProperty(col.menuItems, 'name', 'ui.grid.grouping.aggregateRemove')) {\n            col.menuItems.push(aggregateRemove);\n          }\n        }\n      },\n\n\n\n\n      /**\n       * @ngdoc function\n       * @name groupingColumnProcessor\n       * @methodOf  ui.grid.grouping.service:uiGridGroupingService\n       * @description Moves the columns around based on which are grouped\n       *\n       * @param {array} columns the columns to consider rendering\n       * @param {array} rows the grid rows, which we don't use but are passed to us\n       * @returns {array} updated columns array\n       */\n      groupingColumnProcessor: function( columns, rows ) {\n        var grid = this;\n\n        columns = service.moveGroupColumns(this, columns, rows);\n        return columns;\n      },\n\n      /**\n       * @ngdoc function\n       * @name groupedFinalizerFn\n       * @methodOf  ui.grid.grouping.service:uiGridGroupingService\n       * @description Used on group columns to display the rendered value and optionally\n       * display the count of rows.\n       *\n       * @param {aggregation} the aggregation entity for a grouped column\n       */\n      groupedFinalizerFn: function( aggregation ){\n        var col = this;\n\n        if ( typeof(aggregation.groupVal) !== 'undefined') {\n          aggregation.rendered = aggregation.groupVal;\n          if ( col.grid.options.groupingShowCounts && col.colDef.type !== 'date' && col.colDef.type !== 'object' ){\n            aggregation.rendered += (' (' + aggregation.value + ')');\n          }\n        } else {\n          aggregation.rendered = null;\n        }\n      },\n\n      /**\n       * @ngdoc function\n       * @name moveGroupColumns\n       * @methodOf  ui.grid.grouping.service:uiGridGroupingService\n       * @description Moves the column order so that the grouped columns are lined up\n       * to the left (well, unless you're RTL, then it's the right).  By doing this in\n       * the columnsProcessor, we make it transient - when the column is ungrouped it'll\n       * go back to where it was.\n       *\n       * Does nothing if the option `moveGroupColumns` is set to false.\n       *\n       * @param {Grid} grid grid object\n       * @param {array} columns the columns that we should process/move\n       * @param {array} rows the grid rows\n       * @returns {array} updated columns\n       */\n      moveGroupColumns: function( grid, columns, rows ){\n        if ( grid.options.moveGroupColumns === false){\n          return columns;\n        }\n\n        columns.forEach( function(column, index){\n          // position used to make stable sort in moveGroupColumns\n          column.groupingPosition = index;\n        });\n\n        columns.sort(function(a, b){\n          var a_group, b_group;\n          if (a.isRowHeader){\n            a_group = a.headerPriority;\n          }\n          else if ( typeof(a.grouping) === 'undefined' || typeof(a.grouping.groupPriority) === 'undefined' || a.grouping.groupPriority < 0){\n            a_group = null;\n          } else {\n            a_group = a.grouping.groupPriority;\n          }\n\n          if (b.isRowHeader){\n            b_group = b.headerPriority;\n          }\n          else if ( typeof(b.grouping) === 'undefined' || typeof(b.grouping.groupPriority) === 'undefined' || b.grouping.groupPriority < 0){\n            b_group = null;\n          } else {\n            b_group = b.grouping.groupPriority;\n          }\n\n          // groups get sorted to the top\n          if ( a_group !== null && b_group === null) { return -1; }\n          if ( b_group !== null && a_group === null) { return 1; }\n          if ( a_group !== null && b_group !== null) {return a_group - b_group; }\n\n          return a.groupingPosition - b.groupingPosition;\n        });\n\n        columns.forEach( function(column, index) {\n          delete column.groupingPosition;\n        });\n\n        return columns;\n      },\n\n\n      /**\n       * @ngdoc function\n       * @name groupColumn\n       * @methodOf  ui.grid.grouping.service:uiGridGroupingService\n       * @description Adds this column to the existing grouping, at the end of the priority order.\n       * If the column doesn't have a sort, adds one, by default ASC\n       *\n       * This column will move to the left of any non-group columns, the\n       * move is handled in a columnProcessor, so gets called as part of refresh\n       *\n       * @param {Grid} grid grid object\n       * @param {GridColumn} column the column we want to group\n       */\n      groupColumn: function( grid, column){\n        if ( typeof(column.grouping) === 'undefined' ){\n          column.grouping = {};\n        }\n\n        // set the group priority to the next number in the hierarchy\n        var existingGrouping = service.getGrouping( grid );\n        column.grouping.groupPriority = existingGrouping.grouping.length;\n\n        // save sort in order to restore it when column is ungrouped\n        column.previousSort = angular.copy(column.sort);\n\n        // add sort if not present\n        if ( !column.sort ){\n          column.sort = { direction: uiGridConstants.ASC };\n        } else if ( typeof(column.sort.direction) === 'undefined' || column.sort.direction === null ){\n          column.sort.direction = uiGridConstants.ASC;\n        }\n\n        column.treeAggregation = { type: uiGridGroupingConstants.aggregation.COUNT, source: 'grouping' };\n        column.treeAggregationFn = uiGridTreeBaseService.nativeAggregations()[uiGridGroupingConstants.aggregation.COUNT].aggregationFn;\n        column.treeAggregationFinalizerFn = service.groupedFinalizerFn;\n\n        grid.api.grouping.raise.groupingChanged(column);\n        // This indirectly calls service.tidyPriorities( grid );\n        grid.api.core.raise.sortChanged(grid, grid.getColumnSorting());\n\n        grid.queueGridRefresh();\n      },\n\n\n       /**\n       * @ngdoc function\n       * @name ungroupColumn\n       * @methodOf  ui.grid.grouping.service:uiGridGroupingService\n       * @description Removes the groupPriority from this column.  If the\n       * column was previously aggregated the aggregation will come back.\n       * The sort will remain.\n       *\n       * This column will move to the right of any other group columns, the\n       * move is handled in a columnProcessor, so gets called as part of refresh\n       *\n       * @param {Grid} grid grid object\n       * @param {GridColumn} column the column we want to ungroup\n       */\n      ungroupColumn: function( grid, column){\n        if ( typeof(column.grouping) === 'undefined' ){\n          return;\n        }\n\n        delete column.grouping.groupPriority;\n        delete column.treeAggregation;\n        delete column.customTreeAggregationFinalizer;\n\n        if (column.previousSort) {\n          column.sort = column.previousSort;\n          delete column.previousSort;\n        }\n\n        service.tidyPriorities( grid );\n\n        grid.api.grouping.raise.groupingChanged(column);\n        grid.api.core.raise.sortChanged(grid, grid.getColumnSorting());\n\n        grid.queueGridRefresh();\n      },\n\n      /**\n       * @ngdoc function\n       * @name aggregateColumn\n       * @methodOf  ui.grid.grouping.service:uiGridGroupingService\n       * @description Sets the aggregation type on a column, if the\n       * column is currently grouped then it removes the grouping first.\n       *\n       * @param {Grid} grid grid object\n       * @param {GridColumn} column the column we want to aggregate\n       * @param {string} aggregationType of the recognised types from uiGridGroupingConstants or one of the custom aggregations from gridOptions\n       */\n      aggregateColumn: function( grid, column, aggregationType){\n\n        if (typeof(column.grouping) !== 'undefined' && typeof(column.grouping.groupPriority) !== 'undefined' && column.grouping.groupPriority >= 0){\n          service.ungroupColumn( grid, column );\n        }\n\n        var aggregationDef = {};\n        if ( typeof(grid.options.treeCustomAggregations[aggregationType]) !== 'undefined' ){\n          aggregationDef = grid.options.treeCustomAggregations[aggregationType];\n        } else if ( typeof(uiGridTreeBaseService.nativeAggregations()[aggregationType]) !== 'undefined' ){\n          aggregationDef = uiGridTreeBaseService.nativeAggregations()[aggregationType];\n        }\n\n        column.treeAggregation = { type: aggregationType, label:  i18nService.get().aggregation[aggregationDef.label] || aggregationDef.label };\n        column.treeAggregationFn = aggregationDef.aggregationFn;\n        column.treeAggregationFinalizerFn = aggregationDef.finalizerFn;\n\n        grid.api.grouping.raise.aggregationChanged(column);\n\n        grid.queueGridRefresh();\n      },\n\n\n      /**\n       * @ngdoc function\n       * @name setGrouping\n       * @methodOf  ui.grid.grouping.service:uiGridGroupingService\n       * @description Set the grouping based on a config object, used by the save state feature\n       * (more specifically, by the restore function in that feature )\n       *\n       * @param {Grid} grid grid object\n       * @param {object} config the config we want to set, same format as that returned by getGrouping\n       */\n      setGrouping: function ( grid, config ){\n        if ( typeof(config) === 'undefined' ){\n          return;\n        }\n\n        // first remove any existing grouping\n        service.clearGrouping(grid);\n\n        if ( config.grouping && config.grouping.length && config.grouping.length > 0 ){\n          config.grouping.forEach( function( group ) {\n            var col = grid.getColumn(group.colName);\n\n            if ( col ) {\n              service.groupColumn( grid, col );\n            }\n          });\n        }\n\n        if ( config.aggregations && config.aggregations.length ){\n          config.aggregations.forEach( function( aggregation ) {\n            var col = grid.getColumn(aggregation.colName);\n\n            if ( col ) {\n              service.aggregateColumn( grid, col, aggregation.aggregation.type );\n            }\n          });\n        }\n\n        if ( config.rowExpandedStates ){\n          service.applyRowExpandedStates( grid.grouping.groupingHeaderCache, config.rowExpandedStates );\n        }\n      },\n\n\n      /**\n       * @ngdoc function\n       * @name clearGrouping\n       * @methodOf  ui.grid.grouping.service:uiGridGroupingService\n       * @description Clear any grouped columns and any aggregations.  Doesn't remove sorting,\n       * as we don't know whether that sorting was added by grouping or was there beforehand\n       *\n       * @param {Grid} grid grid object\n       */\n      clearGrouping: function( grid ) {\n        var currentGrouping = service.getGrouping(grid);\n\n        if ( currentGrouping.grouping.length > 0 ){\n          currentGrouping.grouping.forEach( function( group ) {\n            if (!group.col){\n              // should have a group.colName if there's no col\n              group.col = grid.getColumn(group.colName);\n            }\n            service.ungroupColumn(grid, group.col);\n          });\n        }\n\n        if ( currentGrouping.aggregations.length > 0 ){\n          currentGrouping.aggregations.forEach( function( aggregation ){\n            if (!aggregation.col){\n              // should have a group.colName if there's no col\n              aggregation.col = grid.getColumn(aggregation.colName);\n            }\n            service.aggregateColumn(grid, aggregation.col, null);\n          });\n        }\n      },\n\n\n      /**\n       * @ngdoc function\n       * @name tidyPriorities\n       * @methodOf  ui.grid.grouping.service:uiGridGroupingService\n       * @description Renumbers groupPriority and sortPriority such that\n       * groupPriority is contiguous, and sortPriority either matches\n       * groupPriority (for group columns), and otherwise is contiguous and\n       * higher than groupPriority.\n       *\n       * @param {Grid} grid grid object\n       */\n      tidyPriorities: function( grid ){\n        // if we're called from sortChanged, grid is in this, not passed as param, the param can be a column or undefined\n        if ( ( typeof(grid) === 'undefined' || typeof(grid.grid) !== 'undefined' ) && typeof(this.grid) !== 'undefined' ) {\n          grid = this.grid;\n        }\n\n        var groupArray = [];\n        var sortArray = [];\n\n        grid.columns.forEach( function(column, index){\n          if ( typeof(column.grouping) !== 'undefined' && typeof(column.grouping.groupPriority) !== 'undefined' && column.grouping.groupPriority >= 0){\n            groupArray.push(column);\n          } else if ( typeof(column.sort) !== 'undefined' && typeof(column.sort.priority) !== 'undefined' && column.sort.priority >= 0){\n            sortArray.push(column);\n          }\n        });\n\n        groupArray.sort(function(a, b){ return a.grouping.groupPriority - b.grouping.groupPriority; });\n        groupArray.forEach( function(column, index){\n          column.grouping.groupPriority = index;\n          column.suppressRemoveSort = true;\n          if ( typeof(column.sort) === 'undefined'){\n            column.sort = {};\n          }\n          column.sort.priority = index;\n        });\n\n        var i = groupArray.length;\n        sortArray.sort(function(a, b){ return a.sort.priority - b.sort.priority; });\n        sortArray.forEach( function(column, index){\n          column.sort.priority = i;\n          column.suppressRemoveSort = column.colDef.suppressRemoveSort;\n          i++;\n        });\n      },\n\n\n      /**\n       * @ngdoc function\n       * @name groupRows\n       * @methodOf  ui.grid.grouping.service:uiGridGroupingService\n       * @description The rowProcessor that creates the groupHeaders (i.e. does\n       * the actual grouping).\n       *\n       * Assumes it is always called after the sorting processor, guaranteed by the priority setting\n       *\n       * Processes all the rows in order, inserting a groupHeader row whenever there is a change\n       * in value of a grouped row, based on the sortAlgorithm used for the column.  The group header row\n       * is looked up in the groupHeaderCache, and used from there if there is one. The entity is reset\n       * to {} if one is found.\n       *\n       * As it processes it maintains a `processingState` array. This records, for each level of grouping we're\n       * working with, the following information:\n       * ```\n       *   {\n       *     fieldName: name,\n       *     col: col,\n       *     initialised: boolean,\n       *     currentValue: value,\n       *     currentRow: gridRow,\n       *   }\n       * ```\n       * We look for changes in the currentValue at any of the levels.  Where we find a change we:\n       *\n       * - create a new groupHeader row in the array\n       *\n       * @param {array} renderableRows the rows we want to process, usually the output from the previous rowProcessor\n       * @returns {array} the updated rows, including our new group rows\n       */\n      groupRows: function( renderableRows ) {\n        if (renderableRows.length === 0){\n          return renderableRows;\n        }\n\n        var grid = this;\n        grid.grouping.oldGroupingHeaderCache = grid.grouping.groupingHeaderCache || {};\n        grid.grouping.groupingHeaderCache = {};\n\n        var processingState = service.initialiseProcessingState( grid );\n\n        // processes each of the fields we are grouping by, checks if the value has changed and inserts a groupHeader\n        // Broken out as shouldn't create functions in a loop.\n        var updateProcessingState = function( groupFieldState, stateIndex ) {\n          var fieldValue = grid.getCellValue(row, groupFieldState.col);\n\n          // look for change of value - and insert a header\n          if ( !groupFieldState.initialised || rowSorter.getSortFn(grid, groupFieldState.col, renderableRows)(fieldValue, groupFieldState.currentValue) !== 0 ){\n            service.insertGroupHeader( grid, renderableRows, i, processingState, stateIndex );\n            i++;\n          }\n        };\n\n        // use a for loop because it's tolerant of the array length changing whilst we go - we can\n        // manipulate the iterator when we insert groupHeader rows\n        for (var i = 0; i < renderableRows.length; i++ ){\n          var row = renderableRows[i];\n\n          if ( row.visible ){\n            processingState.forEach( updateProcessingState );\n          }\n        }\n\n        delete grid.grouping.oldGroupingHeaderCache;\n        return renderableRows;\n      },\n\n\n      /**\n       * @ngdoc function\n       * @name initialiseProcessingState\n       * @methodOf  ui.grid.grouping.service:uiGridGroupingService\n       * @description Creates the processing state array that is used\n       * for groupRows.\n       *\n       * @param {Grid} grid grid object\n       * @returns {array} an array in the format described in the groupRows method,\n       * initialised with blank values\n       */\n      initialiseProcessingState: function( grid ){\n        var processingState = [];\n        var columnSettings = service.getGrouping( grid );\n\n        columnSettings.grouping.forEach( function( groupItem, index){\n          processingState.push({\n            fieldName: groupItem.field,\n            col: groupItem.col,\n            initialised: false,\n            currentValue: null,\n            currentRow: null\n          });\n        });\n\n        return processingState;\n      },\n\n\n      /**\n       * @ngdoc function\n       * @name getGrouping\n       * @methodOf  ui.grid.grouping.service:uiGridGroupingService\n       * @description Get the grouping settings from the columns.  As a side effect\n       * this always renumbers the grouping starting at 0\n       * @param {Grid} grid grid object\n       * @returns {array} an array of the group fields, in order of priority\n       */\n      getGrouping: function( grid ){\n        var groupArray = [];\n        var aggregateArray = [];\n\n        // get all the grouping\n        grid.columns.forEach( function(column, columnIndex){\n          if ( column.grouping ){\n            if ( typeof(column.grouping.groupPriority) !== 'undefined' && column.grouping.groupPriority >= 0){\n              groupArray.push({ field: column.field, col: column, groupPriority: column.grouping.groupPriority, grouping: column.grouping });\n            }\n          }\n          if ( column.treeAggregation && column.treeAggregation.type ){\n            aggregateArray.push({ field: column.field, col: column, aggregation: column.treeAggregation });\n          }\n        });\n\n        // sort grouping into priority order\n        groupArray.sort( function(a, b){\n          return a.groupPriority - b.groupPriority;\n        });\n\n        // renumber the priority in case it was somewhat messed up, then remove the grouping reference\n        groupArray.forEach( function( group, index) {\n          group.grouping.groupPriority = index;\n          group.groupPriority = index;\n          delete group.grouping;\n        });\n\n        return { grouping: groupArray, aggregations: aggregateArray };\n      },\n\n\n      /**\n       * @ngdoc function\n       * @name insertGroupHeader\n       * @methodOf  ui.grid.grouping.service:uiGridGroupingService\n       * @description Create a group header row, and link it to the various configuration\n       * items that we use.\n       *\n       * Look for the row in the oldGroupingHeaderCache, write the row into the new groupingHeaderCache.\n       *\n       * @param {Grid} grid grid object\n       * @param {array} renderableRows the rows that we are processing\n       * @param {number} rowIndex the row we were up to processing\n       * @param {array} processingState the current processing state\n       * @param {number} stateIndex the processing state item that we were on when we triggered a new group header -\n       * i.e. the column that we want to create a header for\n       */\n      insertGroupHeader: function( grid, renderableRows, rowIndex, processingState, stateIndex ) {\n        // set the value that caused the end of a group into the header row and the processing state\n        var fieldName = processingState[stateIndex].fieldName;\n        var col = processingState[stateIndex].col;\n\n        var newValue = grid.getCellValue(renderableRows[rowIndex], col);\n        var newDisplayValue = newValue;\n        if ( typeof(newValue) === 'undefined' || newValue === null ) {\n          newDisplayValue = grid.options.groupingNullLabel;\n        }\n\n        var getKeyAsValueForCacheMap = function(key) {\n          if (angular.isObject(key)) {\n              return JSON.stringify(key);\n          } else {\n              return key;\n          }\n        };\n\n        var cacheItem = grid.grouping.oldGroupingHeaderCache;\n        for ( var i = 0; i < stateIndex; i++ ){\n          if ( cacheItem && cacheItem[getKeyAsValueForCacheMap(processingState[i].currentValue)] ){\n            cacheItem = cacheItem[getKeyAsValueForCacheMap(processingState[i].currentValue)].children;\n          }\n        }\n\n        var headerRow;\n        if ( cacheItem && cacheItem[getKeyAsValueForCacheMap(newValue)]){\n          headerRow = cacheItem[getKeyAsValueForCacheMap(newValue)].row;\n          headerRow.entity = {};\n        } else {\n          headerRow = new GridRow( {}, null, grid );\n          gridClassFactory.rowTemplateAssigner.call(grid, headerRow);\n        }\n\n        headerRow.entity['$$' + processingState[stateIndex].col.uid] = { groupVal: newDisplayValue };\n        headerRow.treeLevel = stateIndex;\n        headerRow.groupHeader = true;\n        headerRow.internalRow = true;\n        headerRow.enableCellEdit = false;\n        headerRow.enableSelection = grid.options.enableGroupHeaderSelection;\n        processingState[stateIndex].initialised = true;\n        processingState[stateIndex].currentValue = newValue;\n        processingState[stateIndex].currentRow = headerRow;\n\n        // set all processing states below this one to not be initialised - change of this state\n        // means all those need to start again\n        service.finaliseProcessingState( processingState, stateIndex + 1);\n\n        // insert our new header row\n        renderableRows.splice(rowIndex, 0, headerRow);\n\n        // add our new header row to the cache\n        cacheItem = grid.grouping.groupingHeaderCache;\n        for ( i = 0; i < stateIndex; i++ ){\n          cacheItem = cacheItem[getKeyAsValueForCacheMap(processingState[i].currentValue)].children;\n        }\n        cacheItem[getKeyAsValueForCacheMap(newValue)] = { row: headerRow, children: {} };\n      },\n\n\n      /**\n       * @ngdoc function\n       * @name finaliseProcessingState\n       * @methodOf  ui.grid.grouping.service:uiGridGroupingService\n       * @description Set all processing states lower than the one that had a break in value to\n       * no longer be initialised.  Render the counts into the entity ready for display.\n       *\n       * @param {array} processingState the current processing state\n       * @param {number} stateIndex the processing state item that we were on when we triggered a new group header, all\n       * processing states after this need to be finalised\n       */\n      finaliseProcessingState: function( processingState, stateIndex ){\n        for ( var i = stateIndex; i < processingState.length; i++){\n          processingState[i].initialised = false;\n          processingState[i].currentRow = null;\n          processingState[i].currentValue = null;\n        }\n      },\n\n\n      /**\n       * @ngdoc function\n       * @name getRowExpandedStates\n       * @methodOf  ui.grid.grouping.service:uiGridGroupingService\n       * @description Extract the groupHeaderCache hash, pulling out only the states.\n       *\n       * The example below shows a grid that is grouped by gender then age\n       *\n       * <pre>\n       *   {\n       *     male: {\n       *       state: 'expanded',\n       *       children: {\n       *         22: { state: 'expanded' },\n       *         30: { state: 'collapsed' }\n       *       }\n       *     },\n       *     female: {\n       *       state: 'expanded',\n       *       children: {\n       *         28: { state: 'expanded' },\n       *         55: { state: 'collapsed' }\n       *       }\n       *     }\n       *   }\n       * </pre>\n       *\n       * @param {object} treeChildren The tree children elements object\n       * @returns {object} the expanded states as an object\n       */\n      getRowExpandedStates: function(treeChildren){\n        if ( typeof(treeChildren) === 'undefined' ){\n          return {};\n        }\n\n        var newChildren = {};\n\n        angular.forEach( treeChildren, function( value, key ){\n          newChildren[key] = { state: value.row.treeNode.state };\n          if ( value.children ){\n            newChildren[key].children = service.getRowExpandedStates( value.children );\n          } else {\n            newChildren[key].children = {};\n          }\n        });\n\n        return newChildren;\n      },\n\n\n      /**\n       * @ngdoc function\n       * @name applyRowExpandedStates\n       * @methodOf  ui.grid.grouping.service:uiGridGroupingService\n       * @description Take a hash in the format as created by getRowExpandedStates,\n       * and apply it to the grid.grouping.groupHeaderCache.\n       *\n       * Takes a treeSubset, and applies to a treeSubset - so can be called\n       * recursively.\n       *\n       * @param {object} currentNode can be grid.grouping.groupHeaderCache, or any of\n       * the children of that hash\n       * @param {object} expandedStates can be the full expanded states, or children\n       * of that expanded states (which hopefully matches the subset of the groupHeaderCache)\n       */\n      applyRowExpandedStates: function( currentNode, expandedStates ){\n        if ( typeof(expandedStates) === 'undefined' ){\n          return;\n        }\n\n        angular.forEach(expandedStates, function( value, key ) {\n          if ( currentNode[key] ){\n            currentNode[key].row.treeNode.state = value.state;\n\n            if (value.children && currentNode[key].children){\n              service.applyRowExpandedStates( currentNode[key].children, value.children );\n            }\n          }\n        });\n      }\n\n\n    };\n\n    return service;\n\n  }]);\n\n\n  /**\n   *  @ngdoc directive\n   *  @name ui.grid.grouping.directive:uiGridGrouping\n   *  @element div\n   *  @restrict A\n   *\n   *  @description Adds grouping features to grid\n   *\n   *  @example\n   <example module=\"app\">\n   <file name=\"app.js\">\n   var app = angular.module('app', ['ui.grid', 'ui.grid.grouping']);\n\n   app.controller('MainCtrl', ['$scope', function ($scope) {\n      $scope.data = [\n        { name: 'Bob', title: 'CEO' },\n            { name: 'Frank', title: 'Lowly Developer' }\n      ];\n\n      $scope.columnDefs = [\n        {name: 'name', enableCellEdit: true},\n        {name: 'title', enableCellEdit: true}\n      ];\n\n      $scope.gridOptions = { columnDefs: $scope.columnDefs, data: $scope.data };\n    }]);\n   </file>\n   <file name=\"index.html\">\n   <div ng-controller=\"MainCtrl\">\n   <div ui-grid=\"gridOptions\" ui-grid-grouping></div>\n   </div>\n   </file>\n   </example>\n   */\n  module.directive('uiGridGrouping', ['uiGridGroupingConstants', 'uiGridGroupingService',\n  function (uiGridGroupingConstants, uiGridGroupingService) {\n    return {\n      replace: true,\n      priority: 0,\n      require: '^uiGrid',\n      scope: false,\n      compile: function () {\n        return {\n          pre: function ($scope, $elm, $attrs, uiGridCtrl) {\n            if (uiGridCtrl.grid.options.enableGrouping !== false){\n              uiGridGroupingService.initializeGrid(uiGridCtrl.grid, $scope);\n            }\n          },\n          post: function ($scope, $elm, $attrs, uiGridCtrl) {\n          }\n        };\n      }\n    };\n  }]);\n\n})();\n\n(function () {\n  'use strict';\n\n  /**\n   * @ngdoc overview\n   * @name ui.grid.importer\n   * @description\n   *\n   * # ui.grid.importer\n   *\n   * <div class=\"alert alert-success\" role=\"alert\"><strong>Stable</strong> This feature is stable. There should no longer be breaking api changes without a deprecation warning.</div>\n   *\n   * This module provides the ability to import data into the grid. It\n   * uses the column defs to work out which data belongs in which column,\n   * and creates entities from a configured class (typically a $resource).\n   *\n   * If the rowEdit feature is enabled, it also calls save on those newly\n   * created objects, and then displays any errors in the imported data.\n   *\n   * Currently the importer imports only CSV and json files, although provision has been\n   * made to process other file formats, and these can be added over time.\n   *\n   * For json files, the properties within each object in the json must match the column names\n   * (to put it another way, the importer doesn't process the json, it just copies the objects\n   * within the json into a new instance of the specified object type)\n   *\n   * For CSV import, the default column identification relies on each column in the\n   * header row matching a column.name or column.displayName. Optionally, a column identification\n   * callback can be used.  This allows matching using other attributes, which is particularly\n   * useful if your application has internationalised column headings (i.e. the headings that\n   * the user sees don't match the column names).\n   *\n   * The importer makes use of the grid menu as the UI for requesting an\n   * import.\n   *\n   * <div ui-grid-importer></div>\n   */\n\n  var module = angular.module('ui.grid.importer', ['ui.grid']);\n\n  /**\n   *  @ngdoc object\n   *  @name ui.grid.importer.constant:uiGridImporterConstants\n   *\n   *  @description constants available in importer module\n   */\n\n  module.constant('uiGridImporterConstants', {\n    featureName: 'importer'\n  });\n\n  /**\n   *  @ngdoc service\n   *  @name ui.grid.importer.service:uiGridImporterService\n   *\n   *  @description Services for importer feature\n   */\n  module.service('uiGridImporterService', ['$q', 'uiGridConstants', 'uiGridImporterConstants', 'gridUtil', '$compile', '$interval', 'i18nService', '$window',\n    function ($q, uiGridConstants, uiGridImporterConstants, gridUtil, $compile, $interval, i18nService, $window) {\n\n      var service = {\n\n        initializeGrid: function ($scope, grid) {\n\n          //add feature namespace and any properties to grid for needed state\n          grid.importer = {\n            $scope: $scope\n          };\n\n          this.defaultGridOptions(grid.options);\n\n          /**\n           *  @ngdoc object\n           *  @name ui.grid.importer.api:PublicApi\n           *\n           *  @description Public Api for importer feature\n           */\n          var publicApi = {\n            events: {\n              importer: {\n              }\n            },\n            methods: {\n              importer: {\n                /**\n                 * @ngdoc function\n                 * @name importFile\n                 * @methodOf  ui.grid.importer.api:PublicApi\n                 * @description Imports a file into the grid using the file object\n                 * provided.  Bypasses the grid menu\n                 * @param {File} fileObject the file we want to import, as a javascript\n                 * File object\n                 */\n                importFile: function ( fileObject ) {\n                  service.importThisFile( grid, fileObject );\n                }\n              }\n            }\n          };\n\n          grid.api.registerEventsFromObject(publicApi.events);\n\n          grid.api.registerMethodsFromObject(publicApi.methods);\n\n          if ( grid.options.enableImporter && grid.options.importerShowMenu ){\n            if ( grid.api.core.addToGridMenu ){\n              service.addToMenu( grid );\n            } else {\n              // order of registration is not guaranteed, register in a little while\n              $interval( function() {\n                if (grid.api.core.addToGridMenu){\n                  service.addToMenu( grid );\n                }\n              }, 100, 1);\n            }\n          }\n        },\n\n\n        defaultGridOptions: function (gridOptions) {\n          //default option to true unless it was explicitly set to false\n          /**\n           * @ngdoc object\n           * @name ui.grid.importer.api:GridOptions\n           *\n           * @description GridOptions for importer feature, these are available to be\n           * set using the ui-grid {@link ui.grid.class:GridOptions gridOptions}\n           */\n\n          /**\n           * @ngdoc property\n           * @propertyOf ui.grid.importer.api:GridOptions\n           * @name enableImporter\n           * @description Whether or not importer is enabled.  Automatically set\n           * to false if the user's browser does not support the required fileApi.\n           * Otherwise defaults to true.\n           *\n           */\n          if (gridOptions.enableImporter  || gridOptions.enableImporter === undefined) {\n            if ( !($window.hasOwnProperty('File') && $window.hasOwnProperty('FileReader') && $window.hasOwnProperty('FileList') && $window.hasOwnProperty('Blob')) ) {\n              gridUtil.logError('The File APIs are not fully supported in this browser, grid importer cannot be used.');\n              gridOptions.enableImporter = false;\n            } else {\n              gridOptions.enableImporter = true;\n            }\n          } else {\n            gridOptions.enableImporter = false;\n          }\n\n          /**\n           * @ngdoc method\n           * @name importerProcessHeaders\n           * @methodOf ui.grid.importer.api:GridOptions\n           * @description A callback function that will process headers using custom\n           * logic.  Set this callback function if the headers that your user will provide in their\n           * import file don't necessarily match the grid header or field names.  This might commonly\n           * occur where your application is internationalised, and therefore the field names\n           * that the user recognises are in a different language than the field names that\n           * ui-grid knows about.\n           *\n           * Defaults to the internal `processHeaders` method, which seeks to match using both\n           * displayName and column.name.  Any non-matching columns are discarded.\n           *\n           * Your callback routine should respond by processing the header array, and returning an array\n           * of matching column names.  A null value in any given position means \"don't import this column\"\n           *\n           * <pre>\n           *      gridOptions.importerProcessHeaders: function( headerArray ) {\n           *        var myHeaderColumns = [];\n           *        var thisCol;\n           *        headerArray.forEach( function( value, index ) {\n           *          thisCol = mySpecialLookupFunction( value );\n           *          myHeaderColumns.push( thisCol.name );\n           *        });\n           *\n           *        return myHeaderCols;\n           *      })\n           * </pre>\n           * @param {Grid} grid the grid we're importing into\n           * @param {array} headerArray an array of the text from the first row of the csv file,\n           * which you need to match to column.names\n           * @returns {array} array of matching column names, in the same order as the headerArray\n           *\n           */\n          gridOptions.importerProcessHeaders = gridOptions.importerProcessHeaders || service.processHeaders;\n\n          /**\n           * @ngdoc method\n           * @name importerHeaderFilter\n           * @methodOf ui.grid.importer.api:GridOptions\n           * @description A callback function that will filter (usually translate) a single\n           * header.  Used when you want to match the passed in column names to the column\n           * displayName after the header filter.\n           *\n           * Your callback routine needs to return the filtered header value.\n           * <pre>\n           *      gridOptions.importerHeaderFilter: function( displayName ) {\n           *        return $translate.instant( displayName );\n           *      })\n           * </pre>\n           *\n           * or:\n           * <pre>\n           *      gridOptions.importerHeaderFilter: $translate.instant\n           * </pre>\n           * @param {string} displayName the displayName that we'd like to translate\n           * @returns {string} the translated name\n           *\n           */\n          gridOptions.importerHeaderFilter = gridOptions.importerHeaderFilter || function( displayName ) { return displayName; };\n\n          /**\n           * @ngdoc method\n           * @name importerErrorCallback\n           * @methodOf ui.grid.importer.api:GridOptions\n           * @description A callback function that provides custom error handling, rather\n           * than the standard grid behaviour of an alert box and a console message.  You\n           * might use this to internationalise the console log messages, or to write to a\n           * custom logging routine that returned errors to the server.\n           *\n           * <pre>\n           *      gridOptions.importerErrorCallback: function( grid, errorKey, consoleMessage, context ) {\n           *        myUserDisplayRoutine( errorKey );\n           *        myLoggingRoutine( consoleMessage, context );\n           *      })\n           * </pre>\n           * @param {Grid} grid the grid we're importing into, may be useful if you're positioning messages\n           * in some way\n           * @param {string} errorKey one of the i18n keys the importer can return - importer.noHeaders,\n           * importer.noObjects, importer.invalidCsv, importer.invalidJson, importer.jsonNotArray\n           * @param {string} consoleMessage the English console message that importer would have written\n           * @param {object} context the context data that importer would have appended to that console message,\n           * often the file content itself or the element that is in error\n           *\n           */\n          if ( !gridOptions.importerErrorCallback ||  typeof(gridOptions.importerErrorCallback) !== 'function' ){\n            delete gridOptions.importerErrorCallback;\n          }\n\n          /**\n           * @ngdoc method\n           * @name importerDataAddCallback\n           * @methodOf ui.grid.importer.api:GridOptions\n           * @description A mandatory callback function that adds data to the source data array.  The grid\n           * generally doesn't add rows to the source data array, it is tidier to handle this through a user\n           * callback.\n           *\n           * <pre>\n           *      gridOptions.importerDataAddCallback: function( grid, newObjects ) {\n           *        $scope.myData = $scope.myData.concat( newObjects );\n           *      })\n           * </pre>\n           * @param {Grid} grid the grid we're importing into, may be useful in some way\n           * @param {array} newObjects an array of new objects that you should add to your data\n           *\n           */\n          if ( gridOptions.enableImporter === true && !gridOptions.importerDataAddCallback ) {\n            gridUtil.logError(\"You have not set an importerDataAddCallback, importer is disabled\");\n            gridOptions.enableImporter = false;\n          }\n\n          /**\n           * @ngdoc object\n           * @name importerNewObject\n           * @propertyOf  ui.grid.importer.api:GridOptions\n           * @description An object on which we call `new` to create each new row before inserting it into\n           * the data array.  Typically this would be a $resource entity, which means that if you're using\n           * the rowEdit feature, you can directly call save on this entity when the save event is triggered.\n           *\n           * Defaults to a vanilla javascript object\n           *\n           * @example\n           * <pre>\n           *   gridOptions.importerNewObject = MyRes;\n           * </pre>\n           *\n           */\n\n          /**\n           * @ngdoc property\n           * @propertyOf ui.grid.importer.api:GridOptions\n           * @name importerShowMenu\n           * @description Whether or not to show an item in the grid menu.  Defaults to true.\n           *\n           */\n          gridOptions.importerShowMenu = gridOptions.importerShowMenu !== false;\n\n          /**\n           * @ngdoc method\n           * @methodOf ui.grid.importer.api:GridOptions\n           * @name importerObjectCallback\n           * @description A callback that massages the data for each object.  For example,\n           * you might have data stored as a code value, but display the decode.  This callback\n           * can be used to change the decoded value back into a code.  Defaults to doing nothing.\n           * @param {Grid} grid in case you need it\n           * @param {object} newObject the new object as importer has created it, modify it\n           * then return the modified version\n           * @returns {object} the modified object\n           * @example\n           * <pre>\n           *   gridOptions.importerObjectCallback = function ( grid, newObject ) {\n           *     switch newObject.status {\n           *       case 'Active':\n           *         newObject.status = 1;\n           *         break;\n           *       case 'Inactive':\n           *         newObject.status = 2;\n           *         break;\n           *     }\n           *     return newObject;\n           *   };\n           * </pre>\n           */\n          gridOptions.importerObjectCallback = gridOptions.importerObjectCallback || function( grid, newObject ) { return newObject; };\n        },\n\n\n        /**\n         * @ngdoc function\n         * @name addToMenu\n         * @methodOf  ui.grid.importer.service:uiGridImporterService\n         * @description Adds import menu item to the grid menu,\n         * allowing the user to request import of a file\n         * @param {Grid} grid the grid into which data should be imported\n         */\n        addToMenu: function ( grid ) {\n          grid.api.core.addToGridMenu( grid, [\n            {\n              title: i18nService.getSafeText('gridMenu.importerTitle'),\n              order: 150\n            },\n            {\n              templateUrl: 'ui-grid/importerMenuItemContainer',\n              action: function ($event) {\n                this.grid.api.importer.importAFile( grid );\n              },\n              order: 151\n            }\n          ]);\n        },\n\n\n        /**\n         * @ngdoc function\n         * @name importThisFile\n         * @methodOf ui.grid.importer.service:uiGridImporterService\n         * @description Imports the provided file into the grid using the file object\n         * provided.  Bypasses the grid menu\n         * @param {Grid} grid the grid we're importing into\n         * @param {File} fileObject the file we want to import, as returned from the File\n         * javascript object\n         */\n        importThisFile: function ( grid, fileObject ) {\n          if (!fileObject){\n            gridUtil.logError( 'No file object provided to importThisFile, should be impossible, aborting');\n            return;\n          }\n\n          var reader = new FileReader();\n\n          switch ( fileObject.type ){\n            case 'application/json':\n              reader.onload = service.importJsonClosure( grid );\n              break;\n            default:\n              reader.onload = service.importCsvClosure( grid );\n              break;\n          }\n\n          reader.readAsText( fileObject );\n        },\n\n\n        /**\n         * @ngdoc function\n         * @name importJson\n         * @methodOf ui.grid.importer.service:uiGridImporterService\n         * @description Creates a function that imports a json file into the grid.\n         * The json data is imported into new objects of type `gridOptions.importerNewObject`,\n         * and if the rowEdit feature is enabled the rows are marked as dirty\n         * @param {Grid} grid the grid we want to import into\n         * @param {FileObject} importFile the file that we want to import, as\n         * a FileObject\n         */\n        importJsonClosure: function( grid ) {\n          return function( importFile ){\n            var newObjects = [];\n            var newObject;\n\n            var importArray = service.parseJson( grid, importFile );\n            if (importArray === null){\n              return;\n            }\n            importArray.forEach(  function( value, index ) {\n              newObject = service.newObject( grid );\n              angular.extend( newObject, value );\n              newObject = grid.options.importerObjectCallback( grid, newObject );\n              newObjects.push( newObject );\n            });\n\n            service.addObjects( grid, newObjects );\n\n          };\n        },\n\n\n        /**\n         * @ngdoc function\n         * @name parseJson\n         * @methodOf ui.grid.importer.service:uiGridImporterService\n         * @description Parses a json file, returns the parsed data.\n         * Displays an error if file doesn't parse\n         * @param {Grid} grid the grid that we want to import into\n         * @param {FileObject} importFile the file that we want to import, as\n         * a FileObject\n         * @returns {array} array of objects from the imported json\n         */\n        parseJson: function( grid, importFile ){\n          var loadedObjects;\n          try {\n            loadedObjects = JSON.parse( importFile.target.result );\n          } catch (e) {\n            service.alertError( grid, 'importer.invalidJson', 'File could not be processed, is it valid json? Content was: ', importFile.target.result );\n            return;\n          }\n\n          if ( !Array.isArray( loadedObjects ) ){\n            service.alertError( grid, 'importer.jsonNotarray', 'Import failed, file is not an array, file was: ', importFile.target.result );\n            return [];\n          } else {\n            return loadedObjects;\n          }\n        },\n\n\n\n        /**\n         * @ngdoc function\n         * @name importCsvClosure\n         * @methodOf ui.grid.importer.service:uiGridImporterService\n         * @description Creates a function that imports a csv file into the grid\n         * (allowing it to be used in the reader.onload event)\n         * @param {Grid} grid the grid that we want to import into\n         * @param {FileObject} importFile the file that we want to import, as\n         * a file object\n         */\n        importCsvClosure: function( grid ) {\n          return function( importFile ){\n            var importArray = service.parseCsv( importFile );\n            if ( !importArray || importArray.length < 1 ){\n              service.alertError( grid, 'importer.invalidCsv', 'File could not be processed, is it valid csv? Content was: ', importFile.target.result );\n              return;\n            }\n\n            var newObjects = service.createCsvObjects( grid, importArray );\n            if ( !newObjects || newObjects.length === 0 ){\n              service.alertError( grid, 'importer.noObjects', 'Objects were not able to be derived, content was: ', importFile.target.result );\n              return;\n            }\n\n            service.addObjects( grid, newObjects );\n          };\n        },\n\n\n        /**\n         * @ngdoc function\n         * @name parseCsv\n         * @methodOf ui.grid.importer.service:uiGridImporterService\n         * @description Parses a csv file into an array of arrays, with the first\n         * array being the headers, and the remaining arrays being the data.\n         * The logic for this comes from https://github.com/thetalecrafter/excel.js/blob/master/src/csv.js,\n         * which is noted as being under the MIT license.  The code is modified to pass the jscs yoda condition\n         * checker\n         * @param {FileObject} importFile the file that we want to import, as a\n         * file object\n         */\n        parseCsv: function( importFile ) {\n          var csv = importFile.target.result;\n\n          // use the CSV-JS library to parse\n          return CSV.parse(csv);\n        },\n\n\n        /**\n         * @ngdoc function\n         * @name createCsvObjects\n         * @methodOf ui.grid.importer.service:uiGridImporterService\n         * @description Converts an array of arrays (representing the csv file)\n         * into a set of objects.  Uses the provided `gridOptions.importerNewObject`\n         * to create the objects, and maps the header row into the individual columns\n         * using either `gridOptions.importerProcessHeaders`, or by using a native method\n         * of matching to either the displayName, column name or column field of\n         * the columns in the column defs.  The resulting objects will have attributes\n         * that are named based on the column.field or column.name, in that order.\n         * @param {Grid} grid the grid that we want to import into\n         * @param {Array} importArray the data that we want to import, as an array\n         */\n        createCsvObjects: function( grid, importArray ){\n          // pull off header row and turn into headers\n          var headerMapping = grid.options.importerProcessHeaders( grid, importArray.shift() );\n          if ( !headerMapping || headerMapping.length === 0 ){\n            service.alertError( grid, 'importer.noHeaders', 'Column names could not be derived, content was: ', importArray );\n            return [];\n          }\n\n          var newObjects = [];\n          var newObject;\n          importArray.forEach( function( row, index ) {\n            newObject = service.newObject( grid );\n            if ( row !== null ){\n              row.forEach( function( field, index ){\n                if ( headerMapping[index] !== null ){\n                  newObject[ headerMapping[index] ] = field;\n                }\n              });\n            }\n            newObject = grid.options.importerObjectCallback( grid, newObject );\n            newObjects.push( newObject );\n          });\n\n          return newObjects;\n        },\n\n\n        /**\n         * @ngdoc function\n         * @name processHeaders\n         * @methodOf ui.grid.importer.service:uiGridImporterService\n         * @description Determines the columns that the header row from\n         * a csv (or other) file represents.\n         * @param {Grid} grid the grid we're importing into\n         * @param {array} headerRow the header row that we wish to match against\n         * the column definitions\n         * @returns {array} an array of the attribute names that should be used\n         * for that column, based on matching the headers or creating the headers\n         *\n         */\n        processHeaders: function( grid, headerRow ) {\n          var headers = [];\n          if ( !grid.options.columnDefs || grid.options.columnDefs.length === 0 ){\n            // we are going to create new columnDefs for all these columns, so just remove\n            // spaces from the names to create fields\n            headerRow.forEach( function( value, index ) {\n              headers.push( value.replace( /[^0-9a-zA-Z\\-_]/g, '_' ) );\n            });\n            return headers;\n          } else {\n            var lookupHash = service.flattenColumnDefs( grid, grid.options.columnDefs );\n            headerRow.forEach(  function( value, index ) {\n              if ( lookupHash[value] ) {\n                headers.push( lookupHash[value] );\n              } else if ( lookupHash[ value.toLowerCase() ] ) {\n                headers.push( lookupHash[ value.toLowerCase() ] );\n              } else {\n                headers.push( null );\n              }\n            });\n            return headers;\n          }\n        },\n\n\n        /**\n         * @name flattenColumnDefs\n         * @methodOf ui.grid.importer.service:uiGridImporterService\n         * @description Runs through the column defs and creates a hash of\n         * the displayName, name and field, and of each of those values forced to lower case,\n         * with each pointing to the field or name\n         * (whichever is present).  Used to lookup column headers and decide what\n         * attribute name to give to the resulting field.\n         * @param {Grid} grid the grid we're importing into\n         * @param {array} columnDefs the columnDefs that we should flatten\n         * @returns {hash} the flattened version of the column def information, allowing\n         * us to look up a value by `flattenedHash[ headerValue ]`\n         */\n        flattenColumnDefs: function( grid, columnDefs ){\n          var flattenedHash = {};\n          columnDefs.forEach(  function( columnDef, index) {\n            if ( columnDef.name ){\n              flattenedHash[ columnDef.name ] = columnDef.field || columnDef.name;\n              flattenedHash[ columnDef.name.toLowerCase() ] = columnDef.field || columnDef.name;\n            }\n\n            if ( columnDef.field ){\n              flattenedHash[ columnDef.field ] = columnDef.field || columnDef.name;\n              flattenedHash[ columnDef.field.toLowerCase() ] = columnDef.field || columnDef.name;\n            }\n\n            if ( columnDef.displayName ){\n              flattenedHash[ columnDef.displayName ] = columnDef.field || columnDef.name;\n              flattenedHash[ columnDef.displayName.toLowerCase() ] = columnDef.field || columnDef.name;\n            }\n\n            if ( columnDef.displayName && grid.options.importerHeaderFilter ){\n              flattenedHash[ grid.options.importerHeaderFilter(columnDef.displayName) ] = columnDef.field || columnDef.name;\n              flattenedHash[ grid.options.importerHeaderFilter(columnDef.displayName).toLowerCase() ] = columnDef.field || columnDef.name;\n            }\n          });\n\n          return flattenedHash;\n        },\n\n\n        /**\n         * @ngdoc function\n         * @name addObjects\n         * @methodOf ui.grid.importer.service:uiGridImporterService\n         * @description Inserts our new objects into the grid data, and\n         * sets the rows to dirty if the rowEdit feature is being used\n         *\n         * Does this by registering a watch on dataChanges, which essentially\n         * is waiting on the result of the grid data watch, and downstream processing.\n         *\n         * When the callback is called, it deregisters itself - we don't want to run\n         * again next time data is added.\n         *\n         * If we never get called, we deregister on destroy.\n         *\n         * @param {Grid} grid the grid we're importing into\n         * @param {array} newObjects the objects we want to insert into the grid data\n         * @returns {object} the new object\n         */\n        addObjects: function( grid, newObjects, $scope ){\n          if ( grid.api.rowEdit ){\n            var dataChangeDereg = grid.registerDataChangeCallback( function() {\n              grid.api.rowEdit.setRowsDirty( newObjects );\n              dataChangeDereg();\n            }, [uiGridConstants.dataChange.ROW] );\n\n            grid.importer.$scope.$on( '$destroy', dataChangeDereg );\n          }\n\n          grid.importer.$scope.$apply( grid.options.importerDataAddCallback( grid, newObjects ) );\n\n        },\n\n\n        /**\n         * @ngdoc function\n         * @name newObject\n         * @methodOf ui.grid.importer.service:uiGridImporterService\n         * @description Makes a new object based on `gridOptions.importerNewObject`,\n         * or based on an empty object if not present\n         * @param {Grid} grid the grid we're importing into\n         * @returns {object} the new object\n         */\n        newObject: function( grid ){\n          if ( typeof(grid.options) !== \"undefined\" && typeof(grid.options.importerNewObject) !== \"undefined\" ){\n            return new grid.options.importerNewObject();\n          } else {\n            return {};\n          }\n        },\n\n\n        /**\n         * @ngdoc function\n         * @name alertError\n         * @methodOf ui.grid.importer.service:uiGridImporterService\n         * @description Provides an internationalised user alert for the failure,\n         * and logs a console message including diagnostic content.\n         * Optionally, if the the `gridOptions.importerErrorCallback` routine\n         * is defined, then calls that instead, allowing user specified error routines\n         * @param {Grid} grid the grid we're importing into\n         * @param {array} headerRow the header row that we wish to match against\n         * the column definitions\n         */\n        alertError: function( grid, alertI18nToken, consoleMessage, context ){\n          if ( grid.options.importerErrorCallback ){\n            grid.options.importerErrorCallback( grid, alertI18nToken, consoleMessage, context );\n          } else {\n            $window.alert(i18nService.getSafeText( alertI18nToken ));\n            gridUtil.logError(consoleMessage + context );\n          }\n        }\n      };\n\n      return service;\n\n    }\n  ]);\n\n  /**\n   *  @ngdoc directive\n   *  @name ui.grid.importer.directive:uiGridImporter\n   *  @element div\n   *  @restrict A\n   *\n   *  @description Adds importer features to grid\n   *\n   */\n  module.directive('uiGridImporter', ['uiGridImporterConstants', 'uiGridImporterService', 'gridUtil', '$compile',\n    function (uiGridImporterConstants, uiGridImporterService, gridUtil, $compile) {\n      return {\n        replace: true,\n        priority: 0,\n        require: '^uiGrid',\n        scope: false,\n        link: function ($scope, $elm, $attrs, uiGridCtrl) {\n          uiGridImporterService.initializeGrid($scope, uiGridCtrl.grid);\n        }\n      };\n    }\n  ]);\n\n  /**\n   *  @ngdoc directive\n   *  @name ui.grid.importer.directive:uiGridImporterMenuItem\n   *  @element div\n   *  @restrict A\n   *\n   *  @description Handles the processing from the importer menu item - once a file is\n   *  selected\n   *\n   */\n  module.directive('uiGridImporterMenuItem', ['uiGridImporterConstants', 'uiGridImporterService', 'gridUtil', '$compile',\n    function (uiGridImporterConstants, uiGridImporterService, gridUtil, $compile) {\n      return {\n        replace: true,\n        priority: 0,\n        require: '?^uiGrid',\n        scope: false,\n        templateUrl: 'ui-grid/importerMenuItem',\n        link: function ($scope, $elm, $attrs, uiGridCtrl) {\n          var grid;\n\n          function handleFileSelect(event) {\n            var target = event.srcElement || event.target;\n\n            if (target && target.files && target.files.length === 1) {\n              var fileObject = target.files[0];\n\n              // Define grid if the uiGrid controller is present\n              if (typeof(uiGridCtrl) !== 'undefined' && uiGridCtrl) {\n                grid = uiGridCtrl.grid;\n\n                uiGridImporterService.importThisFile( grid, fileObject );\n                target.form.reset();\n              } else {\n                gridUtil.logError('Could not import file because UI Grid was not found.');\n              }\n            }\n          }\n\n          var fileChooser = $elm[0].querySelectorAll('.ui-grid-importer-file-chooser');\n\n          if ( fileChooser.length !== 1 ){\n            gridUtil.logError('Found > 1 or < 1 file choosers within the menu item, error, cannot continue');\n          } else {\n            fileChooser[0].addEventListener('change', handleFileSelect, false);\n          }\n        }\n      };\n    }\n  ]);\n})();\n\n(function() {\n  'use strict';\n  /**\n   *  @ngdoc overview\n   *  @name ui.grid.infiniteScroll\n   *\n   *  @description\n   *\n   * #ui.grid.infiniteScroll\n   *\n   * <div class=\"alert alert-warning\" role=\"alert\"><strong>Beta</strong> This feature is ready for testing, but it either hasn't seen a lot of use or has some known bugs.</div>\n   *\n   * This module provides infinite scroll functionality to ui-grid\n   *\n   */\n  var module = angular.module('ui.grid.infiniteScroll', ['ui.grid']);\n  /**\n   *  @ngdoc service\n   *  @name ui.grid.infiniteScroll.service:uiGridInfiniteScrollService\n   *\n   *  @description Service for infinite scroll features\n   */\n  module.service('uiGridInfiniteScrollService', ['gridUtil', '$compile', '$rootScope', 'uiGridConstants', 'ScrollEvent', '$q', function (gridUtil, $compile, $rootScope, uiGridConstants, ScrollEvent, $q) {\n\n    var service = {\n\n      /**\n       * @ngdoc function\n       * @name initializeGrid\n       * @methodOf ui.grid.infiniteScroll.service:uiGridInfiniteScrollService\n       * @description This method register events and methods into grid public API\n       */\n\n      initializeGrid: function(grid, $scope) {\n        service.defaultGridOptions(grid.options);\n\n        if (!grid.options.enableInfiniteScroll){\n          return;\n        }\n\n        grid.infiniteScroll = { dataLoading: false };\n        service.setScrollDirections( grid, grid.options.infiniteScrollUp, grid.options.infiniteScrollDown );\n          grid.api.core.on.scrollEnd($scope, service.handleScroll);\n\n        /**\n         *  @ngdoc object\n         *  @name ui.grid.infiniteScroll.api:PublicAPI\n         *\n         *  @description Public API for infinite scroll feature\n         */\n        var publicApi = {\n          events: {\n            infiniteScroll: {\n\n              /**\n               * @ngdoc event\n               * @name needLoadMoreData\n               * @eventOf ui.grid.infiniteScroll.api:PublicAPI\n               * @description This event fires when scroll reaches bottom percentage of grid\n               * and needs to load data\n               */\n\n              needLoadMoreData: function ($scope, fn) {\n              },\n\n              /**\n               * @ngdoc event\n               * @name needLoadMoreDataTop\n               * @eventOf ui.grid.infiniteScroll.api:PublicAPI\n               * @description This event fires when scroll reaches top percentage of grid\n               * and needs to load data\n               */\n\n              needLoadMoreDataTop: function ($scope, fn) {\n              }\n            }\n          },\n          methods: {\n            infiniteScroll: {\n\n              /**\n               * @ngdoc function\n               * @name dataLoaded\n               * @methodOf ui.grid.infiniteScroll.api:PublicAPI\n               * @description Call this function when you have loaded the additional data\n               * requested.  You should set scrollUp and scrollDown to indicate\n               * whether there are still more pages in each direction.\n               *\n               * If you call dataLoaded without first calling `saveScrollPercentage` then we will\n               * scroll the user to the start of the newly loaded data, which usually gives a smooth scroll\n               * experience, but can give a jumpy experience with large `infiniteScrollRowsFromEnd` values, and\n               * on variable speed internet connections.  Using `saveScrollPercentage` as demonstrated in the tutorial\n               * should give a smoother scrolling experience for users.\n               *\n               * See infinite_scroll tutorial for example of usage\n               * @param {boolean} scrollUp if set to false flags that there are no more pages upwards, so don't fire\n               * any more infinite scroll events upward\n               * @param {boolean} scrollDown if set to false flags that there are no more pages downwards, so don't\n               * fire any more infinite scroll events downward\n               * @returns {promise} a promise that is resolved when the grid scrolling is fully adjusted.  If you're\n               * planning to remove pages, you should wait on this promise first, or you'll break the scroll positioning\n               */\n              dataLoaded: function( scrollUp, scrollDown ) {\n                service.setScrollDirections(grid, scrollUp, scrollDown);\n\n                var promise = service.adjustScroll(grid).then(function() {\n                  grid.infiniteScroll.dataLoading = false;\n                });\n\n                return promise;\n              },\n\n              /**\n               * @ngdoc function\n               * @name resetScroll\n               * @methodOf ui.grid.infiniteScroll.api:PublicAPI\n               * @description Call this function when you have taken some action that makes the current\n               * scroll position invalid.  For example, if you're using external sorting and you've resorted\n               * then you might reset the scroll, or if you've otherwise substantially changed the data, perhaps\n               * you've reused an existing grid for a new data set\n               *\n               * You must tell us whether there is data upwards or downwards after the reset\n               *\n               * @param {boolean} scrollUp flag that there are pages upwards, fire\n               * infinite scroll events upward\n               * @param {boolean} scrollDown flag that there are pages downwards, so\n               * fire infinite scroll events downward\n               */\n              resetScroll: function( scrollUp, scrollDown ) {\n                service.setScrollDirections( grid, scrollUp, scrollDown);\n\n                service.adjustInfiniteScrollPosition(grid, 0);\n              },\n\n\n              /**\n               * @ngdoc function\n               * @name saveScrollPercentage\n               * @methodOf ui.grid.infiniteScroll.api:PublicAPI\n               * @description Saves the scroll percentage and number of visible rows before you adjust the data,\n               * used if you're subsequently going to call `dataRemovedTop` or `dataRemovedBottom`\n               */\n              saveScrollPercentage: function() {\n                grid.infiniteScroll.prevScrollTop = grid.renderContainers.body.prevScrollTop;\n                grid.infiniteScroll.previousVisibleRows = grid.getVisibleRowCount();\n              },\n\n\n              /**\n               * @ngdoc function\n               * @name dataRemovedTop\n               * @methodOf ui.grid.infiniteScroll.api:PublicAPI\n               * @description Adjusts the scroll position after you've removed data at the top\n               * @param {boolean} scrollUp flag that there are pages upwards, fire\n               * infinite scroll events upward\n               * @param {boolean} scrollDown flag that there are pages downwards, so\n               * fire infinite scroll events downward\n               */\n              dataRemovedTop: function( scrollUp, scrollDown ) {\n                service.dataRemovedTop( grid, scrollUp, scrollDown );\n              },\n\n              /**\n               * @ngdoc function\n               * @name dataRemovedBottom\n               * @methodOf ui.grid.infiniteScroll.api:PublicAPI\n               * @description Adjusts the scroll position after you've removed data at the bottom\n               * @param {boolean} scrollUp flag that there are pages upwards, fire\n               * infinite scroll events upward\n               * @param {boolean} scrollDown flag that there are pages downwards, so\n               * fire infinite scroll events downward\n               */\n              dataRemovedBottom: function( scrollUp, scrollDown ) {\n                service.dataRemovedBottom( grid, scrollUp, scrollDown );\n              },\n\n              /**\n               * @ngdoc function\n               * @name setScrollDirections\n               * @methodOf ui.grid.infiniteScroll.service:uiGridInfiniteScrollService\n               * @description Sets the scrollUp and scrollDown flags, handling nulls and undefined,\n               * and also sets the grid.suppressParentScroll\n               * @param {boolean} scrollUp whether there are pages available up - defaults to false\n               * @param {boolean} scrollDown whether there are pages available down - defaults to true\n               */\n              setScrollDirections:  function ( scrollUp, scrollDown ) {\n                service.setScrollDirections( grid, scrollUp, scrollDown );\n              }\n\n            }\n          }\n        };\n        grid.api.registerEventsFromObject(publicApi.events);\n        grid.api.registerMethodsFromObject(publicApi.methods);\n      },\n\n\n      defaultGridOptions: function (gridOptions) {\n        //default option to true unless it was explicitly set to false\n        /**\n         *  @ngdoc object\n         *  @name ui.grid.infiniteScroll.api:GridOptions\n         *\n         *  @description GridOptions for infinite scroll feature, these are available to be\n         *  set using the ui-grid {@link ui.grid.class:GridOptions gridOptions}\n         */\n\n        /**\n         *  @ngdoc object\n         *  @name enableInfiniteScroll\n         *  @propertyOf  ui.grid.infiniteScroll.api:GridOptions\n         *  @description Enable infinite scrolling for this grid\n         *  <br/>Defaults to true\n         */\n        gridOptions.enableInfiniteScroll = gridOptions.enableInfiniteScroll !== false;\n\n        /**\n         * @ngdoc property\n         * @name infiniteScrollRowsFromEnd\n         * @propertyOf ui.grid.class:GridOptions\n         * @description This setting controls how close to the end of the dataset a user gets before\n         * more data is requested by the infinite scroll, whether scrolling up or down.  This allows you to\n         * 'prefetch' rows before the user actually runs out of scrolling.\n         *\n         * Note that if you set this value too high it may give jumpy scrolling behaviour, if you're getting\n         * this behaviour you could use the `saveScrollPercentageMethod` right before loading your data, and we'll\n         * preserve that scroll position\n         *\n         * <br> Defaults to 20\n         */\n        gridOptions.infiniteScrollRowsFromEnd = gridOptions.infiniteScrollRowsFromEnd || 20;\n\n        /**\n         * @ngdoc property\n         * @name infiniteScrollUp\n         * @propertyOf ui.grid.class:GridOptions\n         * @description Whether you allow infinite scroll up, implying that the first page of data\n         * you have displayed is in the middle of your data set.  If set to true then we trigger the\n         * needMoreDataTop event when the user hits the top of the scrollbar.\n         * <br> Defaults to false\n         */\n        gridOptions.infiniteScrollUp = gridOptions.infiniteScrollUp === true;\n\n        /**\n         * @ngdoc property\n         * @name infiniteScrollDown\n         * @propertyOf ui.grid.class:GridOptions\n         * @description Whether you allow infinite scroll down, implying that the first page of data\n         * you have displayed is in the middle of your data set.  If set to true then we trigger the\n         * needMoreData event when the user hits the bottom of the scrollbar.\n         * <br> Defaults to true\n         */\n        gridOptions.infiniteScrollDown = gridOptions.infiniteScrollDown !== false;\n      },\n\n\n      /**\n       * @ngdoc function\n       * @name setScrollDirections\n       * @methodOf ui.grid.infiniteScroll.service:uiGridInfiniteScrollService\n       * @description Sets the scrollUp and scrollDown flags, handling nulls and undefined,\n       * and also sets the grid.suppressParentScroll\n       * @param {grid} grid the grid we're operating on\n       * @param {boolean} scrollUp whether there are pages available up - defaults to false\n       * @param {boolean} scrollDown whether there are pages available down - defaults to true\n       */\n      setScrollDirections:  function ( grid, scrollUp, scrollDown ) {\n        grid.infiniteScroll.scrollUp = ( scrollUp === true );\n        grid.suppressParentScrollUp = ( scrollUp === true );\n\n        grid.infiniteScroll.scrollDown = ( scrollDown !== false);\n        grid.suppressParentScrollDown = ( scrollDown !== false);\n      },\n\n\n      /**\n       * @ngdoc function\n       * @name handleScroll\n       * @methodOf ui.grid.infiniteScroll.service:uiGridInfiniteScrollService\n       * @description Called whenever the grid scrolls, determines whether the scroll should\n       * trigger an infinite scroll request for more data\n       * @param {object} args the args from the event\n       */\n      handleScroll:  function (args) {\n        // don't request data if already waiting for data, or if source is coming from ui.grid.adjustInfiniteScrollPosition() function\n        if ( args.grid.infiniteScroll && args.grid.infiniteScroll.dataLoading || args.source === 'ui.grid.adjustInfiniteScrollPosition' ){\n          return;\n        }\n\n        if (args.y) {\n\n          // If the user is scrolling very quickly all the way to the top/bottom, the scroll handler can get confused\n          // about the direction. First we check if they've gone all the way, and data always is loaded in this case.\n          if (args.y.percentage === 0) {\n            args.grid.scrollDirection = uiGridConstants.scrollDirection.UP;\n            service.loadData(args.grid);\n          } else if (args.y.percentage === 1) {\n            args.grid.scrollDirection = uiGridConstants.scrollDirection.DOWN;\n            service.loadData(args.grid);\n          } else { // Scroll position is somewhere in between top/bottom, so determine whether it's far enough to load more data.\n            var percentage;\n            var targetPercentage = args.grid.options.infiniteScrollRowsFromEnd / args.grid.renderContainers.body.visibleRowCache.length;\n            if (args.grid.scrollDirection === uiGridConstants.scrollDirection.UP ) {\n              percentage = args.y.percentage;\n              if (percentage <= targetPercentage){\n                service.loadData(args.grid);\n              }\n            } else if (args.grid.scrollDirection === uiGridConstants.scrollDirection.DOWN) {\n              percentage = 1 - args.y.percentage;\n              if (percentage <= targetPercentage){\n                service.loadData(args.grid);\n              }\n            }\n          }\n        }\n      },\n\n\n      /**\n       * @ngdoc function\n       * @name loadData\n       * @methodOf ui.grid.infiniteScroll.service:uiGridInfiniteScrollService\n       * @description This function fires 'needLoadMoreData' or 'needLoadMoreDataTop' event based on scrollDirection\n       * and whether there are more pages upwards or downwards.  It also stores the number of rows that we had previously,\n       * and clears out any saved scroll position so that we know whether or not the user calls `saveScrollPercentage`\n       * @param {Grid} grid the grid we're working on\n       */\n      loadData: function (grid) {\n        // save number of currently visible rows to calculate new scroll position later - we know that we want\n        // to be at approximately the row we're currently at\n        grid.infiniteScroll.previousVisibleRows = grid.renderContainers.body.visibleRowCache.length;\n        grid.infiniteScroll.direction = grid.scrollDirection;\n        delete grid.infiniteScroll.prevScrollTop;\n\n        if (grid.scrollDirection === uiGridConstants.scrollDirection.UP && grid.infiniteScroll.scrollUp ) {\n          grid.infiniteScroll.dataLoading = true;\n          grid.api.infiniteScroll.raise.needLoadMoreDataTop();\n        } else if (grid.scrollDirection === uiGridConstants.scrollDirection.DOWN && grid.infiniteScroll.scrollDown ) {\n          grid.infiniteScroll.dataLoading = true;\n          grid.api.infiniteScroll.raise.needLoadMoreData();\n        }\n      },\n\n\n      /**\n       * @ngdoc function\n       * @name adjustScroll\n       * @methodOf ui.grid.infiniteScroll.service:uiGridInfiniteScrollService\n       * @description Once we are informed that data has been loaded, adjust the scroll position to account for that\n       * addition and to make things look clean.\n       *\n       * If we're scrolling up we scroll to the first row of the old data set -\n       * so we're assuming that you would have gotten to the top of the grid (from the 20% need more data trigger) by\n       * the time the data comes back.  If we're scrolling down we scroll to the last row of the old data set - so we're\n       * assuming that you would have gotten to the bottom of the grid (from the 80% need more data trigger) by the time\n       * the data comes back.\n       *\n       * Neither of these are good assumptions, but making this a smoother experience really requires\n       * that trigger to not be a percentage, and to be much closer to the end of the data (say, 5 rows off the end).  Even then\n       * it'd be better still to actually run into the end.  But if the data takes a while to come back, they may have scrolled\n       * somewhere else in the mean-time, in which case they'll get a jump back to the new data.  Anyway, this will do for\n       * now, until someone wants to do better.\n       * @param {Grid} grid the grid we're working on\n       * @returns {promise} a promise that is resolved when scrolling has finished\n       */\n      adjustScroll: function(grid){\n        var promise = $q.defer();\n        $rootScope.$applyAsync(function () {\n          var newPercentage, viewportHeight, rowHeight, newVisibleRows, oldTop, newTop;\n\n          viewportHeight = grid.getViewportHeight() + grid.headerHeight - grid.renderContainers.body.headerHeight - grid.scrollbarHeight;\n          rowHeight = grid.options.rowHeight;\n\n          if ( grid.infiniteScroll.direction === undefined ){\n            // called from initialize, tweak our scroll up a little\n            service.adjustInfiniteScrollPosition(grid, 0);\n          }\n\n          newVisibleRows = grid.getVisibleRowCount();\n\n          // in case not enough data is loaded to enable scroller - load more data\n          var canvasHeight = rowHeight * newVisibleRows;\n          if (grid.infiniteScroll.scrollDown && (viewportHeight > canvasHeight)) {\n            grid.api.infiniteScroll.raise.needLoadMoreData();\n          }\n\n          if ( grid.infiniteScroll.direction === uiGridConstants.scrollDirection.UP ){\n            oldTop = grid.infiniteScroll.prevScrollTop || 0;\n            newTop = oldTop + (newVisibleRows - grid.infiniteScroll.previousVisibleRows)*rowHeight;\n            service.adjustInfiniteScrollPosition(grid, newTop);\n            $rootScope.$applyAsync( function() {\n              promise.resolve();\n            });\n          }\n\n          if ( grid.infiniteScroll.direction === uiGridConstants.scrollDirection.DOWN ){\n            newTop = grid.infiniteScroll.prevScrollTop || (grid.infiniteScroll.previousVisibleRows*rowHeight - viewportHeight);\n            service.adjustInfiniteScrollPosition(grid, newTop);\n            $rootScope.$applyAsync( function() {\n              promise.resolve();\n            });\n          }\n        }, 0);\n\n        return promise.promise;\n      },\n\n\n      /**\n       * @ngdoc function\n       * @name adjustInfiniteScrollPosition\n       * @methodOf ui.grid.infiniteScroll.service:uiGridInfiniteScrollService\n       * @description This function fires 'needLoadMoreData' or 'needLoadMoreDataTop' event based on scrollDirection\n       * @param {Grid} grid the grid we're working on\n       * @param {number} scrollTop the position through the grid that we want to scroll to\n       */\n      adjustInfiniteScrollPosition: function (grid, scrollTop) {\n        var scrollEvent = new ScrollEvent(grid, null, null, 'ui.grid.adjustInfiniteScrollPosition'),\n          visibleRows = grid.getVisibleRowCount(),\n          viewportHeight = grid.getViewportHeight() + grid.headerHeight - grid.renderContainers.body.headerHeight - grid.scrollbarHeight,\n          rowHeight = grid.options.rowHeight,\n          scrollHeight = visibleRows*rowHeight-viewportHeight;\n\n        //for infinite scroll, if there are pages upwards then never allow it to be at the zero position so the up button can be active\n        if (scrollTop === 0 && grid.infiniteScroll.scrollUp) {\n          // using pixels results in a relative scroll, hence we have to use percentage\n          scrollEvent.y = {percentage: 1/scrollHeight};\n        }\n        else {\n          scrollEvent.y = {percentage: scrollTop/scrollHeight};\n        }\n        grid.scrollContainers('', scrollEvent);\n      },\n\n\n      /**\n       * @ngdoc function\n       * @name dataRemovedTop\n       * @methodOf ui.grid.infiniteScroll.api:PublicAPI\n       * @description Adjusts the scroll position after you've removed data at the top. You should\n       * have called `saveScrollPercentage` before you remove the data, and if you're doing this in\n       * response to a `needMoreData` you should wait until the promise from `loadData` has resolved\n       * before you start removing data\n       * @param {Grid} grid the grid we're working on\n       * @param {boolean} scrollUp flag that there are pages upwards, fire\n       * infinite scroll events upward\n       * @param {boolean} scrollDown flag that there are pages downwards, so\n       * fire infinite scroll events downward\n       */\n      dataRemovedTop: function( grid, scrollUp, scrollDown ) {\n        var newVisibleRows, oldTop, newTop, rowHeight;\n        service.setScrollDirections( grid, scrollUp, scrollDown );\n\n        newVisibleRows = grid.renderContainers.body.visibleRowCache.length;\n        oldTop = grid.infiniteScroll.prevScrollTop;\n        rowHeight = grid.options.rowHeight;\n\n        // since we removed from the top, our new scroll row will be the old scroll row less the number\n        // of rows removed\n        newTop = oldTop - ( grid.infiniteScroll.previousVisibleRows - newVisibleRows )*rowHeight;\n\n        service.adjustInfiniteScrollPosition( grid, newTop );\n      },\n\n      /**\n       * @ngdoc function\n       * @name dataRemovedBottom\n       * @methodOf ui.grid.infiniteScroll.api:PublicAPI\n       * @description Adjusts the scroll position after you've removed data at the bottom.  You should\n       * have called `saveScrollPercentage` before you remove the data, and if you're doing this in\n       * response to a `needMoreData` you should wait until the promise from `loadData` has resolved\n       * before you start removing data\n       * @param {Grid} grid the grid we're working on\n       * @param {boolean} scrollUp flag that there are pages upwards, fire\n       * infinite scroll events upward\n       * @param {boolean} scrollDown flag that there are pages downwards, so\n       * fire infinite scroll events downward\n       */\n      dataRemovedBottom: function( grid, scrollUp, scrollDown ) {\n        var newTop;\n        service.setScrollDirections( grid, scrollUp, scrollDown );\n\n        newTop = grid.infiniteScroll.prevScrollTop;\n\n        service.adjustInfiniteScrollPosition( grid, newTop );\n      }\n    };\n    return service;\n  }]);\n  /**\n   *  @ngdoc directive\n   *  @name ui.grid.infiniteScroll.directive:uiGridInfiniteScroll\n   *  @element div\n   *  @restrict A\n   *\n   *  @description Adds infinite scroll features to grid\n   *\n   *  @example\n   <example module=\"app\">\n   <file name=\"app.js\">\n   var app = angular.module('app', ['ui.grid', 'ui.grid.infiniteScroll']);\n\n   app.controller('MainCtrl', ['$scope', function ($scope) {\n      $scope.data = [\n        { name: 'Alex', car: 'Toyota' },\n            { name: 'Sam', car: 'Lexus' }\n      ];\n\n      $scope.columnDefs = [\n        {name: 'name'},\n        {name: 'car'}\n      ];\n    }]);\n   </file>\n   <file name=\"index.html\">\n   <div ng-controller=\"MainCtrl\">\n   <div ui-grid=\"{ data: data, columnDefs: columnDefs }\" ui-grid-infinite-scroll=\"20\"></div>\n   </div>\n   </file>\n   </example>\n   */\n\n  module.directive('uiGridInfiniteScroll', ['uiGridInfiniteScrollService',\n    function (uiGridInfiniteScrollService) {\n      return {\n        priority: -200,\n        scope: false,\n        require: '^uiGrid',\n        compile: function($scope, $elm, $attr){\n          return {\n            pre: function($scope, $elm, $attr, uiGridCtrl) {\n              uiGridInfiniteScrollService.initializeGrid(uiGridCtrl.grid, $scope);\n            },\n            post: function($scope, $elm, $attr) {\n            }\n          };\n        }\n      };\n    }]);\n\n})();\n\n(function () {\n  'use strict';\n\n  /**\n   * @ngdoc overview\n   * @name ui.grid.moveColumns\n   * @description\n   *\n   * # ui.grid.moveColumns\n   *\n   * <div class=\"alert alert-warning\" role=\"alert\"><strong>Alpha</strong> This feature is in development. There will almost certainly be breaking api changes, or there are major outstanding bugs.</div>\n   *\n   * This module provides column moving capability to ui.grid. It enables to change the position of columns.\n   * <div doc-module-components=\"ui.grid.moveColumns\"></div>\n   */\n  var module = angular.module('ui.grid.moveColumns', ['ui.grid']);\n\n  /**\n   *  @ngdoc service\n   *  @name ui.grid.moveColumns.service:uiGridMoveColumnService\n   *  @description Service for column moving feature.\n   */\n  module.service('uiGridMoveColumnService', ['$q', '$rootScope', '$log', 'ScrollEvent', 'uiGridConstants', 'gridUtil', function ($q, $rootScope, $log, ScrollEvent, uiGridConstants, gridUtil) {\n\n    var service = {\n      initializeGrid: function (grid) {\n        var self = this;\n        this.registerPublicApi(grid);\n        this.defaultGridOptions(grid.options);\n        grid.moveColumns = {orderCache: []}; // Used to cache the order before columns are rebuilt\n        grid.registerColumnBuilder(self.movableColumnBuilder);\n        grid.registerDataChangeCallback(self.verifyColumnOrder, [uiGridConstants.dataChange.COLUMN]);\n      },\n      registerPublicApi: function (grid) {\n        var self = this;\n        /**\n         *  @ngdoc object\n         *  @name ui.grid.moveColumns.api:PublicApi\n         *  @description Public Api for column moving feature.\n         */\n        var publicApi = {\n          events: {\n            /**\n             * @ngdoc event\n             * @name columnPositionChanged\n             * @eventOf  ui.grid.moveColumns.api:PublicApi\n             * @description raised when column is moved\n             * <pre>\n             *      gridApi.colMovable.on.columnPositionChanged(scope,function(colDef, originalPosition, newPosition){})\n             * </pre>\n             * @param {object} colDef the column that was moved\n             * @param {integer} originalPosition of the column\n             * @param {integer} finalPosition of the column\n             */\n            colMovable: {\n              columnPositionChanged: function (colDef, originalPosition, newPosition) {\n              }\n            }\n          },\n          methods: {\n            /**\n             * @ngdoc method\n             * @name moveColumn\n             * @methodOf  ui.grid.moveColumns.api:PublicApi\n             * @description Method can be used to change column position.\n             * <pre>\n             *      gridApi.colMovable.moveColumn(oldPosition, newPosition)\n             * </pre>\n             * @param {integer} originalPosition of the column\n             * @param {integer} finalPosition of the column\n             */\n            colMovable: {\n              moveColumn: function (originalPosition, finalPosition) {\n                var columns = grid.columns;\n                if (!angular.isNumber(originalPosition) || !angular.isNumber(finalPosition)) {\n                  gridUtil.logError('MoveColumn: Please provide valid values for originalPosition and finalPosition');\n                  return;\n                }\n                var nonMovableColumns = 0;\n                for (var i = 0; i < columns.length; i++) {\n                  if ((angular.isDefined(columns[i].colDef.visible) && columns[i].colDef.visible === false) || columns[i].isRowHeader === true) {\n                    nonMovableColumns++;\n                  }\n                }\n                if (originalPosition >= (columns.length - nonMovableColumns) || finalPosition >= (columns.length - nonMovableColumns)) {\n                  gridUtil.logError('MoveColumn: Invalid values for originalPosition, finalPosition');\n                  return;\n                }\n                var findPositionForRenderIndex = function (index) {\n                  var position = index;\n                  for (var i = 0; i <= position; i++) {\n                    if (angular.isDefined(columns[i]) && ((angular.isDefined(columns[i].colDef.visible) && columns[i].colDef.visible === false) || columns[i].isRowHeader === true)) {\n                      position++;\n                    }\n                  }\n                  return position;\n                };\n                self.redrawColumnAtPosition(grid, findPositionForRenderIndex(originalPosition), findPositionForRenderIndex(finalPosition));\n              }\n            }\n          }\n        };\n        grid.api.registerEventsFromObject(publicApi.events);\n        grid.api.registerMethodsFromObject(publicApi.methods);\n      },\n      defaultGridOptions: function (gridOptions) {\n        /**\n         *  @ngdoc object\n         *  @name ui.grid.moveColumns.api:GridOptions\n         *\n         *  @description Options for configuring the move column feature, these are available to be\n         *  set using the ui-grid {@link ui.grid.class:GridOptions gridOptions}\n         */\n        /**\n         *  @ngdoc object\n         *  @name enableColumnMoving\n         *  @propertyOf  ui.grid.moveColumns.api:GridOptions\n         *  @description If defined, sets the default value for the colMovable flag on each individual colDefs\n         *  if their individual enableColumnMoving configuration is not defined. Defaults to true.\n         */\n        gridOptions.enableColumnMoving = gridOptions.enableColumnMoving !== false;\n      },\n      movableColumnBuilder: function (colDef, col, gridOptions) {\n        var promises = [];\n        /**\n         *  @ngdoc object\n         *  @name ui.grid.moveColumns.api:ColumnDef\n         *\n         *  @description Column Definition for move column feature, these are available to be\n         *  set using the ui-grid {@link ui.grid.class:GridOptions.columnDef gridOptions.columnDefs}\n         */\n        /**\n         *  @ngdoc object\n         *  @name enableColumnMoving\n         *  @propertyOf  ui.grid.moveColumns.api:ColumnDef\n         *  @description Enable column moving for the column.\n         */\n        colDef.enableColumnMoving = colDef.enableColumnMoving === undefined ? gridOptions.enableColumnMoving\n          : colDef.enableColumnMoving;\n        return $q.all(promises);\n      },\n      /**\n       * @ngdoc method\n       * @name updateColumnCache\n       * @methodOf  ui.grid.moveColumns\n       * @description Cache the current order of columns, so we can restore them after new columnDefs are defined\n       */\n      updateColumnCache: function(grid){\n        grid.moveColumns.orderCache = grid.getOnlyDataColumns();\n      },\n      /**\n       * @ngdoc method\n       * @name verifyColumnOrder\n       * @methodOf  ui.grid.moveColumns\n       * @description dataChangeCallback which uses the cached column order to restore the column order\n       * when it is reset by altering the columnDefs array.\n       */\n      verifyColumnOrder: function(grid){\n        var headerRowOffset = grid.rowHeaderColumns.length;\n        var newIndex;\n\n        angular.forEach(grid.moveColumns.orderCache, function(cacheCol, cacheIndex){\n          newIndex = grid.columns.indexOf(cacheCol);\n          if ( newIndex !== -1 && newIndex - headerRowOffset !== cacheIndex ){\n            var column = grid.columns.splice(newIndex, 1)[0];\n            grid.columns.splice(cacheIndex + headerRowOffset, 0, column);\n          }\n        });\n      },\n      redrawColumnAtPosition: function (grid, originalPosition, newPosition) {\n        var columns = grid.columns;\n\n        if (originalPosition === newPosition) {\n          return;\n        }\n\n        //check columns in between move-range to make sure they are visible columns\n        var pos = (originalPosition < newPosition) ? originalPosition + 1 : originalPosition - 1;\n        var i0 = Math.min(pos, newPosition);\n        for (i0; i0 <= Math.max(pos, newPosition); i0++) {\n          if (columns[i0].visible) {\n            break;\n          }\n        }\n        if (i0 > Math.max(pos, newPosition)) {\n          //no visible column found, column did not visibly move\n          return;\n        }\n\n        var originalColumn = columns[originalPosition];\n        if (originalColumn.colDef.enableColumnMoving) {\n          if (originalPosition > newPosition) {\n            for (var i1 = originalPosition; i1 > newPosition; i1--) {\n              columns[i1] = columns[i1 - 1];\n            }\n          }\n          else if (newPosition > originalPosition) {\n            for (var i2 = originalPosition; i2 < newPosition; i2++) {\n              columns[i2] = columns[i2 + 1];\n            }\n          }\n          columns[newPosition] = originalColumn;\n          service.updateColumnCache(grid);\n          grid.queueGridRefresh();\n          $rootScope.$applyAsync(function () {\n            grid.api.core.notifyDataChange( uiGridConstants.dataChange.COLUMN );\n            grid.api.colMovable.raise.columnPositionChanged(originalColumn.colDef, originalPosition, newPosition);\n          });\n        }\n      }\n    };\n    return service;\n  }]);\n\n  /**\n   *  @ngdoc directive\n   *  @name ui.grid.moveColumns.directive:uiGridMoveColumns\n   *  @element div\n   *  @restrict A\n   *  @description Adds column moving features to the ui-grid directive.\n   *  @example\n   <example module=\"app\">\n   <file name=\"app.js\">\n   var app = angular.module('app', ['ui.grid', 'ui.grid.moveColumns']);\n   app.controller('MainCtrl', ['$scope', function ($scope) {\n        $scope.data = [\n          { name: 'Bob', title: 'CEO', age: 45 },\n          { name: 'Frank', title: 'Lowly Developer', age: 25 },\n          { name: 'Jenny', title: 'Highly Developer', age: 35 }\n        ];\n        $scope.columnDefs = [\n          {name: 'name'},\n          {name: 'title'},\n          {name: 'age'}\n        ];\n      }]);\n   </file>\n   <file name=\"main.css\">\n   .grid {\n      width: 100%;\n      height: 150px;\n    }\n   </file>\n   <file name=\"index.html\">\n   <div ng-controller=\"MainCtrl\">\n   <div class=\"grid\" ui-grid=\"{ data: data, columnDefs: columnDefs }\" ui-grid-move-columns></div>\n   </div>\n   </file>\n   </example>\n   */\n  module.directive('uiGridMoveColumns', ['uiGridMoveColumnService', function (uiGridMoveColumnService) {\n    return {\n      replace: true,\n      priority: 0,\n      require: '^uiGrid',\n      scope: false,\n      compile: function () {\n        return {\n          pre: function ($scope, $elm, $attrs, uiGridCtrl) {\n            uiGridMoveColumnService.initializeGrid(uiGridCtrl.grid);\n          },\n          post: function ($scope, $elm, $attrs, uiGridCtrl) {\n          }\n        };\n      }\n    };\n  }]);\n\n  /**\n   *  @ngdoc directive\n   *  @name ui.grid.moveColumns.directive:uiGridHeaderCell\n   *  @element div\n   *  @restrict A\n   *\n   *  @description Stacks on top of ui.grid.uiGridHeaderCell to provide capability to be able to move it to reposition column.\n   *\n   *  On receiving mouseDown event headerCell is cloned, now as the mouse moves the cloned header cell also moved in the grid.\n   *  In case the moving cloned header cell reaches the left or right extreme of grid, grid scrolling is triggered (if horizontal scroll exists).\n   *  On mouseUp event column is repositioned at position where mouse is released and cloned header cell is removed.\n   *\n   *  Events that invoke cloning of header cell:\n   *    - mousedown\n   *\n   *  Events that invoke movement of cloned header cell:\n   *    - mousemove\n   *\n   *  Events that invoke repositioning of column:\n   *    - mouseup\n   */\n  module.directive('uiGridHeaderCell', ['$q', 'gridUtil', 'uiGridMoveColumnService', '$document', '$log', 'uiGridConstants', 'ScrollEvent',\n    function ($q, gridUtil, uiGridMoveColumnService, $document, $log, uiGridConstants, ScrollEvent) {\n      return {\n        priority: -10,\n        require: '^uiGrid',\n        compile: function () {\n          return {\n            post: function ($scope, $elm, $attrs, uiGridCtrl) {\n\n              if ($scope.col.colDef.enableColumnMoving) {\n\n                /*\n                 * Our general approach to column move is that we listen to a touchstart or mousedown\n                 * event over the column header.  When we hear one, then we wait for a move of the same type\n                 * - if we are a touchstart then we listen for a touchmove, if we are a mousedown we listen for\n                 * a mousemove (i.e. a drag) before we decide that there's a move underway.  If there's never a move,\n                 * and we instead get a mouseup or a touchend, then we just drop out again and do nothing.\n                 *\n                 */\n                var $contentsElm = angular.element( $elm[0].querySelectorAll('.ui-grid-cell-contents') );\n\n                var gridLeft;\n                var previousMouseX;\n                var totalMouseMovement;\n                var rightMoveLimit;\n                var elmCloned = false;\n                var movingElm;\n                var reducedWidth;\n                var moveOccurred = false;\n\n                var downFn = function( event ){\n                  //Setting some variables required for calculations.\n                  gridLeft = $scope.grid.element[0].getBoundingClientRect().left;\n                  if ( $scope.grid.hasLeftContainer() ){\n                    gridLeft += $scope.grid.renderContainers.left.header[0].getBoundingClientRect().width;\n                  }\n\n                  previousMouseX = event.pageX || (event.originalEvent ? event.originalEvent.pageX : 0);\n                  totalMouseMovement = 0;\n                  rightMoveLimit = gridLeft + $scope.grid.getViewportWidth();\n\n                  if ( event.type === 'mousedown' ){\n                    $document.on('mousemove', moveFn);\n                    $document.on('mouseup', upFn);\n                  } else if ( event.type === 'touchstart' ){\n                    $document.on('touchmove', moveFn);\n                    $document.on('touchend', upFn);\n                  }\n                };\n\n                var moveFn = function( event ) {\n                  var pageX = event.pageX || (event.originalEvent ? event.originalEvent.pageX : 0);\n                  var changeValue = pageX - previousMouseX;\n                  if ( changeValue === 0 ){ return; }\n                  //Disable text selection in Chrome during column move\n                  document.onselectstart = function() { return false; };\n\n                  moveOccurred = true;\n\n                  if (!elmCloned) {\n                    cloneElement();\n                  }\n                  else if (elmCloned) {\n                    moveElement(changeValue);\n                    previousMouseX = pageX;\n                  }\n                };\n\n                var upFn = function( event ){\n                  //Re-enable text selection after column move\n                  document.onselectstart = null;\n\n                  //Remove the cloned element on mouse up.\n                  if (movingElm) {\n                    movingElm.remove();\n                    elmCloned = false;\n                  }\n\n                  offAllEvents();\n                  onDownEvents();\n\n                  if (!moveOccurred){\n                    return;\n                  }\n\n                  var columns = $scope.grid.columns;\n                  var columnIndex = 0;\n                  for (var i = 0; i < columns.length; i++) {\n                    if (columns[i].colDef.name !== $scope.col.colDef.name) {\n                      columnIndex++;\n                    }\n                    else {\n                      break;\n                    }\n                  }\n\n                  var targetIndex;\n\n                  //Case where column should be moved to a position on its left\n                  if (totalMouseMovement < 0) {\n                    var totalColumnsLeftWidth = 0;\n                    var il;\n                    if ( $scope.grid.isRTL() ){\n                      for (il = columnIndex + 1; il < columns.length; il++) {\n                        if (angular.isUndefined(columns[il].colDef.visible) || columns[il].colDef.visible === true) {\n                          totalColumnsLeftWidth += columns[il].drawnWidth || columns[il].width || columns[il].colDef.width;\n                          if (totalColumnsLeftWidth > Math.abs(totalMouseMovement)) {\n                            uiGridMoveColumnService.redrawColumnAtPosition\n                            ($scope.grid, columnIndex, il - 1);\n                            break;\n                          }\n                        }\n                      }\n                    }\n                    else {\n                      for (il = columnIndex - 1; il >= 0; il--) {\n                        if (angular.isUndefined(columns[il].colDef.visible) || columns[il].colDef.visible === true) {\n                          totalColumnsLeftWidth += columns[il].drawnWidth || columns[il].width || columns[il].colDef.width;\n                          if (totalColumnsLeftWidth > Math.abs(totalMouseMovement)) {\n                            uiGridMoveColumnService.redrawColumnAtPosition\n                            ($scope.grid, columnIndex, il + 1);\n                            break;\n                          }\n                        }\n                      }\n                    }\n\n                    //Case where column should be moved to beginning (or end in RTL) of the grid.\n                    if (totalColumnsLeftWidth < Math.abs(totalMouseMovement)) {\n                      targetIndex = 0;\n                      if ( $scope.grid.isRTL() ){\n                        targetIndex = columns.length - 1;\n                      }\n                      uiGridMoveColumnService.redrawColumnAtPosition\n                      ($scope.grid, columnIndex, targetIndex);\n                    }\n                  }\n\n                  //Case where column should be moved to a position on its right\n                  else if (totalMouseMovement > 0) {\n                    var totalColumnsRightWidth = 0;\n                    var ir;\n                    if ( $scope.grid.isRTL() ){\n                      for (ir = columnIndex - 1; ir > 0; ir--) {\n                        if (angular.isUndefined(columns[ir].colDef.visible) || columns[ir].colDef.visible === true) {\n                          totalColumnsRightWidth += columns[ir].drawnWidth || columns[ir].width || columns[ir].colDef.width;\n                          if (totalColumnsRightWidth > totalMouseMovement) {\n                            uiGridMoveColumnService.redrawColumnAtPosition\n                            ($scope.grid, columnIndex, ir);\n                            break;\n                          }\n                        }\n                      }\n                    }\n                    else {\n                      for (ir = columnIndex + 1; ir < columns.length; ir++) {\n                        if (angular.isUndefined(columns[ir].colDef.visible) || columns[ir].colDef.visible === true) {\n                          totalColumnsRightWidth += columns[ir].drawnWidth || columns[ir].width || columns[ir].colDef.width;\n                          if (totalColumnsRightWidth > totalMouseMovement) {\n                            uiGridMoveColumnService.redrawColumnAtPosition\n                            ($scope.grid, columnIndex, ir - 1);\n                            break;\n                          }\n                        }\n                      }\n                    }\n\n\n                    //Case where column should be moved to end (or beginning in RTL) of the grid.\n                    if (totalColumnsRightWidth < totalMouseMovement) {\n                      targetIndex = columns.length - 1;\n                      if ( $scope.grid.isRTL() ){\n                        targetIndex = 0;\n                      }\n                      uiGridMoveColumnService.redrawColumnAtPosition\n                      ($scope.grid, columnIndex, targetIndex);\n                    }\n                  }\n\n\n\n                };\n\n                var onDownEvents = function(){\n                  $contentsElm.on('touchstart', downFn);\n                  $contentsElm.on('mousedown', downFn);\n                };\n\n                var offAllEvents = function() {\n                  $contentsElm.off('touchstart', downFn);\n                  $contentsElm.off('mousedown', downFn);\n\n                  $document.off('mousemove', moveFn);\n                  $document.off('touchmove', moveFn);\n\n                  $document.off('mouseup', upFn);\n                  $document.off('touchend', upFn);\n                };\n\n                onDownEvents();\n\n\n                var cloneElement = function () {\n                  elmCloned = true;\n\n                  //Cloning header cell and appending to current header cell.\n                  movingElm = $elm.clone();\n                  $elm.parent().append(movingElm);\n\n                  //Left of cloned element should be aligned to original header cell.\n                  movingElm.addClass('movingColumn');\n                  var movingElementStyles = {};\n                  movingElementStyles.left = $elm[0].offsetLeft + 'px';\n                  var gridRight = $scope.grid.element[0].getBoundingClientRect().right;\n                  var elmRight = $elm[0].getBoundingClientRect().right;\n                  if (elmRight > gridRight) {\n                    reducedWidth = $scope.col.drawnWidth + (gridRight - elmRight);\n                    movingElementStyles.width = reducedWidth + 'px';\n                  }\n                  movingElm.css(movingElementStyles);\n                };\n\n                var moveElement = function (changeValue) {\n                  //Calculate total column width\n                  var columns = $scope.grid.columns;\n                  var totalColumnWidth = 0;\n                  for (var i = 0; i < columns.length; i++) {\n                    if (angular.isUndefined(columns[i].colDef.visible) || columns[i].colDef.visible === true) {\n                      totalColumnWidth += columns[i].drawnWidth || columns[i].width || columns[i].colDef.width;\n                    }\n                  }\n\n                  //Calculate new position of left of column\n                  var currentElmLeft = movingElm[0].getBoundingClientRect().left - 1;\n                  var currentElmRight = movingElm[0].getBoundingClientRect().right;\n                  var newElementLeft;\n\n                  newElementLeft = currentElmLeft - gridLeft + changeValue;\n                  newElementLeft = newElementLeft < rightMoveLimit ? newElementLeft : rightMoveLimit;\n\n                  //Update css of moving column to adjust to new left value or fire scroll in case column has reached edge of grid\n                  if ((currentElmLeft >= gridLeft || changeValue > 0) && (currentElmRight <= rightMoveLimit || changeValue < 0)) {\n                    movingElm.css({visibility: 'visible', 'left': (movingElm[0].offsetLeft +\n                    (newElementLeft < rightMoveLimit ? changeValue : (rightMoveLimit - currentElmLeft))) + 'px'});\n                  }\n                  else if (totalColumnWidth > Math.ceil(uiGridCtrl.grid.gridWidth)) {\n                    changeValue *= 8;\n                    var scrollEvent = new ScrollEvent($scope.col.grid, null, null, 'uiGridHeaderCell.moveElement');\n                    scrollEvent.x = {pixels: changeValue};\n                    scrollEvent.grid.scrollContainers('',scrollEvent);\n                  }\n\n                  //Calculate total width of columns on the left of the moving column and the mouse movement\n                  var totalColumnsLeftWidth = 0;\n                  for (var il = 0; il < columns.length; il++) {\n                    if (angular.isUndefined(columns[il].colDef.visible) || columns[il].colDef.visible === true) {\n                      if (columns[il].colDef.name !== $scope.col.colDef.name) {\n                        totalColumnsLeftWidth += columns[il].drawnWidth || columns[il].width || columns[il].colDef.width;\n                      }\n                      else {\n                        break;\n                      }\n                    }\n                  }\n                  if ($scope.newScrollLeft === undefined) {\n                    totalMouseMovement += changeValue;\n                  }\n                  else {\n                    totalMouseMovement = $scope.newScrollLeft + newElementLeft - totalColumnsLeftWidth;\n                  }\n\n                  //Increase width of moving column, in case the rightmost column was moved and its width was\n                  //decreased because of overflow\n                  if (reducedWidth < $scope.col.drawnWidth) {\n                    reducedWidth += Math.abs(changeValue);\n                    movingElm.css({'width': reducedWidth + 'px'});\n                  }\n                };\n\n                $scope.$on('$destroy', offAllEvents);\n              }\n            }\n          };\n        }\n      };\n    }]);\n})();\n\n(function() {\n  'use strict';\n\n  /**\n   * @ngdoc overview\n   * @name ui.grid.pagination\n   *\n   * @description\n   *\n   * # ui.grid.pagination\n   *\n   * <div class=\"alert alert-warning\" role=\"alert\"><strong>Alpha</strong> This feature is in development. There will almost certainly be breaking api changes, or there are major outstanding bugs.</div>\n   *\n   * This module provides pagination support to ui-grid\n   */\n  var module = angular.module('ui.grid.pagination', ['ng', 'ui.grid']);\n\n  /**\n   * @ngdoc service\n   * @name ui.grid.pagination.service:uiGridPaginationService\n   *\n   * @description Service for the pagination feature\n   */\n  module.service('uiGridPaginationService', ['gridUtil',\n    function (gridUtil) {\n      var service = {\n        /**\n         * @ngdoc method\n         * @name initializeGrid\n         * @methodOf ui.grid.pagination.service:uiGridPaginationService\n         * @description Attaches the service to a certain grid\n         * @param {Grid} grid The grid we want to work with\n         */\n        initializeGrid: function (grid) {\n          service.defaultGridOptions(grid.options);\n\n          /**\n          * @ngdoc object\n          * @name ui.grid.pagination.api:PublicAPI\n          *\n          * @description Public API for the pagination feature\n          */\n          var publicApi = {\n            events: {\n              pagination: {\n              /**\n               * @ngdoc event\n               * @name paginationChanged\n               * @eventOf ui.grid.pagination.api:PublicAPI\n               * @description This event fires when the pageSize or currentPage changes\n               * @param {int} currentPage requested page number\n               * @param {int} pageSize requested page size\n               */\n                paginationChanged: function (currentPage, pageSize) { }\n              }\n            },\n            methods: {\n              pagination: {\n                /**\n                 * @ngdoc method\n                 * @name getPage\n                 * @methodOf ui.grid.pagination.api:PublicAPI\n                 * @description Returns the number of the current page\n                 */\n                getPage: function () {\n                  return grid.options.enablePagination ? grid.options.paginationCurrentPage : null;\n                },\n                /**\n                 * @ngdoc method\n                 * @name getFirstRowIndex\n                 * @methodOf ui.grid.pagination.api:PublicAPI\n                 * @description Returns the index of the first row of the current page.\n                 */\n                getFirstRowIndex: function () {\n                  if (grid.options.useCustomPagination) {\n                    return grid.options.paginationPageSizes.reduce(function(result, size, index) {\n                      return index < grid.options.paginationCurrentPage - 1 ? result + size : result;\n                    }, 0);\n                  }\n                  return ((grid.options.paginationCurrentPage - 1) * grid.options.paginationPageSize);\n                },\n                /**\n                 * @ngdoc method\n                 * @name getLastRowIndex\n                 * @methodOf ui.grid.pagination.api:PublicAPI\n                 * @description Returns the index of the last row of the current page.\n                 */\n                getLastRowIndex: function () {\n                  if (grid.options.useCustomPagination) {\n                    return publicApi.methods.pagination.getFirstRowIndex() + grid.options.paginationPageSizes[grid.options.paginationCurrentPage - 1] - 1;\n                  }\n                  return Math.min(grid.options.paginationCurrentPage * grid.options.paginationPageSize, grid.options.totalItems) - 1;\n                },\n                /**\n                 * @ngdoc method\n                 * @name getTotalPages\n                 * @methodOf ui.grid.pagination.api:PublicAPI\n                 * @description Returns the total number of pages\n                 */\n                getTotalPages: function () {\n                  if (!grid.options.enablePagination) {\n                    return null;\n                  }\n\n                  if (grid.options.useCustomPagination) {\n                    return grid.options.paginationPageSizes.length;\n                  }\n\n                  return (grid.options.totalItems === 0) ? 1 : Math.ceil(grid.options.totalItems / grid.options.paginationPageSize);\n                },\n                /**\n                 * @ngdoc method\n                 * @name nextPage\n                 * @methodOf ui.grid.pagination.api:PublicAPI\n                 * @description Moves to the next page, if possible\n                 */\n                nextPage: function () {\n                  if (!grid.options.enablePagination) {\n                    return;\n                  }\n\n                  if (grid.options.totalItems > 0) {\n                    grid.options.paginationCurrentPage = Math.min(\n                      grid.options.paginationCurrentPage + 1,\n                      publicApi.methods.pagination.getTotalPages()\n                    );\n                  } else {\n                    grid.options.paginationCurrentPage++;\n                  }\n                },\n                /**\n                 * @ngdoc method\n                 * @name previousPage\n                 * @methodOf ui.grid.pagination.api:PublicAPI\n                 * @description Moves to the previous page, if we're not on the first page\n                 */\n                previousPage: function () {\n                  if (!grid.options.enablePagination) {\n                    return;\n                  }\n\n                  grid.options.paginationCurrentPage = Math.max(grid.options.paginationCurrentPage - 1, 1);\n                },\n                /**\n                 * @ngdoc method\n                 * @name seek\n                 * @methodOf ui.grid.pagination.api:PublicAPI\n                 * @description Moves to the requested page\n                 * @param {int} page The number of the page that should be displayed\n                 */\n                seek: function (page) {\n                  if (!grid.options.enablePagination) {\n                    return;\n                  }\n                  if (!angular.isNumber(page) || page < 1) {\n                    throw 'Invalid page number: ' + page;\n                  }\n\n                  grid.options.paginationCurrentPage = Math.min(page, publicApi.methods.pagination.getTotalPages());\n                }\n              }\n            }\n          };\n\n          grid.api.registerEventsFromObject(publicApi.events);\n          grid.api.registerMethodsFromObject(publicApi.methods);\n\n          var processPagination = function( renderableRows ){\n            if (grid.options.useExternalPagination || !grid.options.enablePagination) {\n              return renderableRows;\n            }\n            //client side pagination\n            var pageSize = parseInt(grid.options.paginationPageSize, 10);\n            var currentPage = parseInt(grid.options.paginationCurrentPage, 10);\n\n            var visibleRows = renderableRows.filter(function (row) { return row.visible; });\n            grid.options.totalItems = visibleRows.length;\n\n            var firstRow = publicApi.methods.pagination.getFirstRowIndex();\n            var lastRow  = publicApi.methods.pagination.getLastRowIndex();\n\n            if (firstRow > visibleRows.length) {\n              currentPage = grid.options.paginationCurrentPage = 1;\n              firstRow = (currentPage - 1) * pageSize;\n            }\n            return visibleRows.slice(firstRow, lastRow + 1);\n          };\n\n          grid.registerRowsProcessor(processPagination, 900 );\n\n        },\n        defaultGridOptions: function (gridOptions) {\n          /**\n           * @ngdoc object\n           * @name ui.grid.pagination.api:GridOptions\n           *\n           * @description GridOptions for the pagination feature, these are available to be\n           * set using the ui-grid {@link ui.grid.class:GridOptions gridOptions}\n           */\n\n          /**\n           * @ngdoc property\n           * @name enablePagination\n           * @propertyOf ui.grid.pagination.api:GridOptions\n           * @description Enables pagination.  Defaults to true.\n           */\n          gridOptions.enablePagination = gridOptions.enablePagination !== false;\n          /**\n           * @ngdoc property\n           * @name enablePaginationControls\n           * @propertyOf ui.grid.pagination.api:GridOptions\n           * @description Enables the paginator at the bottom of the grid. Turn this off if you want to implement your\n           *              own controls outside the grid.\n           */\n          gridOptions.enablePaginationControls = gridOptions.enablePaginationControls !== false;\n          /**\n           * @ngdoc property\n           * @name useExternalPagination\n           * @propertyOf ui.grid.pagination.api:GridOptions\n           * @description Disables client side pagination. When true, handle the paginationChanged event and set data\n           *              and totalItems.  Defaults to `false`\n           */\n          gridOptions.useExternalPagination = gridOptions.useExternalPagination === true;\n\n          /**\n           * @ngdoc property\n           * @name useCustomPagination\n           * @propertyOf ui.grid.pagination.api:GridOptions\n           * @description Disables client-side pagination. When true, handle the `paginationChanged` event and set `data`,\n           *              `firstRowIndex`, `lastRowIndex`, and `totalItems`.  Defaults to `false`.\n           */\n          gridOptions.useCustomPagination = gridOptions.useCustomPagination === true;\n\n          /**\n           * @ngdoc property\n           * @name totalItems\n           * @propertyOf ui.grid.pagination.api:GridOptions\n           * @description Total number of items, set automatically when using client side pagination, but needs set by user\n           *              for server side pagination\n           */\n          if (gridUtil.isNullOrUndefined(gridOptions.totalItems)) {\n            gridOptions.totalItems = 0;\n          }\n          /**\n           * @ngdoc property\n           * @name paginationPageSizes\n           * @propertyOf ui.grid.pagination.api:GridOptions\n           * @description Array of page sizes, defaults to `[250, 500, 1000]`\n           */\n          if (gridUtil.isNullOrUndefined(gridOptions.paginationPageSizes)) {\n            gridOptions.paginationPageSizes = [250, 500, 1000];\n          }\n          /**\n           * @ngdoc property\n           * @name paginationPageSize\n           * @propertyOf ui.grid.pagination.api:GridOptions\n           * @description Page size, defaults to the first item in paginationPageSizes, or 0 if paginationPageSizes is empty\n           */\n          if (gridUtil.isNullOrUndefined(gridOptions.paginationPageSize)) {\n            if (gridOptions.paginationPageSizes.length > 0) {\n              gridOptions.paginationPageSize = gridOptions.paginationPageSizes[0];\n            } else {\n              gridOptions.paginationPageSize = 0;\n            }\n          }\n          /**\n           * @ngdoc property\n           * @name paginationCurrentPage\n           * @propertyOf ui.grid.pagination.api:GridOptions\n           * @description Current page number, defaults to 1\n           */\n          if (gridUtil.isNullOrUndefined(gridOptions.paginationCurrentPage)) {\n            gridOptions.paginationCurrentPage = 1;\n          }\n\n          /**\n           * @ngdoc property\n           * @name paginationTemplate\n           * @propertyOf ui.grid.pagination.api:GridOptions\n           * @description A custom template for the pager, defaults to `ui-grid/pagination`\n           */\n          if (gridUtil.isNullOrUndefined(gridOptions.paginationTemplate)) {\n            gridOptions.paginationTemplate = 'ui-grid/pagination';\n          }\n        },\n        /**\n         * @ngdoc method\n         * @methodOf ui.grid.pagination.service:uiGridPaginationService\n         * @name uiGridPaginationService\n         * @description  Raises paginationChanged and calls refresh for client side pagination\n         * @param {Grid} grid the grid for which the pagination changed\n         * @param {int} currentPage requested page number\n         * @param {int} pageSize requested page size\n         */\n        onPaginationChanged: function (grid, currentPage, pageSize) {\n            grid.api.pagination.raise.paginationChanged(currentPage, pageSize);\n            if (!grid.options.useExternalPagination) {\n              grid.queueGridRefresh(); //client side pagination\n            }\n        }\n      };\n\n      return service;\n    }\n  ]);\n  /**\n   *  @ngdoc directive\n   *  @name ui.grid.pagination.directive:uiGridPagination\n   *  @element div\n   *  @restrict A\n   *\n   *  @description Adds pagination features to grid\n   *  @example\n   <example module=\"app\">\n   <file name=\"app.js\">\n   var app = angular.module('app', ['ui.grid', 'ui.grid.pagination']);\n\n   app.controller('MainCtrl', ['$scope', function ($scope) {\n      $scope.data = [\n        { name: 'Alex', car: 'Toyota' },\n        { name: 'Sam', car: 'Lexus' },\n        { name: 'Joe', car: 'Dodge' },\n        { name: 'Bob', car: 'Buick' },\n        { name: 'Cindy', car: 'Ford' },\n        { name: 'Brian', car: 'Audi' },\n        { name: 'Malcom', car: 'Mercedes Benz' },\n        { name: 'Dave', car: 'Ford' },\n        { name: 'Stacey', car: 'Audi' },\n        { name: 'Amy', car: 'Acura' },\n        { name: 'Scott', car: 'Toyota' },\n        { name: 'Ryan', car: 'BMW' },\n      ];\n\n      $scope.gridOptions = {\n        data: 'data',\n        paginationPageSizes: [5, 10, 25],\n        paginationPageSize: 5,\n        columnDefs: [\n          {name: 'name'},\n          {name: 'car'}\n        ]\n       }\n    }]);\n   </file>\n   <file name=\"index.html\">\n   <div ng-controller=\"MainCtrl\">\n   <div ui-grid=\"gridOptions\" ui-grid-pagination></div>\n   </div>\n   </file>\n   </example>\n   */\n  module.directive('uiGridPagination', ['gridUtil', 'uiGridPaginationService',\n    function (gridUtil, uiGridPaginationService) {\n      return {\n        priority: -200,\n        scope: false,\n        require: 'uiGrid',\n        link: {\n          pre: function ($scope, $elm, $attr, uiGridCtrl) {\n            uiGridPaginationService.initializeGrid(uiGridCtrl.grid);\n\n            gridUtil.getTemplate(uiGridCtrl.grid.options.paginationTemplate)\n              .then(function (contents) {\n                var template = angular.element(contents);\n                $elm.append(template);\n                uiGridCtrl.innerCompile(template);\n              });\n          }\n        }\n      };\n    }\n  ]);\n\n  /**\n   *  @ngdoc directive\n   *  @name ui.grid.pagination.directive:uiGridPager\n   *  @element div\n   *\n   *  @description Panel for handling pagination\n   */\n  module.directive('uiGridPager', ['uiGridPaginationService', 'uiGridConstants', 'gridUtil', 'i18nService', 'i18nConstants',\n    function (uiGridPaginationService, uiGridConstants, gridUtil, i18nService, i18nConstants) {\n      return {\n        priority: -200,\n        scope: true,\n        require: '^uiGrid',\n        link: function ($scope, $elm, $attr, uiGridCtrl) {\n          var defaultFocusElementSelector = '.ui-grid-pager-control-input';\n          $scope.aria = i18nService.getSafeText('pagination.aria'); //Returns an object with all of the aria labels\n\n          var updateLabels = function(){\n            $scope.paginationApi = uiGridCtrl.grid.api.pagination;\n            $scope.sizesLabel = i18nService.getSafeText('pagination.sizes');\n            $scope.totalItemsLabel = i18nService.getSafeText('pagination.totalItems');\n            $scope.paginationOf = i18nService.getSafeText('pagination.of');\n            $scope.paginationThrough = i18nService.getSafeText('pagination.through');\n          };\n\n\n          updateLabels();\n\n          $scope.$on(i18nConstants.UPDATE_EVENT, updateLabels);\n\n          var options = uiGridCtrl.grid.options;\n\n          \n          uiGridCtrl.grid.renderContainers.body.registerViewportAdjuster(function (adjustment) {\n            if (options.enablePaginationControls) {\n              adjustment.height = adjustment.height - gridUtil.elementHeight($elm, \"padding\");\n            }\n            return adjustment;\n          });\n\n          var dataChangeDereg = uiGridCtrl.grid.registerDataChangeCallback(function (grid) {\n            if (!grid.options.useExternalPagination) {\n              grid.options.totalItems = grid.rows.length;\n            }\n          }, [uiGridConstants.dataChange.ROW]);\n\n          $scope.$on('$destroy', dataChangeDereg);\n\n          var deregP = $scope.$watch('grid.options.paginationCurrentPage + grid.options.paginationPageSize', function (newValues, oldValues) {\n              if (newValues === oldValues || oldValues === undefined) {\n                return;\n              }\n\n              if (!angular.isNumber(options.paginationCurrentPage) || options.paginationCurrentPage < 1) {\n                options.paginationCurrentPage = 1;\n                return;\n              }\n\n              if (options.totalItems > 0 && options.paginationCurrentPage > $scope.paginationApi.getTotalPages()) {\n                options.paginationCurrentPage = $scope.paginationApi.getTotalPages();\n                return;\n              }\n\n              uiGridPaginationService.onPaginationChanged($scope.grid, options.paginationCurrentPage, options.paginationPageSize);\n            }\n          );\n\n          $scope.$on('$destroy', function() {\n            deregP();\n          });\n\n          $scope.cantPageForward = function () {\n            if ($scope.paginationApi.getTotalPages()) {\n              return $scope.cantPageToLast();\n            } else {\n              return options.data.length < 1;\n            }\n          };\n\n          $scope.cantPageToLast = function () {\n            var totalPages = $scope.paginationApi.getTotalPages();\n            return !totalPages || options.paginationCurrentPage >= totalPages;\n          };\n\n          $scope.cantPageBackward = function () {\n            return options.paginationCurrentPage <= 1;\n          };\n\n          var focusToInputIf = function(condition){\n            if (condition){\n              gridUtil.focus.bySelector($elm, defaultFocusElementSelector);\n            }\n          };\n\n          //Takes care of setting focus to the middle element when focus is lost\n          $scope.pageFirstPageClick = function () {\n            $scope.paginationApi.seek(1);\n            focusToInputIf($scope.cantPageBackward());\n          };\n\n          $scope.pagePreviousPageClick = function () {\n            $scope.paginationApi.previousPage();\n            focusToInputIf($scope.cantPageBackward());\n          };\n\n          $scope.pageNextPageClick = function () {\n            $scope.paginationApi.nextPage();\n            focusToInputIf($scope.cantPageForward());\n          };\n\n          $scope.pageLastPageClick = function () {\n            $scope.paginationApi.seek($scope.paginationApi.getTotalPages());\n            focusToInputIf($scope.cantPageToLast());\n          };\n\n        }\n      };\n    }\n  ]);\n})();\n\n(function () {\n  'use strict';\n\n  /**\n   * @ngdoc overview\n   * @name ui.grid.pinning\n   * @description\n   *\n   * # ui.grid.pinning\n   *\n   * <div class=\"alert alert-success\" role=\"alert\"><strong>Stable</strong> This feature is stable. There should no longer be breaking api changes without a deprecation warning.</div>\n   *\n   * This module provides column pinning to the end user via menu options in the column header\n   *\n   * <div doc-module-components=\"ui.grid.pinning\"></div>\n   */\n\n  var module = angular.module('ui.grid.pinning', ['ui.grid']);\n\n  module.constant('uiGridPinningConstants', {\n    container: {\n      LEFT: 'left',\n      RIGHT: 'right',\n      NONE: ''\n    }\n  });\n\n  module.service('uiGridPinningService', ['gridUtil', 'GridRenderContainer', 'i18nService', 'uiGridPinningConstants', function (gridUtil, GridRenderContainer, i18nService, uiGridPinningConstants) {\n    var service = {\n\n      initializeGrid: function (grid) {\n        service.defaultGridOptions(grid.options);\n\n        // Register a column builder to add new menu items for pinning left and right\n        grid.registerColumnBuilder(service.pinningColumnBuilder);\n\n        /**\n         *  @ngdoc object\n         *  @name ui.grid.pinning.api:PublicApi\n         *\n         *  @description Public Api for pinning feature\n         */\n        var publicApi = {\n          events: {\n            pinning: {\n              /**\n               * @ngdoc event\n               * @name columnPin\n               * @eventOf ui.grid.pinning.api:PublicApi\n               * @description raised when column pin state has changed\n               * <pre>\n               *   gridApi.pinning.on.columnPinned(scope, function(colDef){})\n               * </pre>\n               * @param {object} colDef the column that was changed\n               * @param {string} container the render container the column is in ('left', 'right', '')\n               */\n              columnPinned: function(colDef, container) {\n              }\n            }\n          },\n          methods: {\n            pinning: {\n              /**\n               * @ngdoc function\n               * @name pinColumn\n               * @methodOf ui.grid.pinning.api:PublicApi\n               * @description pin column left, right, or none\n               * <pre>\n               *   gridApi.pinning.pinColumn(col, uiGridPinningConstants.container.LEFT)\n               * </pre>\n               * @param {gridColumn} col the column being pinned\n               * @param {string} container one of the recognised types\n               * from uiGridPinningConstants\n               */\n              pinColumn: function(col, container) {\n                service.pinColumn(grid, col, container);\n              }\n            }\n          }\n        };\n\n        grid.api.registerEventsFromObject(publicApi.events);\n        grid.api.registerMethodsFromObject(publicApi.methods);\n      },\n\n      defaultGridOptions: function (gridOptions) {\n        //default option to true unless it was explicitly set to false\n        /**\n         *  @ngdoc object\n         *  @name ui.grid.pinning.api:GridOptions\n         *\n         *  @description GridOptions for pinning feature, these are available to be\n           *  set using the ui-grid {@link ui.grid.class:GridOptions gridOptions}\n         */\n\n        /**\n         *  @ngdoc object\n         *  @name enablePinning\n         *  @propertyOf  ui.grid.pinning.api:GridOptions\n         *  @description Enable pinning for the entire grid.\n         *  <br/>Defaults to true\n         */\n        gridOptions.enablePinning = gridOptions.enablePinning !== false;\n        /**\n         *  @ngdoc object\n         *  @name hidePinLeft\n         *  @propertyOf  ui.grid.pinning.api:GridOptions\n         *  @description Hide Pin Left for the entire grid.\n         *  <br/>Defaults to false\n         */\n        gridOptions.hidePinLeft = gridOptions.enablePinning && gridOptions.hidePinLeft;\n        /**\n         *  @ngdoc object\n         *  @name hidePinRight\n         *  @propertyOf  ui.grid.pinning.api:GridOptions\n         *  @description Hide Pin Right pinning for the entire grid.\n         *  <br/>Defaults to false\n         */\n        gridOptions.hidePinRight = gridOptions.enablePinning && gridOptions.hidePinRight;\n      },\n\n      pinningColumnBuilder: function (colDef, col, gridOptions) {\n        //default to true unless gridOptions or colDef is explicitly false\n\n        /**\n         *  @ngdoc object\n         *  @name ui.grid.pinning.api:ColumnDef\n         *\n         *  @description ColumnDef for pinning feature, these are available to be\n         *  set using the ui-grid {@link ui.grid.class:GridOptions.columnDef gridOptions.columnDefs}\n         */\n\n        /**\n         *  @ngdoc object\n         *  @name enablePinning\n         *  @propertyOf  ui.grid.pinning.api:ColumnDef\n         *  @description Enable pinning for the individual column.\n         *  <br/>Defaults to true\n         */\n        colDef.enablePinning = colDef.enablePinning === undefined ? gridOptions.enablePinning : colDef.enablePinning;\n        /**\n         *  @ngdoc object\n         *  @name hidePinLeft\n         *  @propertyOf  ui.grid.pinning.api:ColumnDef\n         *  @description Hide Pin Left for the individual column.\n         *  <br/>Defaults to false\n         */\n        colDef.hidePinLeft = colDef.hidePinLeft === undefined ? gridOptions.hidePinLeft : colDef.hidePinLeft;\n        /**\n         *  @ngdoc object\n         *  @name hidePinRight\n         *  @propertyOf  ui.grid.pinning.api:ColumnDef\n         *  @description Hide Pin Right for the individual column.\n         *  <br/>Defaults to false\n         */\n        colDef.hidePinRight = colDef.hidePinRight === undefined ? gridOptions.hidePinRight : colDef.hidePinRight;\n\n        /**\n         *  @ngdoc object\n         *  @name pinnedLeft\n         *  @propertyOf  ui.grid.pinning.api:ColumnDef\n         *  @description Column is pinned left when grid is rendered\n         *  <br/>Defaults to false\n         */\n\n        /**\n         *  @ngdoc object\n         *  @name pinnedRight\n         *  @propertyOf  ui.grid.pinning.api:ColumnDef\n         *  @description Column is pinned right when grid is rendered\n         *  <br/>Defaults to false\n         */\n        if (colDef.pinnedLeft) {\n          col.renderContainer = 'left';\n          col.grid.createLeftContainer();\n        }\n        else if (colDef.pinnedRight) {\n          col.renderContainer = 'right';\n          col.grid.createRightContainer();\n        }\n\n        if (!colDef.enablePinning) {\n          return;\n        }\n\n        var pinColumnLeftAction = {\n          name: 'ui.grid.pinning.pinLeft',\n          title: i18nService.get().pinning.pinLeft,\n          icon: 'ui-grid-icon-left-open',\n          shown: function () {\n            return typeof(this.context.col.renderContainer) === 'undefined' || !this.context.col.renderContainer || this.context.col.renderContainer !== 'left';\n          },\n          action: function () {\n            service.pinColumn(this.context.col.grid, this.context.col, uiGridPinningConstants.container.LEFT);\n          }\n        };\n\n        var pinColumnRightAction = {\n          name: 'ui.grid.pinning.pinRight',\n          title: i18nService.get().pinning.pinRight,\n          icon: 'ui-grid-icon-right-open',\n          shown: function () {\n            return typeof(this.context.col.renderContainer) === 'undefined' || !this.context.col.renderContainer || this.context.col.renderContainer !== 'right';\n          },\n          action: function () {\n            service.pinColumn(this.context.col.grid, this.context.col, uiGridPinningConstants.container.RIGHT);\n          }\n        };\n\n        var removePinAction = {\n          name: 'ui.grid.pinning.unpin',\n          title: i18nService.get().pinning.unpin,\n          icon: 'ui-grid-icon-cancel',\n          shown: function () {\n            return typeof(this.context.col.renderContainer) !== 'undefined' && this.context.col.renderContainer !== null && this.context.col.renderContainer !== 'body';\n          },\n          action: function () {\n            service.pinColumn(this.context.col.grid, this.context.col, uiGridPinningConstants.container.NONE);\n          }\n        };\n\n        //// Skip from menu if hidePinLeft or hidePinRight is true\n        if (!colDef.hidePinLeft && !gridUtil.arrayContainsObjectWithProperty(col.menuItems, 'name', 'ui.grid.pinning.pinLeft')) {\n          col.menuItems.push(pinColumnLeftAction);\n        }\n        if (!colDef.hidePinRight && !gridUtil.arrayContainsObjectWithProperty(col.menuItems, 'name', 'ui.grid.pinning.pinRight')) {\n          col.menuItems.push(pinColumnRightAction);\n        }\n        if (!gridUtil.arrayContainsObjectWithProperty(col.menuItems, 'name', 'ui.grid.pinning.unpin')) {\n          col.menuItems.push(removePinAction);\n        }\n      },\n\n      pinColumn: function(grid, col, container) {\n        if (container === uiGridPinningConstants.container.NONE) {\n          col.renderContainer = null;\n          col.colDef.pinnedLeft = col.colDef.pinnedRight = false;\n        }\n        else {\n          col.renderContainer = container;\n          if (container === uiGridPinningConstants.container.LEFT) {\n            grid.createLeftContainer();\n          }\n          else if (container === uiGridPinningConstants.container.RIGHT) {\n            grid.createRightContainer();\n          }\n        }\n\n        grid.refresh()\n        .then(function() {\n          grid.api.pinning.raise.columnPinned( col.colDef, container );\n        });\n      }\n    };\n\n    return service;\n  }]);\n\n  module.directive('uiGridPinning', ['gridUtil', 'uiGridPinningService',\n    function (gridUtil, uiGridPinningService) {\n      return {\n        require: 'uiGrid',\n        scope: false,\n        compile: function () {\n          return {\n            pre: function ($scope, $elm, $attrs, uiGridCtrl) {\n              uiGridPinningService.initializeGrid(uiGridCtrl.grid);\n            },\n            post: function ($scope, $elm, $attrs, uiGridCtrl) {\n            }\n          };\n        }\n      };\n    }]);\n\n\n})();\n\n(function(){\n  'use strict';\n\n  /**\n   * @ngdoc overview\n   * @name ui.grid.resizeColumns\n   * @description\n   *\n   * # ui.grid.resizeColumns\n   *\n   * <div class=\"alert alert-success\" role=\"alert\"><strong>Stable</strong> This feature is stable. There should no longer be breaking api changes without a deprecation warning.</div>\n   *\n   * This module allows columns to be resized.\n   */\n  var module = angular.module('ui.grid.resizeColumns', ['ui.grid']);\n\n  module.service('uiGridResizeColumnsService', ['gridUtil', '$q', '$rootScope',\n    function (gridUtil, $q, $rootScope) {\n\n      var service = {\n        defaultGridOptions: function(gridOptions){\n          //default option to true unless it was explicitly set to false\n          /**\n           *  @ngdoc object\n           *  @name ui.grid.resizeColumns.api:GridOptions\n           *\n           *  @description GridOptions for resizeColumns feature, these are available to be\n           *  set using the ui-grid {@link ui.grid.class:GridOptions gridOptions}\n           */\n\n          /**\n           *  @ngdoc object\n           *  @name enableColumnResizing\n           *  @propertyOf  ui.grid.resizeColumns.api:GridOptions\n           *  @description Enable column resizing on the entire grid\n           *  <br/>Defaults to true\n           */\n          gridOptions.enableColumnResizing = gridOptions.enableColumnResizing !== false;\n\n          //legacy support\n          //use old name if it is explicitly false\n          if (gridOptions.enableColumnResize === false){\n            gridOptions.enableColumnResizing = false;\n          }\n        },\n\n        colResizerColumnBuilder: function (colDef, col, gridOptions) {\n\n          var promises = [];\n          /**\n           *  @ngdoc object\n           *  @name ui.grid.resizeColumns.api:ColumnDef\n           *\n           *  @description ColumnDef for resizeColumns feature, these are available to be\n           *  set using the ui-grid {@link ui.grid.class:GridOptions.columnDef gridOptions.columnDefs}\n           */\n\n          /**\n           *  @ngdoc object\n           *  @name enableColumnResizing\n           *  @propertyOf  ui.grid.resizeColumns.api:ColumnDef\n           *  @description Enable column resizing on an individual column\n           *  <br/>Defaults to GridOptions.enableColumnResizing\n           */\n          //default to true unless gridOptions or colDef is explicitly false\n          colDef.enableColumnResizing = colDef.enableColumnResizing === undefined ? gridOptions.enableColumnResizing : colDef.enableColumnResizing;\n\n\n          //legacy support of old option name\n          if (colDef.enableColumnResize === false){\n            colDef.enableColumnResizing = false;\n          }\n\n          return $q.all(promises);\n        },\n\n        registerPublicApi: function (grid) {\n            /**\n             *  @ngdoc object\n             *  @name ui.grid.resizeColumns.api:PublicApi\n             *  @description Public Api for column resize feature.\n             */\n            var publicApi = {\n              events: {\n                /**\n                 * @ngdoc event\n                 * @name columnSizeChanged\n                 * @eventOf  ui.grid.resizeColumns.api:PublicApi\n                 * @description raised when column is resized\n                 * <pre>\n                 *      gridApi.colResizable.on.columnSizeChanged(scope,function(colDef, deltaChange){})\n                 * </pre>\n                 * @param {object} colDef the column that was resized\n                 * @param {integer} delta of the column size change\n                 */\n                colResizable: {\n                  columnSizeChanged: function (colDef, deltaChange) {\n                  }\n                }\n              }\n            };\n            grid.api.registerEventsFromObject(publicApi.events);\n        },\n\n        fireColumnSizeChanged: function (grid, colDef, deltaChange) {\n          $rootScope.$applyAsync(function () {\n            if ( grid.api.colResizable ){\n              grid.api.colResizable.raise.columnSizeChanged(colDef, deltaChange);\n            } else {\n              gridUtil.logError(\"The resizeable api is not registered, this may indicate that you've included the module but not added the 'ui-grid-resize-columns' directive to your grid definition.  Cannot raise any events.\");\n            }\n          });\n        },\n\n        // get either this column, or the column next to this column, to resize,\n        // returns the column we're going to resize\n        findTargetCol: function(col, position, rtlMultiplier){\n          var renderContainer = col.getRenderContainer();\n\n          if (position === 'left') {\n            // Get the column to the left of this one\n            var colIndex = renderContainer.visibleColumnCache.indexOf(col);\n            return renderContainer.visibleColumnCache[colIndex - 1 * rtlMultiplier];\n          } else {\n            return col;\n          }\n        }\n\n      };\n\n      return service;\n\n    }]);\n\n\n  /**\n   * @ngdoc directive\n   * @name ui.grid.resizeColumns.directive:uiGridResizeColumns\n   * @element div\n   * @restrict A\n   * @description\n   * Enables resizing for all columns on the grid. If, for some reason, you want to use the ui-grid-resize-columns directive, but not allow column resizing, you can explicitly set the\n   * option to false. This prevents resizing for the entire grid, regardless of individual columnDef options.\n   *\n   * @example\n   <doc:example module=\"app\">\n   <doc:source>\n   <script>\n   var app = angular.module('app', ['ui.grid', 'ui.grid.resizeColumns']);\n\n   app.controller('MainCtrl', ['$scope', function ($scope) {\n          $scope.gridOpts = {\n            data: [\n              { \"name\": \"Ethel Price\", \"gender\": \"female\", \"company\": \"Enersol\" },\n              { \"name\": \"Claudine Neal\", \"gender\": \"female\", \"company\": \"Sealoud\" },\n              { \"name\": \"Beryl Rice\", \"gender\": \"female\", \"company\": \"Velity\" },\n              { \"name\": \"Wilder Gonzales\", \"gender\": \"male\", \"company\": \"Geekko\" }\n            ]\n          };\n        }]);\n   </script>\n\n   <div ng-controller=\"MainCtrl\">\n   <div class=\"testGrid\" ui-grid=\"gridOpts\" ui-grid-resize-columns ></div>\n   </div>\n   </doc:source>\n   <doc:scenario>\n\n   </doc:scenario>\n   </doc:example>\n   */\n  module.directive('uiGridResizeColumns', ['gridUtil', 'uiGridResizeColumnsService', function (gridUtil, uiGridResizeColumnsService) {\n    return {\n      replace: true,\n      priority: 0,\n      require: '^uiGrid',\n      scope: false,\n      compile: function () {\n        return {\n          pre: function ($scope, $elm, $attrs, uiGridCtrl) {\n            uiGridResizeColumnsService.defaultGridOptions(uiGridCtrl.grid.options);\n            uiGridCtrl.grid.registerColumnBuilder( uiGridResizeColumnsService.colResizerColumnBuilder);\n            uiGridResizeColumnsService.registerPublicApi(uiGridCtrl.grid);\n          },\n          post: function ($scope, $elm, $attrs, uiGridCtrl) {\n          }\n        };\n      }\n    };\n  }]);\n\n  // Extend the uiGridHeaderCell directive\n  module.directive('uiGridHeaderCell', ['gridUtil', '$templateCache', '$compile', '$q', 'uiGridResizeColumnsService', 'uiGridConstants', function (gridUtil, $templateCache, $compile, $q, uiGridResizeColumnsService, uiGridConstants) {\n    return {\n      // Run after the original uiGridHeaderCell\n      priority: -10,\n      require: '^uiGrid',\n      // scope: false,\n      compile: function() {\n        return {\n          post: function ($scope, $elm, $attrs, uiGridCtrl) {\n            var grid = uiGridCtrl.grid;\n\n            if (grid.options.enableColumnResizing) {\n              var columnResizerElm = $templateCache.get('ui-grid/columnResizer');\n\n              var rtlMultiplier = 1;\n              //when in RTL mode reverse the direction using the rtlMultiplier and change the position to left\n              if (grid.isRTL()) {\n                $scope.position = 'left';\n                rtlMultiplier = -1;\n              }\n\n              var displayResizers = function(){\n\n                // remove any existing resizers.\n                var resizers = $elm[0].getElementsByClassName('ui-grid-column-resizer');\n                for ( var i = 0; i < resizers.length; i++ ){\n                  angular.element(resizers[i]).remove();\n                }\n\n                // get the target column for the left resizer\n                var otherCol = uiGridResizeColumnsService.findTargetCol($scope.col, 'left', rtlMultiplier);\n                var renderContainer = $scope.col.getRenderContainer();\n\n                // Don't append the left resizer if this is the first column or the column to the left of this one has resizing disabled\n                if (otherCol && renderContainer.visibleColumnCache.indexOf($scope.col) !== 0 && otherCol.colDef.enableColumnResizing !== false) {\n                  var resizerLeft = angular.element(columnResizerElm).clone();\n                  resizerLeft.attr('position', 'left');\n\n                  $elm.prepend(resizerLeft);\n                  $compile(resizerLeft)($scope);\n                }\n\n                // Don't append the right resizer if this column has resizing disabled\n                if ($scope.col.colDef.enableColumnResizing !== false) {\n                  var resizerRight = angular.element(columnResizerElm).clone();\n                  resizerRight.attr('position', 'right');\n\n                  $elm.append(resizerRight);\n                  $compile(resizerRight)($scope);\n                }\n              };\n\n              displayResizers();\n\n              var waitDisplay = function() {\n                $scope.$applyAsync(displayResizers);\n              };\n\n              var dataChangeDereg = grid.registerDataChangeCallback( waitDisplay, [uiGridConstants.dataChange.COLUMN] );\n\n              $scope.$on( '$destroy', dataChangeDereg );\n            }\n          }\n        };\n      }\n    };\n  }]);\n\n\n\n  /**\n   * @ngdoc directive\n   * @name ui.grid.resizeColumns.directive:uiGridColumnResizer\n   * @element div\n   * @restrict A\n   *\n   * @description\n   * Draggable handle that controls column resizing.\n   *\n   * @example\n   <doc:example module=\"app\">\n     <doc:source>\n       <script>\n        var app = angular.module('app', ['ui.grid', 'ui.grid.resizeColumns']);\n\n        app.controller('MainCtrl', ['$scope', function ($scope) {\n          $scope.gridOpts = {\n            enableColumnResizing: true,\n            data: [\n              { \"name\": \"Ethel Price\", \"gender\": \"female\", \"company\": \"Enersol\" },\n              { \"name\": \"Claudine Neal\", \"gender\": \"female\", \"company\": \"Sealoud\" },\n              { \"name\": \"Beryl Rice\", \"gender\": \"female\", \"company\": \"Velity\" },\n              { \"name\": \"Wilder Gonzales\", \"gender\": \"male\", \"company\": \"Geekko\" }\n            ]\n          };\n        }]);\n       </script>\n\n       <div ng-controller=\"MainCtrl\">\n        <div class=\"testGrid\" ui-grid=\"gridOpts\"></div>\n       </div>\n     </doc:source>\n     <doc:scenario>\n      // TODO: e2e specs?\n\n      // TODO: post-resize a horizontal scroll event should be fired\n     </doc:scenario>\n   </doc:example>\n   */\n  module.directive('uiGridColumnResizer', ['$document', 'gridUtil', 'uiGridConstants', 'uiGridResizeColumnsService', function ($document, gridUtil, uiGridConstants, uiGridResizeColumnsService) {\n    var resizeOverlay = angular.element('<div class=\"ui-grid-resize-overlay\"></div>');\n\n    var resizer = {\n      priority: 0,\n      scope: {\n        col: '=',\n        position: '@',\n        renderIndex: '='\n      },\n      require: '?^uiGrid',\n      link: function ($scope, $elm, $attrs, uiGridCtrl) {\n        var startX = 0,\n            x = 0,\n            gridLeft = 0,\n            rtlMultiplier = 1;\n\n        //when in RTL mode reverse the direction using the rtlMultiplier and change the position to left\n        if (uiGridCtrl.grid.isRTL()) {\n          $scope.position = 'left';\n          rtlMultiplier = -1;\n        }\n\n        if ($scope.position === 'left') {\n          $elm.addClass('left');\n        }\n        else if ($scope.position === 'right') {\n          $elm.addClass('right');\n        }\n\n        // Refresh the grid canvas\n        //   takes an argument representing the diff along the X-axis that the resize had\n        function refreshCanvas(xDiff) {\n          // Then refresh the grid canvas, rebuilding the styles so that the scrollbar updates its size\n          uiGridCtrl.grid.refreshCanvas(true).then( function() {\n            uiGridCtrl.grid.queueGridRefresh();\n          });\n        }\n\n        // Check that the requested width isn't wider than the maxWidth, or narrower than the minWidth\n        // Returns the new recommended with, after constraints applied\n        function constrainWidth(col, width){\n          var newWidth = width;\n\n          // If the new width would be less than the column's allowably minimum width, don't allow it\n          if (col.minWidth && newWidth < col.minWidth) {\n            newWidth = col.minWidth;\n          }\n          else if (col.maxWidth && newWidth > col.maxWidth) {\n            newWidth = col.maxWidth;\n          }\n\n          return newWidth;\n        }\n\n\n        /*\n         * Our approach to event handling aims to deal with both touch devices and mouse devices\n         * We register down handlers on both touch and mouse.  When a touchstart or mousedown event\n         * occurs, we register the corresponding touchmove/touchend, or mousemove/mouseend events.\n         *\n         * This way we can listen for both without worrying about the fact many touch devices also emulate\n         * mouse events - basically whichever one we hear first is what we'll go with.\n         */\n        function moveFunction(event, args) {\n          if (event.originalEvent) { event = event.originalEvent; }\n          event.preventDefault();\n\n          x = (event.targetTouches ? event.targetTouches[0] : event).clientX - gridLeft;\n\n          if (x < 0) { x = 0; }\n          else if (x > uiGridCtrl.grid.gridWidth) { x = uiGridCtrl.grid.gridWidth; }\n\n          var col = uiGridResizeColumnsService.findTargetCol($scope.col, $scope.position, rtlMultiplier);\n\n          // Don't resize if it's disabled on this column\n          if (col.colDef.enableColumnResizing === false) {\n            return;\n          }\n\n          if (!uiGridCtrl.grid.element.hasClass('column-resizing')) {\n            uiGridCtrl.grid.element.addClass('column-resizing');\n          }\n\n          // Get the diff along the X axis\n          var xDiff = x - startX;\n\n          // Get the width that this mouse would give the column\n          var newWidth = parseInt(col.drawnWidth + xDiff * rtlMultiplier, 10);\n\n          // check we're not outside the allowable bounds for this column\n          x = x + ( constrainWidth(col, newWidth) - newWidth ) * rtlMultiplier;\n\n          resizeOverlay.css({ left: x + 'px' });\n\n          uiGridCtrl.fireEvent(uiGridConstants.events.ITEM_DRAGGING);\n        }\n\n\n        function upFunction(event, args) {\n          if (event.originalEvent) { event = event.originalEvent; }\n          event.preventDefault();\n\n          uiGridCtrl.grid.element.removeClass('column-resizing');\n\n          resizeOverlay.remove();\n\n          // Resize the column\n          x = (event.changedTouches ? event.changedTouches[0] : event).clientX - gridLeft;\n          var xDiff = x - startX;\n\n          if (xDiff === 0) {\n            // no movement, so just reset event handlers, including turning back on both\n            // down events - we turned one off when this event started\n            offAllEvents();\n            onDownEvents();\n            return;\n          }\n\n          var col = uiGridResizeColumnsService.findTargetCol($scope.col, $scope.position, rtlMultiplier);\n\n          // Don't resize if it's disabled on this column\n          if (col.colDef.enableColumnResizing === false) {\n            return;\n          }\n\n          // Get the new width\n          var newWidth = parseInt(col.drawnWidth + xDiff * rtlMultiplier, 10);\n\n          // check we're not outside the allowable bounds for this column\n          col.width = constrainWidth(col, newWidth);\n          col.hasCustomWidth = true;\n\n          refreshCanvas(xDiff);\n\n          uiGridResizeColumnsService.fireColumnSizeChanged(uiGridCtrl.grid, col.colDef, xDiff);\n\n          // stop listening of up and move events - wait for next down\n          // reset the down events - we will have turned one off when this event started\n          offAllEvents();\n          onDownEvents();\n        }\n\n\n        var downFunction = function(event, args) {\n          if (event.originalEvent) { event = event.originalEvent; }\n          event.stopPropagation();\n\n          // Get the left offset of the grid\n          // gridLeft = uiGridCtrl.grid.element[0].offsetLeft;\n          gridLeft = uiGridCtrl.grid.element[0].getBoundingClientRect().left;\n\n          // Get the starting X position, which is the X coordinate of the click minus the grid's offset\n          startX = (event.targetTouches ? event.targetTouches[0] : event).clientX - gridLeft;\n\n          // Append the resizer overlay\n          uiGridCtrl.grid.element.append(resizeOverlay);\n\n          // Place the resizer overlay at the start position\n          resizeOverlay.css({ left: startX });\n\n          // Add handlers for move and up events - if we were mousedown then we listen for mousemove and mouseup, if\n          // we were touchdown then we listen for touchmove and touchup.  Also remove the handler for the equivalent\n          // down event - so if we're touchdown, then remove the mousedown handler until this event is over, if we're\n          // mousedown then remove the touchdown handler until this event is over, this avoids processing duplicate events\n          if ( event.type === 'touchstart' ){\n            $document.on('touchend', upFunction);\n            $document.on('touchmove', moveFunction);\n            $elm.off('mousedown', downFunction);\n          } else {\n            $document.on('mouseup', upFunction);\n            $document.on('mousemove', moveFunction);\n            $elm.off('touchstart', downFunction);\n          }\n        };\n\n        var onDownEvents = function() {\n          $elm.on('mousedown', downFunction);\n          $elm.on('touchstart', downFunction);\n        };\n\n        var offAllEvents = function() {\n          $document.off('mouseup', upFunction);\n          $document.off('touchend', upFunction);\n          $document.off('mousemove', moveFunction);\n          $document.off('touchmove', moveFunction);\n          $elm.off('mousedown', downFunction);\n          $elm.off('touchstart', downFunction);\n        };\n\n        onDownEvents();\n\n\n        // On doubleclick, resize to fit all rendered cells\n        var dblClickFn = function(event, args){\n          event.stopPropagation();\n\n          var col = uiGridResizeColumnsService.findTargetCol($scope.col, $scope.position, rtlMultiplier);\n\n          // Don't resize if it's disabled on this column\n          if (col.colDef.enableColumnResizing === false) {\n            return;\n          }\n\n          // Go through the rendered rows and find out the max size for the data in this column\n          var maxWidth = 0;\n          var xDiff = 0;\n\n          // Get the parent render container element\n          var renderContainerElm = gridUtil.closestElm($elm, '.ui-grid-render-container');\n\n          // Get the cell contents so we measure correctly. For the header cell we have to account for the sort icon and the menu buttons, if present\n          var cells = renderContainerElm.querySelectorAll('.' + uiGridConstants.COL_CLASS_PREFIX + col.uid + ' .ui-grid-cell-contents');\n          Array.prototype.forEach.call(cells, function (cell) {\n              // Get the cell width\n              // gridUtil.logDebug('width', gridUtil.elementWidth(cell));\n\n              // Account for the menu button if it exists\n              var menuButton;\n              if (angular.element(cell).parent().hasClass('ui-grid-header-cell')) {\n                menuButton = angular.element(cell).parent()[0].querySelectorAll('.ui-grid-column-menu-button');\n              }\n\n              gridUtil.fakeElement(cell, {}, function(newElm) {\n                // Make the element float since it's a div and can expand to fill its container\n                var e = angular.element(newElm);\n                e.attr('style', 'float: left');\n\n                var width = gridUtil.elementWidth(e);\n\n                if (menuButton) {\n                  var menuButtonWidth = gridUtil.elementWidth(menuButton);\n                  width = width + menuButtonWidth;\n                }\n\n                if (width > maxWidth) {\n                  maxWidth = width;\n                }\n              });\n            });\n\n          // check we're not outside the allowable bounds for this column\n          var newWidth = constrainWidth(col, maxWidth);\n          xDiff = newWidth - col.drawnWidth;\n          col.width = newWidth;\n          col.hasCustomWidth = true;\n\n          refreshCanvas(xDiff);\n\n          uiGridResizeColumnsService.fireColumnSizeChanged(uiGridCtrl.grid, col.colDef, xDiff);        };\n        $elm.on('dblclick', dblClickFn);\n\n        $elm.on('$destroy', function() {\n          $elm.off('dblclick', dblClickFn);\n          offAllEvents();\n        });\n      }\n    };\n\n    return resizer;\n  }]);\n\n})();\n\n(function () {\n  'use strict';\n\n  /**\n   * @ngdoc overview\n   * @name ui.grid.rowEdit\n   * @description\n   *\n   * # ui.grid.rowEdit\n   *\n   * <div class=\"alert alert-success\" role=\"alert\"><strong>Stable</strong> This feature is stable. There should no longer be breaking api changes without a deprecation warning.</div>\n   *\n   * This module extends the edit feature to provide tracking and saving of rows\n   * of data.  The tutorial provides more information on how this feature is best\n   * used {@link tutorial/205_row_editable here}.\n   * <br/>\n   * This feature depends on usage of the ui-grid-edit feature, and also benefits\n   * from use of ui-grid-cellNav to provide the full spreadsheet-like editing\n   * experience\n   *\n   */\n\n  var module = angular.module('ui.grid.rowEdit', ['ui.grid', 'ui.grid.edit', 'ui.grid.cellNav']);\n\n  /**\n   *  @ngdoc object\n   *  @name ui.grid.rowEdit.constant:uiGridRowEditConstants\n   *\n   *  @description constants available in row edit module\n   */\n  module.constant('uiGridRowEditConstants', {\n  });\n\n  /**\n   *  @ngdoc service\n   *  @name ui.grid.rowEdit.service:uiGridRowEditService\n   *\n   *  @description Services for row editing features\n   */\n  module.service('uiGridRowEditService', ['$interval', '$q', 'uiGridConstants', 'uiGridRowEditConstants', 'gridUtil',\n    function ($interval, $q, uiGridConstants, uiGridRowEditConstants, gridUtil) {\n\n      var service = {\n\n        initializeGrid: function (scope, grid) {\n          /**\n           *  @ngdoc object\n           *  @name ui.grid.rowEdit.api:PublicApi\n           *\n           *  @description Public Api for rowEdit feature\n           */\n\n          grid.rowEdit = {};\n\n          var publicApi = {\n            events: {\n              rowEdit: {\n                /**\n                 * @ngdoc event\n                 * @eventOf ui.grid.rowEdit.api:PublicApi\n                 * @name saveRow\n                 * @description raised when a row is ready for saving.  Once your\n                 * row has saved you may need to use angular.extend to update the\n                 * data entity with any changed data from your save (for example,\n                 * lock version information if you're using optimistic locking,\n                 * or last update time/user information).\n                 *\n                 * Your method should call setSavePromise somewhere in the body before\n                 * returning control.  The feature will then wait, with the gridRow greyed out\n                 * whilst this promise is being resolved.\n                 *\n                 * <pre>\n                 *      gridApi.rowEdit.on.saveRow(scope,function(rowEntity){})\n                 * </pre>\n                 * and somewhere within the event handler:\n                 * <pre>\n                 *      gridApi.rowEdit.setSavePromise( rowEntity, savePromise)\n                 * </pre>\n                 * @param {object} rowEntity the options.data element that was edited\n                 * @returns {promise} Your saveRow method should return a promise, the\n                 * promise should either be resolved (implying successful save), or\n                 * rejected (implying an error).\n                 */\n                saveRow: function (rowEntity) {\n                }\n              }\n            },\n            methods: {\n              rowEdit: {\n                /**\n                 * @ngdoc method\n                 * @methodOf ui.grid.rowEdit.api:PublicApi\n                 * @name setSavePromise\n                 * @description Sets the promise associated with the row save, mandatory that\n                 * the saveRow event handler calls this method somewhere before returning.\n                 * <pre>\n                 *      gridApi.rowEdit.setSavePromise(rowEntity, savePromise)\n                 * </pre>\n                 * @param {object} rowEntity a data row from the grid for which a save has\n                 * been initiated\n                 * @param {promise} savePromise the promise that will be resolved when the\n                 * save is successful, or rejected if the save fails\n                 *\n                 */\n                setSavePromise: function ( rowEntity, savePromise) {\n                  service.setSavePromise(grid, rowEntity, savePromise);\n                },\n                /**\n                 * @ngdoc method\n                 * @methodOf ui.grid.rowEdit.api:PublicApi\n                 * @name getDirtyRows\n                 * @description Returns all currently dirty rows\n                 * <pre>\n                 *      gridApi.rowEdit.getDirtyRows(grid)\n                 * </pre>\n                 * @returns {array} An array of gridRows that are currently dirty\n                 *\n                 */\n                getDirtyRows: function () {\n                  return grid.rowEdit.dirtyRows ? grid.rowEdit.dirtyRows : [];\n                },\n                /**\n                 * @ngdoc method\n                 * @methodOf ui.grid.rowEdit.api:PublicApi\n                 * @name getErrorRows\n                 * @description Returns all currently errored rows\n                 * <pre>\n                 *      gridApi.rowEdit.getErrorRows(grid)\n                 * </pre>\n                 * @returns {array} An array of gridRows that are currently in error\n                 *\n                 */\n                getErrorRows: function () {\n                  return grid.rowEdit.errorRows ? grid.rowEdit.errorRows : [];\n                },\n                /**\n                 * @ngdoc method\n                 * @methodOf ui.grid.rowEdit.api:PublicApi\n                 * @name flushDirtyRows\n                 * @description Triggers a save event for all currently dirty rows, could\n                 * be used where user presses a save button or navigates away from the page\n                 * <pre>\n                 *      gridApi.rowEdit.flushDirtyRows(grid)\n                 * </pre>\n                 * @returns {promise} a promise that represents the aggregate of all\n                 * of the individual save promises - i.e. it will be resolved when all\n                 * the individual save promises have been resolved.\n                 *\n                 */\n                flushDirtyRows: function () {\n                  return service.flushDirtyRows(grid);\n                },\n\n                /**\n                 * @ngdoc method\n                 * @methodOf ui.grid.rowEdit.api:PublicApi\n                 * @name setRowsDirty\n                 * @description Sets each of the rows passed in dataRows\n                 * to be dirty.  note that if you have only just inserted the\n                 * rows into your data you will need to wait for a $digest cycle\n                 * before the gridRows are present - so often you would wrap this\n                 * call in a $interval or $timeout\n                 * <pre>\n                 *      $interval( function() {\n                 *        gridApi.rowEdit.setRowsDirty(myDataRows);\n                 *      }, 0, 1);\n                 * </pre>\n                 * @param {array} dataRows the data entities for which the gridRows\n                 * should be set dirty.\n                 *\n                 */\n                setRowsDirty: function ( dataRows) {\n                  service.setRowsDirty(grid, dataRows);\n                },\n\n                /**\n                 * @ngdoc method\n                 * @methodOf ui.grid.rowEdit.api:PublicApi\n                 * @name setRowsClean\n                 * @description Sets each of the rows passed in dataRows\n                 * to be clean, removing them from the dirty cache and the error cache,\n                 * and clearing the error flag and the dirty flag\n                 * <pre>\n                 *      var gridRows = $scope.gridApi.rowEdit.getDirtyRows();\n                 *      var dataRows = gridRows.map( function( gridRow ) { return gridRow.entity; });\n                 *      $scope.gridApi.rowEdit.setRowsClean( dataRows );\n                 * </pre>\n                 * @param {array} dataRows the data entities for which the gridRows\n                 * should be set clean.\n                 *\n                 */\n                setRowsClean: function ( dataRows) {\n                  service.setRowsClean(grid, dataRows);\n                }\n              }\n            }\n          };\n\n          grid.api.registerEventsFromObject(publicApi.events);\n          grid.api.registerMethodsFromObject(publicApi.methods);\n\n          grid.api.core.on.renderingComplete( scope, function ( gridApi ) {\n            grid.api.edit.on.afterCellEdit( scope, service.endEditCell );\n            grid.api.edit.on.beginCellEdit( scope, service.beginEditCell );\n            grid.api.edit.on.cancelCellEdit( scope, service.cancelEditCell );\n\n            if ( grid.api.cellNav ) {\n              grid.api.cellNav.on.navigate( scope, service.navigate );\n            }\n          });\n\n        },\n\n        defaultGridOptions: function (gridOptions) {\n\n          /**\n           *  @ngdoc object\n           *  @name ui.grid.rowEdit.api:GridOptions\n           *\n           *  @description Options for configuring the rowEdit feature, these are available to be\n           *  set using the ui-grid {@link ui.grid.class:GridOptions gridOptions}\n           */\n\n        },\n\n\n        /**\n         * @ngdoc method\n         * @methodOf ui.grid.rowEdit.service:uiGridRowEditService\n         * @name saveRow\n         * @description  Returns a function that saves the specified row from the grid,\n         * and returns a promise\n         * @param {object} grid the grid for which dirty rows should be flushed\n         * @param {GridRow} gridRow the row that should be saved\n         * @returns {function} the saveRow function returns a function.  That function\n         * in turn, when called, returns a promise relating to the save callback\n         */\n        saveRow: function ( grid, gridRow ) {\n          var self = this;\n\n          return function() {\n            gridRow.isSaving = true;\n\n            if ( gridRow.rowEditSavePromise ){\n              // don't save the row again if it's already saving - that causes stale object exceptions\n              return gridRow.rowEditSavePromise;\n            }\n\n            var promise = grid.api.rowEdit.raise.saveRow( gridRow.entity );\n\n            if ( gridRow.rowEditSavePromise ){\n              gridRow.rowEditSavePromise.then( self.processSuccessPromise( grid, gridRow ), self.processErrorPromise( grid, gridRow ));\n            } else {\n              gridUtil.logError( 'A promise was not returned when saveRow event was raised, either nobody is listening to event, or event handler did not return a promise' );\n            }\n            return promise;\n          };\n        },\n\n\n        /**\n         * @ngdoc method\n         * @methodOf  ui.grid.rowEdit.service:uiGridRowEditService\n         * @name setSavePromise\n         * @description Sets the promise associated with the row save, mandatory that\n         * the saveRow event handler calls this method somewhere before returning.\n         * <pre>\n         *      gridApi.rowEdit.setSavePromise(grid, rowEntity)\n         * </pre>\n         * @param {object} grid the grid for which dirty rows should be returned\n         * @param {object} rowEntity a data row from the grid for which a save has\n         * been initiated\n         * @param {promise} savePromise the promise that will be resolved when the\n         * save is successful, or rejected if the save fails\n         *\n         */\n        setSavePromise: function (grid, rowEntity, savePromise) {\n          var gridRow = grid.getRow( rowEntity );\n          gridRow.rowEditSavePromise = savePromise;\n        },\n\n\n        /**\n         * @ngdoc method\n         * @methodOf ui.grid.rowEdit.service:uiGridRowEditService\n         * @name processSuccessPromise\n         * @description  Returns a function that processes the successful\n         * resolution of a save promise\n         * @param {object} grid the grid for which the promise should be processed\n         * @param {GridRow} gridRow the row that has been saved\n         * @returns {function} the success handling function\n         */\n        processSuccessPromise: function ( grid, gridRow ) {\n          var self = this;\n\n          return function() {\n            delete gridRow.isSaving;\n            delete gridRow.isDirty;\n            delete gridRow.isError;\n            delete gridRow.rowEditSaveTimer;\n            delete gridRow.rowEditSavePromise;\n            self.removeRow( grid.rowEdit.errorRows, gridRow );\n            self.removeRow( grid.rowEdit.dirtyRows, gridRow );\n          };\n        },\n\n\n        /**\n         * @ngdoc method\n         * @methodOf ui.grid.rowEdit.service:uiGridRowEditService\n         * @name processErrorPromise\n         * @description  Returns a function that processes the failed\n         * resolution of a save promise\n         * @param {object} grid the grid for which the promise should be processed\n         * @param {GridRow} gridRow the row that is now in error\n         * @returns {function} the error handling function\n         */\n        processErrorPromise: function ( grid, gridRow ) {\n          return function() {\n            delete gridRow.isSaving;\n            delete gridRow.rowEditSaveTimer;\n            delete gridRow.rowEditSavePromise;\n\n            gridRow.isError = true;\n\n            if (!grid.rowEdit.errorRows){\n              grid.rowEdit.errorRows = [];\n            }\n            if (!service.isRowPresent( grid.rowEdit.errorRows, gridRow ) ){\n              grid.rowEdit.errorRows.push( gridRow );\n            }\n          };\n        },\n\n\n        /**\n         * @ngdoc method\n         * @methodOf ui.grid.rowEdit.service:uiGridRowEditService\n         * @name removeRow\n         * @description  Removes a row from a cache of rows - either\n         * grid.rowEdit.errorRows or grid.rowEdit.dirtyRows.  If the row\n         * is not present silently does nothing.\n         * @param {array} rowArray the array from which to remove the row\n         * @param {GridRow} gridRow the row that should be removed\n         */\n        removeRow: function( rowArray, removeGridRow ){\n          if (typeof(rowArray) === 'undefined' || rowArray === null){\n            return;\n          }\n\n          rowArray.forEach( function( gridRow, index ){\n            if ( gridRow.uid === removeGridRow.uid ){\n              rowArray.splice( index, 1);\n            }\n          });\n        },\n\n\n        /**\n         * @ngdoc method\n         * @methodOf ui.grid.rowEdit.service:uiGridRowEditService\n         * @name isRowPresent\n         * @description  Checks whether a row is already present\n         * in the given array\n         * @param {array} rowArray the array in which to look for the row\n         * @param {GridRow} gridRow the row that should be looked for\n         */\n        isRowPresent: function( rowArray, removeGridRow ){\n          var present = false;\n          rowArray.forEach( function( gridRow, index ){\n            if ( gridRow.uid === removeGridRow.uid ){\n              present = true;\n            }\n          });\n          return present;\n        },\n\n\n        /**\n         * @ngdoc method\n         * @methodOf ui.grid.rowEdit.service:uiGridRowEditService\n         * @name flushDirtyRows\n         * @description Triggers a save event for all currently dirty rows, could\n         * be used where user presses a save button or navigates away from the page\n         * <pre>\n         *      gridApi.rowEdit.flushDirtyRows(grid)\n         * </pre>\n         * @param {object} grid the grid for which dirty rows should be flushed\n         * @returns {promise} a promise that represents the aggregate of all\n         * of the individual save promises - i.e. it will be resolved when all\n         * the individual save promises have been resolved.\n         *\n         */\n        flushDirtyRows: function(grid){\n          var promises = [];\n          grid.api.rowEdit.getDirtyRows().forEach( function( gridRow ){\n            service.cancelTimer( grid, gridRow );\n            service.saveRow( grid, gridRow )();\n            promises.push( gridRow.rowEditSavePromise );\n          });\n\n          return $q.all( promises );\n        },\n\n\n        /**\n         * @ngdoc method\n         * @methodOf ui.grid.rowEdit.service:uiGridRowEditService\n         * @name endEditCell\n         * @description Receives an afterCellEdit event from the edit function,\n         * and sets flags as appropriate.  Only the rowEntity parameter\n         * is processed, although other params are available.  Grid\n         * is automatically provided by the gridApi.\n         * @param {object} rowEntity the data entity for which the cell\n         * was edited\n         */\n        endEditCell: function( rowEntity, colDef, newValue, previousValue ){\n          var grid = this.grid;\n          var gridRow = grid.getRow( rowEntity );\n          if ( !gridRow ){ gridUtil.logError( 'Unable to find rowEntity in grid data, dirty flag cannot be set' ); return; }\n\n          if ( newValue !== previousValue || gridRow.isDirty ){\n            if ( !grid.rowEdit.dirtyRows ){\n              grid.rowEdit.dirtyRows = [];\n            }\n\n            if ( !gridRow.isDirty ){\n              gridRow.isDirty = true;\n              grid.rowEdit.dirtyRows.push( gridRow );\n            }\n\n            delete gridRow.isError;\n\n            service.considerSetTimer( grid, gridRow );\n          }\n        },\n\n\n        /**\n         * @ngdoc method\n         * @methodOf ui.grid.rowEdit.service:uiGridRowEditService\n         * @name beginEditCell\n         * @description Receives a beginCellEdit event from the edit function,\n         * and cancels any rowEditSaveTimers if present, as the user is still editing\n         * this row.  Only the rowEntity parameter\n         * is processed, although other params are available.  Grid\n         * is automatically provided by the gridApi.\n         * @param {object} rowEntity the data entity for which the cell\n         * editing has commenced\n         */\n        beginEditCell: function( rowEntity, colDef ){\n          var grid = this.grid;\n          var gridRow = grid.getRow( rowEntity );\n          if ( !gridRow ){ gridUtil.logError( 'Unable to find rowEntity in grid data, timer cannot be cancelled' ); return; }\n\n          service.cancelTimer( grid, gridRow );\n        },\n\n\n        /**\n         * @ngdoc method\n         * @methodOf ui.grid.rowEdit.service:uiGridRowEditService\n         * @name cancelEditCell\n         * @description Receives a cancelCellEdit event from the edit function,\n         * and if the row was already dirty, restarts the save timer.  If the row\n         * was not already dirty, then it's not dirty now either and does nothing.\n         *\n         * Only the rowEntity parameter\n         * is processed, although other params are available.  Grid\n         * is automatically provided by the gridApi.\n         *\n         * @param {object} rowEntity the data entity for which the cell\n         * editing was cancelled\n         */\n        cancelEditCell: function( rowEntity, colDef ){\n          var grid = this.grid;\n          var gridRow = grid.getRow( rowEntity );\n          if ( !gridRow ){ gridUtil.logError( 'Unable to find rowEntity in grid data, timer cannot be set' ); return; }\n\n          service.considerSetTimer( grid, gridRow );\n        },\n\n\n        /**\n         * @ngdoc method\n         * @methodOf ui.grid.rowEdit.service:uiGridRowEditService\n         * @name navigate\n         * @description cellNav tells us that the selected cell has changed.  If\n         * the new row had a timer running, then stop it similar to in a beginCellEdit\n         * call.  If the old row is dirty and not the same as the new row, then\n         * start a timer on it.\n         * @param {object} newRowCol the row and column that were selected\n         * @param {object} oldRowCol the row and column that was left\n         *\n         */\n        navigate: function( newRowCol, oldRowCol ){\n          var grid = this.grid;\n          if ( newRowCol.row.rowEditSaveTimer ){\n            service.cancelTimer( grid, newRowCol.row );\n          }\n\n          if ( oldRowCol && oldRowCol.row && oldRowCol.row !== newRowCol.row ){\n            service.considerSetTimer( grid, oldRowCol.row );\n          }\n        },\n\n\n        /**\n         * @ngdoc property\n         * @propertyOf ui.grid.rowEdit.api:GridOptions\n         * @name rowEditWaitInterval\n         * @description How long the grid should wait for another change on this row\n         * before triggering a save (in milliseconds).  If set to -1, then saves are\n         * never triggered by timer (implying that the user will call flushDirtyRows()\n         * manually)\n         *\n         * @example\n         * Setting the wait interval to 4 seconds\n         * <pre>\n         *   $scope.gridOptions = { rowEditWaitInterval: 4000 }\n         * </pre>\n         *\n         */\n        /**\n         * @ngdoc method\n         * @methodOf ui.grid.rowEdit.service:uiGridRowEditService\n         * @name considerSetTimer\n         * @description Consider setting a timer on this row (if it is dirty).  if there is a timer running\n         * on the row and the row isn't currently saving, cancel it, using cancelTimer, then if the row is\n         * dirty and not currently saving then set a new timer\n         * @param {object} grid the grid for which we are processing\n         * @param {GridRow} gridRow the row for which the timer should be adjusted\n         *\n         */\n        considerSetTimer: function( grid, gridRow ){\n          service.cancelTimer( grid, gridRow );\n\n          if ( gridRow.isDirty && !gridRow.isSaving ){\n            if ( grid.options.rowEditWaitInterval !== -1 ){\n              var waitTime = grid.options.rowEditWaitInterval ? grid.options.rowEditWaitInterval : 2000;\n              gridRow.rowEditSaveTimer = $interval( service.saveRow( grid, gridRow ), waitTime, 1);\n            }\n          }\n        },\n\n\n        /**\n         * @ngdoc method\n         * @methodOf ui.grid.rowEdit.service:uiGridRowEditService\n         * @name cancelTimer\n         * @description cancel the $interval for any timer running on this row\n         * then delete the timer itself\n         * @param {object} grid the grid for which we are processing\n         * @param {GridRow} gridRow the row for which the timer should be adjusted\n         *\n         */\n        cancelTimer: function( grid, gridRow ){\n          if ( gridRow.rowEditSaveTimer && !gridRow.isSaving ){\n            $interval.cancel(gridRow.rowEditSaveTimer);\n            delete gridRow.rowEditSaveTimer;\n          }\n        },\n\n\n        /**\n         * @ngdoc method\n         * @methodOf ui.grid.rowEdit.service:uiGridRowEditService\n         * @name setRowsDirty\n         * @description Sets each of the rows passed in dataRows\n         * to be dirty.  note that if you have only just inserted the\n         * rows into your data you will need to wait for a $digest cycle\n         * before the gridRows are present - so often you would wrap this\n         * call in a $interval or $timeout\n         * <pre>\n         *      $interval( function() {\n         *        gridApi.rowEdit.setRowsDirty( myDataRows);\n         *      }, 0, 1);\n         * </pre>\n         * @param {object} grid the grid for which rows should be set dirty\n         * @param {array} dataRows the data entities for which the gridRows\n         * should be set dirty.\n         *\n         */\n        setRowsDirty: function( grid, myDataRows ) {\n          var gridRow;\n          myDataRows.forEach( function( value, index ){\n            gridRow = grid.getRow( value );\n            if ( gridRow ){\n              if ( !grid.rowEdit.dirtyRows ){\n                grid.rowEdit.dirtyRows = [];\n              }\n\n              if ( !gridRow.isDirty ){\n                gridRow.isDirty = true;\n                grid.rowEdit.dirtyRows.push( gridRow );\n              }\n\n              delete gridRow.isError;\n\n              service.considerSetTimer( grid, gridRow );\n            } else {\n              gridUtil.logError( \"requested row not found in rowEdit.setRowsDirty, row was: \" + value );\n            }\n          });\n        },\n\n\n        /**\n         * @ngdoc method\n         * @methodOf ui.grid.rowEdit.service:uiGridRowEditService\n         * @name setRowsClean\n         * @description Sets each of the rows passed in dataRows\n         * to be clean, clearing the dirty flag and the error flag, and removing\n         * the rows from the dirty and error caches.\n         * @param {object} grid the grid for which rows should be set clean\n         * @param {array} dataRows the data entities for which the gridRows\n         * should be set clean.\n         *\n         */\n        setRowsClean: function( grid, myDataRows ) {\n          var gridRow;\n\n          myDataRows.forEach( function( value, index ){\n            gridRow = grid.getRow( value );\n            if ( gridRow ){\n              delete gridRow.isDirty;\n              service.removeRow( grid.rowEdit.dirtyRows, gridRow );\n              service.cancelTimer( grid, gridRow );\n\n              delete gridRow.isError;\n              service.removeRow( grid.rowEdit.errorRows, gridRow );\n            } else {\n              gridUtil.logError( \"requested row not found in rowEdit.setRowsClean, row was: \" + value );\n            }\n          });\n        }\n\n      };\n\n      return service;\n\n    }]);\n\n  /**\n   *  @ngdoc directive\n   *  @name ui.grid.rowEdit.directive:uiGridEdit\n   *  @element div\n   *  @restrict A\n   *\n   *  @description Adds row editing features to the ui-grid-edit directive.\n   *\n   */\n  module.directive('uiGridRowEdit', ['gridUtil', 'uiGridRowEditService', 'uiGridEditConstants',\n  function (gridUtil, uiGridRowEditService, uiGridEditConstants) {\n    return {\n      replace: true,\n      priority: 0,\n      require: '^uiGrid',\n      scope: false,\n      compile: function () {\n        return {\n          pre: function ($scope, $elm, $attrs, uiGridCtrl) {\n            uiGridRowEditService.initializeGrid($scope, uiGridCtrl.grid);\n          },\n          post: function ($scope, $elm, $attrs, uiGridCtrl) {\n          }\n        };\n      }\n    };\n  }]);\n\n\n  /**\n   *  @ngdoc directive\n   *  @name ui.grid.rowEdit.directive:uiGridViewport\n   *  @element div\n   *\n   *  @description Stacks on top of ui.grid.uiGridViewport to alter the attributes used\n   *  for the grid row to allow coloring of saving and error rows\n   */\n  module.directive('uiGridViewport',\n    ['$compile', 'uiGridConstants', 'gridUtil', '$parse',\n      function ($compile, uiGridConstants, gridUtil, $parse) {\n        return {\n          priority: -200, // run after default  directive\n          scope: false,\n          compile: function ($elm, $attrs) {\n            var rowRepeatDiv = angular.element($elm.children().children()[0]);\n\n            var existingNgClass = rowRepeatDiv.attr(\"ng-class\");\n            var newNgClass = '';\n            if ( existingNgClass ) {\n              newNgClass = existingNgClass.slice(0, -1) + \", 'ui-grid-row-dirty': row.isDirty, 'ui-grid-row-saving': row.isSaving, 'ui-grid-row-error': row.isError}\";\n            } else {\n              newNgClass = \"{'ui-grid-row-dirty': row.isDirty, 'ui-grid-row-saving': row.isSaving, 'ui-grid-row-error': row.isError}\";\n            }\n            rowRepeatDiv.attr(\"ng-class\", newNgClass);\n\n            return {\n              pre: function ($scope, $elm, $attrs, controllers) {\n\n              },\n              post: function ($scope, $elm, $attrs, controllers) {\n              }\n            };\n          }\n        };\n      }]);\n\n})();\n\n(function () {\n  'use strict';\n\n  /**\n   * @ngdoc overview\n   * @name ui.grid.saveState\n   * @description\n   *\n   * # ui.grid.saveState\n   *\n   * <div class=\"alert alert-success\" role=\"alert\"><strong>Stable</strong> This feature is stable. There should no longer be breaking api changes without a deprecation warning.</div>\n   *\n   * This module provides the ability to save the grid state, and restore\n   * it when the user returns to the page.\n   *\n   * No UI is provided, the caller should provide their own UI/buttons\n   * as appropriate. Usually the navigate events would be used to save\n   * the grid state and restore it.\n   *\n   * <br/>\n   * <br/>\n   *\n   * <div doc-module-components=\"ui.grid.save-state\"></div>\n   */\n\n  var module = angular.module('ui.grid.saveState', ['ui.grid', 'ui.grid.selection', 'ui.grid.cellNav', 'ui.grid.grouping', 'ui.grid.pinning', 'ui.grid.treeView']);\n\n  /**\n   *  @ngdoc object\n   *  @name ui.grid.saveState.constant:uiGridSaveStateConstants\n   *\n   *  @description constants available in save state module\n   */\n\n  module.constant('uiGridSaveStateConstants', {\n    featureName: 'saveState'\n  });\n\n  /**\n   *  @ngdoc service\n   *  @name ui.grid.saveState.service:uiGridSaveStateService\n   *\n   *  @description Services for saveState feature\n   */\n  module.service('uiGridSaveStateService', ['$q', 'uiGridSaveStateConstants', 'gridUtil', '$compile', '$interval', 'uiGridConstants',\n    function ($q, uiGridSaveStateConstants, gridUtil, $compile, $interval, uiGridConstants ) {\n\n      var service = {\n\n        initializeGrid: function (grid) {\n\n          //add feature namespace and any properties to grid for needed state\n          grid.saveState = {};\n          this.defaultGridOptions(grid.options);\n\n          /**\n           *  @ngdoc object\n           *  @name ui.grid.saveState.api:PublicApi\n           *\n           *  @description Public Api for saveState feature\n           */\n          var publicApi = {\n            events: {\n              saveState: {\n              }\n            },\n            methods: {\n              saveState: {\n                /**\n                 * @ngdoc function\n                 * @name save\n                 * @methodOf  ui.grid.saveState.api:PublicApi\n                 * @description Packages the current state of the grid into\n                 * an object, and provides it to the user for saving\n                 * @returns {object} the state as a javascript object that can be saved\n                 */\n                save: function () {\n                  return service.save(grid);\n                },\n                /**\n                 * @ngdoc function\n                 * @name restore\n                 * @methodOf  ui.grid.saveState.api:PublicApi\n                 * @description Restores the provided state into the grid\n                 * @param {scope} $scope a scope that we can broadcast on\n                 * @param {object} state the state that should be restored into the grid\n                 * @returns {object} the promise created by refresh\n                 */\n                restore: function ( $scope, state) {\n                  return service.restore(grid, $scope, state);\n                }\n              }\n            }\n          };\n\n          grid.api.registerEventsFromObject(publicApi.events);\n\n          grid.api.registerMethodsFromObject(publicApi.methods);\n\n        },\n\n        defaultGridOptions: function (gridOptions) {\n          //default option to true unless it was explicitly set to false\n          /**\n           * @ngdoc object\n           * @name ui.grid.saveState.api:GridOptions\n           *\n           * @description GridOptions for saveState feature, these are available to be\n           * set using the ui-grid {@link ui.grid.class:GridOptions gridOptions}\n           */\n          /**\n           * @ngdoc object\n           * @name saveWidths\n           * @propertyOf  ui.grid.saveState.api:GridOptions\n           * @description Save the current column widths.  Note that unless\n           * you've provided the user with some way to resize their columns (say\n           * the resize columns feature), then this makes little sense.\n           * <br/>Defaults to true\n           */\n          gridOptions.saveWidths = gridOptions.saveWidths !== false;\n          /**\n           * @ngdoc object\n           * @name saveOrder\n           * @propertyOf  ui.grid.saveState.api:GridOptions\n           * @description Restore the current column order.  Note that unless\n           * you've provided the user with some way to reorder their columns (for\n           * example the move columns feature), this makes little sense.\n           * <br/>Defaults to true\n           */\n          gridOptions.saveOrder = gridOptions.saveOrder !== false;\n          /**\n           * @ngdoc object\n           * @name saveScroll\n           * @propertyOf  ui.grid.saveState.api:GridOptions\n           * @description Save the current scroll position.  Note that this\n           * is saved as the percentage of the grid scrolled - so if your\n           * user returns to a grid with a significantly different number of\n           * rows (perhaps some data has been deleted) then the scroll won't\n           * actually show the same rows as before.  If you want to scroll to\n           * a specific row then you should instead use the saveFocus option, which\n           * is the default.\n           *\n           * Note that this element will only be saved if the cellNav feature is\n           * enabled\n           * <br/>Defaults to false\n           */\n          gridOptions.saveScroll = gridOptions.saveScroll === true;\n          /**\n           * @ngdoc object\n           * @name saveFocus\n           * @propertyOf  ui.grid.saveState.api:GridOptions\n           * @description Save the current focused cell.  On returning\n           * to this focused cell we'll also scroll.  This option is\n           * preferred to the saveScroll option, so is set to true by\n           * default.  If saveScroll is set to true then this option will\n           * be disabled.\n           *\n           * By default this option saves the current row number and column\n           * number, and returns to that row and column.  However, if you define\n           * a saveRowIdentity function, then it will return you to the currently\n           * selected column within that row (in a business sense - so if some\n           * rows have been deleted, it will still find the same data, presuming it\n           * still exists in the list.  If it isn't in the list then it will instead\n           * return to the same row number - i.e. scroll percentage)\n           *\n           * Note that this option will do nothing if the cellNav\n           * feature is not enabled.\n           *\n           * <br/>Defaults to true (unless saveScroll is true)\n           */\n          gridOptions.saveFocus = gridOptions.saveScroll !== true && gridOptions.saveFocus !== false;\n          /**\n           * @ngdoc object\n           * @name saveRowIdentity\n           * @propertyOf  ui.grid.saveState.api:GridOptions\n           * @description A function that can be called, passing in a rowEntity,\n           * and that will return a unique id for that row.  This might simply\n           * return the `id` field from that row (if you have one), or it might\n           * concatenate some fields within the row to make a unique value.\n           *\n           * This value will be used to find the same row again and set the focus\n           * to it, if it exists when we return.\n           *\n           * <br/>Defaults to undefined\n           */\n          /**\n           * @ngdoc object\n           * @name saveVisible\n           * @propertyOf  ui.grid.saveState.api:GridOptions\n           * @description Save whether or not columns are visible.\n           *\n           * <br/>Defaults to true\n           */\n          gridOptions.saveVisible = gridOptions.saveVisible !== false;\n          /**\n           * @ngdoc object\n           * @name saveSort\n           * @propertyOf  ui.grid.saveState.api:GridOptions\n           * @description Save the current sort state for each column\n           *\n           * <br/>Defaults to true\n           */\n          gridOptions.saveSort = gridOptions.saveSort !== false;\n          /**\n           * @ngdoc object\n           * @name saveFilter\n           * @propertyOf  ui.grid.saveState.api:GridOptions\n           * @description Save the current filter state for each column\n           *\n           * <br/>Defaults to true\n           */\n          gridOptions.saveFilter = gridOptions.saveFilter !== false;\n          /**\n           * @ngdoc object\n           * @name saveSelection\n           * @propertyOf  ui.grid.saveState.api:GridOptions\n           * @description Save the currently selected rows.  If the `saveRowIdentity` callback\n           * is defined, then it will save the id of the row and select that.  If not, then\n           * it will attempt to select the rows by row number, which will give the wrong results\n           * if the data set has changed in the mean-time.\n           *\n           * Note that this option only does anything\n           * if the selection feature is enabled.\n           *\n           * <br/>Defaults to true\n           */\n          gridOptions.saveSelection = gridOptions.saveSelection !== false;\n          /**\n           * @ngdoc object\n           * @name saveGrouping\n           * @propertyOf  ui.grid.saveState.api:GridOptions\n           * @description Save the grouping configuration.  If set to true and the\n           * grouping feature is not enabled then does nothing.\n           *\n           * <br/>Defaults to true\n           */\n          gridOptions.saveGrouping = gridOptions.saveGrouping !== false;\n          /**\n           * @ngdoc object\n           * @name saveGroupingExpandedStates\n           * @propertyOf  ui.grid.saveState.api:GridOptions\n           * @description Save the grouping row expanded states.  If set to true and the\n           * grouping feature is not enabled then does nothing.\n           *\n           * This can be quite a bit of data, in many cases you wouldn't want to save this\n           * information.\n           *\n           * <br/>Defaults to false\n           */\n          gridOptions.saveGroupingExpandedStates = gridOptions.saveGroupingExpandedStates === true;\n          /**\n           * @ngdoc object\n           * @name savePinning\n           * @propertyOf ui.grid.saveState.api:GridOptions\n           * @description Save pinning state for columns.\n           *\n           * <br/>Defaults to true\n           */\n          gridOptions.savePinning = gridOptions.savePinning !== false;\n          /**\n           * @ngdoc object\n           * @name saveTreeView\n           * @propertyOf  ui.grid.saveState.api:GridOptions\n           * @description Save the treeView configuration.  If set to true and the\n           * treeView feature is not enabled then does nothing.\n           *\n           * <br/>Defaults to true\n           */\n          gridOptions.saveTreeView = gridOptions.saveTreeView !== false;\n        },\n\n\n\n        /**\n         * @ngdoc function\n         * @name save\n         * @methodOf  ui.grid.saveState.service:uiGridSaveStateService\n         * @description Saves the current grid state into an object, and\n         * passes that object back to the caller\n         * @param {Grid} grid the grid whose state we'd like to save\n         * @returns {object} the state ready to be saved\n         */\n        save: function (grid) {\n          var savedState = {};\n\n          savedState.columns = service.saveColumns( grid );\n          savedState.scrollFocus = service.saveScrollFocus( grid );\n          savedState.selection = service.saveSelection( grid );\n          savedState.grouping = service.saveGrouping( grid );\n          savedState.treeView = service.saveTreeView( grid );\n          savedState.pagination = service.savePagination( grid );\n\n          return savedState;\n        },\n\n\n        /**\n         * @ngdoc function\n         * @name restore\n         * @methodOf  ui.grid.saveState.service:uiGridSaveStateService\n         * @description Applies the provided state to the grid\n         *\n         * @param {Grid} grid the grid whose state we'd like to restore\n         * @param {scope} $scope a scope that we can broadcast on\n         * @param {object} state the state we'd like to restore\n         * @returns {object} the promise created by refresh\n         */\n        restore: function( grid, $scope, state ){\n          if ( state.columns ) {\n            service.restoreColumns( grid, state.columns );\n          }\n\n          if ( state.scrollFocus ){\n            service.restoreScrollFocus( grid, $scope, state.scrollFocus );\n          }\n\n          if ( state.selection ){\n            service.restoreSelection( grid, state.selection );\n          }\n\n          if ( state.grouping ){\n            service.restoreGrouping( grid, state.grouping );\n          }\n\n          if ( state.treeView ){\n            service.restoreTreeView( grid, state.treeView );\n          }\n\n          if ( state.pagination ){\n            service.restorePagination( grid, state.pagination );\n          }\n\n          return grid.refresh();\n        },\n\n\n        /**\n         * @ngdoc function\n         * @name saveColumns\n         * @methodOf  ui.grid.saveState.service:uiGridSaveStateService\n         * @description Saves the column setup, including sort, filters, ordering,\n         * pinning and column widths.\n         *\n         * Works through the current columns, storing them in order.  Stores the\n         * column name, then the visible flag, width, sort and filters for each column.\n         *\n         * @param {Grid} grid the grid whose state we'd like to save\n         * @returns {array} the columns state ready to be saved\n         */\n        saveColumns: function( grid ) {\n          var columns = [];\n          grid.getOnlyDataColumns().forEach( function( column ) {\n            var savedColumn = {};\n            savedColumn.name = column.name;\n\n            if ( grid.options.saveVisible ){\n              savedColumn.visible = column.visible;\n            }\n\n            if ( grid.options.saveWidths ){\n              savedColumn.width = column.width;\n            }\n\n            // these two must be copied, not just pointed too - otherwise our saved state is pointing to the same object as current state\n            if ( grid.options.saveSort ){\n              savedColumn.sort = angular.copy( column.sort );\n            }\n\n            if ( grid.options.saveFilter ){\n              savedColumn.filters = [];\n              column.filters.forEach( function( filter ){\n                var copiedFilter = {};\n                angular.forEach( filter, function( value, key) {\n                  if ( key !== 'condition' && key !== '$$hashKey' && key !== 'placeholder'){\n                    copiedFilter[key] = value;\n                  }\n                });\n                savedColumn.filters.push(copiedFilter);\n              });\n            }\n\n            if ( !!grid.api.pinning && grid.options.savePinning ){\n              savedColumn.pinned = column.renderContainer ? column.renderContainer : '';\n            }\n\n            columns.push( savedColumn );\n          });\n\n          return columns;\n        },\n\n\n        /**\n         * @ngdoc function\n         * @name saveScrollFocus\n         * @methodOf  ui.grid.saveState.service:uiGridSaveStateService\n         * @description Saves the currently scroll or focus.\n         *\n         * If cellNav isn't present then does nothing - we can't return\n         * to the scroll position without cellNav anyway.\n         *\n         * If the cellNav module is present, and saveFocus is true, then\n         * it saves the currently focused cell.  If rowIdentity is present\n         * then saves using rowIdentity, otherwise saves visibleRowNum.\n         *\n         * If the cellNav module is not present, and saveScroll is true, then\n         * it approximates the current scroll row and column, and saves that.\n         *\n         * @param {Grid} grid the grid whose state we'd like to save\n         * @returns {object} the selection state ready to be saved\n         */\n        saveScrollFocus: function( grid ){\n          if ( !grid.api.cellNav ){\n            return {};\n          }\n\n          var scrollFocus = {};\n          if ( grid.options.saveFocus ){\n            scrollFocus.focus = true;\n            var rowCol = grid.api.cellNav.getFocusedCell();\n            if ( rowCol !== null ) {\n              if ( rowCol.col !== null ){\n                scrollFocus.colName = rowCol.col.colDef.name;\n              }\n              if ( rowCol.row !== null ){\n                scrollFocus.rowVal = service.getRowVal( grid, rowCol.row );\n              }\n            }\n          }\n\n          if ( grid.options.saveScroll || grid.options.saveFocus && !scrollFocus.colName && !scrollFocus.rowVal ) {\n            scrollFocus.focus = false;\n            if ( grid.renderContainers.body.prevRowScrollIndex ){\n              scrollFocus.rowVal = service.getRowVal( grid, grid.renderContainers.body.visibleRowCache[ grid.renderContainers.body.prevRowScrollIndex ]);\n            }\n\n            if ( grid.renderContainers.body.prevColScrollIndex ){\n              scrollFocus.colName = grid.renderContainers.body.visibleColumnCache[ grid.renderContainers.body.prevColScrollIndex ].name;\n            }\n          }\n\n          return scrollFocus;\n        },\n\n\n        /**\n         * @ngdoc function\n         * @name saveSelection\n         * @methodOf  ui.grid.saveState.service:uiGridSaveStateService\n         * @description Saves the currently selected rows, if the selection feature is enabled\n         * @param {Grid} grid the grid whose state we'd like to save\n         * @returns {array} the selection state ready to be saved\n         */\n        saveSelection: function( grid ){\n          if ( !grid.api.selection || !grid.options.saveSelection ){\n            return [];\n          }\n\n          var selection = grid.api.selection.getSelectedGridRows().map( function( gridRow ) {\n            return service.getRowVal( grid, gridRow );\n          });\n\n          return selection;\n        },\n\n\n        /**\n         * @ngdoc function\n         * @name saveGrouping\n         * @methodOf  ui.grid.saveState.service:uiGridSaveStateService\n         * @description Saves the grouping state, if the grouping feature is enabled\n         * @param {Grid} grid the grid whose state we'd like to save\n         * @returns {object} the grouping state ready to be saved\n         */\n        saveGrouping: function( grid ){\n          if ( !grid.api.grouping || !grid.options.saveGrouping ){\n            return {};\n          }\n\n          return grid.api.grouping.getGrouping( grid.options.saveGroupingExpandedStates );\n        },\n\n\n        /**\n         * @ngdoc function\n         * @name savePagination\n         * @methodOf  ui.grid.saveState.service:uiGridSaveStateService\n         * @description Saves the pagination state, if the pagination feature is enabled\n         * @param {Grid} grid the grid whose state we'd like to save\n         * @returns {object} the pagination state ready to be saved\n         */\n        savePagination: function( grid ) {\n          if ( !grid.api.pagination || !grid.options.paginationPageSize ){\n            return {};\n          }\n\n          return {\n            paginationCurrentPage: grid.options.paginationCurrentPage,\n            paginationPageSize: grid.options.paginationPageSize\n          };\n        },\n\n\n        /**\n         * @ngdoc function\n         * @name saveTreeView\n         * @methodOf  ui.grid.saveState.service:uiGridSaveStateService\n         * @description Saves the tree view state, if the tree feature is enabled\n         * @param {Grid} grid the grid whose state we'd like to save\n         * @returns {object} the tree view state ready to be saved\n         */\n        saveTreeView: function( grid ){\n          if ( !grid.api.treeView || !grid.options.saveTreeView ){\n            return {};\n          }\n\n          return grid.api.treeView.getTreeView();\n        },\n\n\n        /**\n         * @ngdoc function\n         * @name getRowVal\n         * @methodOf  ui.grid.saveState.service:uiGridSaveStateService\n         * @description Helper function that gets either the rowNum or\n         * the saveRowIdentity, given a gridRow\n         * @param {Grid} grid the grid the row is in\n         * @param {GridRow} gridRow the row we want the rowNum for\n         * @returns {object} an object containing { identity: true/false, row: rowNumber/rowIdentity }\n         *\n         */\n        getRowVal: function( grid, gridRow ){\n          if ( !gridRow ) {\n            return null;\n          }\n\n          var rowVal = {};\n          if ( grid.options.saveRowIdentity ){\n            rowVal.identity = true;\n            rowVal.row = grid.options.saveRowIdentity( gridRow.entity );\n          } else {\n            rowVal.identity = false;\n            rowVal.row = grid.renderContainers.body.visibleRowCache.indexOf( gridRow );\n          }\n          return rowVal;\n        },\n\n\n        /**\n         * @ngdoc function\n         * @name restoreColumns\n         * @methodOf  ui.grid.saveState.service:uiGridSaveStateService\n         * @description Restores the columns, including order, visible, width,\n         * pinning, sort and filters.\n         *\n         * @param {Grid} grid the grid whose state we'd like to restore\n         * @param {object} columnsState the list of columns we had before, with their state\n         */\n        restoreColumns: function( grid, columnsState ){\n          var isSortChanged = false;\n\n          columnsState.forEach( function( columnState, index ) {\n            var currentCol = grid.getColumn( columnState.name );\n\n            if ( currentCol && !grid.isRowHeaderColumn(currentCol) ){\n              if ( grid.options.saveVisible &&\n                   ( currentCol.visible !== columnState.visible ||\n                     currentCol.colDef.visible !== columnState.visible ) ){\n                currentCol.visible = columnState.visible;\n                currentCol.colDef.visible = columnState.visible;\n                grid.api.core.raise.columnVisibilityChanged(currentCol);\n              }\n\n              if ( grid.options.saveWidths && currentCol.width !== columnState.width){\n                currentCol.width = columnState.width;\n                currentCol.hasCustomWidth = true;\n              }\n\n              if ( grid.options.saveSort &&\n                   !angular.equals(currentCol.sort, columnState.sort) &&\n                   !( currentCol.sort === undefined && angular.isEmpty(columnState.sort) ) ){\n                currentCol.sort = angular.copy( columnState.sort );\n                isSortChanged = true;\n              }\n\n              if ( grid.options.saveFilter &&\n                   !angular.equals(currentCol.filters, columnState.filters ) ){\n                columnState.filters.forEach( function( filter, index ){\n                  angular.extend( currentCol.filters[index], filter );\n                  if ( typeof(filter.term) === 'undefined' || filter.term === null ){\n                    delete currentCol.filters[index].term;\n                  }\n                });\n                grid.api.core.raise.filterChanged();\n              }\n\n              if ( !!grid.api.pinning && grid.options.savePinning && currentCol.renderContainer !== columnState.pinned ){\n                grid.api.pinning.pinColumn(currentCol, columnState.pinned);\n              }\n\n              var currentIndex = grid.getOnlyDataColumns().indexOf( currentCol );\n              if (currentIndex !== -1) {\n                if (grid.options.saveOrder && currentIndex !== index) {\n                  var column = grid.columns.splice(currentIndex + grid.rowHeaderColumns.length, 1)[0];\n                  grid.columns.splice(index + grid.rowHeaderColumns.length, 0, column);\n                }\n              }\n            }\n          });\n\n          if ( isSortChanged ) {\n            grid.api.core.raise.sortChanged( grid, grid.getColumnSorting() );\n          }\n        },\n\n\n        /**\n         * @ngdoc function\n         * @name restoreScrollFocus\n         * @methodOf  ui.grid.saveState.service:uiGridSaveStateService\n         * @description Scrolls to the position that was saved.  If focus is true, then\n         * sets focus to the specified row/col.  If focus is false, then scrolls to the\n         * specified row/col.\n         *\n         * @param {Grid} grid the grid whose state we'd like to restore\n         * @param {scope} $scope a scope that we can broadcast on\n         * @param {object} scrollFocusState the scroll/focus state ready to be restored\n         */\n        restoreScrollFocus: function( grid, $scope, scrollFocusState ){\n          if ( !grid.api.cellNav ){\n            return;\n          }\n\n          var colDef, row;\n          if ( scrollFocusState.colName ){\n            var colDefs = grid.options.columnDefs.filter( function( colDef ) { return colDef.name === scrollFocusState.colName; });\n            if ( colDefs.length > 0 ){\n              colDef = colDefs[0];\n            }\n          }\n\n          if ( scrollFocusState.rowVal && scrollFocusState.rowVal.row ){\n            if ( scrollFocusState.rowVal.identity ){\n              row = service.findRowByIdentity( grid, scrollFocusState.rowVal );\n            } else {\n              row = grid.renderContainers.body.visibleRowCache[ scrollFocusState.rowVal.row ];\n            }\n          }\n\n          var entity = row && row.entity ? row.entity : null ;\n\n          if ( colDef || entity ) {\n            if (scrollFocusState.focus ){\n              grid.api.cellNav.scrollToFocus( entity, colDef );\n            } else {\n              grid.scrollTo( entity, colDef );\n            }\n          }\n        },\n\n\n        /**\n         * @ngdoc function\n         * @name restoreSelection\n         * @methodOf  ui.grid.saveState.service:uiGridSaveStateService\n         * @description Selects the rows that are provided in the selection\n         * state.  If you are using `saveRowIdentity` and more than one row matches the identity\n         * function then only the first is selected.\n         * @param {Grid} grid the grid whose state we'd like to restore\n         * @param {object} selectionState the selection state ready to be restored\n         */\n        restoreSelection: function( grid, selectionState ){\n          if ( !grid.api.selection ){\n            return;\n          }\n\n          grid.api.selection.clearSelectedRows();\n\n          selectionState.forEach(  function( rowVal ) {\n            if ( rowVal.identity ){\n              var foundRow = service.findRowByIdentity( grid, rowVal );\n\n              if ( foundRow ){\n                grid.api.selection.selectRow( foundRow.entity );\n              }\n\n            } else {\n              grid.api.selection.selectRowByVisibleIndex( rowVal.row );\n            }\n          });\n        },\n\n\n        /**\n         * @ngdoc function\n         * @name restoreGrouping\n         * @methodOf  ui.grid.saveState.service:uiGridSaveStateService\n         * @description Restores the grouping configuration, if the grouping feature\n         * is enabled.\n         * @param {Grid} grid the grid whose state we'd like to restore\n         * @param {object} groupingState the grouping state ready to be restored\n         */\n        restoreGrouping: function( grid, groupingState ){\n          if ( !grid.api.grouping || typeof(groupingState) === 'undefined' || groupingState === null || angular.equals(groupingState, {}) ){\n            return;\n          }\n\n          grid.api.grouping.setGrouping( groupingState );\n        },\n\n        /**\n         * @ngdoc function\n         * @name restoreTreeView\n         * @methodOf  ui.grid.saveState.service:uiGridSaveStateService\n         * @description Restores the tree view configuration, if the tree view feature\n         * is enabled.\n         * @param {Grid} grid the grid whose state we'd like to restore\n         * @param {object} treeViewState the tree view state ready to be restored\n         */\n        restoreTreeView: function( grid, treeViewState ){\n          if ( !grid.api.treeView || typeof(treeViewState) === 'undefined' || treeViewState === null || angular.equals(treeViewState, {}) ){\n            return;\n          }\n\n          grid.api.treeView.setTreeView( treeViewState );\n        },\n\n        /**\n         * @ngdoc function\n         * @name restorePagination\n         * @methodOf  ui.grid.saveState.service:uiGridSaveStateService\n         * @description Restores the pagination information, if pagination is enabled.\n         * @param {Grid} grid the grid whose state we'd like to restore\n         * @param {object} pagination the pagination object to be restored\n         * @param {number} pagination.paginationCurrentPage the page number to restore\n         * @param {number} pagination.paginationPageSize the number of items displayed per page\n         */\n        restorePagination: function( grid, pagination ){\n          if ( !grid.api.pagination || !grid.options.paginationPageSize ){\n            return;\n          }\n\n          grid.options.paginationCurrentPage = pagination.paginationCurrentPage;\n          grid.options.paginationPageSize = pagination.paginationPageSize;\n        },\n\n        /**\n         * @ngdoc function\n         * @name findRowByIdentity\n         * @methodOf  ui.grid.saveState.service:uiGridSaveStateService\n         * @description Finds a row given it's identity value, returns the first found row\n         * if any are found, otherwise returns null if no rows are found.\n         * @param {Grid} grid the grid whose state we'd like to restore\n         * @param {object} rowVal the row we'd like to find\n         * @returns {gridRow} the found row, or null if none found\n         */\n        findRowByIdentity: function( grid, rowVal ){\n          if ( !grid.options.saveRowIdentity ){\n            return null;\n          }\n\n          var filteredRows = grid.rows.filter( function( gridRow ) {\n            if ( grid.options.saveRowIdentity( gridRow.entity ) === rowVal.row ){\n              return true;\n            } else {\n              return false;\n            }\n          });\n\n          if ( filteredRows.length > 0 ){\n            return filteredRows[0];\n          } else {\n            return null;\n          }\n        }\n      };\n\n      return service;\n\n    }\n  ]);\n\n  /**\n   *  @ngdoc directive\n   *  @name ui.grid.saveState.directive:uiGridSaveState\n   *  @element div\n   *  @restrict A\n   *\n   *  @description Adds saveState features to grid\n   *\n   *  @example\n   <example module=\"app\">\n   <file name=\"app.js\">\n   var app = angular.module('app', ['ui.grid', 'ui.grid.saveState']);\n\n   app.controller('MainCtrl', ['$scope', function ($scope) {\n      $scope.data = [\n        { name: 'Bob', title: 'CEO' },\n        { name: 'Frank', title: 'Lowly Developer' }\n      ];\n\n      $scope.gridOptions = {\n        columnDefs: [\n          {name: 'name'},\n          {name: 'title', enableCellEdit: true}\n        ],\n        data: $scope.data\n      };\n    }]);\n   </file>\n   <file name=\"index.html\">\n   <div ng-controller=\"MainCtrl\">\n   <div ui-grid=\"gridOptions\" ui-grid-save-state></div>\n   </div>\n   </file>\n   </example>\n   */\n  module.directive('uiGridSaveState', ['uiGridSaveStateConstants', 'uiGridSaveStateService', 'gridUtil', '$compile',\n    function (uiGridSaveStateConstants, uiGridSaveStateService, gridUtil, $compile) {\n      return {\n        replace: true,\n        priority: 0,\n        require: '^uiGrid',\n        scope: false,\n        link: function ($scope, $elm, $attrs, uiGridCtrl) {\n          uiGridSaveStateService.initializeGrid(uiGridCtrl.grid);\n        }\n      };\n    }\n  ]);\n})();\n\n(function () {\n  'use strict';\n\n  /**\n   * @ngdoc overview\n   * @name ui.grid.selection\n   * @description\n   *\n   * # ui.grid.selection\n   * This module provides row selection\n   *\n   * <div class=\"alert alert-success\" role=\"alert\"><strong>Stable</strong> This feature is stable. There should no longer be breaking api changes without a deprecation warning.</div>\n   *\n   * <div doc-module-components=\"ui.grid.selection\"></div>\n   */\n\n  var module = angular.module('ui.grid.selection', ['ui.grid']);\n\n  /**\n   *  @ngdoc object\n   *  @name ui.grid.selection.constant:uiGridSelectionConstants\n   *\n   *  @description constants available in selection module\n   */\n  module.constant('uiGridSelectionConstants', {\n    featureName: \"selection\",\n    selectionRowHeaderColName: 'selectionRowHeaderCol'\n  });\n\n  //add methods to GridRow\n  angular.module('ui.grid').config(['$provide', function ($provide) {\n    $provide.decorator('GridRow', ['$delegate', function ($delegate) {\n\n      /**\n       *  @ngdoc object\n       *  @name ui.grid.selection.api:GridRow\n       *\n       *  @description GridRow prototype functions added for selection\n       */\n\n      /**\n       *  @ngdoc object\n       *  @name enableSelection\n       *  @propertyOf  ui.grid.selection.api:GridRow\n       *  @description Enable row selection for this row, only settable by internal code.\n       *\n       *  The grouping feature, for example, might set group header rows to not be selectable.\n       *  <br/>Defaults to true\n       */\n\n      /**\n       *  @ngdoc object\n       *  @name isSelected\n       *  @propertyOf  ui.grid.selection.api:GridRow\n       *  @description Selected state of row.  Should be readonly. Make any changes to selected state using setSelected().\n       *  <br/>Defaults to false\n       */\n\n\n      /**\n       * @ngdoc function\n       * @name setSelected\n       * @methodOf ui.grid.selection.api:GridRow\n       * @description Sets the isSelected property and updates the selectedCount\n       * Changes to isSelected state should only be made via this function\n       * @param {bool} selected value to set\n       */\n      $delegate.prototype.setSelected = function (selected) {\n        if (selected !== this.isSelected) {\n          this.isSelected = selected;\n          this.grid.selection.selectedCount += selected ? 1 : -1;\n        }\n      };\n\n      return $delegate;\n    }]);\n  }]);\n\n  /**\n   *  @ngdoc service\n   *  @name ui.grid.selection.service:uiGridSelectionService\n   *\n   *  @description Services for selection features\n   */\n  module.service('uiGridSelectionService', ['$q', '$templateCache', 'uiGridSelectionConstants', 'gridUtil',\n    function ($q, $templateCache, uiGridSelectionConstants, gridUtil) {\n\n      var service = {\n\n        initializeGrid: function (grid) {\n\n          //add feature namespace and any properties to grid for needed\n          /**\n           *  @ngdoc object\n           *  @name ui.grid.selection.grid:selection\n           *\n           *  @description Grid properties and functions added for selection\n           */\n          grid.selection = {};\n          grid.selection.lastSelectedRow = null;\n          grid.selection.selectAll = false;\n\n\n          /**\n           *  @ngdoc object\n           *  @name selectedCount\n           *  @propertyOf  ui.grid.selection.grid:selection\n           *  @description Current count of selected rows\n           *  @example\n           *  var count = grid.selection.selectedCount\n           */\n          grid.selection.selectedCount = 0;\n\n          service.defaultGridOptions(grid.options);\n\n          /**\n           *  @ngdoc object\n           *  @name ui.grid.selection.api:PublicApi\n           *\n           *  @description Public Api for selection feature\n           */\n          var publicApi = {\n            events: {\n              selection: {\n                /**\n                 * @ngdoc event\n                 * @name rowSelectionChanged\n                 * @eventOf  ui.grid.selection.api:PublicApi\n                 * @description  is raised after the row.isSelected state is changed\n                 * @param {object} scope the scope associated with the grid\n                 * @param {GridRow} row the row that was selected/deselected\n                 * @param {Event} evt object if raised from an event\n                 */\n                rowSelectionChanged: function (scope, row, evt) {\n                },\n                /**\n                 * @ngdoc event\n                 * @name rowSelectionChangedBatch\n                 * @eventOf  ui.grid.selection.api:PublicApi\n                 * @description  is raised after the row.isSelected state is changed\n                 * in bulk, if the `enableSelectionBatchEvent` option is set to true\n                 * (which it is by default).  This allows more efficient processing\n                 * of bulk events.\n                 * @param {object} scope the scope associated with the grid\n                 * @param {array} rows the rows that were selected/deselected\n                 * @param {Event} evt object if raised from an event\n                 */\n                rowSelectionChangedBatch: function (scope, rows, evt) {\n                }\n              }\n            },\n            methods: {\n              selection: {\n                /**\n                 * @ngdoc function\n                 * @name toggleRowSelection\n                 * @methodOf  ui.grid.selection.api:PublicApi\n                 * @description Toggles data row as selected or unselected\n                 * @param {object} rowEntity gridOptions.data[] array instance\n                 * @param {Event} evt object if raised from an event\n                 */\n                toggleRowSelection: function (rowEntity, evt) {\n                  var row = grid.getRow(rowEntity);\n                  if (row !== null) {\n                    service.toggleRowSelection(grid, row, evt, grid.options.multiSelect, grid.options.noUnselect);\n                  }\n                },\n                /**\n                 * @ngdoc function\n                 * @name selectRow\n                 * @methodOf  ui.grid.selection.api:PublicApi\n                 * @description Select the data row\n                 * @param {object} rowEntity gridOptions.data[] array instance\n                 * @param {Event} evt object if raised from an event\n                 */\n                selectRow: function (rowEntity, evt) {\n                  var row = grid.getRow(rowEntity);\n                  if (row !== null && !row.isSelected) {\n                    service.toggleRowSelection(grid, row, evt, grid.options.multiSelect, grid.options.noUnselect);\n                  }\n                },\n                /**\n                 * @ngdoc function\n                 * @name selectRowByVisibleIndex\n                 * @methodOf  ui.grid.selection.api:PublicApi\n                 * @description Select the specified row by visible index (i.e. if you\n                 * specify row 0 you'll get the first visible row selected).  In this context\n                 * visible means of those rows that are theoretically visible (i.e. not filtered),\n                 * rather than rows currently rendered on the screen.\n                 * @param {number} rowNum index within the rowsVisible array\n                 * @param {Event} evt object if raised from an event\n                 */\n                selectRowByVisibleIndex: function (rowNum, evt) {\n                  var row = grid.renderContainers.body.visibleRowCache[rowNum];\n                  if (row !== null && typeof (row) !== 'undefined' && !row.isSelected) {\n                    service.toggleRowSelection(grid, row, evt, grid.options.multiSelect, grid.options.noUnselect);\n                  }\n                },\n                /**\n                 * @ngdoc function\n                 * @name unSelectRow\n                 * @methodOf  ui.grid.selection.api:PublicApi\n                 * @description UnSelect the data row\n                 * @param {object} rowEntity gridOptions.data[] array instance\n                 * @param {Event} evt object if raised from an event\n                 */\n                unSelectRow: function (rowEntity, evt) {\n                  var row = grid.getRow(rowEntity);\n                  if (row !== null && row.isSelected) {\n                    service.toggleRowSelection(grid, row, evt, grid.options.multiSelect, grid.options.noUnselect);\n                  }\n                },\n                /**\n                 * @ngdoc function\n                 * @name unSelectRowByVisibleIndex\n                 * @methodOf  ui.grid.selection.api:PublicApi\n                 * @description Unselect the specified row by visible index (i.e. if you\n                 * specify row 0 you'll get the first visible row unselected).  In this context\n                 * visible means of those rows that are theoretically visible (i.e. not filtered),\n                 * rather than rows currently rendered on the screen.\n                 * @param {number} rowNum index within the rowsVisible array\n                 * @param {Event} evt object if raised from an event\n                 */\n                unSelectRowByVisibleIndex: function (rowNum, evt) {\n                  var row = grid.renderContainers.body.visibleRowCache[rowNum];\n                  if (row !== null && typeof (row) !== 'undefined' && row.isSelected) {\n                    service.toggleRowSelection(grid, row, evt, grid.options.multiSelect, grid.options.noUnselect);\n                  }\n                },\n                /**\n                 * @ngdoc function\n                 * @name selectAllRows\n                 * @methodOf  ui.grid.selection.api:PublicApi\n                 * @description Selects all rows.  Does nothing if multiSelect = false\n                 * @param {Event} evt object if raised from an event\n                 */\n                selectAllRows: function (evt) {\n                  if (grid.options.multiSelect !== false) {\n                    var changedRows = [];\n                    grid.rows.forEach(function (row) {\n                      if (!row.isSelected && row.enableSelection !== false && grid.options.isRowSelectable(row) !== false) {\n                        row.setSelected(true);\n                        service.decideRaiseSelectionEvent(grid, row, changedRows, evt);\n                      }\n                    });\n                    service.decideRaiseSelectionBatchEvent(grid, changedRows, evt);\n                    grid.selection.selectAll = true;\n                  }\n                },\n                /**\n                 * @ngdoc function\n                 * @name selectAllVisibleRows\n                 * @methodOf  ui.grid.selection.api:PublicApi\n                 * @description Selects all visible rows.  Does nothing if multiSelect = false\n                 * @param {Event} evt object if raised from an event\n                 */\n                selectAllVisibleRows: function (evt) {\n                  if (grid.options.multiSelect !== false) {\n                    var changedRows = [];\n                    grid.rows.forEach(function(row) {\n                      if (row.visible) {\n                        if (!row.isSelected && row.enableSelection !== false && grid.options.isRowSelectable(row) !== false) {\n                          row.setSelected(true);\n                          service.decideRaiseSelectionEvent(grid, row, changedRows, evt);\n                        }\n                      } else if (row.isSelected) {\n                        row.setSelected(false);\n                        service.decideRaiseSelectionEvent(grid, row, changedRows, evt);\n                      }\n                    });\n                    service.decideRaiseSelectionBatchEvent(grid, changedRows, evt);\n                    grid.selection.selectAll = true;\n                  }\n                },\n                /**\n                 * @ngdoc function\n                 * @name clearSelectedRows\n                 * @methodOf  ui.grid.selection.api:PublicApi\n                 * @description Unselects all rows\n                 * @param {Event} evt object if raised from an event\n                 */\n                clearSelectedRows: function (evt) {\n                  service.clearSelectedRows(grid, evt);\n                },\n                /**\n                 * @ngdoc function\n                 * @name getSelectedRows\n                 * @methodOf  ui.grid.selection.api:PublicApi\n                 * @description returns all selectedRow's entity references\n                 */\n                getSelectedRows: function () {\n                  return service.getSelectedRows(grid).map(function (gridRow) {\n                    return gridRow.entity;\n                  }).filter(function (entity) {\n                    return entity.hasOwnProperty('$$hashKey');\n                  });\n                },\n                /**\n                 * @ngdoc function\n                 * @name getSelectedGridRows\n                 * @methodOf  ui.grid.selection.api:PublicApi\n                 * @description returns all selectedRow's as gridRows\n                 */\n                getSelectedGridRows: function () {\n                  return service.getSelectedRows(grid);\n                },\n                /**\n                 * @ngdoc function\n                 * @name getSelectedCount\n                 * @methodOf  ui.grid.selection.api:PublicApi\n                 * @description returns the number of rows selected\n                 */\n                getSelectedCount: function () {\n                  return grid.selection.selectedCount;\n                },\n                /**\n                 * @ngdoc function\n                 * @name setMultiSelect\n                 * @methodOf  ui.grid.selection.api:PublicApi\n                 * @description Sets the current gridOption.multiSelect to true or false\n                 * @param {bool} multiSelect true to allow multiple rows\n                 */\n                setMultiSelect: function (multiSelect) {\n                  grid.options.multiSelect = multiSelect;\n                },\n                /**\n                 * @ngdoc function\n                 * @name setModifierKeysToMultiSelect\n                 * @methodOf  ui.grid.selection.api:PublicApi\n                 * @description Sets the current gridOption.modifierKeysToMultiSelect to true or false\n                 * @param {bool} modifierKeysToMultiSelect true to only allow multiple rows when using ctrlKey or shiftKey is used\n                 */\n                setModifierKeysToMultiSelect: function (modifierKeysToMultiSelect) {\n                  grid.options.modifierKeysToMultiSelect = modifierKeysToMultiSelect;\n                },\n                /**\n                 * @ngdoc function\n                 * @name getSelectAllState\n                 * @methodOf  ui.grid.selection.api:PublicApi\n                 * @description Returns whether or not the selectAll checkbox is currently ticked.  The\n                 * grid doesn't automatically select rows when you add extra data - so when you add data\n                 * you need to explicitly check whether the selectAll is set, and then call setVisible rows\n                 * if it is\n                 */\n                getSelectAllState: function () {\n                  return grid.selection.selectAll;\n                }\n\n              }\n            }\n          };\n\n          grid.api.registerEventsFromObject(publicApi.events);\n\n          grid.api.registerMethodsFromObject(publicApi.methods);\n\n        },\n\n        defaultGridOptions: function (gridOptions) {\n          //default option to true unless it was explicitly set to false\n          /**\n           *  @ngdoc object\n           *  @name ui.grid.selection.api:GridOptions\n           *\n           *  @description GridOptions for selection feature, these are available to be\n           *  set using the ui-grid {@link ui.grid.class:GridOptions gridOptions}\n           */\n\n          /**\n           *  @ngdoc object\n           *  @name enableRowSelection\n           *  @propertyOf  ui.grid.selection.api:GridOptions\n           *  @description Enable row selection for entire grid.\n           *  <br/>Defaults to true\n           */\n          gridOptions.enableRowSelection = gridOptions.enableRowSelection !== false;\n          /**\n           *  @ngdoc object\n           *  @name multiSelect\n           *  @propertyOf  ui.grid.selection.api:GridOptions\n           *  @description Enable multiple row selection for entire grid\n           *  <br/>Defaults to true\n           */\n          gridOptions.multiSelect = gridOptions.multiSelect !== false;\n          /**\n           *  @ngdoc object\n           *  @name noUnselect\n           *  @propertyOf  ui.grid.selection.api:GridOptions\n           *  @description Prevent a row from being unselected.  Works in conjunction\n           *  with `multiselect = false` and `gridApi.selection.selectRow()` to allow\n           *  you to create a single selection only grid - a row is always selected, you\n           *  can only select different rows, you can't unselect the row.\n           *  <br/>Defaults to false\n           */\n          gridOptions.noUnselect = gridOptions.noUnselect === true;\n          /**\n           *  @ngdoc object\n           *  @name modifierKeysToMultiSelect\n           *  @propertyOf  ui.grid.selection.api:GridOptions\n           *  @description Enable multiple row selection only when using the ctrlKey or shiftKey. Requires multiSelect to be true.\n           *  <br/>Defaults to false\n           */\n          gridOptions.modifierKeysToMultiSelect = gridOptions.modifierKeysToMultiSelect === true;\n          /**\n           *  @ngdoc object\n           *  @name enableRowHeaderSelection\n           *  @propertyOf  ui.grid.selection.api:GridOptions\n           *  @description Enable a row header to be used for selection\n           *  <br/>Defaults to true\n           */\n          gridOptions.enableRowHeaderSelection = gridOptions.enableRowHeaderSelection !== false;\n          /**\n           *  @ngdoc object\n           *  @name enableFullRowSelection\n           *  @propertyOf  ui.grid.selection.api:GridOptions\n           *  @description Enable selection by clicking anywhere on the row.  Defaults to\n           *  false if `enableRowHeaderSelection` is true, otherwise defaults to false.\n           */\n          if (typeof (gridOptions.enableFullRowSelection) === 'undefined') {\n            gridOptions.enableFullRowSelection = !gridOptions.enableRowHeaderSelection;\n          }\n          /**\n           *  @ngdoc object\n           *  @name enableSelectAll\n           *  @propertyOf  ui.grid.selection.api:GridOptions\n           *  @description Enable the select all checkbox at the top of the selectionRowHeader\n           *  <br/>Defaults to true\n           */\n          gridOptions.enableSelectAll = gridOptions.enableSelectAll !== false;\n          /**\n           *  @ngdoc object\n           *  @name enableSelectionBatchEvent\n           *  @propertyOf  ui.grid.selection.api:GridOptions\n           *  @description If selected rows are changed in bulk, either via the API or\n           *  via the selectAll checkbox, then a separate event is fired.  Setting this\n           *  option to false will cause the rowSelectionChanged event to be called multiple times\n           *  instead\n           *  <br/>Defaults to true\n           */\n          gridOptions.enableSelectionBatchEvent = gridOptions.enableSelectionBatchEvent !== false;\n          /**\n           *  @ngdoc object\n           *  @name selectionRowHeaderWidth\n           *  @propertyOf  ui.grid.selection.api:GridOptions\n           *  @description can be used to set a custom width for the row header selection column\n           *  <br/>Defaults to 30px\n           */\n          gridOptions.selectionRowHeaderWidth = angular.isDefined(gridOptions.selectionRowHeaderWidth) ? gridOptions.selectionRowHeaderWidth : 30;\n\n          /**\n           *  @ngdoc object\n           *  @name enableFooterTotalSelected\n           *  @propertyOf  ui.grid.selection.api:GridOptions\n           *  @description Shows the total number of selected items in footer if true.\n           *  <br/>Defaults to true.\n           *  <br/>GridOptions.showGridFooter must also be set to true.\n           */\n          gridOptions.enableFooterTotalSelected = gridOptions.enableFooterTotalSelected !== false;\n\n          /**\n           *  @ngdoc object\n           *  @name isRowSelectable\n           *  @propertyOf  ui.grid.selection.api:GridOptions\n           *  @description Makes it possible to specify a method that evaluates for each row and sets its \"enableSelection\" property.\n           */\n\n          gridOptions.isRowSelectable = angular.isDefined(gridOptions.isRowSelectable) ? gridOptions.isRowSelectable : angular.noop;\n        },\n\n        /**\n         * @ngdoc function\n         * @name toggleRowSelection\n         * @methodOf  ui.grid.selection.service:uiGridSelectionService\n         * @description Toggles row as selected or unselected\n         * @param {Grid} grid grid object\n         * @param {GridRow} row row to select or deselect\n         * @param {Event} evt object if resulting from event\n         * @param {bool} multiSelect if false, only one row at time can be selected\n         * @param {bool} noUnselect if true then rows cannot be unselected\n         */\n        toggleRowSelection: function (grid, row, evt, multiSelect, noUnselect) {\n          var selected = row.isSelected;\n\n          if (row.enableSelection === false) {\n            return;\n          }\n\n          var selectedRows;\n          if (!multiSelect && !selected) {\n            service.clearSelectedRows(grid, evt);\n          } else if (!multiSelect && selected) {\n            selectedRows = service.getSelectedRows(grid);\n            if (selectedRows.length > 1) {\n              selected = false; // Enable reselect of the row\n              service.clearSelectedRows(grid, evt);\n            }\n          }\n\n          if (selected && noUnselect) {\n            // don't deselect the row\n          } else {\n            row.setSelected(!selected);\n            if (row.isSelected === true) {\n              grid.selection.lastSelectedRow = row;\n            }\n\n            selectedRows = service.getSelectedRows(grid);\n            grid.selection.selectAll = grid.rows.length === selectedRows.length;\n\n            grid.api.selection.raise.rowSelectionChanged(row, evt);\n          }\n        },\n        /**\n         * @ngdoc function\n         * @name shiftSelect\n         * @methodOf  ui.grid.selection.service:uiGridSelectionService\n         * @description selects a group of rows from the last selected row using the shift key\n         * @param {Grid} grid grid object\n         * @param {GridRow} row clicked row\n         * @param {Event} evt object if raised from an event\n         * @param {bool} multiSelect if false, does nothing this is for multiSelect only\n         */\n        shiftSelect: function (grid, row, evt, multiSelect) {\n          if (!multiSelect) {\n            return;\n          }\n          var selectedRows = service.getSelectedRows(grid);\n          var fromRow = selectedRows.length > 0 ? grid.renderContainers.body.visibleRowCache.indexOf(grid.selection.lastSelectedRow) : 0;\n          var toRow = grid.renderContainers.body.visibleRowCache.indexOf(row);\n          //reverse select direction\n          if (fromRow > toRow) {\n            var tmp = fromRow;\n            fromRow = toRow;\n            toRow = tmp;\n          }\n\n          var changedRows = [];\n          for (var i = fromRow; i <= toRow; i++) {\n            var rowToSelect = grid.renderContainers.body.visibleRowCache[i];\n            if (rowToSelect) {\n              if (!rowToSelect.isSelected && rowToSelect.enableSelection !== false) {\n                rowToSelect.setSelected(true);\n                grid.selection.lastSelectedRow = rowToSelect;\n                service.decideRaiseSelectionEvent(grid, rowToSelect, changedRows, evt);\n              }\n            }\n          }\n          service.decideRaiseSelectionBatchEvent(grid, changedRows, evt);\n        },\n        /**\n         * @ngdoc function\n         * @name getSelectedRows\n         * @methodOf  ui.grid.selection.service:uiGridSelectionService\n         * @description Returns all the selected rows\n         * @param {Grid} grid grid object\n         */\n        getSelectedRows: function (grid) {\n          return grid.rows.filter(function (row) {\n            return row.isSelected;\n          });\n        },\n\n        /**\n         * @ngdoc function\n         * @name clearSelectedRows\n         * @methodOf  ui.grid.selection.service:uiGridSelectionService\n         * @description Clears all selected rows\n         * @param {Grid} grid grid object\n         * @param {Event} evt object if raised from an event\n         */\n        clearSelectedRows: function (grid, evt) {\n          var changedRows = [];\n          service.getSelectedRows(grid).forEach(function (row) {\n            if (row.isSelected) {\n              row.setSelected(false);\n              service.decideRaiseSelectionEvent(grid, row, changedRows, evt);\n            }\n          });\n          service.decideRaiseSelectionBatchEvent(grid, changedRows, evt);\n          grid.selection.selectAll = false;\n          grid.selection.selectedCount = 0;\n        },\n\n        /**\n         * @ngdoc function\n         * @name decideRaiseSelectionEvent\n         * @methodOf  ui.grid.selection.service:uiGridSelectionService\n         * @description Decides whether to raise a single event or a batch event\n         * @param {Grid} grid grid object\n         * @param {GridRow} row row that has changed\n         * @param {array} changedRows an array to which we can append the changed\n         * @param {Event} evt object if raised from an event\n         * row if we're doing batch events\n         */\n        decideRaiseSelectionEvent: function (grid, row, changedRows, evt) {\n          if (!grid.options.enableSelectionBatchEvent) {\n            grid.api.selection.raise.rowSelectionChanged(row, evt);\n          } else {\n            changedRows.push(row);\n          }\n        },\n\n        /**\n         * @ngdoc function\n         * @name raiseSelectionEvent\n         * @methodOf  ui.grid.selection.service:uiGridSelectionService\n         * @description Decides whether we need to raise a batch event, and\n         * raises it if we do.\n         * @param {Grid} grid grid object\n         * @param {array} changedRows an array of changed rows, only populated\n         * @param {Event} evt object if raised from an event\n         * if we're doing batch events\n         */\n        decideRaiseSelectionBatchEvent: function (grid, changedRows, evt) {\n          if (changedRows.length > 0) {\n            grid.api.selection.raise.rowSelectionChangedBatch(changedRows, evt);\n          }\n        }\n      };\n\n      return service;\n\n    }]);\n\n  /**\n   *  @ngdoc directive\n   *  @name ui.grid.selection.directive:uiGridSelection\n   *  @element div\n   *  @restrict A\n   *\n   *  @description Adds selection features to grid\n   *\n   *  @example\n   <example module=\"app\">\n   <file name=\"app.js\">\n   var app = angular.module('app', ['ui.grid', 'ui.grid.selection']);\n\n   app.controller('MainCtrl', ['$scope', function ($scope) {\n      $scope.data = [\n        { name: 'Bob', title: 'CEO' },\n            { name: 'Frank', title: 'Lowly Developer' }\n      ];\n\n      $scope.columnDefs = [\n        {name: 'name', enableCellEdit: true},\n        {name: 'title', enableCellEdit: true}\n      ];\n    }]);\n   </file>\n   <file name=\"index.html\">\n   <div ng-controller=\"MainCtrl\">\n   <div ui-grid=\"{ data: data, columnDefs: columnDefs }\" ui-grid-selection></div>\n   </div>\n   </file>\n   </example>\n   */\n  module.directive('uiGridSelection', ['uiGridSelectionConstants', 'uiGridSelectionService', '$templateCache', 'uiGridConstants',\n    function (uiGridSelectionConstants, uiGridSelectionService, $templateCache, uiGridConstants) {\n      return {\n        replace: true,\n        priority: 0,\n        require: '^uiGrid',\n        scope: false,\n        compile: function () {\n          return {\n            pre: function ($scope, $elm, $attrs, uiGridCtrl) {\n              uiGridSelectionService.initializeGrid(uiGridCtrl.grid);\n              if (uiGridCtrl.grid.options.enableRowHeaderSelection) {\n                var selectionRowHeaderDef = {\n                  name: uiGridSelectionConstants.selectionRowHeaderColName,\n                  displayName: '',\n                  width: uiGridCtrl.grid.options.selectionRowHeaderWidth,\n                  minWidth: 10,\n                  cellTemplate: 'ui-grid/selectionRowHeader',\n                  headerCellTemplate: 'ui-grid/selectionHeaderCell',\n                  enableColumnResizing: false,\n                  enableColumnMenu: false,\n                  exporterSuppressExport: true,\n                  allowCellFocus: true\n                };\n\n                uiGridCtrl.grid.addRowHeaderColumn(selectionRowHeaderDef, 0);\n              }\n\n              var processorSet = false;\n\n              var processSelectableRows = function (rows) {\n                rows.forEach(function (row) {\n                  row.enableSelection = uiGridCtrl.grid.options.isRowSelectable(row);\n                });\n                return rows;\n              };\n\n              var updateOptions = function () {\n                if (uiGridCtrl.grid.options.isRowSelectable !== angular.noop && processorSet !== true) {\n                  uiGridCtrl.grid.registerRowsProcessor(processSelectableRows, 500);\n                  processorSet = true;\n                }\n              };\n\n              updateOptions();\n\n              var dataChangeDereg = uiGridCtrl.grid.registerDataChangeCallback(updateOptions, [uiGridConstants.dataChange.OPTIONS]);\n\n              $scope.$on('$destroy', dataChangeDereg);\n            },\n            post: function ($scope, $elm, $attrs, uiGridCtrl) {\n\n            }\n          };\n        }\n      };\n    }]);\n\n  module.directive('uiGridSelectionRowHeaderButtons', ['$templateCache', 'uiGridSelectionService', 'gridUtil',\n    function ($templateCache, uiGridSelectionService, gridUtil) {\n      return {\n        replace: true,\n        restrict: 'E',\n        template: $templateCache.get('ui-grid/selectionRowHeaderButtons'),\n        scope: true,\n        require: '^uiGrid',\n        link: function ($scope, $elm, $attrs, uiGridCtrl) {\n          var self = uiGridCtrl.grid;\n          $scope.selectButtonClick = selectButtonClick;\n          $scope.selectButtonKeyDown = selectButtonKeyDown;\n\n          // On IE, prevent mousedowns on the select button from starting a selection.\n          //   If this is not done and you shift+click on another row, the browser will select a big chunk of text\n          if (gridUtil.detectBrowser() === 'ie') {\n            $elm.on('mousedown', selectButtonMouseDown);\n          }\n\n          function selectButtonKeyDown(row, evt) {\n            if (evt.keyCode === 32) {\n              evt.preventDefault();\n              selectButtonClick(row, evt);\n            }\n          }\n\n          function selectButtonClick(row, evt) {\n            evt.stopPropagation();\n\n            if (evt.shiftKey) {\n              uiGridSelectionService.shiftSelect(self, row, evt, self.options.multiSelect);\n            }\n            else if (evt.ctrlKey || evt.metaKey) {\n              uiGridSelectionService.toggleRowSelection(self, row, evt, self.options.multiSelect, self.options.noUnselect);\n            }\n            else if (row.groupHeader) {\n              for (var i = 0; i < row.treeNode.children.length; i++) {\n                uiGridSelectionService.toggleRowSelection(self, row.treeNode.children[i].row, evt, self.options.multiSelect, self.options.noUnselect);\n              }\n            }\n            else {\n              uiGridSelectionService.toggleRowSelection(self, row, evt, (self.options.multiSelect && !self.options.modifierKeysToMultiSelect), self.options.noUnselect);\n            }\n          }\n\n          function selectButtonMouseDown(evt) {\n            if (evt.ctrlKey || evt.shiftKey) {\n              evt.target.onselectstart = function () { return false; };\n              window.setTimeout(function () { evt.target.onselectstart = null; }, 0);\n            }\n          }\n\n          $scope.$on('$destroy', function unbindEvents() {\n            $elm.off();\n          });\n        }\n      };\n    }]);\n\n  module.directive('uiGridSelectionSelectAllButtons', ['$templateCache', 'uiGridSelectionService',\n    function ($templateCache, uiGridSelectionService) {\n      return {\n        replace: true,\n        restrict: 'E',\n        template: $templateCache.get('ui-grid/selectionSelectAllButtons'),\n        scope: false,\n        link: function ($scope, $elm, $attrs, uiGridCtrl) {\n          var self = $scope.col.grid;\n\n          $scope.headerButtonKeyDown = function (evt) {\n            if (evt.keyCode === 32 || evt.keyCode === 13) {\n              evt.preventDefault();\n              $scope.headerButtonClick(evt);\n            }\n          };\n\n          $scope.headerButtonClick = function (evt) {\n            if (self.selection.selectAll) {\n              uiGridSelectionService.clearSelectedRows(self, evt);\n              if (self.options.noUnselect) {\n                self.api.selection.selectRowByVisibleIndex(0, evt);\n              }\n              self.selection.selectAll = false;\n            } else if (self.options.multiSelect) {\n              self.api.selection.selectAllVisibleRows(evt);\n              self.selection.selectAll = true;\n            }\n          };\n        }\n      };\n    }]);\n\n  /**\n   *  @ngdoc directive\n   *  @name ui.grid.selection.directive:uiGridViewport\n   *  @element div\n   *\n   *  @description Stacks on top of ui.grid.uiGridViewport to alter the attributes used\n   *  for the grid row\n   */\n  module.directive('uiGridViewport',\n    ['$compile', 'uiGridConstants', 'uiGridSelectionConstants', 'gridUtil', '$parse', 'uiGridSelectionService',\n      function ($compile, uiGridConstants, uiGridSelectionConstants, gridUtil, $parse, uiGridSelectionService) {\n        return {\n          priority: -200, // run after default  directive\n          scope: false,\n          compile: function ($elm, $attrs) {\n            var rowRepeatDiv = angular.element($elm[0].querySelector('.ui-grid-canvas:not(.ui-grid-empty-base-layer-container)').children[0]);\n\n            var existingNgClass = rowRepeatDiv.attr(\"ng-class\");\n            var newNgClass = '';\n            if (existingNgClass) {\n              newNgClass = existingNgClass.slice(0, -1) + \",'ui-grid-row-selected': row.isSelected}\";\n            } else {\n              newNgClass = \"{'ui-grid-row-selected': row.isSelected}\";\n            }\n            rowRepeatDiv.attr(\"ng-class\", newNgClass);\n\n            return {\n              pre: function ($scope, $elm, $attrs, controllers) {\n\n              },\n              post: function ($scope, $elm, $attrs, controllers) {\n              }\n            };\n          }\n        };\n      }]);\n\n  /**\n   *  @ngdoc directive\n   *  @name ui.grid.selection.directive:uiGridCell\n   *  @element div\n   *  @restrict A\n   *\n   *  @description Stacks on top of ui.grid.uiGridCell to provide selection feature\n   */\n  module.directive('uiGridCell',\n    ['$compile', 'uiGridConstants', 'uiGridSelectionConstants', 'gridUtil', '$parse', 'uiGridSelectionService', '$timeout',\n      function ($compile, uiGridConstants, uiGridSelectionConstants, gridUtil, $parse, uiGridSelectionService, $timeout) {\n        return {\n          priority: -200, // run after default uiGridCell directive\n          restrict: 'A',\n          require: '?^uiGrid',\n          scope: false,\n          link: function ($scope, $elm, $attrs, uiGridCtrl) {\n\n            var touchStartTime = 0;\n            var touchTimeout = 300;\n\n            // Bind to keydown events in the render container\n            if (uiGridCtrl.grid.api.cellNav) {\n\n              uiGridCtrl.grid.api.cellNav.on.viewPortKeyDown($scope, function (evt, rowCol) {\n                if (rowCol === null ||\n                  rowCol.row !== $scope.row ||\n                  rowCol.col !== $scope.col) {\n                  return;\n                }\n\n                if (evt.keyCode === 32 && $scope.col.colDef.name === \"selectionRowHeaderCol\") {\n                  evt.preventDefault();\n                  uiGridSelectionService.toggleRowSelection($scope.grid, $scope.row, evt, ($scope.grid.options.multiSelect && !$scope.grid.options.modifierKeysToMultiSelect), $scope.grid.options.noUnselect);\n                  $scope.$apply();\n                }\n\n                //  uiGridCellNavService.scrollToIfNecessary(uiGridCtrl.grid, rowCol.row, rowCol.col);\n              });\n            }\n\n            //$elm.bind('keydown', function (evt) {\n            //  if (evt.keyCode === 32 && $scope.col.colDef.name === \"selectionRowHeaderCol\") {\n            //    uiGridSelectionService.toggleRowSelection($scope.grid, $scope.row, evt, ($scope.grid.options.multiSelect && !$scope.grid.options.modifierKeysToMultiSelect), $scope.grid.options.noUnselect);\n            //    $scope.$apply();\n            //  }\n            //});\n\n            var selectCells = function (evt) {\n              // if you click on expandable icon doesn't trigger selection\n              if (evt.target.className === \"ui-grid-icon-minus-squared\" || evt.target.className === \"ui-grid-icon-plus-squared\") {\n                return;\n              }\n\n              // if we get a click, then stop listening for touchend\n              $elm.off('touchend', touchEnd);\n\n              if (evt.shiftKey) {\n                uiGridSelectionService.shiftSelect($scope.grid, $scope.row, evt, $scope.grid.options.multiSelect);\n              }\n              else if (evt.ctrlKey || evt.metaKey) {\n                uiGridSelectionService.toggleRowSelection($scope.grid, $scope.row, evt, $scope.grid.options.multiSelect, $scope.grid.options.noUnselect);\n              }\n              else {\n                uiGridSelectionService.toggleRowSelection($scope.grid, $scope.row, evt, ($scope.grid.options.multiSelect && !$scope.grid.options.modifierKeysToMultiSelect), $scope.grid.options.noUnselect);\n              }\n              $scope.$apply();\n\n              // don't re-enable the touchend handler for a little while - some devices generate both, and it will\n              // take a little while to move your hand from the mouse to the screen if you have both modes of input\n              $timeout(function () {\n                $elm.on('touchend', touchEnd);\n              }, touchTimeout);\n            };\n\n            var touchStart = function (evt) {\n              touchStartTime = (new Date()).getTime();\n\n              // if we get a touch event, then stop listening for click\n              $elm.off('click', selectCells);\n            };\n\n            var touchEnd = function (evt) {\n              var touchEndTime = (new Date()).getTime();\n              var touchTime = touchEndTime - touchStartTime;\n\n              if (touchTime < touchTimeout) {\n                // short touch\n                selectCells(evt);\n              }\n\n              // don't re-enable the click handler for a little while - some devices generate both, and it will\n              // take a little while to move your hand from the screen to the mouse if you have both modes of input\n              $timeout(function () {\n                $elm.on('click', selectCells);\n              }, touchTimeout);\n            };\n\n            function registerRowSelectionEvents() {\n              if ($scope.grid.options.enableRowSelection && $scope.grid.options.enableFullRowSelection && !$elm.hasClass('ui-grid-row-header-cell')) {\n                $elm.addClass('ui-grid-disable-selection');\n                $elm.on('touchstart', touchStart);\n                $elm.on('touchend', touchEnd);\n                $elm.on('click', selectCells);\n\n                $scope.registered = true;\n              }\n            }\n\n            function deregisterRowSelectionEvents() {\n              if ($scope.registered) {\n                $elm.removeClass('ui-grid-disable-selection');\n\n                $elm.off('touchstart', touchStart);\n                $elm.off('touchend', touchEnd);\n                $elm.off('click', selectCells);\n\n                $scope.registered = false;\n              }\n            }\n\n            registerRowSelectionEvents();\n            // register a dataChange callback so that we can change the selection configuration dynamically\n            // if the user changes the options\n            var dataChangeDereg = $scope.grid.registerDataChangeCallback(function () {\n              if ($scope.grid.options.enableRowSelection && $scope.grid.options.enableFullRowSelection &&\n                !$scope.registered) {\n                registerRowSelectionEvents();\n              } else if ((!$scope.grid.options.enableRowSelection || !$scope.grid.options.enableFullRowSelection) &&\n                $scope.registered) {\n                deregisterRowSelectionEvents();\n              }\n            }, [uiGridConstants.dataChange.OPTIONS]);\n\n            $elm.on('$destroy', dataChangeDereg);\n          }\n        };\n      }]);\n\n  module.directive('uiGridGridFooter', ['$compile', 'uiGridConstants', 'gridUtil', function ($compile, uiGridConstants, gridUtil) {\n    return {\n      restrict: 'EA',\n      replace: true,\n      priority: -1000,\n      require: '^uiGrid',\n      scope: true,\n      compile: function ($elm, $attrs) {\n        return {\n          pre: function ($scope, $elm, $attrs, uiGridCtrl) {\n\n            if (!uiGridCtrl.grid.options.showGridFooter) {\n              return;\n            }\n\n\n            gridUtil.getTemplate('ui-grid/gridFooterSelectedItems')\n              .then(function (contents) {\n                var template = angular.element(contents);\n\n                var newElm = $compile(template)($scope);\n\n                angular.element($elm[0].getElementsByClassName('ui-grid-grid-footer')[0]).append(newElm);\n              });\n          },\n\n          post: function ($scope, $elm, $attrs, controllers) {\n\n          }\n        };\n      }\n    };\n  }]);\n\n})();\n\n(function () {\n  'use strict';\n\n  /**\n   * @ngdoc overview\n   * @name ui.grid.treeBase\n   * @description\n   *\n   * # ui.grid.treeBase\n   *\n   * <div class=\"alert alert-warning\" role=\"alert\"><strong>Beta</strong> This feature is ready for testing, but it either hasn't seen a lot of use or has some known bugs.</div>\n   *\n   * This module provides base tree handling functions that are shared by other features, notably grouping\n   * and treeView.  It provides a tree view of the data, with nodes in that\n   * tree and leaves.\n   *\n   * Design information:\n   * -------------------\n   *\n   * The raw data that is provided must come with a $$treeLevel on any non-leaf node.  Grouping will create\n   * these on all the group header rows, treeView will expect these to be set in the raw data by the user.\n   * TreeBase will run a rowsProcessor that:\n   *  - builds `treeBase.tree` out of the provided rows\n   *  - permits a recursive sort of the tree\n   *  - maintains the expand/collapse state of each node\n   *  - provides the expand/collapse all button and the expand/collapse buttons\n   *  - maintains the count of children for each node\n   *\n   * Each row is updated with a link to the tree node that represents it.  Refer {@link ui.grid.treeBase.grid:treeBase.tree tree documentation}\n   * for information.\n   *\n   *  TreeBase adds information to the rows\n   *  - treeLevel: if present and > -1 tells us the level (level 0 is the top level)\n   *  - treeNode: pointer to the node in the grid.treeBase.tree that refers\n   *    to this row, allowing us to manipulate the state\n   *\n   * Since the logic is baked into the rowsProcessors, it should get triggered whenever\n   * row order or filtering or anything like that is changed.  We recall the expanded state\n   * across invocations of the rowsProcessors by the reference to the treeNode on the individual\n   * rows.  We rebuild the tree itself quite frequently, when we do this we use the saved treeNodes to\n   * get the state, but we overwrite the other data in that treeNode.\n   *\n   * By default rows are collapsed, which means all data rows have their visible property\n   * set to false, and only level 0 group rows are set to visible.\n   *\n   * We rely on the rowsProcessors to do the actual expanding and collapsing, so we set the flags we want into\n   * grid.treeBase.tree, then call refresh.  This is because we can't easily change the visible\n   * row cache without calling the processors, and once we've built the logic into the rowProcessors we may as\n   * well use it all the time.\n   *\n   * Tree base provides sorting (on non-grouped columns).\n   *\n   * Sorting works in two passes.  The standard sorting is performed for any columns that are important to building\n   * the tree (for example, any grouped columns).  Then after the tree is built, a recursive tree sort is performed\n   * for the remaining sort columns (including the original sort) - these columns are sorted within each tree level\n   * (so all the level 1 nodes are sorted, then all the level 2 nodes within each level 1 node etc).\n   *\n   * To achieve this we make use of the `ignoreSort` property on the sort configuration.  The parent feature (treeView or grouping)\n   * must provide a rowsProcessor that runs with very low priority (typically in the 60-65 range), and that sets\n   * the `ignoreSort`on any sort that it wants to run on the tree.  TreeBase will clear the ignoreSort on all sorts - so it\n   * will turn on any sorts that haven't run.  It will then call a recursive sort on the tree.\n   *\n   * Tree base provides treeAggregation.  It checks the treeAggregation configuration on each column, and aggregates based on\n   * the logic provided as it builds the tree. Footer aggregation from the uiGrid core should not be used with treeBase aggregation,\n   * since it operates on all visible rows, as opposed to to leaf nodes only. Setting `showColumnFooter: true` will show the\n   * treeAggregations in the column footer.  Aggregation information will be collected in the format:\n   *\n   * ```\n   *   {\n   *     type: 'count',\n   *     value: 4,\n   *     label: 'count: ',\n   *     rendered: 'count: 4'\n   *   }\n   * ```\n   *\n   * A callback is provided to format the value once it is finalised (aka a valueFilter).\n   *\n   * <br/>\n   * <br/>\n   *\n   * <div doc-module-components=\"ui.grid.treeBase\"></div>\n   */\n\n  var module = angular.module('ui.grid.treeBase', ['ui.grid']);\n\n  /**\n   *  @ngdoc object\n   *  @name ui.grid.treeBase.constant:uiGridTreeBaseConstants\n   *\n   *  @description constants available in treeBase module.\n   *\n   *  These constants are manually copied into grouping and treeView,\n   *  as I haven't found a way to simply include them, and it's not worth\n   *  investing time in for something that changes very infrequently.\n   *\n   */\n  module.constant('uiGridTreeBaseConstants', {\n    featureName: \"treeBase\",\n    rowHeaderColName: 'treeBaseRowHeaderCol',\n    EXPANDED: 'expanded',\n    COLLAPSED: 'collapsed',\n    aggregation: {\n      COUNT: 'count',\n      SUM: 'sum',\n      MAX: 'max',\n      MIN: 'min',\n      AVG: 'avg'\n    }\n  });\n\n  /**\n   *  @ngdoc service\n   *  @name ui.grid.treeBase.service:uiGridTreeBaseService\n   *\n   *  @description Services for treeBase feature\n   */\n  /**\n   *  @ngdoc object\n   *  @name ui.grid.treeBase.api:ColumnDef\n   *\n   *  @description ColumnDef for tree feature, these are available to be\n   *  set using the ui-grid {@link ui.grid.class:GridOptions.columnDef gridOptions.columnDefs}\n   */\n\n  module.service('uiGridTreeBaseService', ['$q', 'uiGridTreeBaseConstants', 'gridUtil', 'GridRow', 'gridClassFactory', 'i18nService', 'uiGridConstants', 'rowSorter',\n  function ($q, uiGridTreeBaseConstants, gridUtil, GridRow, gridClassFactory, i18nService, uiGridConstants, rowSorter) {\n\n    var service = {\n\n      initializeGrid: function (grid, $scope) {\n\n        //add feature namespace and any properties to grid for needed\n        /**\n         *  @ngdoc object\n         *  @name ui.grid.treeBase.grid:treeBase\n         *\n         *  @description Grid properties and functions added for treeBase\n         */\n        grid.treeBase = {};\n\n        /**\n         *  @ngdoc property\n         *  @propertyOf ui.grid.treeBase.grid:treeBase\n         *  @name numberLevels\n         *\n         *  @description Total number of tree levels currently used, calculated by the rowsProcessor by\n         *  retaining the highest tree level it sees\n         */\n        grid.treeBase.numberLevels = 0;\n\n        /**\n         *  @ngdoc property\n         *  @propertyOf ui.grid.treeBase.grid:treeBase\n         *  @name expandAll\n         *\n         *  @description Whether or not the expandAll box is selected\n         */\n        grid.treeBase.expandAll = false;\n\n        /**\n         *  @ngdoc property\n         *  @propertyOf ui.grid.treeBase.grid:treeBase\n         *  @name tree\n         *\n         *  @description Tree represented as a nested array that holds the state of each node, along with a\n         *  pointer to the row.  The array order is material - we will display the children in the order\n         *  they are stored in the array\n         *\n         *  Each node stores:\n         *\n         *    - the state of this node\n         *    - an array of children of this node\n         *    - a pointer to the parent of this node (reverse pointer, allowing us to walk up the tree)\n         *    - the number of children of this node\n         *    - aggregation information calculated from the nodes\n         *\n         *  ```\n         *    [{\n         *      state: 'expanded',\n         *      row: <reference to row>,\n         *      parentRow: null,\n         *      aggregations: [{\n         *        type: 'count',\n         *        col: <gridCol>,\n         *        value: 2,\n         *        label: 'count: ',\n         *        rendered: 'count: 2'\n         *      }],\n         *      children: [\n         *        {\n         *          state: 'expanded',\n         *          row: <reference to row>,\n         *          parentRow: <reference to row>,\n         *          aggregations: [{\n         *            type: 'count',\n         *            col: '<gridCol>,\n         *            value: 4,\n         *            label: 'count: ',\n         *            rendered: 'count: 4'\n         *          }],\n         *          children: [\n         *            { state: 'expanded', row: <reference to row>, parentRow: <reference to row> },\n         *            { state: 'collapsed', row: <reference to row>, parentRow: <reference to row> },\n         *            { state: 'expanded', row: <reference to row>, parentRow: <reference to row> },\n         *            { state: 'collapsed', row: <reference to row>, parentRow: <reference to row> }\n         *          ]\n         *        },\n         *        {\n         *          state: 'collapsed',\n         *          row: <reference to row>,\n         *          parentRow: <reference to row>,\n         *          aggregations: [{\n         *            type: 'count',\n         *            col: <gridCol>,\n         *            value: 3,\n         *            label: 'count: ',\n         *            rendered: 'count: 3'\n         *          }],\n         *          children: [\n         *            { state: 'expanded', row: <reference to row>, parentRow: <reference to row> },\n         *            { state: 'collapsed', row: <reference to row>, parentRow: <reference to row> },\n         *            { state: 'expanded', row: <reference to row>, parentRow: <reference to row> }\n         *          ]\n         *        }\n         *      ]\n         *    }, {<another level 0 node maybe>} ]\n         *  ```\n         *  Missing state values are false - meaning they aren't expanded.\n         *\n         *  This is used because the rowProcessors run every time the grid is refreshed, so\n         *  we'd lose the expanded state every time the grid was refreshed.  This instead gives\n         *  us a reliable lookup that persists across rowProcessors.\n         *\n         *  This tree is rebuilt every time we run the rowsProcessors.  Since each row holds a pointer\n         *  to it's tree node we can persist expand/collapse state across calls to rowsProcessor, we discard\n         *  all transient information on the tree (children, childCount) and recalculate it\n         *\n         */\n        grid.treeBase.tree = [];\n\n        service.defaultGridOptions(grid.options);\n\n        grid.registerRowsProcessor(service.treeRows, 410);\n\n        grid.registerColumnBuilder( service.treeBaseColumnBuilder );\n\n        service.createRowHeader( grid );\n\n        /**\n         *  @ngdoc object\n         *  @name ui.grid.treeBase.api:PublicApi\n         *\n         *  @description Public Api for treeBase feature\n         */\n        var publicApi = {\n          events: {\n            treeBase: {\n              /**\n               * @ngdoc event\n               * @eventOf ui.grid.treeBase.api:PublicApi\n               * @name rowExpanded\n               * @description raised whenever a row is expanded.  If you are dynamically\n               * rendering your tree you can listen to this event, and then retrieve\n               * the children of this row and load them into the grid data.\n               *\n               * When the data is loaded the grid will automatically refresh to show these new rows\n               *\n               * <pre>\n               *      gridApi.treeBase.on.rowExpanded(scope,function(row){})\n               * </pre>\n               * @param {gridRow} row the row that was expanded.  You can also\n               * retrieve the grid from this row with row.grid\n               */\n              rowExpanded: {},\n\n              /**\n               * @ngdoc event\n               * @eventOf ui.grid.treeBase.api:PublicApi\n               * @name rowCollapsed\n               * @description raised whenever a row is collapsed.  Doesn't really have\n               * a purpose at the moment, included for symmetry\n               *\n               * <pre>\n               *      gridApi.treeBase.on.rowCollapsed(scope,function(row){})\n               * </pre>\n               * @param {gridRow} row the row that was collapsed.  You can also\n               * retrieve the grid from this row with row.grid\n               */\n              rowCollapsed: {}\n            }\n          },\n\n          methods: {\n            treeBase: {\n              /**\n               * @ngdoc function\n               * @name expandAllRows\n               * @methodOf  ui.grid.treeBase.api:PublicApi\n               * @description Expands all tree rows\n               */\n              expandAllRows: function () {\n                service.expandAllRows(grid);\n              },\n\n              /**\n               * @ngdoc function\n               * @name collapseAllRows\n               * @methodOf  ui.grid.treeBase.api:PublicApi\n               * @description collapse all tree rows\n               */\n              collapseAllRows: function () {\n                service.collapseAllRows(grid);\n              },\n\n              /**\n               * @ngdoc function\n               * @name toggleRowTreeState\n               * @methodOf  ui.grid.treeBase.api:PublicApi\n               * @description  call expand if the row is collapsed, collapse if it is expanded\n               * @param {gridRow} row the row you wish to toggle\n               */\n              toggleRowTreeState: function (row) {\n                service.toggleRowTreeState(grid, row);\n              },\n\n              /**\n               * @ngdoc function\n               * @name expandRow\n               * @methodOf  ui.grid.treeBase.api:PublicApi\n               * @description expand the immediate children of the specified row\n               * @param {gridRow} row the row you wish to expand\n               * @param {boolean} recursive true if you wish to expand the row's ancients\n               */\n              expandRow: function (row, recursive) {\n                service.expandRow(grid, row, recursive);\n              },\n\n              /**\n               * @ngdoc function\n               * @name expandRowChildren\n               * @methodOf  ui.grid.treeBase.api:PublicApi\n               * @description expand all children of the specified row\n               * @param {gridRow} row the row you wish to expand\n               */\n              expandRowChildren: function (row) {\n                service.expandRowChildren(grid, row);\n              },\n\n              /**\n               * @ngdoc function\n               * @name collapseRow\n               * @methodOf  ui.grid.treeBase.api:PublicApi\n               * @description collapse  the specified row.  When\n               * you expand the row again, all grandchildren will retain their state\n               * @param {gridRow} row the row you wish to collapse\n               */\n              collapseRow: function ( row ) {\n                service.collapseRow(grid, row);\n              },\n\n              /**\n               * @ngdoc function\n               * @name collapseRowChildren\n               * @methodOf  ui.grid.treeBase.api:PublicApi\n               * @description collapse all children of the specified row.  When\n               * you expand the row again, all grandchildren will be collapsed\n               * @param {gridRow} row the row you wish to collapse children for\n               */\n              collapseRowChildren: function ( row ) {\n                service.collapseRowChildren(grid, row);\n              },\n\n              /**\n               * @ngdoc function\n               * @name getTreeState\n               * @methodOf  ui.grid.treeBase.api:PublicApi\n               * @description Get the tree state for this grid,\n               * used by the saveState feature\n               * Returned treeState as an object\n               *   `{ expandedState: { uid: 'expanded', uid: 'collapsed' } }`\n               * where expandedState is a hash of row uid and the current expanded state\n               *\n               * @returns {object} tree state\n               *\n               * TODO - this needs work - we need an identifier that persists across instantiations,\n               * not uid.  This really means we need a row identity defined, but that won't work for\n               * grouping.  Perhaps this needs to be moved up to treeView and grouping, rather than\n               * being in base.\n               */\n              getTreeExpandedState: function () {\n                return { expandedState: service.getTreeState(grid) };\n              },\n\n              /**\n               * @ngdoc function\n               * @name setTreeState\n               * @methodOf  ui.grid.treeBase.api:PublicApi\n               * @description Set the expanded states of the tree\n               * @param {object} config the config you want to apply, in the format\n               * provided by getTreeState\n               */\n              setTreeState: function ( config ) {\n                service.setTreeState( grid, config );\n              },\n\n              /**\n               * @ngdoc function\n               * @name getRowChildren\n               * @methodOf  ui.grid.treeBase.api:PublicApi\n               * @description Get the children of the specified row\n               * @param {GridRow} row the row you want the children of\n               * @returns {Array} array of children of this row, the children\n               * are all gridRows\n               */\n              getRowChildren: function ( row ){\n                return row.treeNode.children.map( function( childNode ){\n                  return childNode.row;\n                });\n              }\n            }\n          }\n        };\n\n        grid.api.registerEventsFromObject(publicApi.events);\n\n        grid.api.registerMethodsFromObject(publicApi.methods);\n      },\n\n\n      defaultGridOptions: function (gridOptions) {\n        //default option to true unless it was explicitly set to false\n        /**\n         *  @ngdoc object\n         *  @name ui.grid.treeBase.api:GridOptions\n         *\n         *  @description GridOptions for treeBase feature, these are available to be\n         *  set using the ui-grid {@link ui.grid.class:GridOptions gridOptions}\n         */\n\n        /**\n         *  @ngdoc object\n         *  @name treeRowHeaderBaseWidth\n         *  @propertyOf  ui.grid.treeBase.api:GridOptions\n         *  @description Base width of the tree header, provides for a single level of tree.  This\n         *  is incremented by `treeIndent` for each extra level\n         *  <br/>Defaults to 30\n         */\n        gridOptions.treeRowHeaderBaseWidth = gridOptions.treeRowHeaderBaseWidth || 30;\n\n        /**\n         *  @ngdoc object\n         *  @name treeIndent\n         *  @propertyOf  ui.grid.treeBase.api:GridOptions\n         *  @description Number of pixels of indent for the icon at each tree level, wider indents are visually more pleasing,\n         *  but will make the tree row header wider\n         *  <br/>Defaults to 10\n         */\n        gridOptions.treeIndent = gridOptions.treeIndent || 10;\n\n        /**\n         *  @ngdoc object\n         *  @name showTreeRowHeader\n         *  @propertyOf  ui.grid.treeBase.api:GridOptions\n         *  @description If set to false, don't create the row header.  You'll need to programmatically control the expand\n         *  states\n         *  <br/>Defaults to true\n         */\n        gridOptions.showTreeRowHeader = gridOptions.showTreeRowHeader !== false;\n\n        /**\n         *  @ngdoc object\n         *  @name showTreeExpandNoChildren\n         *  @propertyOf  ui.grid.treeBase.api:GridOptions\n         *  @description If set to true, show the expand/collapse button even if there are no\n         *  children of a node.  You'd use this if you're planning to dynamically load the children\n         *\n         *  <br/>Defaults to true, grouping overrides to false\n         */\n        gridOptions.showTreeExpandNoChildren = gridOptions.showTreeExpandNoChildren !== false;\n\n        /**\n         *  @ngdoc object\n         *  @name treeRowHeaderAlwaysVisible\n         *  @propertyOf  ui.grid.treeBase.api:GridOptions\n         *  @description If set to true, row header even if there are no tree nodes\n         *\n         *  <br/>Defaults to true\n         */\n        gridOptions.treeRowHeaderAlwaysVisible = gridOptions.treeRowHeaderAlwaysVisible !== false;\n\n        /**\n         *  @ngdoc object\n         *  @name treeCustomAggregations\n         *  @propertyOf  ui.grid.treeBase.api:GridOptions\n         *  @description Define custom aggregation functions. The properties of this object will be\n         *  aggregation types available for use on columnDef with {@link ui.grid.treeBase.api:ColumnDef treeAggregationType} or through the column menu.\n         *  If a function defined here uses the same name as one of the native aggregations, this one will take precedence.\n         *  The object format is:\n         *\n         *  <pre>\n         *    {\n         *      aggregationName: {\n         *        label: (optional) string,\n         *        aggregationFn: function( aggregation, fieldValue, numValue, row ){...},\n         *        finalizerFn: (optional) function( aggregation ){...}\n         *      },\n         *      mean: {\n         *        label: 'mean',\n         *        aggregationFn: function( aggregation, fieldValue, numValue ){\n         *          aggregation.count = (aggregation.count || 1) + 1;\n         *          aggregation.sum = (aggregation.sum || 0) + numValue;\n         *        },\n         *        finalizerFn: function( aggregation ){\n         *          aggregation.value = aggregation.sum / aggregation.count\n         *        }\n         *      }\n         *    }\n         *  </pre>\n         *\n         *  <br/>The `finalizerFn` may be used to manipulate the value before rendering, or to\n         *  apply a custom rendered value. If `aggregation.rendered` is left undefined, the value will be\n         *  rendered. Note that the native aggregation functions use an `finalizerFn` to concatenate\n         *  the label and the value.\n         *\n         *  <br/>Defaults to {}\n         */\n        gridOptions.treeCustomAggregations = gridOptions.treeCustomAggregations || {};\n\n        /**\n         *  @ngdoc object\n         *  @name enableExpandAll\n         *  @propertyOf  ui.grid.treeBase.api:GridOptions\n         *  @description Enable the expand all button at the top of the row header\n         *\n         *  <br/>Defaults to true\n         */\n        gridOptions.enableExpandAll = gridOptions.enableExpandAll !== false;\n      },\n\n\n      /**\n       * @ngdoc function\n       * @name treeBaseColumnBuilder\n       * @methodOf  ui.grid.treeBase.service:uiGridTreeBaseService\n       * @description Sets the tree defaults based on the columnDefs\n       *\n       * @param {object} colDef columnDef we're basing on\n       * @param {GridColumn} col the column we're to update\n       * @param {object} gridOptions the options we should use\n       * @returns {promise} promise for the builder - actually we do it all inline so it's immediately resolved\n       */\n      treeBaseColumnBuilder: function (colDef, col, gridOptions) {\n\n\n        /**\n         *  @ngdoc object\n         *  @name customTreeAggregationFn\n         *  @propertyOf  ui.grid.treeBase.api:ColumnDef\n         *  @description A custom function that aggregates rows into some form of\n         *  total.  Aggregations run row-by-row, the function needs to be capable of\n         *  creating a running total.\n         *\n         *  The function will be provided the aggregation item (in which you can store running\n         *  totals), the row value that is to be aggregated, and that same row value converted to\n         *  a number (most aggregations work on numbers)\n         *  @example\n         *  <pre>\n         *    customTreeAggregationFn = function ( aggregation, fieldValue, numValue, row ){\n         *      // calculates the average of the squares of the values\n         *      if ( typeof(aggregation.count) === 'undefined' ){\n         *        aggregation.count = 0;\n         *      }\n         *      aggregation.count++;\n         *\n         *      if ( !isNaN(numValue) ){\n         *        if ( typeof(aggregation.total) === 'undefined' ){\n         *          aggregation.total = 0;\n         *        }\n         *        aggregation.total = aggregation.total + numValue * numValue;\n         *      }\n         *\n         *      aggregation.value = aggregation.total / aggregation.count;\n         *    }\n         *  </pre>\n         *  <br/>Defaults to undefined. May be overwritten by treeAggregationType, the two options should not be used together.\n         */\n        if ( typeof(colDef.customTreeAggregationFn) !== 'undefined' ){\n          col.treeAggregationFn = colDef.customTreeAggregationFn;\n        }\n\n        /**\n         *  @ngdoc object\n         *  @name treeAggregationType\n         *  @propertyOf  ui.grid.treeBase.api:ColumnDef\n         *  @description Use one of the native or grid-level aggregation methods for calculating aggregations on this column.\n         *  Native method are in the constants file and include: SUM, COUNT, MIN, MAX, AVG. This may also be the property the\n         *  name of an aggregation function defined with {@link ui.grid.treeBase.api:GridOptions treeCustomAggregations}.\n         *\n         *  <pre>\n         *      treeAggregationType = uiGridTreeBaseConstants.aggregation.SUM,\n         *    }\n         *  </pre>\n         *\n         *  If you are using aggregations you should either:\n         *\n         *   - also use grouping, in which case the aggregations are displayed in the group header, OR\n         *   - use treeView, in which case you can set `treeAggregationUpdateEntity: true` in the colDef, and\n         *     treeBase will store the aggregation information in the entity, or you can set `treeAggregationUpdateEntity: false`\n         *     in the colDef, and you need to manual retrieve the calculated aggregations from the row.treeNode.aggregations\n         *\n         *  <br/>Takes precendence over a treeAggregationFn, the two options should not be used together.\n         *  <br/>Defaults to undefined.\n         */\n        if ( typeof(colDef.treeAggregationType) !== 'undefined' ){\n          col.treeAggregation = { type: colDef.treeAggregationType };\n          if ( typeof(gridOptions.treeCustomAggregations[colDef.treeAggregationType]) !== 'undefined' ){\n            col.treeAggregationFn = gridOptions.treeCustomAggregations[colDef.treeAggregationType].aggregationFn;\n            col.treeAggregationFinalizerFn = gridOptions.treeCustomAggregations[colDef.treeAggregationType].finalizerFn;\n            col.treeAggregation.label = gridOptions.treeCustomAggregations[colDef.treeAggregationType].label;\n          } else if ( typeof(service.nativeAggregations()[colDef.treeAggregationType]) !== 'undefined' ){\n            col.treeAggregationFn = service.nativeAggregations()[colDef.treeAggregationType].aggregationFn;\n            col.treeAggregation.label = service.nativeAggregations()[colDef.treeAggregationType].label;\n          }\n        }\n\n         /**\n         *  @ngdoc object\n         *  @name treeAggregationLabel\n         *  @propertyOf  ui.grid.treeBase.api:ColumnDef\n         *  @description A custom label to use for this aggregation. If provided we don't use native i18n.\n         */\n        if ( typeof(colDef.treeAggregationLabel) !== 'undefined' ){\n          if (typeof(col.treeAggregation) === 'undefined' ){\n            col.treeAggregation = {};\n          }\n          col.treeAggregation.label = colDef.treeAggregationLabel;\n        }\n\n        /**\n         *  @ngdoc object\n         *  @name treeAggregationUpdateEntity\n         *  @propertyOf  ui.grid.treeBase.api:ColumnDef\n         *  @description Store calculated aggregations into the entity, allowing them\n         *  to be displayed in the grid using a standard cellTemplate.  This defaults to true,\n         *  if you are using grouping then you shouldn't set it to false, as then the aggregations won't\n         *  display.\n         *\n         *  If you are using treeView in most cases you'll want to set this to true.  This will result in\n         *  getCellValue returning the aggregation rather than whatever was stored in the cell attribute on\n         *  the entity.  If you want to render the underlying entity value (and do something else with the aggregation)\n         *  then you could use a custom cellTemplate to display `row.entity.myAttribute`, rather than using getCellValue.\n         *\n         *  <br/>Defaults to true\n         *\n         *  @example\n         *  <pre>\n         *    gridOptions.columns = [{\n         *      name: 'myCol',\n         *      treeAggregation: { type: uiGridTreeBaseConstants.aggregation.SUM },\n         *      treeAggregationUpdateEntity: true\n         *      cellTemplate: '<div>{{row.entity.myCol + \" \" + row.treeNode.aggregations[0].rendered}}</div>'\n         *    }];\n         * </pre>\n         */\n        col.treeAggregationUpdateEntity = colDef.treeAggregationUpdateEntity !== false;\n\n        /**\n         *  @ngdoc object\n         *  @name customTreeAggregationFinalizerFn\n         *  @propertyOf  ui.grid.treeBase.api:ColumnDef\n         *  @description A custom function that populates aggregation.rendered, this is called when\n         *  a particular aggregation has been fully calculated, and we want to render the value.\n         *\n         *  With the native aggregation options we just concatenate `aggregation.label` and\n         *  `aggregation.value`, but if you wanted to apply a filter or otherwise manipulate the label\n         *  or the value, you can do so with this function. This function will be called after the\n         *  the default `finalizerFn`.\n         *\n         *  @example\n         *  <pre>\n         *    customTreeAggregationFinalizerFn = function ( aggregation ){\n         *      aggregation.rendered = aggregation.label + aggregation.value / 100 + '%';\n         *    }\n         *  </pre>\n         *  <br/>Defaults to undefined.\n         */\n        if ( typeof(col.customTreeAggregationFinalizerFn) === 'undefined' ){\n          col.customTreeAggregationFinalizerFn = colDef.customTreeAggregationFinalizerFn;\n        }\n\n      },\n\n\n      /**\n       * @ngdoc function\n       * @name createRowHeader\n       * @methodOf  ui.grid.treeBase.service:uiGridTreeBaseService\n       * @description Create the rowHeader.  If treeRowHeaderAlwaysVisible then\n       * set it to visible, otherwise set it to invisible\n       *\n       * @param {Grid} grid grid object\n       */\n      createRowHeader: function( grid ){\n        var rowHeaderColumnDef = {\n          name: uiGridTreeBaseConstants.rowHeaderColName,\n          displayName: '',\n          width:  grid.options.treeRowHeaderBaseWidth,\n          minWidth: 10,\n          cellTemplate: 'ui-grid/treeBaseRowHeader',\n          headerCellTemplate: 'ui-grid/treeBaseHeaderCell',\n          enableColumnResizing: false,\n          enableColumnMenu: false,\n          exporterSuppressExport: true,\n          allowCellFocus: true\n        };\n\n        rowHeaderColumnDef.visible = grid.options.treeRowHeaderAlwaysVisible;\n        grid.addRowHeaderColumn(rowHeaderColumnDef, -100);\n      },\n\n\n      /**\n       * @ngdoc function\n       * @name expandAllRows\n       * @methodOf  ui.grid.treeBase.service:uiGridTreeBaseService\n       * @description Expands all nodes in the tree\n       *\n       * @param {Grid} grid grid object\n       */\n      expandAllRows: function (grid) {\n        grid.treeBase.tree.forEach( function( node ) {\n          service.setAllNodes( grid, node, uiGridTreeBaseConstants.EXPANDED);\n        });\n        grid.treeBase.expandAll = true;\n        grid.queueGridRefresh();\n      },\n\n\n      /**\n       * @ngdoc function\n       * @name collapseAllRows\n       * @methodOf  ui.grid.treeBase.service:uiGridTreeBaseService\n       * @description Collapses all nodes in the tree\n       *\n       * @param {Grid} grid grid object\n       */\n      collapseAllRows: function (grid) {\n        grid.treeBase.tree.forEach( function( node ) {\n          service.setAllNodes( grid, node, uiGridTreeBaseConstants.COLLAPSED);\n        });\n        grid.treeBase.expandAll = false;\n        grid.queueGridRefresh();\n      },\n\n\n      /**\n       * @ngdoc function\n       * @name setAllNodes\n       * @methodOf  ui.grid.treeBase.service:uiGridTreeBaseService\n       * @description Works through a subset of grid.treeBase.rowExpandedStates, setting\n       * all child nodes (and their descendents) of the provided node to the given state.\n       *\n       * Calls itself recursively on all nodes so as to achieve this.\n       *\n       * @param {Grid} grid the grid we're operating on (so we can raise events)\n       * @param {object} treeNode a node in the tree that we want to update\n       * @param {string} targetState the state we want to set it to\n       */\n      setAllNodes: function (grid, treeNode, targetState) {\n        if ( typeof(treeNode.state) !== 'undefined' && treeNode.state !== targetState ){\n          treeNode.state = targetState;\n\n          if ( targetState === uiGridTreeBaseConstants.EXPANDED ){\n            grid.api.treeBase.raise.rowExpanded(treeNode.row);\n          } else {\n            grid.api.treeBase.raise.rowCollapsed(treeNode.row);\n          }\n        }\n\n        // set all child nodes\n        if ( treeNode.children ){\n          treeNode.children.forEach(function( childNode ){\n            service.setAllNodes(grid, childNode, targetState);\n          });\n        }\n      },\n\n\n      /**\n       * @ngdoc function\n       * @name toggleRowTreeState\n       * @methodOf  ui.grid.treeBase.service:uiGridTreeBaseService\n       * @description Toggles the expand or collapse state of this grouped row, if\n       * it's a parent row\n       *\n       * @param {Grid} grid grid object\n       * @param {GridRow} row the row we want to toggle\n       */\n      toggleRowTreeState: function ( grid, row ){\n        if ( typeof(row.treeLevel) === 'undefined' || row.treeLevel === null || row.treeLevel < 0 ){\n          return;\n        }\n\n        if (row.treeNode.state === uiGridTreeBaseConstants.EXPANDED){\n          service.collapseRow(grid, row);\n        } else {\n          service.expandRow(grid, row, false);\n        }\n\n        grid.queueGridRefresh();\n      },\n\n\n      /**\n       * @ngdoc function\n       * @name expandRow\n       * @methodOf  ui.grid.treeBase.service:uiGridTreeBaseService\n       * @description Expands this specific row, showing only immediate children.\n       *\n       * @param {Grid} grid grid object\n       * @param {GridRow} row the row we want to expand\n       * @param {boolean} recursive true if you wish to expand the row's ancients\n       */\n      expandRow: function ( grid, row, recursive ){\n        if ( recursive ){\n          var parents = [];\n          while ( row && typeof(row.treeLevel) !== 'undefined' && row.treeLevel !== null && row.treeLevel >= 0 && row.treeNode.state !== uiGridTreeBaseConstants.EXPANDED ){\n            parents.push(row);\n            row = row.treeNode.parentRow;\n          }\n\n          if ( parents.length > 0 ){\n            row = parents.pop();\n            while ( row ){\n                row.treeNode.state = uiGridTreeBaseConstants.EXPANDED;\n                grid.api.treeBase.raise.rowExpanded(row);\n                row = parents.pop();\n            }\n\n            grid.treeBase.expandAll = service.allExpanded(grid.treeBase.tree);\n            grid.queueGridRefresh();\n          }\n        } else {\n          if ( typeof(row.treeLevel) === 'undefined' || row.treeLevel === null || row.treeLevel < 0 ){\n            return;\n          }\n\n          if ( row.treeNode.state !== uiGridTreeBaseConstants.EXPANDED ){\n            row.treeNode.state = uiGridTreeBaseConstants.EXPANDED;\n            grid.api.treeBase.raise.rowExpanded(row);\n            grid.treeBase.expandAll = service.allExpanded(grid.treeBase.tree);\n            grid.queueGridRefresh();\n          }\n        }\n      },\n\n\n      /**\n       * @ngdoc function\n       * @name expandRowChildren\n       * @methodOf  ui.grid.treeBase.service:uiGridTreeBaseService\n       * @description Expands this specific row, showing all children.\n       *\n       * @param {Grid} grid grid object\n       * @param {GridRow} row the row we want to expand\n       */\n      expandRowChildren: function ( grid, row ){\n        if ( typeof(row.treeLevel) === 'undefined' || row.treeLevel === null || row.treeLevel < 0 ){\n          return;\n        }\n\n        service.setAllNodes(grid, row.treeNode, uiGridTreeBaseConstants.EXPANDED);\n        grid.treeBase.expandAll = service.allExpanded(grid.treeBase.tree);\n        grid.queueGridRefresh();\n      },\n\n\n      /**\n       * @ngdoc function\n       * @name collapseRow\n       * @methodOf  ui.grid.treeBase.service:uiGridTreeBaseService\n       * @description Collapses this specific row\n       *\n       * @param {Grid} grid grid object\n       * @param {GridRow} row the row we want to collapse\n       */\n      collapseRow: function( grid, row ){\n        if ( typeof(row.treeLevel) === 'undefined' || row.treeLevel === null || row.treeLevel < 0 ){\n          return;\n        }\n\n        if ( row.treeNode.state !== uiGridTreeBaseConstants.COLLAPSED ){\n          row.treeNode.state = uiGridTreeBaseConstants.COLLAPSED;\n          grid.treeBase.expandAll = false;\n          grid.api.treeBase.raise.rowCollapsed(row);\n          grid.queueGridRefresh();\n        }\n      },\n\n\n      /**\n       * @ngdoc function\n       * @name collapseRowChildren\n       * @methodOf  ui.grid.treeBase.service:uiGridTreeBaseService\n       * @description Collapses this specific row and all children\n       *\n       * @param {Grid} grid grid object\n       * @param {GridRow} row the row we want to collapse\n       */\n      collapseRowChildren: function( grid, row ){\n        if ( typeof(row.treeLevel) === 'undefined' || row.treeLevel === null || row.treeLevel < 0 ){\n          return;\n        }\n\n        service.setAllNodes(grid, row.treeNode, uiGridTreeBaseConstants.COLLAPSED);\n        grid.treeBase.expandAll = false;\n        grid.queueGridRefresh();\n      },\n\n\n      /**\n       * @ngdoc function\n       * @name allExpanded\n       * @methodOf  ui.grid.treeBase.service:uiGridTreeBaseService\n       * @description Returns true if all rows are expanded, false\n       * if they're not.  Walks the tree to determine this.  Used\n       * to set the expandAll state.\n       *\n       * If the node has no children, then return true (it's immaterial\n       * whether it is expanded).  If the node has children, then return\n       * false if this node is collapsed, or if any child node is not all expanded\n       *\n       * @param {object} tree the grid to check\n       * @returns {boolean} whether or not the tree is all expanded\n       */\n      allExpanded: function( tree ){\n        var allExpanded = true;\n        tree.forEach( function( node ){\n          if ( !service.allExpandedInternal( node ) ){\n            allExpanded = false;\n          }\n        });\n        return allExpanded;\n      },\n\n      allExpandedInternal: function( treeNode ){\n        if ( treeNode.children && treeNode.children.length > 0 ){\n          if ( treeNode.state === uiGridTreeBaseConstants.COLLAPSED ){\n            return false;\n          }\n          var allExpanded = true;\n          treeNode.children.forEach( function( node ){\n            if ( !service.allExpandedInternal( node ) ){\n              allExpanded = false;\n            }\n          });\n          return allExpanded;\n        } else {\n          return true;\n        }\n      },\n\n\n      /**\n       * @ngdoc function\n       * @name treeRows\n       * @methodOf  ui.grid.treeBase.service:uiGridTreeBaseService\n       * @description The rowProcessor that adds the nodes to the tree, and sets the visible\n       * state of each row based on it's parent state\n       *\n       * Assumes it is always called after the sorting processor, and the grouping processor if there is one.\n       * Performs any tree sorts itself after having built the tree\n       *\n       * Processes all the rows in order, setting the group level based on the $$treeLevel in the associated\n       * entity, and setting the visible state based on the parent's state.\n       *\n       * Calculates the deepest level of tree whilst it goes, and updates that so that the header column can be correctly\n       * sized.\n       *\n       * Aggregates if necessary along the way.\n       *\n       * @param {array} renderableRows the rows we want to process, usually the output from the previous rowProcessor\n       * @returns {array} the updated rows\n       */\n      treeRows: function( renderableRows ) {\n        if (renderableRows.length === 0){\n          return renderableRows;\n        }\n\n        var grid = this;\n\n        grid.treeBase.tree = service.createTree( grid, renderableRows );\n        service.updateRowHeaderWidth( grid );\n\n        service.sortTree( grid );\n        service.fixFilter( grid );\n\n        return service.renderTree( grid.treeBase.tree );\n      },\n\n\n      /**\n       * @ngdoc function\n       * @name createOrUpdateRowHeaderWidth\n       * @methodOf  ui.grid.treeBase.service:uiGridTreeBaseService\n       * @description Calculates the rowHeader width.\n       *\n       * If rowHeader is always present, updates the width.\n       *\n       * If rowHeader is only sometimes present (`treeRowHeaderAlwaysVisible: false`), determines whether there\n       * should be one, then creates or removes it as appropriate, with the created rowHeader having the\n       * right width.\n       *\n       * If there's never a rowHeader then never creates one: `showTreeRowHeader: false`\n       *\n       * @param {Grid} grid the grid we want to set the row header on\n       */\n      updateRowHeaderWidth: function( grid ){\n        var rowHeader = grid.getColumn(uiGridTreeBaseConstants.rowHeaderColName);\n\n        var newWidth = grid.options.treeRowHeaderBaseWidth + grid.options.treeIndent * Math.max(grid.treeBase.numberLevels - 1, 0);\n        if ( rowHeader && newWidth !== rowHeader.width ){\n          rowHeader.width = newWidth;\n          grid.queueRefresh();\n        }\n\n        var newVisibility = true;\n        if ( grid.options.showTreeRowHeader === false ){\n          newVisibility = false;\n        }\n        if ( grid.options.treeRowHeaderAlwaysVisible === false && grid.treeBase.numberLevels <= 0 ){\n          newVisibility = false;\n        }\n        if ( rowHeader  && rowHeader.visible !== newVisibility ) {\n          rowHeader.visible = newVisibility;\n          rowHeader.colDef.visible = newVisibility;\n          grid.queueGridRefresh();\n        }\n      },\n\n\n      /**\n       * @ngdoc function\n       * @name renderTree\n       * @methodOf  ui.grid.treeBase.service:uiGridTreeBaseService\n       * @description Creates an array of rows based on the tree, exporting only\n       * the visible nodes and leaves\n       *\n       * @param {array} nodeList The list of nodes - can be grid.treeBase.tree, or can be node.children when\n       * we're calling recursively\n       * @returns {array} renderable rows\n       */\n      renderTree: function( nodeList ){\n        var renderableRows = [];\n\n        nodeList.forEach( function ( node ){\n          if ( node.row.visible ){\n            renderableRows.push( node.row );\n          }\n          if ( node.state === uiGridTreeBaseConstants.EXPANDED && node.children && node.children.length > 0 ){\n            renderableRows = renderableRows.concat( service.renderTree( node.children ) );\n          }\n        });\n        return renderableRows;\n      },\n\n\n      /**\n       * @ngdoc function\n       * @name createTree\n       * @methodOf  ui.grid.treeBase.service:uiGridTreeBaseService\n       * @description Creates a tree from the renderableRows\n       *\n       * @param {Grid} grid The grid\n       * @param {array} renderableRows The rows we want to create a tree from\n       * @returns {object} The tree we've build\n       */\n      createTree: function( grid, renderableRows ) {\n        var currentLevel = -1;\n        var parents = [];\n        var currentState;\n        grid.treeBase.tree = [];\n        grid.treeBase.numberLevels = 0;\n        var aggregations = service.getAggregations( grid );\n\n        var createNode = function( row ){\n          if ( typeof(row.entity.$$treeLevel) !== 'undefined' && row.treeLevel !== row.entity.$$treeLevel ){\n            row.treeLevel = row.entity.$$treeLevel;\n          }\n\n          if ( row.treeLevel <= currentLevel ){\n            // pop any levels that aren't parents of this level, formatting the aggregation at the same time\n            while ( row.treeLevel <= currentLevel ){\n              var lastParent = parents.pop();\n              service.finaliseAggregations( lastParent );\n              currentLevel--;\n            }\n\n            // reset our current state based on the new parent, set to expanded if this is a level 0 node\n            if ( parents.length > 0 ){\n              currentState = service.setCurrentState(parents);\n            } else {\n              currentState = uiGridTreeBaseConstants.EXPANDED;\n            }\n          }\n\n          // aggregate if this is a leaf node\n          if ( ( typeof(row.treeLevel) === 'undefined' || row.treeLevel === null || row.treeLevel < 0 ) && row.visible  ){\n            service.aggregate( grid, row, parents );\n          }\n\n          // add this node to the tree\n          service.addOrUseNode(grid, row, parents, aggregations);\n\n          if ( typeof(row.treeLevel) !== 'undefined' && row.treeLevel !== null && row.treeLevel >= 0 ){\n            parents.push(row);\n            currentLevel++;\n            currentState = service.setCurrentState(parents);\n          }\n\n          // update the tree number of levels, so we can set header width if we need to\n          if ( grid.treeBase.numberLevels < row.treeLevel + 1){\n            grid.treeBase.numberLevels = row.treeLevel + 1;\n          }\n        };\n\n        renderableRows.forEach( createNode );\n\n        // finalise remaining aggregations\n        while ( parents.length > 0 ){\n          var lastParent = parents.pop();\n          service.finaliseAggregations( lastParent );\n        }\n\n        return grid.treeBase.tree;\n      },\n\n\n      /**\n       * @ngdoc function\n       * @name addOrUseNode\n       * @methodOf  ui.grid.treeBase.service:uiGridTreeBaseService\n       * @description Creates a tree node for this row.  If this row already has a treeNode\n       * recorded against it, preserves the state, but otherwise overwrites the data.\n       *\n       * @param {grid} grid The grid we're operating on\n       * @param {gridRow} row The row we want to set\n       * @param {array} parents An array of the parents this row should have\n       * @param {array} aggregationBase Empty aggregation information\n       * @returns {undefined} Updates the parents array, updates the row to have a treeNode, and updates the\n       * grid.treeBase.tree\n       */\n      addOrUseNode: function( grid, row, parents, aggregationBase ){\n        var newAggregations = [];\n        aggregationBase.forEach( function(aggregation){\n          newAggregations.push(service.buildAggregationObject(aggregation.col));\n        });\n\n        var newNode = { state: uiGridTreeBaseConstants.COLLAPSED, row: row, parentRow: null, aggregations: newAggregations, children: [] };\n        if ( row.treeNode ){\n          newNode.state = row.treeNode.state;\n        }\n        if ( parents.length > 0 ){\n          newNode.parentRow = parents[parents.length - 1];\n        }\n        row.treeNode = newNode;\n\n        if ( parents.length === 0 ){\n          grid.treeBase.tree.push( newNode );\n        } else {\n          parents[parents.length - 1].treeNode.children.push( newNode );\n        }\n      },\n\n\n      /**\n       * @ngdoc function\n       * @name setCurrentState\n       * @methodOf  ui.grid.treeBase.service:uiGridTreeBaseService\n       * @description Looks at the parents array to determine our current state.\n       * If any node in the hierarchy is collapsed, then return collapsed, otherwise return\n       * expanded.\n       *\n       * @param {array} parents An array of the parents this row should have\n       * @returns {string} The state we should be setting to any nodes we see\n       */\n      setCurrentState: function( parents ){\n        var currentState = uiGridTreeBaseConstants.EXPANDED;\n        parents.forEach( function(parent){\n          if ( parent.treeNode.state === uiGridTreeBaseConstants.COLLAPSED ){\n            currentState = uiGridTreeBaseConstants.COLLAPSED;\n          }\n        });\n        return currentState;\n      },\n\n\n      /**\n       * @ngdoc function\n       * @name sortTree\n       * @methodOf  ui.grid.treeBase.service:uiGridTreeBaseService\n       * @description Performs a recursive sort on the tree nodes, sorting the\n       * children of each node and putting them back into the children array.\n       *\n       * Before doing this it turns back on all the sortIgnore - things that were previously\n       * ignored we process now.  Since we're sorting within the nodes, presumably anything\n       * that was already sorted is how we derived the nodes, we can keep those sorts too.\n       *\n       * We only sort tree nodes that are expanded - no point in wasting effort sorting collapsed\n       * nodes\n       *\n       * @param {Grid} grid The grid to get the aggregation information from\n       * @returns {array} The aggregation information\n       */\n      sortTree: function( grid ){\n        grid.columns.forEach( function( column ) {\n          if ( column.sort && column.sort.ignoreSort ){\n            delete column.sort.ignoreSort;\n          }\n        });\n\n        grid.treeBase.tree = service.sortInternal( grid, grid.treeBase.tree );\n      },\n\n      sortInternal: function( grid, treeList ){\n        var rows = treeList.map( function( node ){\n          return node.row;\n        });\n\n        rows = rowSorter.sort( grid, rows, grid.columns );\n\n        var treeNodes = rows.map( function( row ){\n          return row.treeNode;\n        });\n\n        treeNodes.forEach( function( node ){\n          if ( node.state === uiGridTreeBaseConstants.EXPANDED && node.children && node.children.length > 0 ){\n            node.children = service.sortInternal( grid, node.children );\n          }\n        });\n\n        return treeNodes;\n      },\n\n      /**\n       * @ngdoc function\n       * @name fixFilter\n       * @methodOf  ui.grid.treeBase.service:uiGridTreeBaseService\n       * @description After filtering has run, we need to go back through the tree\n       * and make sure the parent rows are always visible if any of the child rows\n       * are visible (filtering may make a child visible, but the parent may not\n       * match the filter criteria)\n       *\n       * This has a risk of being computationally expensive, we do it by walking\n       * the tree and remembering whether there are any invisible nodes on the\n       * way down.\n       *\n       * @param {Grid} grid the grid to fix filters on\n       */\n      fixFilter: function( grid ){\n        var parentsVisible;\n\n        grid.treeBase.tree.forEach( function( node ){\n          if ( node.children && node.children.length > 0 ){\n            parentsVisible = node.row.visible;\n            service.fixFilterInternal( node.children, parentsVisible );\n          }\n        });\n      },\n\n      fixFilterInternal: function( nodes, parentsVisible) {\n        nodes.forEach( function( node ){\n          if ( node.row.visible && !parentsVisible ){\n            service.setParentsVisible( node );\n            parentsVisible = true;\n          }\n\n          if ( node.children && node.children.length > 0 ){\n            if ( service.fixFilterInternal( node.children, ( parentsVisible && node.row.visible ) ) ) {\n              parentsVisible = true;\n            }\n          }\n        });\n\n        return parentsVisible;\n      },\n\n      setParentsVisible: function( node ){\n        while ( node.parentRow ){\n          node.parentRow.visible = true;\n          node = node.parentRow.treeNode;\n        }\n      },\n\n      /**\n       * @ngdoc function\n       * @name buildAggregationObject\n       * @methodOf  ui.grid.treeBase.service:uiGridTreeBaseService\n       * @description Build the object which is stored on the column for holding meta-data about the aggregation.\n       * This method should only be called with columns which have an aggregation.\n       *\n       * @param {GridColumn} column The column which this object relates to\n       * @returns {object} {col: GridColumn object, label: string, type: string (optional)}\n       */\n      buildAggregationObject: function( column ){\n        var newAggregation = { col: column };\n\n        if ( column.treeAggregation && column.treeAggregation.type ){\n          newAggregation.type = column.treeAggregation.type;\n        }\n\n        if ( column.treeAggregation && column.treeAggregation.label ){\n          newAggregation.label = column.treeAggregation.label;\n        }\n\n        return newAggregation;\n      },\n\n      /**\n       * @ngdoc function\n       * @name getAggregations\n       * @methodOf  ui.grid.treeBase.service:uiGridTreeBaseService\n       * @description Looks through the grid columns to find those with aggregations,\n       * and collates the aggregation information into an array, returns that array\n       *\n       * @param {Grid} grid the grid to get the aggregation information from\n       * @returns {array} the aggregation information\n       */\n      getAggregations: function( grid ){\n        var aggregateArray = [];\n\n        grid.columns.forEach( function(column){\n          if ( typeof(column.treeAggregationFn) !== 'undefined' ){\n            aggregateArray.push( service.buildAggregationObject(column) );\n\n            if ( grid.options.showColumnFooter && typeof(column.colDef.aggregationType) === 'undefined' && column.treeAggregation ){\n              // Add aggregation object for footer\n              column.treeFooterAggregation = service.buildAggregationObject(column);\n              column.aggregationType = service.treeFooterAggregationType;\n            }\n          }\n        });\n        return aggregateArray;\n      },\n\n\n      /**\n       * @ngdoc function\n       * @name aggregate\n       * @methodOf  ui.grid.treeBase.service:uiGridTreeBaseService\n       * @description Accumulate the data from this row onto the aggregations for each parent\n       *\n       * Iterate over the parents, then iterate over the aggregations for each of those parents,\n       * and perform the aggregation for each individual aggregation\n       *\n       * @param {Grid} grid grid object\n       * @param {GridRow} row the row we want to set grouping visibility on\n       * @param {array} parents the parents that we would want to aggregate onto\n       */\n      aggregate: function( grid, row, parents ){\n        if ( parents.length === 0 && row.treeNode && row.treeNode.aggregations ){\n          row.treeNode.aggregations.forEach(function(aggregation){\n            // Calculate aggregations for footer even if there are no grouped rows\n            if ( typeof(aggregation.col.treeFooterAggregation) !== 'undefined' ) {\n              var fieldValue = grid.getCellValue(row, aggregation.col);\n              var numValue = Number(fieldValue);\n              aggregation.col.treeAggregationFn(aggregation.col.treeFooterAggregation, fieldValue, numValue, row);\n            }\n          });\n        }\n\n        parents.forEach( function( parent, index ){\n          if ( parent.treeNode.aggregations ){\n            parent.treeNode.aggregations.forEach( function( aggregation ){\n              var fieldValue = grid.getCellValue(row, aggregation.col);\n              var numValue = Number(fieldValue);\n              aggregation.col.treeAggregationFn(aggregation, fieldValue, numValue, row);\n\n              if ( index === 0 && typeof(aggregation.col.treeFooterAggregation) !== 'undefined' ){\n                aggregation.col.treeAggregationFn(aggregation.col.treeFooterAggregation, fieldValue, numValue, row);\n              }\n            });\n          }\n        });\n      },\n\n\n      // Aggregation routines - no doco needed as self evident\n      nativeAggregations: function() {\n        var nativeAggregations = {\n          count: {\n            label: i18nService.get().aggregation.count,\n            menuTitle: i18nService.get().grouping.aggregate_count,\n            aggregationFn: function (aggregation, fieldValue, numValue) {\n              if (typeof(aggregation.value) === 'undefined') {\n                aggregation.value = 1;\n              } else {\n                aggregation.value++;\n              }\n            }\n          },\n\n          sum: {\n            label: i18nService.get().aggregation.sum,\n            menuTitle: i18nService.get().grouping.aggregate_sum,\n            aggregationFn: function( aggregation, fieldValue, numValue ) {\n              if (!isNaN(numValue)) {\n                if (typeof(aggregation.value) === 'undefined') {\n                  aggregation.value = numValue;\n                } else {\n                  aggregation.value += numValue;\n                }\n              }\n            }\n          },\n\n          min: {\n            label: i18nService.get().aggregation.min,\n            menuTitle: i18nService.get().grouping.aggregate_min,\n            aggregationFn: function( aggregation, fieldValue, numValue ) {\n              if (typeof(aggregation.value) === 'undefined') {\n                aggregation.value = fieldValue;\n              } else {\n                if (typeof(fieldValue) !== 'undefined' && fieldValue !== null && (fieldValue < aggregation.value || aggregation.value === null)) {\n                  aggregation.value = fieldValue;\n                }\n              }\n            }\n          },\n\n          max: {\n            label: i18nService.get().aggregation.max,\n            menuTitle: i18nService.get().grouping.aggregate_max,\n            aggregationFn: function( aggregation, fieldValue, numValue ){\n              if ( typeof(aggregation.value) === 'undefined' ){\n                aggregation.value = fieldValue;\n              } else {\n                if ( typeof(fieldValue) !== 'undefined' && fieldValue !== null && (fieldValue > aggregation.value || aggregation.value === null)){\n                  aggregation.value = fieldValue;\n                }\n              }\n            }\n          },\n\n          avg: {\n            label: i18nService.get().aggregation.avg,\n            menuTitle: i18nService.get().grouping.aggregate_avg,\n            aggregationFn: function( aggregation, fieldValue, numValue ){\n              if ( typeof(aggregation.count) === 'undefined' ){\n                aggregation.count = 1;\n              } else {\n                aggregation.count++;\n              }\n\n              if ( isNaN(numValue) ){\n                return;\n              }\n\n              if ( typeof(aggregation.value) === 'undefined' || typeof(aggregation.sum) === 'undefined' ){\n                aggregation.value = numValue;\n                aggregation.sum = numValue;\n              } else {\n                aggregation.sum += numValue;\n                aggregation.value = aggregation.sum / aggregation.count;\n              }\n            }\n          }\n        };\n        return nativeAggregations;\n      },\n\n      /**\n       * @ngdoc function\n       * @name finaliseAggregation\n       * @methodOf  ui.grid.treeBase.service:uiGridTreeBaseService\n       * @description Helper function used to finalize aggregation nodes and footer cells\n       *\n       * @param {gridRow} row The parent we're finalising\n       * @param {aggregation} aggregation The aggregation object manipulated by the aggregationFn\n       */\n      finaliseAggregation: function(row, aggregation){\n        if ( aggregation.col.treeAggregationUpdateEntity && typeof(row) !== 'undefined' && typeof(row.entity[ '$$' + aggregation.col.uid ]) !== 'undefined' ){\n          angular.extend( aggregation, row.entity[ '$$' + aggregation.col.uid ]);\n        }\n\n        if ( typeof(aggregation.col.treeAggregationFinalizerFn) === 'function' ){\n          aggregation.col.treeAggregationFinalizerFn( aggregation );\n        }\n        if ( typeof(aggregation.col.customTreeAggregationFinalizerFn) === 'function' ){\n          aggregation.col.customTreeAggregationFinalizerFn( aggregation );\n        }\n        if ( typeof(aggregation.rendered) === 'undefined' ){\n          aggregation.rendered = aggregation.label ? aggregation.label + aggregation.value : aggregation.value;\n        }\n      },\n\n      /**\n       * @ngdoc function\n       * @name finaliseAggregations\n       * @methodOf  ui.grid.treeBase.service:uiGridTreeBaseService\n       * @description Format the data from the aggregation into the rendered text\n       * e.g. if we had label: 'sum: ' and value: 25, we'd create 'sum: 25'.\n       *\n       * As part of this we call any formatting callback routines we've been provided.\n       *\n       * We write our aggregation out to the row.entity if treeAggregationUpdateEntity is\n       * set on the column - we don't overwrite any information that's already there, we append\n       * to it so that grouping can have set the groupVal beforehand without us overwriting it.\n       *\n       * We need to copy the data from the row.entity first before we finalise the aggregation,\n       * we need that information for the finaliserFn\n       *\n       * @param {gridRow} row the parent we're finalising\n       */\n      finaliseAggregations: function( row ){\n        if ( row == null || typeof(row.treeNode.aggregations) === 'undefined' ){\n          return;\n        }\n\n        row.treeNode.aggregations.forEach( function( aggregation ) {\n          service.finaliseAggregation(row, aggregation);\n\n          if ( aggregation.col.treeAggregationUpdateEntity ){\n            var aggregationCopy = {};\n            angular.forEach( aggregation, function( value, key ){\n              if ( aggregation.hasOwnProperty(key) && key !== 'col' ){\n                aggregationCopy[key] = value;\n              }\n            });\n\n            row.entity[ '$$' + aggregation.col.uid ] = aggregationCopy;\n          }\n        });\n      },\n\n      /**\n       * @ngdoc function\n       * @name treeFooterAggregationType\n       * @methodOf  ui.grid.treeBase.service:uiGridTreeBaseService\n       * @description Uses the tree aggregation functions and finalizers to set the\n       * column footer aggregations.\n       *\n       * @param {rows} rows The visible rows. not used, but accepted to match signature of GridColumn.aggregationType\n       * @param {GridColumn} column The column we are finalizing\n       */\n      treeFooterAggregationType: function( rows, column ) {\n        service.finaliseAggregation(undefined, column.treeFooterAggregation);\n        if ( typeof(column.treeFooterAggregation.value) === 'undefined' || column.treeFooterAggregation.rendered === null ){\n          // The was apparently no aggregation performed (perhaps this is a grouped column\n          return '';\n        }\n        return column.treeFooterAggregation.rendered;\n      }\n    };\n\n    return service;\n\n  }]);\n\n\n  /**\n   *  @ngdoc directive\n   *  @name ui.grid.treeBase.directive:uiGridTreeRowHeaderButtons\n   *  @element div\n   *\n   *  @description Provides the expand/collapse button on rows\n   */\n  module.directive('uiGridTreeBaseRowHeaderButtons', ['$templateCache', 'uiGridTreeBaseService',\n  function ($templateCache, uiGridTreeBaseService) {\n    return {\n      replace: true,\n      restrict: 'E',\n      template: $templateCache.get('ui-grid/treeBaseRowHeaderButtons'),\n      scope: true,\n      require: '^uiGrid',\n      link: function($scope, $elm, $attrs, uiGridCtrl) {\n        var self = uiGridCtrl.grid;\n        $scope.treeButtonClick = function(row, evt) {\n          evt.stopPropagation();\n          uiGridTreeBaseService.toggleRowTreeState(self, row, evt);\n        };\n      }\n    };\n  }]);\n\n\n  /**\n   *  @ngdoc directive\n   *  @name ui.grid.treeBase.directive:uiGridTreeBaseExpandAllButtons\n   *  @element div\n   *\n   *  @description Provides the expand/collapse all button\n   */\n  module.directive('uiGridTreeBaseExpandAllButtons', ['$templateCache', 'uiGridTreeBaseService',\n  function ($templateCache, uiGridTreeBaseService) {\n    return {\n      replace: true,\n      restrict: 'E',\n      template: $templateCache.get('ui-grid/treeBaseExpandAllButtons'),\n      scope: false,\n      link: function($scope, $elm, $attrs, uiGridCtrl) {\n        var self = $scope.col.grid;\n\n        $scope.headerButtonClick = function(row, evt) {\n          if ( self.treeBase.expandAll ){\n            uiGridTreeBaseService.collapseAllRows(self, evt);\n          } else {\n            uiGridTreeBaseService.expandAllRows(self, evt);\n          }\n        };\n      }\n    };\n  }]);\n\n\n  /**\n   *  @ngdoc directive\n   *  @name ui.grid.treeBase.directive:uiGridViewport\n   *  @element div\n   *\n   *  @description Stacks on top of ui.grid.uiGridViewport to set formatting on a tree header row\n   */\n  module.directive('uiGridViewport',\n  ['$compile', 'uiGridConstants', 'gridUtil', '$parse',\n    function ($compile, uiGridConstants, gridUtil, $parse) {\n      return {\n        priority: -200, // run after default  directive\n        scope: false,\n        compile: function ($elm, $attrs) {\n          var rowRepeatDiv = angular.element($elm.children().children()[0]);\n\n          var existingNgClass = rowRepeatDiv.attr(\"ng-class\");\n          var newNgClass = '';\n          if ( existingNgClass ) {\n            newNgClass = existingNgClass.slice(0, -1) + \",'ui-grid-tree-header-row': row.treeLevel > -1}\";\n          } else {\n            newNgClass = \"{'ui-grid-tree-header-row': row.treeLevel > -1}\";\n          }\n          rowRepeatDiv.attr(\"ng-class\", newNgClass);\n\n          return {\n            pre: function ($scope, $elm, $attrs, controllers) {\n\n            },\n            post: function ($scope, $elm, $attrs, controllers) {\n            }\n          };\n        }\n      };\n    }]);\n})();\n\n(function () {\n  'use strict';\n\n  /**\n   * @ngdoc overview\n   * @name ui.grid.treeView\n   * @description\n   *\n   * # ui.grid.treeView\n   *\n   * <div class=\"alert alert-warning\" role=\"alert\"><strong>Beta</strong> This feature is ready for testing, but it either hasn't seen a lot of use or has some known bugs.</div>\n   *\n   * This module provides a tree view of the data that it is provided, with nodes in that\n   * tree and leaves.  Unlike grouping, the tree is an inherent property of the data and must\n   * be provided with your data array.\n   *\n   * Design information:\n   * -------------------\n   *\n   * TreeView uses treeBase for the underlying functionality, and is a very thin wrapper around\n   * that logic.  Most of the design information has now moved to treebase.\n   * <br/>\n   * <br/>\n   *\n   * <div doc-module-components=\"ui.grid.treeView\"></div>\n   */\n\n  var module = angular.module('ui.grid.treeView', ['ui.grid', 'ui.grid.treeBase']);\n\n  /**\n   *  @ngdoc object\n   *  @name ui.grid.treeView.constant:uiGridTreeViewConstants\n   *\n   *  @description constants available in treeView module, this includes\n   *  all the constants declared in the treeBase module (these are manually copied\n   *  as there isn't an easy way to include constants in another constants file, and\n   *  we don't want to make users include treeBase)\n   *\n   */\n  module.constant('uiGridTreeViewConstants', {\n    featureName: \"treeView\",\n    rowHeaderColName: 'treeBaseRowHeaderCol',\n    EXPANDED: 'expanded',\n    COLLAPSED: 'collapsed',\n    aggregation: {\n      COUNT: 'count',\n      SUM: 'sum',\n      MAX: 'max',\n      MIN: 'min',\n      AVG: 'avg'\n    }\n  });\n\n  /**\n   *  @ngdoc service\n   *  @name ui.grid.treeView.service:uiGridTreeViewService\n   *\n   *  @description Services for treeView features\n   */\n  module.service('uiGridTreeViewService', ['$q', 'uiGridTreeViewConstants', 'uiGridTreeBaseConstants', 'uiGridTreeBaseService', 'gridUtil', 'GridRow', 'gridClassFactory', 'i18nService', 'uiGridConstants',\n  function ($q, uiGridTreeViewConstants, uiGridTreeBaseConstants, uiGridTreeBaseService, gridUtil, GridRow, gridClassFactory, i18nService, uiGridConstants) {\n\n    var service = {\n\n      initializeGrid: function (grid, $scope) {\n        uiGridTreeBaseService.initializeGrid( grid, $scope );\n\n        /**\n         *  @ngdoc object\n         *  @name ui.grid.treeView.grid:treeView\n         *\n         *  @description Grid properties and functions added for treeView\n         */\n        grid.treeView = {};\n\n        grid.registerRowsProcessor(service.adjustSorting, 60);\n\n        /**\n         *  @ngdoc object\n         *  @name ui.grid.treeView.api:PublicApi\n         *\n         *  @description Public Api for treeView feature\n         */\n        var publicApi = {\n          events: {\n            treeView: {\n            }\n          },\n          methods: {\n            treeView: {\n            }\n          }\n        };\n\n        grid.api.registerEventsFromObject(publicApi.events);\n\n        grid.api.registerMethodsFromObject(publicApi.methods);\n\n      },\n\n      defaultGridOptions: function (gridOptions) {\n        //default option to true unless it was explicitly set to false\n        /**\n         *  @ngdoc object\n         *  @name ui.grid.treeView.api:GridOptions\n         *\n         *  @description GridOptions for treeView feature, these are available to be\n         *  set using the ui-grid {@link ui.grid.class:GridOptions gridOptions}\n         *\n         *  Many tree options are set on treeBase, make sure to look at that feature in\n         *  conjunction with these options.\n         */\n\n        /**\n         *  @ngdoc object\n         *  @name enableTreeView\n         *  @propertyOf  ui.grid.treeView.api:GridOptions\n         *  @description Enable row tree view for entire grid.\n         *  <br/>Defaults to true\n         */\n        gridOptions.enableTreeView = gridOptions.enableTreeView !== false;\n\n      },\n\n\n      /**\n       * @ngdoc function\n       * @name adjustSorting\n       * @methodOf  ui.grid.treeBase.service:uiGridTreeBaseService\n       * @description Trees cannot be sorted the same as flat lists of rows -\n       * trees are sorted recursively within each level - so the children of each\n       * node are sorted, but not the full set of rows.\n       *\n       * To achieve this, we suppress the normal sorting by setting ignoreSort on\n       * each of the sort columns.  When the treeBase rowsProcessor runs it will then\n       * unignore these, and will perform a recursive sort against the tree that it builds.\n       *\n       * @param {array} renderableRows the rows that we need to pass on through\n       * @returns {array} renderableRows that we passed on through\n       */\n      adjustSorting: function( renderableRows ) {\n        var grid = this;\n\n        grid.columns.forEach( function( column ){\n          if ( column.sort ){\n            column.sort.ignoreSort = true;\n          }\n        });\n\n        return renderableRows;\n      }\n\n    };\n\n    return service;\n\n  }]);\n\n  /**\n   *  @ngdoc directive\n   *  @name ui.grid.treeView.directive:uiGridTreeView\n   *  @element div\n   *  @restrict A\n   *\n   *  @description Adds treeView features to grid\n   *\n   *  @example\n   <example module=\"app\">\n   <file name=\"app.js\">\n   var app = angular.module('app', ['ui.grid', 'ui.grid.treeView']);\n\n   app.controller('MainCtrl', ['$scope', function ($scope) {\n      $scope.data = [\n        { name: 'Bob', title: 'CEO' },\n            { name: 'Frank', title: 'Lowly Developer' }\n      ];\n\n      $scope.columnDefs = [\n        {name: 'name', enableCellEdit: true},\n        {name: 'title', enableCellEdit: true}\n      ];\n\n      $scope.gridOptions = { columnDefs: $scope.columnDefs, data: $scope.data };\n    }]);\n   </file>\n   <file name=\"index.html\">\n   <div ng-controller=\"MainCtrl\">\n   <div ui-grid=\"gridOptions\" ui-grid-tree-view></div>\n   </div>\n   </file>\n   </example>\n   */\n  module.directive('uiGridTreeView', ['uiGridTreeViewConstants', 'uiGridTreeViewService', '$templateCache',\n  function (uiGridTreeViewConstants, uiGridTreeViewService, $templateCache) {\n    return {\n      replace: true,\n      priority: 0,\n      require: '^uiGrid',\n      scope: false,\n      compile: function () {\n        return {\n          pre: function ($scope, $elm, $attrs, uiGridCtrl) {\n            if (uiGridCtrl.grid.options.enableTreeView !== false){\n              uiGridTreeViewService.initializeGrid(uiGridCtrl.grid, $scope);\n            }\n          },\n          post: function ($scope, $elm, $attrs, uiGridCtrl) {\n\n          }\n        };\n      }\n    };\n  }]);\n})();\n\n(function () {\n  'use strict';\n  \n  /**\n   * @ngdoc overview\n   * @name ui.grid.validate\n   * @description\n   *\n   * # ui.grid.validate\n   *\n   * <div class=\"alert alert-warning\" role=\"alert\"><strong>Alpha</strong> This feature is in development. There will almost certainly be breaking api changes, or there are major outstanding bugs.</div>\n   *\n   * This module provides the ability to validate cells upon change.\n   *\n   * Design information:\n   * -------------------\n   *\n   * Validation is not based on angularjs validation, since it would work only when editing the field.\n   * \n   * Instead it adds custom properties to any field considered as invalid.\n   *\n   * <br/>\n   * <br/>\n   *\n   * <div doc-module-components=\"ui.grid.expandable\"></div>\n   */\n\n  var module = angular.module('ui.grid.validate', ['ui.grid']);\n  \n  \n  /**\n   *  @ngdoc service\n   *  @name ui.grid.validate.service:uiGridValidateService\n   *\n   *  @description Services for validation features\n   */\n  module.service('uiGridValidateService', ['$sce', '$q', '$http', 'i18nService', 'uiGridConstants', function ($sce, $q, $http, i18nService, uiGridConstants) {\n\n    var service = {\n      \n      /**\n       *  @ngdoc object\n       *  @name validatorFactories\n       *  @propertyOf ui.grid.validate.service:uiGridValidateService\n       *  @description object containing all the factories used to validate data.<br/>\n       *  These factories will be in the form <br/>\n       *  ```\n       *  {\n       *    validatorFactory: function(argument) {\n       *                        return function(newValue, oldValue, rowEntity, colDef) {\n       *                          return true || false || promise\n       *                        }\n       *                      },\n       *    messageFunction: function(argument) {\n       *                       return string\n       *                     }\n       *  }\n       *  ```\n       *\n       * Promises should return true or false as result according to the result of validation.\n       */\n      validatorFactories: {},\n\n      \n      /**\n       * @ngdoc service\n       * @name setExternalFactoryFunction\n       * @methodOf ui.grid.validate.service:uiGridValidateService\n       * @description Adds a way to retrieve validators from an external service\n       * <p>Validators from this external service have a higher priority than default\n       * ones\n       * @param {function} externalFactoryFunction a function that accepts name and argument to pass to a\n       * validator factory and that returns an object with the same properties as \n       * you can see in {@link ui.grid.validate.service:uiGridValidateService#properties_validatorFactories validatorFactories}\n       */\n      setExternalFactoryFunction: function(externalFactoryFunction) {\n        service.externalFactoryFunction = externalFactoryFunction;\n      },\n      \n      /**\n       * @ngdoc service\n       * @name clearExternalFactory\n       * @methodOf ui.grid.validate.service:uiGridValidateService\n       * @description Removes any link to external factory from this service\n       */\n      clearExternalFactory: function() {\n        delete service.externalFactoryFunction;\n      },\n\n      /**\n       * @ngdoc service\n       * @name getValidatorFromExternalFactory\n       * @methodOf ui.grid.validate.service:uiGridValidateService\n       * @description Retrieves a validator by executing a validatorFactory\n       * stored in an external service.\n       * @param {string} name the name of the validator to retrieve\n       * @param {object} argument an argument to pass to the validator factory\n       */\n      getValidatorFromExternalFactory: function(name, argument) {\n        return service.externalFactoryFunction(name, argument).validatorFactory(argument);\n      },\n      \n      /**\n       * @ngdoc service\n       * @name getMessageFromExternalFactory\n       * @methodOf ui.grid.validate.service:uiGridValidateService\n       * @description Retrieves a message stored in an external service.\n       * @param {string} name the name of the validator\n       * @param {object} argument an argument to pass to the message function\n       */\n      getMessageFromExternalFactory: function(name, argument) {\n        return service.externalFactoryFunction(name, argument).messageFunction(argument);\n      },\n      \n      /**\n       * @ngdoc service\n       * @name setValidator\n       * @methodOf ui.grid.validate.service:uiGridValidateService\n       * @description  Adds a new validator to the service\n       * @param {string} name the name of the validator, must be unique\n       * @param {function} validatorFactory a factory that return a validatorFunction\n       * @param {function} messageFunction a function that return the error message\n       */\n      setValidator: function(name, validatorFactory, messageFunction) {\n        service.validatorFactories[name] = {\n          validatorFactory: validatorFactory,\n          messageFunction: messageFunction\n        };\n      },\n\n      /**\n       * @ngdoc service\n       * @name getValidator\n       * @methodOf ui.grid.validate.service:uiGridValidateService\n       * @description Returns a validator registered to the service\n       * or retrieved from the external factory\n       * @param {string} name the name of the validator to retrieve\n       * @param {object} argument an argument to pass to the validator factory\n       * @returns {object} the validator function\n       */\n      getValidator: function(name, argument) {\n        if (service.externalFactoryFunction) {\n          var validator = service.getValidatorFromExternalFactory(name, argument);\n          if (validator) {\n            return validator;\n          }\n        }\n        if (!service.validatorFactories[name]) {\n          throw (\"Invalid validator name: \" + name);\n        }\n        return service.validatorFactories[name].validatorFactory(argument);\n      },\n\n      /**\n       * @ngdoc service\n       * @name getMessage\n       * @methodOf ui.grid.validate.service:uiGridValidateService\n       * @description Returns the error message related to the validator \n       * @param {string} name the name of the validator\n       * @param {object} argument an argument to pass to the message function\n       * @returns {string} the error message related to the validator\n       */\n      getMessage: function(name, argument) {\n        if (service.externalFactoryFunction) {\n          var message = service.getMessageFromExternalFactory(name, argument);\n          if (message) {\n            return message;\n          }\n        }\n        return service.validatorFactories[name].messageFunction(argument);\n      },\n\n      /**\n       * @ngdoc service\n       * @name isInvalid\n       * @methodOf ui.grid.validate.service:uiGridValidateService\n       * @description Returns true if the cell (identified by rowEntity, colDef) is invalid \n       * @param {object} rowEntity the row entity of the cell\n       * @param {object} colDef the colDef of the cell\n       * @returns {boolean} true if the cell is invalid\n       */\n      isInvalid: function (rowEntity, colDef) {\n        return rowEntity['$$invalid'+colDef.name];\n      },\n\n      /**\n       * @ngdoc service\n       * @name setInvalid\n       * @methodOf ui.grid.validate.service:uiGridValidateService\n       * @description Makes the cell invalid by adding the proper field to the entity\n       * @param {object} rowEntity the row entity of the cell\n       * @param {object} colDef the colDef of the cell\n       */\n      setInvalid: function (rowEntity, colDef) {\n        rowEntity['$$invalid'+colDef.name] = true;\n      },\n    \n      /**\n       * @ngdoc service\n       * @name setValid\n       * @methodOf ui.grid.validate.service:uiGridValidateService\n       * @description Makes the cell valid by removing the proper error field from the entity\n       * @param {object} rowEntity the row entity of the cell\n       * @param {object} colDef the colDef of the cell\n       */\n      setValid: function (rowEntity, colDef) {\n        delete rowEntity['$$invalid'+colDef.name];\n      },\n\n      /**\n       * @ngdoc service\n       * @name setError\n       * @methodOf ui.grid.validate.service:uiGridValidateService\n       * @description Adds the proper error to the entity errors field\n       * @param {object} rowEntity the row entity of the cell\n       * @param {object} colDef the colDef of the cell\n       * @param {string} validatorName the name of the validator that is failing\n       */\n      setError: function(rowEntity, colDef, validatorName) {\n        if (!rowEntity['$$errors'+colDef.name]) {\n          rowEntity['$$errors'+colDef.name] = {};\n        }\n        rowEntity['$$errors'+colDef.name][validatorName] = true;\n      },\n\n      /**\n       * @ngdoc service\n       * @name clearError\n       * @methodOf ui.grid.validate.service:uiGridValidateService\n       * @description Removes the proper error from the entity errors field\n       * @param {object} rowEntity the row entity of the cell\n       * @param {object} colDef the colDef of the cell\n       * @param {string} validatorName the name of the validator that is failing\n       */\n      clearError: function(rowEntity, colDef, validatorName) {\n        if (!rowEntity['$$errors'+colDef.name]) {\n          return;\n        }\n        if (validatorName in rowEntity['$$errors'+colDef.name]) {\n            delete rowEntity['$$errors'+colDef.name][validatorName];\n        }\n      },\n      \n      /**\n       * @ngdoc function\n       * @name getErrorMessages\n       * @methodOf ui.grid.validate.service:uiGridValidateService\n       * @description returns an array of i18n-ed error messages.\n       * @param {object} rowEntity gridOptions.data[] array instance whose errors we are looking for\n       * @param {object} colDef the column whose errors we are looking for\n       * @returns {array} An array of strings containing all the error messages for the cell\n       */\n      getErrorMessages: function(rowEntity, colDef) {\n        var errors = [];\n\n        if (!rowEntity['$$errors'+colDef.name] || Object.keys(rowEntity['$$errors'+colDef.name]).length === 0) {\n          return errors;\n        }\n\n        Object.keys(rowEntity['$$errors'+colDef.name]).sort().forEach(function(validatorName) {\n          errors.push(service.getMessage(validatorName, colDef.validators[validatorName]));\n        });\n        \n        return errors;\n      },\n      \n      /**\n       * @ngdoc function\n       * @name getFormattedErrors\n       * @methodOf  ui.grid.validate.service:uiGridValidateService\n       * @description returns the error i18n-ed and formatted in html to be shown inside the page.\n       * @param {object} rowEntity gridOptions.data[] array instance whose errors we are looking for\n       * @param {object} colDef the column whose errors we are looking for\n       * @returns {object} An object that can be used in a template (like a cellTemplate) to display the\n       * message inside the page (i.e. inside a div)\n       */\n      getFormattedErrors: function(rowEntity, colDef) {\n\n        var msgString = \"\";\n\n        var errors = service.getErrorMessages(rowEntity, colDef);\n        \n        if (!errors.length) {\n          return;\n        }\n        \n        errors.forEach(function(errorMsg) {\n          msgString += errorMsg + \"<br/>\";\n        });\n\n        return $sce.trustAsHtml('<p><b>' + i18nService.getSafeText('validate.error') + '</b></p>' + msgString );\n      },\n\n      /**\n       * @ngdoc function\n       * @name getTitleFormattedErrors\n       * @methodOf ui.grid.validate.service:uiGridValidateService\n       * @description returns the error i18n-ed and formatted in javaScript to be shown inside an html \n       * title attribute.\n       * @param {object} rowEntity gridOptions.data[] array instance whose errors we are looking for\n       * @param {object} colDef the column whose errors we are looking for\n       * @returns {object} An object that can be used in a template (like a cellTemplate) to display the\n       * message inside an html title attribute\n       */\n      getTitleFormattedErrors: function(rowEntity, colDef) {\n\n        var newLine = \"\\n\";\n\n        var msgString = \"\";\n        \n        var errors = service.getErrorMessages(rowEntity, colDef);\n        \n        if (!errors.length) {\n          return;\n        }\n        \n        errors.forEach(function(errorMsg) {\n          msgString += errorMsg + newLine;\n        });\n\n        return $sce.trustAsHtml(i18nService.getSafeText('validate.error') + newLine + msgString);\n      },\n\n      /**\n       * @ngdoc function\n       * @name getTitleFormattedErrors\n       * @methodOf ui.grid.validate.service:uiGridValidateService\n       * @description Executes all validators on a cell (identified by row entity and column definition) and sets or clears errors\n       * @param {object} rowEntity the row entity of the cell we want to run the validators on\n       * @param {object} colDef the column definition of the cell we want to run the validators on\n       * @param {object} newValue the value the user just entered\n       * @param {object} oldValue the value the field had before\n       */\n      runValidators: function(rowEntity, colDef, newValue, oldValue, grid) {\n        \n        if (newValue === oldValue) {\n          // If the value has not changed we perform no validation\n          return;\n        }\n        \n        if (typeof(colDef.name) === 'undefined' || !colDef.name) {\n          throw new Error('colDef.name is required to perform validation');\n        }\n        \n        service.setValid(rowEntity, colDef);\n        \n        var validateClosureFactory = function(rowEntity, colDef, validatorName) {\n          return function(value) {\n            if (!value) {\n              service.setInvalid(rowEntity, colDef);\n              service.setError(rowEntity, colDef, validatorName);\n              if (grid) {\n                grid.api.validate.raise.validationFailed(rowEntity, colDef, newValue, oldValue);\n              }\n            }\n          };\n        };\n\n        var promises = [];\n\n        for (var validatorName in colDef.validators) {\n          service.clearError(rowEntity, colDef, validatorName);\n          var msg;\n          var validatorFunction = service.getValidator(validatorName, colDef.validators[validatorName]);\n          // We pass the arguments as oldValue, newValue so they are in the same order \n          // as ng-model validators (modelValue, viewValue)\n          var promise = $q\n                        .when(validatorFunction(oldValue, newValue, rowEntity, colDef))\n                        .then(validateClosureFactory(rowEntity, colDef, validatorName));\n          promises.push(promise);\n        }\n        \n        return $q.all(promises);\n      },\n\n      /**\n       * @ngdoc function\n       * @name createDefaultValidators\n       * @methodOf ui.grid.validate.service:uiGridValidateService\n       * @description adds the basic validators to the list of service validators\n       */\n      createDefaultValidators: function() {\n        service.setValidator('minLength',\n                             function (argument) {\n                               return function (oldValue, newValue, rowEntity, colDef) {\n                                 if (newValue === undefined || newValue === null || newValue === '') {\n                                   return true;\n                                 }\n                                 return newValue.length >= argument;\n                               };\n                             },\n                               function(argument) {\n                                 return i18nService.getSafeText('validate.minLength').replace('THRESHOLD', argument);\n                               });\n        \n        service.setValidator('maxLength',\n                             function (argument) {\n                               return function (oldValue, newValue, rowEntity, colDef) {\n                                 if (newValue === undefined || newValue === null || newValue === '') {\n                                   return true;\n                                 }\n                                 return newValue.length <= argument;\n                               };\n                             },\n                             function(threshold) {\n                               return i18nService.getSafeText('validate.maxLength').replace('THRESHOLD', threshold);\n                             });\n        \n        service.setValidator('required',\n                             function (argument) {\n                               return function (oldValue, newValue, rowEntity, colDef) {\n                                 if (argument) {\n                                   return !(newValue === undefined || newValue === null || newValue === '');\n                                 }\n                                 return true;\n                               };\n                             },\n                             function(argument) {\n                               return i18nService.getSafeText('validate.required');\n                             });\n      },\n\n      initializeGrid: function (scope, grid) {\n        grid.validate = {\n        \n          isInvalid: service.isInvalid,\n\n          getFormattedErrors: service.getFormattedErrors,\n         \n          getTitleFormattedErrors: service.getTitleFormattedErrors,\n\n          runValidators: service.runValidators\n        };\n        \n        /**\n         *  @ngdoc object\n         *  @name ui.grid.validate.api:PublicApi\n         *\n         *  @description Public Api for validation feature\n         */\n        var publicApi = {\n          events: {\n            validate: {\n              /**\n               * @ngdoc event\n               * @name validationFailed\n               * @eventOf  ui.grid.validate.api:PublicApi\n               * @description raised when one or more failure happened during validation \n               * <pre>\n               *      gridApi.validate.on.validationFailed(scope, function(rowEntity, colDef, newValue, oldValue){...})\n               * </pre>\n               * @param {object} rowEntity the options.data element whose validation failed\n               * @param {object} colDef the column whose validation failed\n               * @param {object} newValue new value\n               * @param {object} oldValue old value\n               */\n              validationFailed: function (rowEntity, colDef, newValue, oldValue) {\n              }\n            }\n          },\n          methods: {\n            validate: {\n              /**\n               * @ngdoc function\n               * @name isInvalid\n               * @methodOf  ui.grid.validate.api:PublicApi\n               * @description checks if a cell (identified by rowEntity, colDef) is invalid\n               * @param {object} rowEntity gridOptions.data[] array instance we want to check\n               * @param {object} colDef the column whose errors we want to check\n               * @returns {boolean} true if the cell value is not valid\n               */\n              isInvalid: function(rowEntity, colDef) {\n                return grid.validate.isInvalid(rowEntity, colDef);\n              },\n              /**\n               * @ngdoc function\n               * @name getErrorMessages\n               * @methodOf  ui.grid.validate.api:PublicApi\n               * @description returns an array of i18n-ed error messages.\n               * @param {object} rowEntity gridOptions.data[] array instance whose errors we are looking for\n               * @param {object} colDef the column whose errors we are looking for\n               * @returns {array} An array of strings containing all the error messages for the cell\n               */\n              getErrorMessages: function (rowEntity, colDef) {\n                return grid.validate.getErrorMessages(rowEntity, colDef);\n              },\n              /**\n               * @ngdoc function\n               * @name getFormattedErrors\n               * @methodOf  ui.grid.validate.api:PublicApi\n               * @description returns the error i18n-ed and formatted in html to be shown inside the page.\n               * @param {object} rowEntity gridOptions.data[] array instance whose errors we are looking for\n               * @param {object} colDef the column whose errors we are looking for\n               * @returns {object} An object that can be used in a template (like a cellTemplate) to display the\n               * message inside the page (i.e. inside a div)\n               */\n              getFormattedErrors: function (rowEntity, colDef) {\n                return grid.validate.getFormattedErrors(rowEntity, colDef);\n              },\n              /**\n               * @ngdoc function\n               * @name getTitleFormattedErrors\n               * @methodOf  ui.grid.validate.api:PublicApi\n               * @description returns the error i18n-ed and formatted in javaScript to be shown inside an html \n               * title attribute.\n               * @param {object} rowEntity gridOptions.data[] array instance whose errors we are looking for\n               * @param {object} colDef the column whose errors we are looking for\n               * @returns {object} An object that can be used in a template (like a cellTemplate) to display the\n               * message inside an html title attribute\n               */\n              getTitleFormattedErrors: function (rowEntity, colDef) {\n                return grid.validate.getTitleFormattedErrors(rowEntity, colDef);\n              }\n            } \n          }\n        };\n        \n        grid.api.registerEventsFromObject(publicApi.events);\n        grid.api.registerMethodsFromObject(publicApi.methods);\n\n        if (grid.edit) {\n          grid.api.edit.on.afterCellEdit(scope, function(rowEntity, colDef, newValue, oldValue) {\n            grid.validate.runValidators(rowEntity, colDef, newValue, oldValue, grid);\n          });\n        }\n\n        service.createDefaultValidators();\n      }\n      \n    };\n  \n    return service;\n  }]);\n  \n  \n  /**\n   *  @ngdoc directive\n   *  @name ui.grid.validate.directive:uiGridValidate\n   *  @element div\n   *  @restrict A\n   *  @description Adds validating features to the ui-grid directive.\n   *  @example\n   <example module=\"app\">\n   <file name=\"app.js\">\n   var app = angular.module('app', ['ui.grid', 'ui.grid.edit', 'ui.grid.validate']);\n\n   app.controller('MainCtrl', ['$scope', function ($scope) {\n      $scope.data = [\n        { name: 'Bob', title: 'CEO' },\n            { name: 'Frank', title: 'Lowly Developer' }\n      ];\n\n      $scope.columnDefs = [\n        {name: 'name', enableCellEdit: true, validators: {minLength: 3, maxLength: 9}, cellTemplate: 'ui-grid/cellTitleValidator'},\n        {name: 'title', enableCellEdit: true, validators: {required: true}, cellTemplate: 'ui-grid/cellTitleValidator'}\n      ];\n    }]);\n   </file>\n   <file name=\"index.html\">\n   <div ng-controller=\"MainCtrl\">\n   <div ui-grid=\"{ data: data, columnDefs: columnDefs }\" ui-grid-edit ui-grid-validate></div>\n   </div>\n   </file>\n   </example>\n   */\n\n  module.directive('uiGridValidate', ['gridUtil', 'uiGridValidateService', function (gridUtil, uiGridValidateService) {\n    return {\n      priority: 0,\n      replace: true,\n      require: '^uiGrid',\n      scope: false,\n      compile: function () {\n        return {\n          pre: function ($scope, $elm, $attrs, uiGridCtrl) {\n            uiGridValidateService.initializeGrid($scope, uiGridCtrl.grid);\n          },\n          post: function ($scope, $elm, $attrs, uiGridCtrl) {\n          }\n        };\n      }\n    };\n  }]);\n})();\n\nangular.module('ui.grid').run(['$templateCache', function($templateCache) {\n  'use strict';\n\n  $templateCache.put('ui-grid/ui-grid-filter',\n    \"<div class=\\\"ui-grid-filter-container\\\" ng-style=\\\"col.extraStyle\\\" ng-repeat=\\\"colFilter in col.filters\\\" ng-class=\\\"{'ui-grid-filter-cancel-button-hidden' : colFilter.disableCancelFilterButton === true }\\\"><div ng-if=\\\"colFilter.type !== 'select'\\\"><input type=\\\"text\\\" class=\\\"ui-grid-filter-input ui-grid-filter-input-{{$index}}\\\" ng-model=\\\"colFilter.term\\\" ng-attr-placeholder=\\\"{{colFilter.placeholder || ''}}\\\" aria-label=\\\"{{colFilter.ariaLabel || aria.defaultFilterLabel}}\\\"><div role=\\\"button\\\" class=\\\"ui-grid-filter-button\\\" ng-click=\\\"removeFilter(colFilter, $index)\\\" ng-if=\\\"!colFilter.disableCancelFilterButton\\\" ng-disabled=\\\"colFilter.term === undefined || colFilter.term === null || colFilter.term === ''\\\" ng-show=\\\"colFilter.term !== undefined && colFilter.term !== null && colFilter.term !== ''\\\"><i class=\\\"ui-grid-icon-cancel\\\" ui-grid-one-bind-aria-label=\\\"aria.removeFilter\\\">&nbsp;</i></div></div><div ng-if=\\\"colFilter.type === 'select'\\\"><select class=\\\"ui-grid-filter-select ui-grid-filter-input-{{$index}}\\\" ng-model=\\\"colFilter.term\\\" ng-show=\\\"colFilter.selectOptions.length > 0\\\" ng-attr-placeholder=\\\"{{colFilter.placeholder || aria.defaultFilterLabel}}\\\" aria-label=\\\"{{colFilter.ariaLabel || ''}}\\\" ng-options=\\\"option.value as option.label for option in colFilter.selectOptions\\\"><option value=\\\"\\\"></option></select><div role=\\\"button\\\" class=\\\"ui-grid-filter-button-select\\\" ng-click=\\\"removeFilter(colFilter, $index)\\\" ng-if=\\\"!colFilter.disableCancelFilterButton\\\" ng-disabled=\\\"colFilter.term === undefined || colFilter.term === null || colFilter.term === ''\\\" ng-show=\\\"colFilter.term !== undefined && colFilter.term != null\\\"><i class=\\\"ui-grid-icon-cancel\\\" ui-grid-one-bind-aria-label=\\\"aria.removeFilter\\\">&nbsp;</i></div></div></div>\"\n  );\n\n\n  $templateCache.put('ui-grid/ui-grid-footer',\n    \"<div class=\\\"ui-grid-footer-panel ui-grid-footer-aggregates-row\\\"><!-- tfooter --><div class=\\\"ui-grid-footer ui-grid-footer-viewport\\\"><div class=\\\"ui-grid-footer-canvas\\\"><div class=\\\"ui-grid-footer-cell-wrapper\\\" ng-style=\\\"colContainer.headerCellWrapperStyle()\\\"><div role=\\\"row\\\" class=\\\"ui-grid-footer-cell-row\\\"><div ui-grid-footer-cell role=\\\"gridcell\\\" ng-repeat=\\\"col in colContainer.renderedColumns track by col.uid\\\" col=\\\"col\\\" render-index=\\\"$index\\\" class=\\\"ui-grid-footer-cell ui-grid-clearfix\\\"></div></div></div></div></div></div>\"\n  );\n\n\n  $templateCache.put('ui-grid/ui-grid-grid-footer',\n    \"<div class=\\\"ui-grid-footer-info ui-grid-grid-footer\\\"><span>{{'search.totalItems' | t}} {{grid.rows.length}}</span> <span ng-if=\\\"grid.renderContainers.body.visibleRowCache.length !== grid.rows.length\\\" class=\\\"ngLabel\\\">({{\\\"search.showingItems\\\" | t}} {{grid.renderContainers.body.visibleRowCache.length}})</span></div>\"\n  );\n\n\n  $templateCache.put('ui-grid/ui-grid-header',\n    \"<div role=\\\"rowgroup\\\" class=\\\"ui-grid-header\\\"><!-- theader --><div class=\\\"ui-grid-top-panel\\\"><div class=\\\"ui-grid-header-viewport\\\"><div class=\\\"ui-grid-header-canvas\\\"><div class=\\\"ui-grid-header-cell-wrapper\\\" ng-style=\\\"colContainer.headerCellWrapperStyle()\\\"><div role=\\\"row\\\" class=\\\"ui-grid-header-cell-row\\\"><div class=\\\"ui-grid-header-cell ui-grid-clearfix\\\" ng-repeat=\\\"col in colContainer.renderedColumns track by col.uid\\\" ui-grid-header-cell col=\\\"col\\\" render-index=\\\"$index\\\"></div></div></div></div></div></div></div>\"\n  );\n\n\n  $templateCache.put('ui-grid/ui-grid-menu-button',\n    \"<div class=\\\"ui-grid-menu-button\\\"><div role=\\\"button\\\" ui-grid-one-bind-id-grid=\\\"'grid-menu'\\\" class=\\\"ui-grid-icon-container\\\" ng-click=\\\"toggleMenu()\\\" aria-haspopup=\\\"true\\\"><i class=\\\"ui-grid-icon-menu\\\" ui-grid-one-bind-aria-label=\\\"i18n.aria.buttonLabel\\\">&nbsp;</i></div><div ui-grid-menu menu-items=\\\"menuItems\\\"></div></div>\"\n  );\n\n\n  $templateCache.put('ui-grid/ui-grid-no-header',\n    \"<div class=\\\"ui-grid-top-panel\\\"></div>\"\n  );\n\n\n  $templateCache.put('ui-grid/ui-grid-row',\n    \"<div ng-repeat=\\\"(colRenderIndex, col) in colContainer.renderedColumns track by col.uid\\\" ui-grid-one-bind-id-grid=\\\"rowRenderIndex + '-' + col.uid + '-cell'\\\" class=\\\"ui-grid-cell\\\" ng-class=\\\"{ 'ui-grid-row-header-cell': col.isRowHeader }\\\" role=\\\"{{col.isRowHeader ? 'rowheader' : 'gridcell'}}\\\" ui-grid-cell></div>\"\n  );\n\n\n  $templateCache.put('ui-grid/ui-grid',\n    \"<div ui-i18n=\\\"en\\\" class=\\\"ui-grid\\\"><!-- TODO (c0bra): add \\\"scoped\\\" attr here, eventually? --><style ui-grid-style>.grid{{ grid.id }} {\\n\" +\n    \"      /* Styles for the grid */\\n\" +\n    \"    }\\n\" +\n    \"\\n\" +\n    \"    .grid{{ grid.id }} .ui-grid-row, .grid{{ grid.id }} .ui-grid-cell, .grid{{ grid.id }} .ui-grid-cell .ui-grid-vertical-bar {\\n\" +\n    \"      height: {{ grid.options.rowHeight }}px;\\n\" +\n    \"    }\\n\" +\n    \"\\n\" +\n    \"    .grid{{ grid.id }} .ui-grid-row:last-child .ui-grid-cell {\\n\" +\n    \"      border-bottom-width: {{ (((grid.getVisibleRowCount() * grid.options.rowHeight) < grid.getViewportHeight()) && '1') || '0' }}px;\\n\" +\n    \"    }\\n\" +\n    \"\\n\" +\n    \"    {{ grid.verticalScrollbarStyles }}\\n\" +\n    \"    {{ grid.horizontalScrollbarStyles }}\\n\" +\n    \"\\n\" +\n    \"    /*\\n\" +\n    \"    .ui-grid[dir=rtl] .ui-grid-viewport {\\n\" +\n    \"      padding-left: {{ grid.verticalScrollbarWidth }}px;\\n\" +\n    \"    }\\n\" +\n    \"    */\\n\" +\n    \"\\n\" +\n    \"    {{ grid.customStyles }}</style><div class=\\\"ui-grid-contents-wrapper\\\" role=\\\"grid\\\"><div ui-grid-menu-button ng-if=\\\"grid.options.enableGridMenu\\\"></div><div ng-if=\\\"grid.hasLeftContainer()\\\" style=\\\"width: 0\\\" ui-grid-pinned-container=\\\"'left'\\\"></div><div ui-grid-render-container container-id=\\\"'body'\\\" col-container-name=\\\"'body'\\\" row-container-name=\\\"'body'\\\" bind-scroll-horizontal=\\\"true\\\" bind-scroll-vertical=\\\"true\\\" enable-horizontal-scrollbar=\\\"grid.options.enableHorizontalScrollbar\\\" enable-vertical-scrollbar=\\\"grid.options.enableVerticalScrollbar\\\"></div><div ng-if=\\\"grid.hasRightContainer()\\\" style=\\\"width: 0\\\" ui-grid-pinned-container=\\\"'right'\\\"></div><div ui-grid-grid-footer ng-if=\\\"grid.options.showGridFooter\\\"></div><div ui-grid-column-menu ng-if=\\\"grid.options.enableColumnMenus\\\"></div><div ng-transclude></div></div></div>\"\n  );\n\n\n  $templateCache.put('ui-grid/uiGridCell',\n    \"<div class=\\\"ui-grid-cell-contents\\\" title=\\\"TOOLTIP\\\">{{COL_FIELD CUSTOM_FILTERS}}</div>\"\n  );\n\n\n  $templateCache.put('ui-grid/uiGridColumnMenu',\n    \"<div class=\\\"ui-grid-column-menu\\\"><div ui-grid-menu menu-items=\\\"menuItems\\\"><!-- <div class=\\\"ui-grid-column-menu\\\">\\n\" +\n    \"    <div class=\\\"inner\\\" ng-show=\\\"menuShown\\\">\\n\" +\n    \"      <ul>\\n\" +\n    \"        <div ng-show=\\\"grid.options.enableSorting\\\">\\n\" +\n    \"          <li ng-click=\\\"sortColumn($event, asc)\\\" ng-class=\\\"{ 'selected' : col.sort.direction == asc }\\\"><i class=\\\"ui-grid-icon-sort-alt-up\\\"></i> Sort Ascending</li>\\n\" +\n    \"          <li ng-click=\\\"sortColumn($event, desc)\\\" ng-class=\\\"{ 'selected' : col.sort.direction == desc }\\\"><i class=\\\"ui-grid-icon-sort-alt-down\\\"></i> Sort Descending</li>\\n\" +\n    \"          <li ng-show=\\\"col.sort.direction\\\" ng-click=\\\"unsortColumn()\\\"><i class=\\\"ui-grid-icon-cancel\\\"></i> Remove Sort</li>\\n\" +\n    \"        </div>\\n\" +\n    \"      </ul>\\n\" +\n    \"    </div>\\n\" +\n    \"  </div> --></div></div>\"\n  );\n\n\n  $templateCache.put('ui-grid/uiGridFooterCell',\n    \"<div class=\\\"ui-grid-cell-contents\\\" col-index=\\\"renderIndex\\\"><div>{{ col.getAggregationText() + ( col.getAggregationValue() CUSTOM_FILTERS ) }}</div></div>\"\n  );\n\n\n  $templateCache.put('ui-grid/uiGridHeaderCell',\n    \"<div role=\\\"columnheader\\\" ng-class=\\\"{ 'sortable': sortable, 'ui-grid-header-cell-last-col': isLastCol }\\\" ui-grid-one-bind-aria-labelledby-grid=\\\"col.uid + '-header-text ' + col.uid + '-sortdir-text'\\\" aria-sort=\\\"{{col.sort.direction == asc ? 'ascending' : ( col.sort.direction == desc ? 'descending' : (!col.sort.direction ? 'none' : 'other'))}}\\\"><div role=\\\"button\\\" tabindex=\\\"0\\\" ng-keydown=\\\"handleKeyDown($event)\\\" class=\\\"ui-grid-cell-contents ui-grid-header-cell-primary-focus\\\" col-index=\\\"renderIndex\\\" title=\\\"TOOLTIP\\\"><span class=\\\"ui-grid-header-cell-label\\\" ui-grid-one-bind-id-grid=\\\"col.uid + '-header-text'\\\">{{ col.displayName CUSTOM_FILTERS }}</span> <span ui-grid-one-bind-id-grid=\\\"col.uid + '-sortdir-text'\\\" ui-grid-visible=\\\"col.sort.direction\\\" aria-label=\\\"{{getSortDirectionAriaLabel()}}\\\"><i ng-class=\\\"{ 'ui-grid-icon-up-dir': col.sort.direction == asc, 'ui-grid-icon-down-dir': col.sort.direction == desc, 'ui-grid-icon-blank': !col.sort.direction }\\\" title=\\\"{{isSortPriorityVisible() ? i18n.headerCell.priority + ' ' + ( col.sort.priority + 1 )  : null}}\\\" aria-hidden=\\\"true\\\"></i> <sub ui-grid-visible=\\\"isSortPriorityVisible()\\\" class=\\\"ui-grid-sort-priority-number\\\">{{col.sort.priority + 1}}</sub></span></div><div role=\\\"button\\\" tabindex=\\\"0\\\" ui-grid-one-bind-id-grid=\\\"col.uid + '-menu-button'\\\" class=\\\"ui-grid-column-menu-button\\\" ng-if=\\\"grid.options.enableColumnMenus && !col.isRowHeader  && col.colDef.enableColumnMenu !== false\\\" ng-click=\\\"toggleMenu($event)\\\" ng-keydown=\\\"headerCellArrowKeyDown($event)\\\" ui-grid-one-bind-aria-label=\\\"i18n.headerCell.aria.columnMenuButtonLabel\\\" aria-haspopup=\\\"true\\\"><i class=\\\"ui-grid-icon-angle-down\\\" aria-hidden=\\\"true\\\">&nbsp;</i></div><div ui-grid-filter></div></div>\"\n  );\n\n\n  $templateCache.put('ui-grid/uiGridMenu',\n    \"<div class=\\\"ui-grid-menu\\\" ng-show=\\\"shown\\\"><style ui-grid-style>{{dynamicStyles}}</style><div class=\\\"ui-grid-menu-mid\\\" ng-show=\\\"shownMid\\\"><div class=\\\"ui-grid-menu-inner\\\" ng-if=\\\"shown\\\"><ul role=\\\"menu\\\" class=\\\"ui-grid-menu-items\\\"><li ng-repeat=\\\"item in menuItems\\\" role=\\\"menuitem\\\" ui-grid-menu-item ui-grid-one-bind-id=\\\"'menuitem-'+$index\\\" action=\\\"item.action\\\" name=\\\"item.title\\\" active=\\\"item.active\\\" icon=\\\"item.icon\\\" shown=\\\"item.shown\\\" context=\\\"item.context\\\" template-url=\\\"item.templateUrl\\\" leave-open=\\\"item.leaveOpen\\\" screen-reader-only=\\\"item.screenReaderOnly\\\"></li></ul></div></div></div>\"\n  );\n\n\n  $templateCache.put('ui-grid/uiGridMenuItem',\n    \"<button type=\\\"button\\\" class=\\\"ui-grid-menu-item\\\" ng-click=\\\"itemAction($event, title)\\\" ng-show=\\\"itemShown()\\\" ng-class=\\\"{ 'ui-grid-menu-item-active': active(), 'ui-grid-sr-only': (!focus && screenReaderOnly) }\\\" aria-pressed=\\\"{{active()}}\\\" tabindex=\\\"0\\\" ng-focus=\\\"focus=true\\\" ng-blur=\\\"focus=false\\\"><i ng-class=\\\"icon\\\" aria-hidden=\\\"true\\\">&nbsp;</i> {{ label() }}</button>\"\n  );\n\n\n  $templateCache.put('ui-grid/uiGridRenderContainer',\n    \"<div role=\\\"presentation\\\" ui-grid-one-bind-id-grid=\\\"'grid-container'\\\" class=\\\"ui-grid-render-container\\\" ng-style=\\\"{ 'margin-left': colContainer.getMargin('left') + 'px', 'margin-right': colContainer.getMargin('right') + 'px' }\\\"><!-- All of these dom elements are replaced in place --><div ui-grid-header></div><div ui-grid-viewport></div><div ng-if=\\\"colContainer.needsHScrollbarPlaceholder()\\\" class=\\\"ui-grid-scrollbar-placeholder\\\" ng-style=\\\"{height:colContainer.grid.scrollbarHeight + 'px'}\\\"></div><ui-grid-footer ng-if=\\\"grid.options.showColumnFooter\\\"></ui-grid-footer></div>\"\n  );\n\n\n  $templateCache.put('ui-grid/uiGridViewport',\n    \"<div role=\\\"rowgroup\\\" class=\\\"ui-grid-viewport\\\" ng-style=\\\"colContainer.getViewportStyle()\\\"><!-- tbody --><div class=\\\"ui-grid-canvas\\\"><div ng-repeat=\\\"(rowRenderIndex, row) in rowContainer.renderedRows track by $index\\\" class=\\\"ui-grid-row\\\" ng-style=\\\"Viewport.rowStyle(rowRenderIndex)\\\"><div role=\\\"row\\\" ui-grid-row=\\\"row\\\" row-render-index=\\\"rowRenderIndex\\\"></div></div></div></div>\"\n  );\n\n\n  $templateCache.put('ui-grid/cellEditor',\n    \"<div><form name=\\\"inputForm\\\"><input type=\\\"INPUT_TYPE\\\" ng-class=\\\"'colt' + col.uid\\\" ui-grid-editor ng-model=\\\"MODEL_COL_FIELD\\\"></form></div>\"\n  );\n\n\n  $templateCache.put('ui-grid/dropdownEditor',\n    \"<div><form name=\\\"inputForm\\\"><select ng-class=\\\"'colt' + col.uid\\\" ui-grid-edit-dropdown ng-model=\\\"MODEL_COL_FIELD\\\" ng-options=\\\"field[editDropdownIdLabel] as field[editDropdownValueLabel] CUSTOM_FILTERS for field in editDropdownOptionsArray\\\"></select></form></div>\"\n  );\n\n\n  $templateCache.put('ui-grid/fileChooserEditor',\n    \"<div><form name=\\\"inputForm\\\"><input ng-class=\\\"'colt' + col.uid\\\" ui-grid-edit-file-chooser type=\\\"file\\\" id=\\\"files\\\" name=\\\"files[]\\\" ng-model=\\\"MODEL_COL_FIELD\\\"></form></div>\"\n  );\n\n\n  $templateCache.put('ui-grid/emptyBaseLayerContainer',\n    \"<div class=\\\"ui-grid-empty-base-layer-container ui-grid-canvas\\\"><div class=\\\"ui-grid-row\\\" ng-repeat=\\\"(rowRenderIndex, row) in grid.baseLayer.emptyRows track by $index\\\" ng-style=\\\"Viewport.rowStyle(rowRenderIndex)\\\"><div><div><div ng-repeat=\\\"(colRenderIndex, col) in colContainer.renderedColumns track by col.colDef.name\\\" class=\\\"ui-grid-cell {{ col.getColClass(false) }}\\\"></div></div></div></div></div>\"\n  );\n\n\n  $templateCache.put('ui-grid/expandableRow',\n    \"<div ui-grid-expandable-row ng-if=\\\"expandableRow.shouldRenderExpand()\\\" class=\\\"expandableRow\\\" style=\\\"float:left; margin-top: 1px; margin-bottom: 1px\\\" ng-style=\\\"{width: (grid.renderContainers.body.getCanvasWidth()) + 'px', height: row.expandedRowHeight + 'px'}\\\"></div>\"\n  );\n\n\n  $templateCache.put('ui-grid/expandableRowHeader',\n    \"<div class=\\\"ui-grid-row-header-cell ui-grid-expandable-buttons-cell\\\"><div class=\\\"ui-grid-cell-contents\\\"><i ng-if=\\\"!(row.groupHeader==true || row.entity.subGridOptions.disableRowExpandable)\\\" ng-class=\\\"{ 'ui-grid-icon-plus-squared' : !row.isExpanded, 'ui-grid-icon-minus-squared' : row.isExpanded }\\\" ng-click=\\\"grid.api.expandable.toggleRowExpansion(row.entity)\\\"></i></div></div>\"\n  );\n\n\n  $templateCache.put('ui-grid/expandableScrollFiller',\n    \"<div ng-if=\\\"expandableRow.shouldRenderFiller()\\\" ng-class=\\\"{scrollFiller:true, scrollFillerClass:(colContainer.name === 'body')}\\\" ng-style=\\\"{ width: (grid.getViewportWidth()) + 'px', height: row.expandedRowHeight + 2 + 'px', 'margin-left': grid.options.rowHeader.rowHeaderWidth + 'px' }\\\"><i class=\\\"ui-grid-icon-spin5 ui-grid-animate-spin\\\" ng-style=\\\"{'margin-top': ( row.expandedRowHeight/2 - 5) + 'px', 'margin-left' : ((grid.getViewportWidth() - grid.options.rowHeader.rowHeaderWidth)/2 - 5) + 'px'}\\\"></i></div>\"\n  );\n\n\n  $templateCache.put('ui-grid/expandableTopRowHeader',\n    \"<div class=\\\"ui-grid-row-header-cell ui-grid-expandable-buttons-cell\\\"><div class=\\\"ui-grid-cell-contents\\\"><span class=\\\"ui-grid-cell-empty\\\" ng-if=\\\"!grid.options.showExpandAllButton\\\"></span> <button type=\\\"button\\\" class=\\\"ui-grid-icon-button\\\" ng-if=\\\"grid.options.showExpandAllButton\\\" ng-class=\\\"{ 'ui-grid-icon-plus-squared' : !grid.expandable.expandedAll, 'ui-grid-icon-minus-squared' : grid.expandable.expandedAll }\\\" ng-click=\\\"grid.api.expandable.toggleAllRows()\\\"></button></div></div>\"\n  );\n\n\n  $templateCache.put('ui-grid/csvLink',\n    \"<span class=\\\"ui-grid-exporter-csv-link-span\\\"><a href=\\\"data:text/csv;charset=UTF-8,CSV_CONTENT\\\" download=\\\"FILE_NAME\\\">LINK_LABEL</a></span>\"\n  );\n\n\n  $templateCache.put('ui-grid/importerMenuItem',\n    \"<li class=\\\"ui-grid-menu-item\\\"><form><input class=\\\"ui-grid-importer-file-chooser\\\" type=\\\"file\\\" id=\\\"files\\\" name=\\\"files[]\\\"></form></li>\"\n  );\n\n\n  $templateCache.put('ui-grid/importerMenuItemContainer',\n    \"<div ui-grid-importer-menu-item></div>\"\n  );\n\n\n  $templateCache.put('ui-grid/pagination',\n    \"<div class=\\\"ui-grid-pager-panel\\\" ui-grid-pager ng-show=\\\"grid.options.enablePaginationControls\\\"><div role=\\\"navigation\\\" class=\\\"ui-grid-pager-container\\\"><div class=\\\"ui-grid-pager-control\\\"><button type=\\\"button\\\" class=\\\"ui-grid-pager-first\\\" ui-grid-one-bind-title=\\\"aria.pageToFirst\\\" ui-grid-one-bind-aria-label=\\\"aria.pageToFirst\\\" ng-click=\\\"pageFirstPageClick()\\\" ng-disabled=\\\"cantPageBackward()\\\"><div ng-class=\\\"grid.isRTL() ? 'last-triangle' : 'first-triangle'\\\"><div ng-class=\\\"grid.isRTL() ? 'last-bar-rtl' : 'first-bar'\\\"></div></div></button> <button type=\\\"button\\\" class=\\\"ui-grid-pager-previous\\\" ui-grid-one-bind-title=\\\"aria.pageBack\\\" ui-grid-one-bind-aria-label=\\\"aria.pageBack\\\" ng-click=\\\"pagePreviousPageClick()\\\" ng-disabled=\\\"cantPageBackward()\\\"><div ng-class=\\\"grid.isRTL() ? 'last-triangle prev-triangle' : 'first-triangle prev-triangle'\\\"></div></button> <input type=\\\"number\\\" ui-grid-one-bind-title=\\\"aria.pageSelected\\\" ui-grid-one-bind-aria-label=\\\"aria.pageSelected\\\" class=\\\"ui-grid-pager-control-input\\\" ng-model=\\\"grid.options.paginationCurrentPage\\\" min=\\\"1\\\" max=\\\"{{ paginationApi.getTotalPages() }}\\\" step=\\\"1\\\" required> <span class=\\\"ui-grid-pager-max-pages-number\\\" ng-show=\\\"paginationApi.getTotalPages() > 0\\\"><abbr ui-grid-one-bind-title=\\\"paginationOf\\\">/</abbr> {{ paginationApi.getTotalPages() }}</span> <button type=\\\"button\\\" class=\\\"ui-grid-pager-next\\\" ui-grid-one-bind-title=\\\"aria.pageForward\\\" ui-grid-one-bind-aria-label=\\\"aria.pageForward\\\" ng-click=\\\"pageNextPageClick()\\\" ng-disabled=\\\"cantPageForward()\\\"><div ng-class=\\\"grid.isRTL() ? 'first-triangle next-triangle' : 'last-triangle next-triangle'\\\"></div></button> <button type=\\\"button\\\" class=\\\"ui-grid-pager-last\\\" ui-grid-one-bind-title=\\\"aria.pageToLast\\\" ui-grid-one-bind-aria-label=\\\"aria.pageToLast\\\" ng-click=\\\"pageLastPageClick()\\\" ng-disabled=\\\"cantPageToLast()\\\"><div ng-class=\\\"grid.isRTL() ? 'first-triangle' : 'last-triangle'\\\"><div ng-class=\\\"grid.isRTL() ? 'first-bar-rtl' : 'last-bar'\\\"></div></div></button></div><div class=\\\"ui-grid-pager-row-count-picker\\\" ng-if=\\\"grid.options.paginationPageSizes.length > 1 && !grid.options.useCustomPagination\\\"><select ui-grid-one-bind-aria-labelledby-grid=\\\"'items-per-page-label'\\\" ng-model=\\\"grid.options.paginationPageSize\\\" ng-options=\\\"o as o for o in grid.options.paginationPageSizes\\\"></select><span ui-grid-one-bind-id-grid=\\\"'items-per-page-label'\\\" class=\\\"ui-grid-pager-row-count-label\\\">&nbsp;{{sizesLabel}}</span></div><span ng-if=\\\"grid.options.paginationPageSizes.length <= 1\\\" class=\\\"ui-grid-pager-row-count-label\\\">{{grid.options.paginationPageSize}}&nbsp;{{sizesLabel}}</span></div><div class=\\\"ui-grid-pager-count-container\\\"><div class=\\\"ui-grid-pager-count\\\"><span ng-show=\\\"grid.options.totalItems > 0\\\">{{ 1 + paginationApi.getFirstRowIndex() }} <abbr ui-grid-one-bind-title=\\\"paginationThrough\\\">-</abbr> {{ 1 + paginationApi.getLastRowIndex() }} {{paginationOf}} {{grid.options.totalItems}} {{totalItemsLabel}}</span></div></div></div>\"\n  );\n\n\n  $templateCache.put('ui-grid/columnResizer',\n    \"<div ui-grid-column-resizer ng-if=\\\"grid.options.enableColumnResizing\\\" class=\\\"ui-grid-column-resizer\\\" col=\\\"col\\\" position=\\\"right\\\" render-index=\\\"renderIndex\\\" unselectable=\\\"on\\\"></div>\"\n  );\n\n\n  $templateCache.put('ui-grid/gridFooterSelectedItems',\n    \"<span ng-if=\\\"grid.selection.selectedCount !== 0 && grid.options.enableFooterTotalSelected\\\">({{\\\"search.selectedItems\\\" | t}} {{grid.selection.selectedCount}})</span>\"\n  );\n\n\n  $templateCache.put('ui-grid/selectionHeaderCell',\n    \"<div><!-- <div class=\\\"ui-grid-vertical-bar\\\">&nbsp;</div> --><div class=\\\"ui-grid-cell-contents\\\" col-index=\\\"renderIndex\\\"><ui-grid-selection-select-all-buttons ng-if=\\\"grid.options.enableSelectAll\\\" role=\\\"checkbox\\\" ng-model=\\\"grid.selection.selectAll\\\"></ui-grid-selection-select-all-buttons></div></div>\"\n  );\n\n\n  $templateCache.put('ui-grid/selectionRowHeader',\n    \"<div class=\\\"ui-grid-cell-contents ui-grid-disable-selection\\\"><ui-grid-selection-row-header-buttons></ui-grid-selection-row-header-buttons></div>\"\n  );\n\n\n  $templateCache.put('ui-grid/selectionRowHeaderButtons',\n    \"<div class=\\\"ui-grid-selection-row-header-buttons ui-grid-icon-ok\\\" ng-class=\\\"{'ui-grid-row-selected': row.isSelected}\\\" ng-click=\\\"selectButtonClick(row, $event)\\\" ng-keydown=\\\"selectButtonKeyDown(row, $event)\\\" role=\\\"checkbox\\\" ng-model=\\\"row.isSelected\\\">&nbsp;</div>\"\n  );\n\n\n  $templateCache.put('ui-grid/selectionSelectAllButtons',\n    \"<div role=\\\"button\\\" class=\\\"ui-grid-selection-row-header-buttons ui-grid-icon-ok\\\" ng-class=\\\"{'ui-grid-all-selected': grid.selection.selectAll}\\\" ng-click=\\\"headerButtonClick($event)\\\" ng-keydown=\\\"headerButtonKeyDown($event)\\\"></div>\"\n  );\n\n\n  $templateCache.put('ui-grid/treeBaseExpandAllButtons',\n    \"<div class=\\\"ui-grid-tree-base-row-header-buttons\\\" ng-class=\\\"{'ui-grid-icon-minus-squared': grid.treeBase.numberLevels > 0 && grid.treeBase.expandAll, 'ui-grid-icon-plus-squared': grid.treeBase.numberLevels > 0 && !grid.treeBase.expandAll}\\\" ng-click=\\\"headerButtonClick($event)\\\"></div>\"\n  );\n\n\n  $templateCache.put('ui-grid/treeBaseHeaderCell',\n    \"<div><div class=\\\"ui-grid-cell-contents\\\" col-index=\\\"renderIndex\\\"><ui-grid-tree-base-expand-all-buttons ng-if=\\\"grid.options.enableExpandAll\\\"></ui-grid-tree-base-expand-all-buttons></div></div>\"\n  );\n\n\n  $templateCache.put('ui-grid/treeBaseRowHeader',\n    \"<div class=\\\"ui-grid-cell-contents\\\"><ui-grid-tree-base-row-header-buttons></ui-grid-tree-base-row-header-buttons></div>\"\n  );\n\n\n  $templateCache.put('ui-grid/treeBaseRowHeaderButtons',\n    \"<div class=\\\"ui-grid-tree-base-row-header-buttons\\\" ng-class=\\\"{'ui-grid-tree-base-header': row.treeLevel > -1 }\\\" ng-click=\\\"treeButtonClick(row, $event)\\\"><i ng-class=\\\"{'ui-grid-icon-minus-squared': ( ( grid.options.showTreeExpandNoChildren && row.treeLevel > -1 ) || ( row.treeNode.children && row.treeNode.children.length > 0 ) ) && row.treeNode.state === 'expanded', 'ui-grid-icon-plus-squared': ( ( grid.options.showTreeExpandNoChildren && row.treeLevel > -1 ) || ( row.treeNode.children && row.treeNode.children.length > 0 ) ) && row.treeNode.state === 'collapsed'}\\\" ng-style=\\\"{'padding-left': grid.options.treeIndent * row.treeLevel + 'px'}\\\"></i> &nbsp;</div>\"\n  );\n\n\n  $templateCache.put('ui-grid/cellTitleValidator',\n    \"<div class=\\\"ui-grid-cell-contents\\\" ng-class=\\\"{invalid:grid.validate.isInvalid(row.entity,col.colDef)}\\\" title=\\\"{{grid.validate.getTitleFormattedErrors(row.entity,col.colDef)}}\\\">{{COL_FIELD CUSTOM_FILTERS}}</div>\"\n  );\n\n\n  $templateCache.put('ui-grid/cellTooltipValidator',\n    \"<div class=\\\"ui-grid-cell-contents\\\" ng-class=\\\"{invalid:grid.validate.isInvalid(row.entity,col.colDef)}\\\" tooltip-html-unsafe=\\\"{{grid.validate.getFormattedErrors(row.entity,col.colDef)}}\\\" tooltip-enable=\\\"grid.validate.isInvalid(row.entity,col.colDef)\\\" tooltip-append-to-body=\\\"true\\\" tooltip-placement=\\\"top\\\" title=\\\"TOOLTIP\\\">{{COL_FIELD CUSTOM_FILTERS}}</div>\"\n  );\n\n}]);\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nangular.module('zeppelinWebApp').controller('MainCtrl', MainCtrl);\n\nfunction MainCtrl($scope, $rootScope, $window, arrayOrderingSrv) {\n  'ngInject';\n\n  $scope.looknfeel = 'default';\n\n  let init = function() {\n    $scope.asIframe = (($window.location.href.indexOf('asIframe') > -1) ? true : false);\n  };\n\n  init();\n\n  $rootScope.$on('setIframe', function(event, data) {\n    if (!event.defaultPrevented) {\n      $scope.asIframe = data;\n      event.preventDefault();\n    }\n  });\n\n  $rootScope.$on('setLookAndFeel', function(event, data) {\n    if (!event.defaultPrevented && data && data !== '' && data !== $scope.looknfeel) {\n      $scope.looknfeel = data;\n      event.preventDefault();\n    }\n  });\n\n  // Set The lookAndFeel to default on every page\n  $rootScope.$on('$routeChangeStart', function(event, next, current) {\n    $rootScope.$broadcast('setLookAndFeel', 'default');\n  });\n\n  $rootScope.noteName = function(note) {\n    if (!_.isEmpty(note)) {\n      return arrayOrderingSrv.getNoteName(note);\n    }\n  };\n\n  $rootScope.notePath = function(note) {\n    if (!_.isEmpty(note)) {\n      return arrayOrderingSrv.getNotePath(note);\n    }\n  };\n\n  BootstrapDialog.defaultOptions.onshown = function() {\n    angular.element('#' + this.id).find('.btn:last').focus();\n  };\n\n  // Remove BootstrapDialog animation\n  BootstrapDialog.configDefaultOptions({animate: false});\n}\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nangular.module('zeppelinWebApp').controller('HomeCtrl', HomeCtrl);\n\nfunction HomeCtrl($scope, noteListFactory, websocketMsgSrv, $rootScope, arrayOrderingSrv,\n                  ngToast, noteActionService, TRASH_FOLDER_ID) {\n  'ngInject';\n\n  ngToast.dismiss();\n  let vm = this;\n  vm.notes = noteListFactory;\n  vm.websocketMsgSrv = websocketMsgSrv;\n  vm.arrayOrderingSrv = arrayOrderingSrv;\n  vm.noteActionService = noteActionService;\n  vm.numberOfNotesDisplayed = window.innerHeight / 20;\n\n  vm.notebookHome = false;\n  vm.noteCustomHome = true;\n  if ($rootScope.ticket !== undefined) {\n    vm.staticHome = false;\n  } else {\n    vm.staticHome = true;\n  }\n\n  $scope.isReloading = false;\n  $scope.TRASH_FOLDER_ID = TRASH_FOLDER_ID;\n  $scope.query = {q: ''};\n\n  $scope.initHome = function() {\n    websocketMsgSrv.getHomeNote();\n    vm.noteCustomHome = false;\n  };\n\n  $scope.reloadNoteList = function() {\n    websocketMsgSrv.reloadAllNotesFromRepo();\n    $scope.isReloadingNotes = true;\n  };\n\n  $scope.toggleFolderNode = function(node) {\n    node.hidden = !node.hidden;\n  };\n\n  angular.element('#loginModal').on('hidden.bs.modal', function(e) {\n    $rootScope.$broadcast('initLoginValues');\n  });\n\n  /*\n   ** $scope.$on functions below\n   */\n\n  $scope.$on('setNoteMenu', function(event, notes) {\n    $scope.isReloadingNotes = false;\n  });\n\n  $scope.$on('setNoteContent', function(event, note) {\n    if (vm.noteCustomHome) {\n      return;\n    }\n\n    if (note) {\n      vm.note = note;\n\n      // initialize look And Feel\n      $rootScope.$broadcast('setLookAndFeel', 'home');\n\n      // make it read only\n      vm.viewOnly = true;\n\n      vm.notebookHome = true;\n      vm.staticHome = false;\n    } else {\n      vm.staticHome = true;\n      vm.notebookHome = false;\n    }\n  });\n\n  $scope.loadMoreNotes = function() {\n    vm.numberOfNotesDisplayed += 10;\n  };\n\n  $scope.renameNote = function(nodeId, nodePath) {\n    vm.noteActionService.renameNote(nodeId, nodePath);\n  };\n\n  $scope.moveNoteToTrash = function(noteId) {\n    vm.noteActionService.moveNoteToTrash(noteId, false);\n  };\n\n  $scope.moveFolderToTrash = function(folderId) {\n    vm.noteActionService.moveFolderToTrash(folderId);\n  };\n\n  $scope.restoreNote = function(noteId) {\n    websocketMsgSrv.restoreNote(noteId);\n  };\n\n  $scope.restoreFolder = function(folderId) {\n    websocketMsgSrv.restoreFolder(folderId);\n  };\n\n  $scope.restoreAll = function() {\n    vm.noteActionService.restoreAll();\n  };\n\n  $scope.renameFolder = function(node) {\n    vm.noteActionService.renameFolder(node.id);\n  };\n\n  $scope.removeNote = function(noteId) {\n    vm.noteActionService.removeNote(noteId, false);\n  };\n\n  $scope.removeFolder = function(folderId) {\n    vm.noteActionService.removeFolder(folderId);\n  };\n\n  $scope.emptyTrash = function() {\n    vm.noteActionService.emptyTrash();\n  };\n\n  $scope.clearAllParagraphOutput = function(noteId) {\n    vm.noteActionService.clearAllParagraphOutput(noteId);\n  };\n\n  $scope.isFilterNote = function(note) {\n    if (!$scope.query.q) {\n      return true;\n    }\n\n    let noteName = note.name;\n    if (noteName.toLowerCase().indexOf($scope.query.q.toLowerCase()) > -1) {\n      return true;\n    }\n    return false;\n  };\n\n  $scope.getNoteName = function(note) {\n    return arrayOrderingSrv.getNoteName(note);\n  };\n\n  $scope.getNotePath = function(note) {\n    return arrayOrderingSrv.getNotePath(note);\n  };\n\n  $scope.noteComparator = function(note1, note2) {\n    return arrayOrderingSrv.noteComparator(note1, note2);\n  };\n}\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport moment from 'moment';\n\nimport {isParagraphRunning} from './paragraph/paragraph.status';\n\nangular.module('zeppelinWebApp').controller('NotebookCtrl', NotebookCtrl);\n\nfunction NotebookCtrl($scope, $route, $routeParams, $location, $rootScope,\n                      $http, websocketMsgSrv, baseUrlSrv, $timeout, saveAsService,\n                      ngToast, noteActionService, noteVarShareService, TRASH_FOLDER_ID,\n                      heliumService) {\n  'ngInject';\n\n  ngToast.dismiss();\n\n  $scope.note = null;\n  $scope.actionOnFormSelectionChange = true;\n  $scope.hideForms = false;\n  $scope.disableForms = false;\n  $scope.editorToggled = false;\n  $scope.tableToggled = false;\n  $scope.viewOnly = false;\n  $scope.showSetting = false;\n  $scope.showRevisionsComparator = false;\n  $scope.collaborativeMode = false;\n  $scope.collaborativeModeUsers = [];\n  $scope.looknfeelOption = ['default', 'simple', 'report'];\n  $scope.noteFormTitle = null;\n  $scope.cronOption = [\n    {name: 'None', value: undefined},\n    {name: '1m', value: '0 0/1 * * * ?'},\n    {name: '5m', value: '0 0/5 * * * ?'},\n    {name: '1h', value: '0 0 0/1 * * ?'},\n    {name: '3h', value: '0 0 0/3 * * ?'},\n    {name: '6h', value: '0 0 0/6 * * ?'},\n    {name: '12h', value: '0 0 0/12 * * ?'},\n    {name: '1d', value: '0 0 0 * * ?'},\n  ];\n\n  $scope.formatRevisionDate = function(date) {\n    return moment.unix(date).format('MMMM Do YYYY, h:mm a');\n  };\n\n  // reorder this array without Head revision, put Head revision in the first\n  $scope.revisionSort = function(array) {\n    let orderArr = array.slice(1).sort((a, b) => {\n      return b.time-a.time;\n    });\n    orderArr.unshift(array[0]);\n    return orderArr;\n  };\n\n  $scope.interpreterSettings = [];\n  $scope.interpreterBindings = [];\n  $scope.isNoteDirty = null;\n  $scope.saveTimer = null;\n  $scope.paragraphWarningDialog = {};\n\n  let connectedOnce = false;\n  let isRevisionPath = function(path) {\n    let pattern = new RegExp('^.*\\/notebook\\/[a-zA-Z0-9_]*\\/revision\\/[a-zA-Z0-9_]*');\n    return pattern.test(path);\n  };\n\n  $scope.noteRevisions = [];\n  $scope.currentRevision = 'Head';\n  $scope.revisionView = isRevisionPath($location.path());\n\n  $scope.search = {\n    searchText: '',\n    occurrencesExists: false,\n    needHighlightFirst: false,\n    occurrencesHidden: false,\n    replaceText: '',\n    needToSendNextOccurrenceAfterReplace: false,\n    occurrencesCount: 0,\n    currentOccurrence: 0,\n    searchBoxOpened: false,\n    searchBoxWidth: 350,\n    left: '0px',\n  };\n  let currentSearchParagraph = 0;\n\n  $scope.$watch('note', function(value) {\n    let title;\n    if (value) {\n      title = value.name.substr(value.name.lastIndexOf('/') + 1, value.name.length);\n      title += ' - Zeppelin';\n    } else {\n      title = 'Zeppelin';\n    }\n    $rootScope.pageTitle = title;\n  }, true);\n\n  $scope.$on('setConnectedStatus', function(event, param) {\n    if (connectedOnce && param) {\n      initNotebook();\n    }\n    connectedOnce = true;\n  });\n\n  $scope.addEvent = function(config) {\n    let removeEventByID = function(id) {\n      let events = jQuery._data(config.element, 'events')[config.eventType];\n      if (!events) {\n        return;\n      }\n      for (let i=0; i < events.length; i++) {\n        if (events[i].data && events[i].data.eventID === id) {\n          events.splice(i, 1);\n          i--;\n        }\n      }\n    };\n\n    removeEventByID(config.eventID);\n    angular.element(config.element).bind(config.eventType, {eventID: config.eventID}, config.handler);\n    angular.element(config.onDestroyElement).scope().$on('$destroy', () => {\n      removeEventByID(config.eventID);\n    });\n  };\n\n  $scope.getCronOptionNameFromValue = function(value) {\n    if (!value) {\n      return '';\n    }\n\n    for (let o in $scope.cronOption) {\n      if ($scope.cronOption[o].value === value) {\n        return $scope.cronOption[o].name;\n      }\n    }\n    return value;\n  };\n\n  $scope.blockAnonUsers = function() {\n    let zeppelinVersion = $rootScope.zeppelinVersion;\n    let url = 'https://zeppelin.apache.org/docs/' + zeppelinVersion + '/security/notebook_authorization.html';\n    let content = 'Only authenticated user can set the permission.' +\n      '<a data-toggle=\"tooltip\" data-placement=\"top\" title=\"Learn more\" target=\"_blank\" href=' + url + '>' +\n      '<i class=\"icon-question\" />' +\n      '</a>';\n    BootstrapDialog.show({\n      closable: false,\n      closeByBackdrop: false,\n      closeByKeyboard: false,\n      title: 'No permission',\n      message: content,\n      buttons: [{\n        label: 'Close',\n        action: function(dialog) {\n          dialog.close();\n        },\n      }],\n    });\n  };\n\n  /** Init the new controller */\n  const initNotebook = function() {\n    noteVarShareService.clear();\n    if ($routeParams.revisionId) {\n      websocketMsgSrv.getNoteByRevision($routeParams.noteId, $routeParams.revisionId);\n    } else {\n      websocketMsgSrv.getNote($routeParams.noteId);\n    }\n    websocketMsgSrv.listRevisionHistory($routeParams.noteId);\n    let currentRoute = $route.current;\n    if (currentRoute) {\n      setTimeout(\n        function() {\n          let routeParams = currentRoute.params;\n          let $id = angular.element('#' + routeParams.paragraph + '_container');\n\n          if ($id.length > 0) {\n            // adjust for navbar\n            let top = $id.offset().top - 103;\n            angular.element('html, body').scrollTo({top: top, left: 0});\n          }\n        },\n        1000\n      );\n    }\n  };\n\n  initNotebook();\n\n  $scope.focusParagraphOnClick = function(clickEvent) {\n    if (!$scope.note) {\n      return;\n    }\n    for (let i = 0; i < $scope.note.paragraphs.length; i++) {\n      let paragraphId = $scope.note.paragraphs[i].id;\n      if (jQuery.contains(angular.element('#' + paragraphId + '_container')[0], clickEvent.target)) {\n        $scope.$broadcast('focusParagraph', paragraphId, 0, null, true);\n        break;\n      }\n    }\n  };\n\n  // register mouseevent handler for focus paragraph\n  document.addEventListener('click', $scope.focusParagraphOnClick);\n\n  let keyboardShortcut = function(keyEvent) {\n    // handle keyevent\n    if (!$scope.viewOnly && !$scope.revisionView) {\n      $scope.$broadcast('keyEvent', keyEvent);\n    }\n  };\n\n  $scope.keydownEvent = function(keyEvent) {\n    if ((keyEvent.ctrlKey || keyEvent.metaKey) && String.fromCharCode(keyEvent.which).toLowerCase() === 's') {\n      keyEvent.preventDefault();\n    }\n\n    keyboardShortcut(keyEvent);\n  };\n\n  // register mouseevent handler for focus paragraph\n  document.addEventListener('keydown', $scope.keydownEvent);\n\n  $scope.paragraphOnDoubleClick = function(paragraphId) {\n    $scope.$broadcast('doubleClickParagraph', paragraphId);\n  };\n\n  // Move the note to trash and go back to the main page\n  $scope.moveNoteToTrash = function(noteId) {\n    noteActionService.moveNoteToTrash(noteId, true);\n  };\n\n  // Remove the note permanently if it's in the trash\n  $scope.removeNote = function(noteId) {\n    noteActionService.removeNote(noteId, true);\n  };\n\n  $scope.isTrash = function(note) {\n    return note && note.path ? note.path.split('/')[1] === TRASH_FOLDER_ID : false;\n  };\n\n  // Export notebook\n  let limit = 0;\n\n  websocketMsgSrv.listConfigurations();\n  $scope.$on('configurationsInfo', function(scope, event) {\n    limit = event.configurations['zeppelin.websocket.max.text.message.size'];\n  });\n\n  $scope.exportNote = function() {\n    let jsonContent = JSON.stringify($scope.note, null, 2);\n    if (jsonContent.length > limit) {\n      BootstrapDialog.confirm({\n        closable: true,\n        title: 'Note size exceeds importable limit (' + limit + ')',\n        message: 'Do you still want to export this note?',\n        callback: function(result) {\n          if (result) {\n            saveAsService.saveAs(jsonContent, $scope.note.name, 'zpln');\n          }\n        },\n      });\n    } else {\n      saveAsService.saveAs(jsonContent, $scope.note.name, 'zpln');\n    }\n  };\n\n  // Export nbformat\n  $scope.exportNbformat = function() {\n    websocketMsgSrv.convertNote($scope.note.id, $scope.note.name);\n  };\n\n  // Clone note\n  $scope.cloneNote = function(noteId) {\n    BootstrapDialog.confirm({\n      closable: true,\n      title: '',\n      message: 'Do you want to clone this note?',\n      callback: function(result) {\n        if (result) {\n          websocketMsgSrv.cloneNote(noteId);\n          $location.path('/');\n        }\n      },\n    });\n  };\n\n  // checkpoint/commit notebook\n  $scope.checkpointNote = function(commitMessage) {\n    BootstrapDialog.confirm({\n      closable: true,\n      title: '',\n      message: 'Commit note to current repository?',\n      callback: function(result) {\n        if (result) {\n          websocketMsgSrv.checkpointNote($routeParams.noteId, commitMessage);\n        }\n      },\n    });\n    document.getElementById('note.checkpoint.message').value = '';\n  };\n\n  // set notebook head to given revision\n  $scope.setNoteRevision = function() {\n    BootstrapDialog.confirm({\n      closable: true,\n      title: '',\n      message: 'Set notebook head to current revision?',\n      callback: function(result) {\n        if (result) {\n          websocketMsgSrv.setNoteRevision($routeParams.noteId, $routeParams.revisionId);\n        }\n      },\n    });\n  };\n\n  $scope.preVisibleRevisionsComparator = function() {\n    $scope.mergeNoteRevisionsForCompare = null;\n    $scope.firstNoteRevisionForCompare = null;\n    $scope.secondNoteRevisionForCompare = null;\n    $scope.currentFirstRevisionForCompare = 'Choose...';\n    $scope.currentSecondRevisionForCompare = 'Choose...';\n    $scope.$apply();\n  };\n\n  $scope.$on('listRevisionHistory', function(event, data) {\n    console.debug('received list of revisions %o', data);\n    $scope.noteRevisions = data.revisionList;\n    if ($scope.noteRevisions) {\n      if ($scope.noteRevisions.length === 0 || $scope.noteRevisions[0].id !== 'Head') {\n        $scope.noteRevisions.splice(0, 0, {\n          id: 'Head',\n          message: 'Head',\n          time: $scope.noteRevisions[0].time,\n        });\n      }\n      if ($routeParams.revisionId) {\n        let index = _.findIndex($scope.noteRevisions,\n          {'id': $routeParams.revisionId});\n        if (index > -1) {\n          $scope.currentRevision = $scope.noteRevisions[index].message;\n        }\n      }\n    }\n  });\n\n  $scope.$on('noteRevision', function(event, data) {\n    console.log('received note revision %o', data);\n    if (data.note) {\n      $scope.note = data.note;\n      initializeLookAndFeel();\n    } else {\n      $location.path('/');\n    }\n  });\n\n  $scope.$on('setNoteRevisionResult', function(event, data) {\n    console.log('received set note revision result %o', data);\n    if (data.status) {\n      $location.path('/notebook/' + $routeParams.noteId);\n    }\n  });\n\n  $scope.visitRevision = function(revision) {\n    if (revision.id) {\n      if (revision.id === 'Head') {\n        $location.path('/notebook/' + $routeParams.noteId);\n      } else {\n        $location.path('/notebook/' + $routeParams.noteId + '/revision/' + revision.id);\n      }\n    } else {\n      ngToast.danger({content: 'There is a problem with this Revision',\n        verticalPosition: 'top',\n        dismissOnTimeout: false,\n      });\n    }\n  };\n\n  $scope.runAllParagraphs = function(noteId) {\n    BootstrapDialog.confirm({\n      closable: true,\n      title: '',\n      message: 'Run all paragraphs?',\n      callback: function(result) {\n        if (result) {\n          const paragraphs = $scope.note.paragraphs.map((p) => {\n            return {\n              id: p.id,\n              title: p.title,\n              paragraph: p.text,\n              config: p.config,\n              params: p.settings.params,\n            };\n          });\n          websocketMsgSrv.runAllParagraphs(noteId, paragraphs);\n        }\n      },\n    });\n  };\n\n  $scope.saveNote = function() {\n    if ($scope.note && $scope.note.paragraphs) {\n      _.forEach($scope.note.paragraphs, function(par) {\n        angular\n          .element('#' + par.id + '_paragraphColumn_main')\n          .scope()\n          .saveParagraph(par);\n      });\n      $scope.isNoteDirty = null;\n    }\n  };\n\n  $scope.clearAllParagraphOutput = function(noteId) {\n    noteActionService.clearAllParagraphOutput(noteId);\n  };\n\n  $scope.toggleAllEditor = function() {\n    if ($scope.editorToggled) {\n      $scope.$broadcast('openEditor');\n    } else {\n      $scope.$broadcast('closeEditor');\n    }\n    $scope.editorToggled = !$scope.editorToggled;\n  };\n\n  $scope.showAllEditor = function() {\n    $scope.$broadcast('openEditor');\n  };\n\n  $scope.hideAllEditor = function() {\n    $scope.$broadcast('closeEditor');\n  };\n\n  $scope.toggleAllTable = function() {\n    if ($scope.tableToggled) {\n      $scope.$broadcast('openTable');\n    } else {\n      $scope.$broadcast('closeTable');\n    }\n    $scope.tableToggled = !$scope.tableToggled;\n  };\n\n  $scope.showAllTable = function() {\n    $scope.$broadcast('openTable');\n  };\n\n  $scope.hideAllTable = function() {\n    $scope.$broadcast('closeTable');\n  };\n\n  /**\n   * @returns {boolean} true if one more paragraphs are running. otherwise return false.\n   */\n  $scope.isNoteRunning = function() {\n    if (!$scope.note) {\n      return false;\n    }\n\n    for (let i = 0; i < $scope.note.paragraphs.length; i++) {\n      if (isParagraphRunning($scope.note.paragraphs[i])) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  $scope.killSaveTimer = function() {\n    if ($scope.saveTimer) {\n      $timeout.cancel($scope.saveTimer);\n      $scope.saveTimer = null;\n    }\n  };\n\n  $scope.startSaveTimer = function() {\n    $scope.killSaveTimer();\n    $scope.isNoteDirty = true;\n    // console.log('startSaveTimer called ' + $scope.note.id);\n    $scope.saveTimer = $timeout(function() {\n      $scope.saveNote();\n    }, 10000);\n  };\n\n  $scope.setLookAndFeel = function(looknfeel) {\n    $scope.note.config.looknfeel = looknfeel;\n    if ($scope.revisionView === true) {\n      $rootScope.$broadcast('setLookAndFeel', $scope.note.config.looknfeel);\n    } else {\n      $scope.setConfig();\n    }\n  };\n\n  $scope.setNoteFormTitle = function(noteFormTitle) {\n    $scope.note.config.noteFormTitle = noteFormTitle;\n    $scope.setConfig();\n  };\n\n  /** Set cron expression for this note **/\n  $scope.setCronScheduler = function(cronExpr) {\n    if (cronExpr) {\n      if (!$scope.note.config.cronExecutingUser) {\n        $scope.note.config.cronExecutingUser = $rootScope.ticket.principal;\n      }\n      if (!$scope.note.config.cronExecutingRoles) {\n        $scope.note.config.cronExecutingRoles = $rootScope.ticket.roles;\n      }\n    } else {\n      $scope.note.config.cronExecutingUser = '';\n      $scope.note.config.cronExecutingRoles = '';\n    }\n    $scope.note.config.cron = cronExpr;\n    $scope.setConfig();\n  };\n\n  /** Update note config **/\n  $scope.setConfig = function(config) {\n    if (config) {\n      $scope.note.config = config;\n    }\n    websocketMsgSrv.updateNote($scope.note.id, $scope.note.name, $scope.note.config);\n  };\n\n  /** Update the note name */\n  $scope.updateNoteName = function(newName) {\n    const trimmedNewName = newName.trim();\n    if (trimmedNewName.length > 0 && $scope.note.name !== trimmedNewName) {\n      $scope.note.name = trimmedNewName;\n      websocketMsgSrv.renameNote($scope.note.id, $scope.note.name, true);\n    }\n  };\n\n  const initializeLookAndFeel = function() {\n    if (!$scope.note.config.looknfeel) {\n      $scope.note.config.looknfeel = 'default';\n    } else {\n      $scope.viewOnly = $scope.note.config.looknfeel === 'report' ? true : false;\n    }\n\n    if ($scope.note.paragraphs && $scope.note.paragraphs[0]) {\n      $scope.note.paragraphs[0].focus = true;\n    }\n    $rootScope.$broadcast('setLookAndFeel', $scope.note.config.looknfeel);\n  };\n\n  let cleanParagraphExcept = function(paragraphId, note) {\n    let noteCopy = {};\n    noteCopy.id = note.id;\n    noteCopy.name = note.name;\n    noteCopy.config = note.config;\n    noteCopy.info = note.info;\n    noteCopy.paragraphs = [];\n    for (let i = 0; i < note.paragraphs.length; i++) {\n      if (note.paragraphs[i].id === paragraphId) {\n        noteCopy.paragraphs[0] = note.paragraphs[i];\n        if (!noteCopy.paragraphs[0].config) {\n          noteCopy.paragraphs[0].config = {};\n        }\n        noteCopy.paragraphs[0].config.editorHide = true;\n        noteCopy.paragraphs[0].config.tableHide = false;\n        break;\n      }\n    }\n    return noteCopy;\n  };\n\n  let addPara = function(paragraph, index) {\n    $scope.note.paragraphs.splice(index, 0, paragraph);\n    $scope.note.paragraphs.map((para) => {\n      if (para.id === paragraph.id) {\n        para.focus = true;\n\n        // we need `$timeout` since angular DOM might not be initialized\n        $timeout(() => {\n          $scope.$broadcast('focusParagraph', para.id, 0, null, false);\n        });\n      }\n    });\n  };\n\n  let removePara = function(paragraphId) {\n    let removeIdx;\n    _.each($scope.note.paragraphs, function(para, idx) {\n      if (para.id === paragraphId) {\n        removeIdx = idx;\n      }\n    });\n    return $scope.note.paragraphs.splice(removeIdx, 1);\n  };\n\n  $scope.$on('addParagraph', function(event, paragraph, index) {\n    if ($scope.paragraphUrl || $scope.revisionView === true) {\n      return;\n    }\n    addPara(paragraph, index);\n  });\n\n  $scope.$on('removeParagraph', function(event, paragraphId) {\n    if ($scope.paragraphUrl || $scope.revisionView === true) {\n      return;\n    }\n    removePara(paragraphId);\n  });\n\n  $scope.$on('moveParagraph', function(event, paragraphId, newIdx) {\n    if ($scope.revisionView === true) {\n      return;\n    }\n    let removedPara = removePara(paragraphId);\n    if (removedPara && removedPara.length === 1) {\n      addPara(removedPara[0], newIdx);\n    }\n  });\n\n  $scope.$on('updateNote', function(event, name, config, info) {\n    /** update Note name */\n    if (name !== $scope.note.name) {\n      console.log('change note name to : %o', $scope.note.name);\n      $scope.note.name = name;\n    }\n    $scope.note.config = config;\n    $scope.note.info = info;\n    initializeLookAndFeel();\n  });\n\n  let getInterpreterBindings = function() {\n    websocketMsgSrv.getInterpreterBindings($scope.note.id);\n  };\n\n  $scope.$on('interpreterBindings', function(event, data) {\n    $scope.interpreterBindings = data.interpreterBindings;\n    $scope.interpreterBindingsOrig = angular.copy($scope.interpreterBindings); // to check dirty\n\n    let selected = false;\n    let key;\n    let setting;\n\n    for (key in $scope.interpreterBindings) {\n      if($scope.interpreterBindings.hasOwnProperty(key)) {\n        setting = $scope.interpreterBindings[key];\n        if (setting.selected) {\n          selected = true;\n          break;\n        }\n      }\n    }\n\n    if (!selected) {\n      // make default selection\n      let selectedIntp = {};\n      for (key in $scope.interpreterBindings) {\n        if ($scope.interpreterBindings.hasOwnProperty(key)) {\n          setting = $scope.interpreterBindings[key];\n          if (!selectedIntp[setting.name]) {\n            setting.selected = true;\n            selectedIntp[setting.name] = true;\n          }\n        }\n      }\n      $scope.showSetting = true;\n    }\n  });\n\n  $scope.interpreterSelectionListeners = {\n    accept: function(sourceItemHandleScope, destSortableScope) {\n      return true;\n    },\n    itemMoved: function(event) {},\n    orderChanged: function(event) {},\n  };\n\n  $scope.closeAdditionalBoards = function() {\n    $scope.closeSetting();\n    $scope.closePermissions();\n    $scope.closeRevisionsComparator();\n  };\n\n  $scope.openSetting = function() {\n    $scope.showSetting = true;\n    getInterpreterBindings();\n  };\n\n  $scope.closeSetting = function() {\n    if (isSettingDirty()) {\n      BootstrapDialog.confirm({\n        closable: true,\n        title: '',\n        message: 'Interpreter setting changes will be discarded.',\n        callback: function(result) {\n          if (result) {\n            $scope.$apply(function() {\n              $scope.showSetting = false;\n            });\n          }\n        },\n      });\n    } else {\n      $scope.showSetting = false;\n    }\n  };\n\n  $scope.saveSetting = function() {\n    let selectedSettingIds = [];\n    for (let no in $scope.interpreterBindings) {\n      if ($scope.interpreterBindings.hasOwnProperty(no)) {\n        let setting = $scope.interpreterBindings[no];\n        if (setting.selected) {\n          selectedSettingIds.push(setting.id);\n        }\n      }\n    }\n    websocketMsgSrv.saveInterpreterBindings($scope.note.id, selectedSettingIds);\n    console.log('Interpreter bindings %o saved', selectedSettingIds);\n\n    _.forEach($scope.note.paragraphs, function(n, key) {\n      let regExp = /^\\s*%/g;\n      if (n.text && !regExp.exec(n.text)) {\n        $scope.$broadcast('saveInterpreterBindings', n.id);\n      }\n    });\n\n    $scope.showSetting = false;\n  };\n\n  $scope.toggleSetting = function() {\n    if ($scope.showSetting) {\n      $scope.closeSetting();\n    } else {\n      $scope.closeAdditionalBoards();\n      $scope.openSetting();\n      angular.element('html, body').animate({scrollTop: 0}, 'slow');\n    }\n  };\n\n  $scope.openRevisionsComparator = function() {\n    $scope.showRevisionsComparator = true;\n  };\n\n  $scope.closeRevisionsComparator = function() {\n    $scope.showRevisionsComparator = false;\n  };\n\n  $scope.toggleRevisionsComparator = function() {\n    if ($scope.showRevisionsComparator) {\n      $scope.closeRevisionsComparator();\n    } else {\n      $scope.closeAdditionalBoards();\n      $scope.openRevisionsComparator();\n      angular.element('html, body').animate({scrollTop: 0}, 'slow');\n    }\n  };\n\n  let getPermissions = function(callback) {\n    $http.get(baseUrlSrv.getRestApiBase() + '/notebook/' + $scope.note.id + '/permissions')\n    .success(function(data, status, headers, config) {\n      $scope.permissions = data.body;\n      $scope.permissionsOrig = angular.copy($scope.permissions); // to check dirty\n\n      let selectJson = {\n        tokenSeparators: [',', ' '],\n        ajax: {\n          url: function(params) {\n            if (!params.term) {\n              return false;\n            }\n            return baseUrlSrv.getRestApiBase() + '/security/userlist/' + params.term;\n          },\n          delay: 250,\n          processResults: function(data, params) {\n            let results = [];\n\n            if (data.body.users.length !== 0) {\n              let users = [];\n              for (let len = 0; len < data.body.users.length; len++) {\n                users.push({\n                  'id': data.body.users[len],\n                  'text': data.body.users[len],\n                });\n              }\n              results.push({\n                'text': 'Users :',\n                'children': users,\n              });\n            }\n            if (data.body.roles.length !== 0) {\n              let roles = [];\n              for (let len = 0; len < data.body.roles.length; len++) {\n                roles.push({\n                  'id': data.body.roles[len],\n                  'text': data.body.roles[len],\n                });\n              }\n              results.push({\n                'text': 'Roles :',\n                'children': roles,\n              });\n            }\n            return {\n              results: results,\n              pagination: {\n                more: false,\n              },\n            };\n          },\n          cache: false,\n        },\n        width: ' ',\n        tags: true,\n        minimumInputLength: 3,\n      };\n\n      $scope.setMyPermissions();\n      angular.element('#selectOwners').select2(selectJson);\n      angular.element('#selectReaders').select2(selectJson);\n      angular.element('#selectRunners').select2(selectJson);\n      angular.element('#selectWriters').select2(selectJson);\n      if (callback) {\n        callback();\n      }\n    })\n    .error(function(data, status, headers, config) {\n      if (status !== 0) {\n        console.log('Error %o %o', status, data.message);\n      }\n    });\n  };\n\n  $scope.openPermissions = function() {\n    $scope.showPermissions = true;\n    getPermissions();\n  };\n\n  $scope.closePermissions = function() {\n    if (isPermissionsDirty()) {\n      BootstrapDialog.confirm({\n        closable: true,\n        title: '',\n        message: 'Changes will be discarded.',\n        callback: function(result) {\n          if (result) {\n            $scope.$apply(function() {\n              $scope.showPermissions = false;\n            });\n          }\n        },\n      });\n    } else {\n      $scope.showPermissions = false;\n    }\n  };\n\n  function convertPermissionsToArray() {\n    $scope.permissions.owners = angular.element('#selectOwners').val();\n    $scope.permissions.readers = angular.element('#selectReaders').val();\n    $scope.permissions.runners = angular.element('#selectRunners').val();\n    $scope.permissions.writers = angular.element('#selectWriters').val();\n    angular.element('.permissionsForm select').find('option:not([is-select2=\"false\"])').remove();\n  }\n\n  $scope.hasMatches = function() {\n    return $scope.search.occurrencesCount > 0;\n  };\n\n  const markAllOccurrences = function() {\n    $scope.search.occurrencesCount = 0;\n    $scope.search.occurrencesHidden = false;\n    currentSearchParagraph = 0;\n    $scope.$broadcast('markAllOccurrences', $scope.search.searchText);\n    $scope.search.currentOccurrence = $scope.search.occurrencesCount > 0 ? 1 : 0;\n  };\n\n  $scope.markAllOccurrencesAndHighlightFirst = function() {\n    $scope.search.needHighlightFirst = true;\n    markAllOccurrences();\n  };\n\n  const increaseCurrentOccurence = function() {\n    ++$scope.search.currentOccurrence;\n    if ($scope.search.currentOccurrence > $scope.search.occurrencesCount) {\n      $scope.search.currentOccurrence = 1;\n    }\n  };\n\n  const decreaseCurrentOccurence = function() {\n    --$scope.search.currentOccurrence;\n    if ($scope.search.currentOccurrence === 0) {\n      $scope.search.currentOccurrence = $scope.search.occurrencesCount;\n    }\n  };\n\n  const sendNextOccurrenceMessage = function() {\n    if ($scope.search.occurrencesCount === 0) {\n      markAllOccurrences();\n      if ($scope.search.occurrencesCount === 0) {\n        return;\n      }\n    }\n    if ($scope.search.occurrencesHidden) {\n      markAllOccurrences();\n    }\n    $scope.$broadcast('nextOccurrence', $scope.note.paragraphs[currentSearchParagraph].id);\n  };\n\n  const sendPrevOccurrenceMessage = function() {\n    if ($scope.search.occurrencesCount === 0) {\n      markAllOccurrences();\n      if ($scope.search.occurrencesCount === 0) {\n        return;\n      }\n    }\n    if ($scope.search.occurrencesHidden) {\n      markAllOccurrences();\n      currentSearchParagraph = $scope.note.paragraphs.length - 1;\n    }\n    $scope.$broadcast('prevOccurrence', $scope.note.paragraphs[currentSearchParagraph].id);\n  };\n\n  const increaseCurrentSearchParagraph = function() {\n    ++currentSearchParagraph;\n    if (currentSearchParagraph >= $scope.note.paragraphs.length) {\n      currentSearchParagraph = 0;\n    }\n  };\n\n  const decreaseCurrentSearchParagraph = function() {\n    --currentSearchParagraph;\n    if (currentSearchParagraph === -1) {\n      currentSearchParagraph = $scope.note.paragraphs.length - 1;\n    }\n  };\n\n  $scope.$on('occurrencesExists', function(event, count) {\n    $scope.search.occurrencesCount += count;\n    if ($scope.search.needHighlightFirst) {\n      sendNextOccurrenceMessage();\n      $scope.search.needHighlightFirst = false;\n    }\n  });\n\n  $scope.nextOccurrence = function() {\n    sendNextOccurrenceMessage();\n    increaseCurrentOccurence();\n  };\n\n  $scope.$on('noNextOccurrence', function(event) {\n    increaseCurrentSearchParagraph();\n    sendNextOccurrenceMessage();\n  });\n\n  $scope.prevOccurrence = function() {\n    sendPrevOccurrenceMessage();\n    decreaseCurrentOccurence();\n  };\n\n  $scope.$on('noPrevOccurrence', function(event) {\n    decreaseCurrentSearchParagraph();\n    sendPrevOccurrenceMessage();\n  });\n\n  $scope.$on('editorClicked', function() {\n    $scope.search.occurrencesHidden = true;\n    $scope.$broadcast('unmarkAll');\n  });\n\n  $scope.replace = function() {\n    if ($scope.search.occurrencesCount === 0) {\n      $scope.markAllOccurrencesAndHighlightFirst();\n      if ($scope.search.occurrencesCount === 0) {\n        return;\n      }\n    }\n    if ($scope.search.occurrencesHidden) {\n      $scope.markAllOccurrencesAndHighlightFirst();\n      return;\n    }\n    $scope.$broadcast('replaceCurrent', $scope.search.searchText, $scope.search.replaceText);\n    if ($scope.search.needToSendNextOccurrenceAfterReplace) {\n      sendNextOccurrenceMessage();\n      $scope.search.needToSendNextOccurrenceAfterReplace = false;\n    }\n  };\n\n  $scope.$on('occurrencesCountChanged', function(event, cnt) {\n    $scope.search.occurrencesCount += cnt;\n    if ($scope.search.occurrencesCount === 0) {\n      $scope.search.currentOccurrence = 0;\n    } else {\n      $scope.search.currentOccurrence += cnt + 1;\n      if ($scope.search.currentOccurrence > $scope.search.occurrencesCount) {\n        $scope.search.currentOccurrence = 1;\n      }\n    }\n  });\n\n  $scope.replaceAll = function() {\n    if ($scope.search.occurrencesCount === 0) {\n      return;\n    }\n    if ($scope.search.occurrencesHidden) {\n      $scope.markAllOccurrencesAndHighlightFirst();\n    }\n    $scope.$broadcast('replaceAll', $scope.search.searchText, $scope.search.replaceText);\n    $scope.markAllOccurrencesAndHighlightFirst();\n  };\n\n  $scope.$on('noNextOccurrenceAfterReplace', function() {\n    $scope.search.occurrencesCount = 0;\n    $scope.search.needHighlightFirst = false;\n    $scope.search.needToSendNextOccurrenceAfterReplace = false;\n    $scope.$broadcast('checkOccurrences');\n    increaseCurrentSearchParagraph();\n    if ($scope.search.occurrencesCount > 0) {\n      $scope.search.needToSendNextOccurrenceAfterReplace = true;\n    }\n  });\n\n  $scope.onPressOnFindInput = function(event) {\n    if (event.keyCode === 13) {\n      $scope.nextOccurrence();\n    }\n  };\n\n  let makeSearchBoxVisible = function() {\n    if ($scope.search.searchBoxOpened) {\n      $scope.search.searchBoxOpened = false;\n      console.log('make 0');\n      $scope.search.left = '0px';\n    } else {\n      $scope.search.searchBoxOpened = true;\n      let searchGroupRect = angular.element('#searchGroup')[0].getBoundingClientRect();\n      console.log('make visible');\n      let dropdownRight = searchGroupRect.left + $scope.search.searchBoxWidth;\n      console.log(dropdownRight + ' ' + window.innerWidth);\n      if (dropdownRight + 5 > window.innerWidth) {\n        $scope.search.left = window.innerWidth - dropdownRight - 15 + 'px';\n      }\n    }\n  };\n\n  $scope.searchClicked = function() {\n    makeSearchBoxVisible();\n  };\n\n  $scope.$on('toggleSearchBox', function() {\n    let elem = angular.element('#searchGroup');\n    if ($scope.search.searchBoxOpened) {\n      elem.removeClass('open');\n    } else {\n      elem.addClass('open');\n    }\n    $timeout(makeSearchBoxVisible());\n  });\n\n  $scope.restartInterpreter = function(interpreter) {\n    const thisConfirm = BootstrapDialog.confirm({\n      closable: false,\n      closeByBackdrop: false,\n      closeByKeyboard: false,\n      title: '',\n      message: 'Do you want to restart ' + _.escape(interpreter.name) + ' interpreter?',\n      callback: function(result) {\n        if (result) {\n          let payload = {\n            'noteId': $scope.note.id,\n          };\n\n          thisConfirm.$modalFooter.find('button').addClass('disabled');\n          thisConfirm.$modalFooter.find('button:contains(\"OK\")')\n            .html('<i class=\"fa fa-circle-o-notch fa-spin\"></i> Saving Setting');\n\n          $http.put(baseUrlSrv.getRestApiBase() + '/interpreter/setting/restart/' + interpreter.id, payload)\n            .success(function(data, status, headers, config) {\n              let index = _.findIndex($scope.interpreterSettings, {'id': interpreter.id});\n              $scope.interpreterSettings[index] = data.body;\n              thisConfirm.close();\n            }).error(function(data, status, headers, config) {\n              thisConfirm.close();\n              console.log('Error %o %o', status, data.message);\n              BootstrapDialog.show({\n                title: 'Error restart interpreter.',\n                message: _.escape(data.message),\n              });\n            });\n          return false;\n        }\n      },\n    });\n  };\n\n  $scope.savePermissions = function() {\n    if ($scope.isAnonymous || $rootScope.ticket.principal.trim().length === 0) {\n      $scope.blockAnonUsers();\n    }\n    convertPermissionsToArray();\n    if ($scope.isOwnerEmpty()) {\n      BootstrapDialog.show({\n        closable: false,\n        title: 'Setting Owners Permissions',\n        message: 'Please fill the [Owners] field. If not, it will set as current user.\\n\\n' +\n          'Current user : [ ' + _.escape($rootScope.ticket.principal) + ']',\n        buttons: [\n          {\n            label: 'Set',\n            action: function(dialog) {\n              dialog.close();\n              $scope.permissions.owners = [$rootScope.ticket.principal];\n              $scope.setPermissions();\n            },\n          },\n          {\n            label: 'Cancel',\n            action: function(dialog) {\n              dialog.close();\n              $scope.openPermissions();\n            },\n          },\n        ],\n      });\n    } else {\n      $scope.setPermissions();\n    }\n  };\n\n  $scope.setPermissions = function() {\n    $http.put(baseUrlSrv.getRestApiBase() + '/notebook/' + $scope.note.id + '/permissions',\n      $scope.permissions, {withCredentials: true})\n    .success(function(data, status, headers, config) {\n      getPermissions(function() {\n        console.log('Note permissions %o saved', $scope.permissions);\n        BootstrapDialog.alert({\n          closable: true,\n          title: 'Permissions Saved Successfully',\n          message: 'Owners : ' + _.escape($scope.permissions.owners)\n          + '\\n\\n' +\n          'Readers : ' + _.escape($scope.permissions.readers) +\n          '\\n\\n' +\n          'Runners : ' + _.escape($scope.permissions.runners) +\n          '\\n\\n' +\n          'Writers  : ' + _.escape($scope.permissions.writers),\n        });\n        $scope.showPermissions = false;\n      });\n    })\n    .error(function(data, status, headers, config) {\n      console.log('Error %o %o', status, data.message);\n      BootstrapDialog.show({\n        closable: false,\n        closeByBackdrop: false,\n        closeByKeyboard: false,\n        title: 'Insufficient privileges',\n        message: _.escape(data.message),\n        buttons: [\n          {\n            label: 'Login',\n            action: function(dialog) {\n              dialog.close();\n              angular.element('#loginModal').modal({\n                show: 'true',\n              });\n            },\n          },\n          {\n            label: 'Cancel',\n            action: function(dialog) {\n              dialog.close();\n              $location.path('/');\n            },\n          },\n        ],\n      });\n    });\n  };\n\n  $scope.togglePermissions = function() {\n    let principal = $rootScope.ticket.principal;\n    $scope.isAnonymous = principal === 'anonymous' ? true : false;\n    if (!!principal && $scope.isAnonymous) {\n      $scope.blockAnonUsers();\n    } else {\n      if ($scope.showPermissions) {\n        $scope.closePermissions();\n        angular.element('#selectOwners').select2({});\n        angular.element('#selectReaders').select2({});\n        angular.element('#selectRunners').select2({});\n        angular.element('#selectWriters').select2({});\n      } else {\n        $scope.closeAdditionalBoards();\n        $scope.openPermissions();\n      }\n    }\n  };\n\n  const arrayIntersection = function(arrayFirst, arraySecond) {\n    return arrayFirst.filter(function(x) {\n      if(arraySecond.indexOf(x) !== -1) {\n        return true;\n      } else {\n        return false;\n      }\n    });\n  };\n\n  $scope.setMyPermissions = function() {\n    let myPermissions;\n    try {\n      myPermissions = JSON.parse($rootScope.ticket.roles);\n    } catch(err) {\n      myPermissions = [];\n    }\n    myPermissions.push($rootScope.ticket.principal);\n\n    $scope.isOwner = !($scope.permissions.owners.length > 0 &&\n       arrayIntersection(myPermissions, $scope.permissions.owners).length === 0);\n\n    $scope.isWriter = !($scope.permissions.writers.length > 0 &&\n       arrayIntersection(myPermissions, $scope.permissions.writers).length === 0);\n\n    if (!$scope.isOwner && !$scope.isWriter) {\n      $scope.viewOnly = true;\n      $scope.note.config.looknfeel = 'report';\n      initializeLookAndFeel();\n    }\n  };\n\n  $scope.toggleNotePersonalizedMode = function() {\n    let personalizedMode = $scope.note.config.personalizedMode;\n    if ($scope.isOwner) {\n      BootstrapDialog.confirm({\n        closable: true,\n        title: 'Setting the result display',\n        message: function(dialog) {\n          let modeText = $scope.note.config.personalizedMode === 'true' ? 'collaborate' : 'personalize';\n          return 'Do you want to <span class=\"text-info\">' + modeText + '</span> your analysis?';\n        },\n        callback: function(result) {\n          if (result) {\n            if ($scope.note.config.personalizedMode === undefined) {\n              $scope.note.config.personalizedMode = 'false';\n            }\n            $scope.note.config.personalizedMode = personalizedMode === 'true' ? 'false' : 'true';\n            websocketMsgSrv.updatePersonalizedMode($scope.note.id, $scope.note.config.personalizedMode);\n          }\n        },\n      });\n    }\n  };\n\n  const isSettingDirty = function() {\n    if (angular.equals($scope.interpreterBindings, $scope.interpreterBindingsOrig)) {\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  const isPermissionsDirty = function() {\n    if (angular.equals($scope.permissions, $scope.permissionsOrig)) {\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  angular.element(document).click(function() {\n    angular.element('.ace_autocomplete').hide();\n  });\n\n  $scope.isOwnerEmpty = function() {\n    if ($scope.permissions.owners.length > 0) {\n      for (let i = 0; i < $scope.permissions.owners.length; i++) {\n        if ($scope.permissions.owners[i].trim().length > 0) {\n          return false;\n        } else if (i === $scope.permissions.owners.length - 1) {\n          return true;\n        }\n      }\n    } else {\n      return true;\n    }\n  };\n\n  /*\n   ** $scope.$on functions below\n   */\n\n  $scope.$on('runAllAbove', function(event, paragraph, isNeedConfirm) {\n    let allParagraphs = $scope.note.paragraphs;\n    let toRunParagraphs = [];\n\n    for (let i = 0; allParagraphs[i] !== paragraph; i++) {\n      if (i === allParagraphs.length - 1) {\n        return;\n      } // if paragraph not in array of all paragraphs\n      toRunParagraphs.push(allParagraphs[i]);\n    }\n\n    const paragraphs = toRunParagraphs.map((p) => {\n      return {\n        id: p.id,\n        title: p.title,\n        paragraph: p.text,\n        config: p.config,\n        params: p.settings.params,\n      };\n    });\n\n    if (!isNeedConfirm) {\n      websocketMsgSrv.runAllParagraphs($scope.note.id, paragraphs);\n    } else {\n      BootstrapDialog.confirm({\n        closable: true,\n        title: '',\n        message: 'Run all above?',\n        callback: function(result) {\n          if (result) {\n            websocketMsgSrv.runAllParagraphs($scope.note.id, paragraphs);\n          }\n        },\n      });\n    }\n\n    $scope.saveCursorPosition(paragraph);\n  });\n\n  $scope.$on('collaborativeModeStatus', function(event, data) {\n    $scope.collaborativeMode = Boolean(data.status);\n    $scope.collaborativeModeUsers = data.users;\n  });\n\n  $scope.$on('patchReceived', function(event, data) {\n    $scope.collaborativeMode = true;\n  });\n\n\n  $scope.$on('runAllBelowAndCurrent', function(event, paragraph, isNeedConfirm) {\n    let allParagraphs = $scope.note.paragraphs;\n    let toRunParagraphs = [];\n\n    for (let i = allParagraphs.length - 1; allParagraphs[i] !== paragraph; i--) {\n      if (i < 0) {\n        return;\n      } // if paragraph not in array of all paragraphs\n      toRunParagraphs.push(allParagraphs[i]);\n    }\n\n    toRunParagraphs.push(paragraph);\n    toRunParagraphs.reverse();\n\n    const paragraphs = toRunParagraphs.map((p) => {\n      return {\n        id: p.id,\n        title: p.title,\n        paragraph: p.text,\n        config: p.config,\n        params: p.settings.params,\n      };\n    });\n\n    if (!isNeedConfirm) {\n      websocketMsgSrv.runAllParagraphs($scope.note.id, paragraphs);\n    } else {\n      BootstrapDialog.confirm({\n        closable: true,\n        title: '',\n        message: 'Run current and all below?',\n        callback: function(result) {\n          if (result) {\n            websocketMsgSrv.runAllParagraphs($scope.note.id, paragraphs);\n          }\n        },\n      });\n    }\n\n    $scope.saveCursorPosition(paragraph);\n  });\n\n  $scope.saveCursorPosition = function(paragraph) {\n    let angParagEditor = angular\n      .element('#' + paragraph.id + '_paragraphColumn_main')\n      .scope().editor;\n    let col = angParagEditor.selection.lead.column;\n    let row = angParagEditor.selection.lead.row;\n    $scope.$broadcast('focusParagraph', paragraph.id, row + 1, col);\n  };\n\n  $scope.$on('moveParagraphUp', function(event, paragraph) {\n    let newIndex = -1;\n    for (let i = 0; i < $scope.note.paragraphs.length; i++) {\n      if ($scope.note.paragraphs[i].id === paragraph.id) {\n        newIndex = i - 1;\n        break;\n      }\n    }\n    if (newIndex < 0 || newIndex >= $scope.note.paragraphs.length) {\n      return;\n    }\n    // save dirtyText of moving paragraphs.\n    let prevParagraph = $scope.note.paragraphs[newIndex];\n    angular\n      .element('#' + paragraph.id + '_paragraphColumn_main')\n      .scope()\n      .saveParagraph(paragraph);\n    angular\n      .element('#' + prevParagraph.id + '_paragraphColumn_main')\n      .scope()\n      .saveParagraph(prevParagraph);\n    websocketMsgSrv.moveParagraph(paragraph.id, newIndex);\n  });\n\n  $scope.$on('moveParagraphDown', function(event, paragraph) {\n    let newIndex = -1;\n    for (let i = 0; i < $scope.note.paragraphs.length; i++) {\n      if ($scope.note.paragraphs[i].id === paragraph.id) {\n        newIndex = i + 1;\n        break;\n      }\n    }\n\n    if (newIndex < 0 || newIndex >= $scope.note.paragraphs.length) {\n      return;\n    }\n    // save dirtyText of moving paragraphs.\n    let nextParagraph = $scope.note.paragraphs[newIndex];\n    angular\n      .element('#' + paragraph.id + '_paragraphColumn_main')\n      .scope()\n      .saveParagraph(paragraph);\n    angular\n      .element('#' + nextParagraph.id + '_paragraphColumn_main')\n      .scope()\n      .saveParagraph(nextParagraph);\n    websocketMsgSrv.moveParagraph(paragraph.id, newIndex);\n  });\n\n  $scope.$on('moveFocusToPreviousParagraph', function(event, currentParagraphId) {\n    let focus = false;\n    for (let i = $scope.note.paragraphs.length - 1; i >= 0; i--) {\n      if (focus === false) {\n        if ($scope.note.paragraphs[i].id === currentParagraphId) {\n          focus = true;\n          continue;\n        }\n      } else {\n        $scope.$broadcast('focusParagraph', $scope.note.paragraphs[i].id, -1);\n        break;\n      }\n    }\n  });\n\n  $scope.$on('moveFocusToNextParagraph', function(event, currentParagraphId) {\n    let focus = false;\n    for (let i = 0; i < $scope.note.paragraphs.length; i++) {\n      if (focus === false) {\n        if ($scope.note.paragraphs[i].id === currentParagraphId) {\n          focus = true;\n          continue;\n        }\n      } else {\n        $scope.$broadcast('focusParagraph', $scope.note.paragraphs[i].id, 0);\n        break;\n      }\n    }\n  });\n\n  $scope.$on('insertParagraph', function(event, paragraphId, position) {\n    if ($scope.revisionView === true) {\n      return;\n    }\n    let newIndex = -1;\n    for (let i = 0; i < $scope.note.paragraphs.length; i++) {\n      if ($scope.note.paragraphs[i].id === paragraphId) {\n        // determine position of where to add new paragraph; default is below\n        if (position === 'above') {\n          newIndex = i;\n        } else {\n          newIndex = i + 1;\n        }\n        break;\n      }\n    }\n\n    if (newIndex < 0 || newIndex > $scope.note.paragraphs.length) {\n      return;\n    }\n    websocketMsgSrv.insertParagraph(newIndex);\n  });\n\n  $scope.$on('setNoteContent', function(event, note) {\n    if (note === undefined) {\n      $location.path('/');\n    }\n\n    $scope.note = note;\n\n    $scope.paragraphUrl = $routeParams.paragraphId;\n    $scope.asIframe = $routeParams.asIframe;\n    if ($scope.paragraphUrl) {\n      $scope.note = cleanParagraphExcept($scope.paragraphUrl, $scope.note);\n      $scope.$broadcast('$unBindKeyEvent', $scope.$unBindKeyEvent);\n      $rootScope.$broadcast('setIframe', $scope.asIframe);\n      initializeLookAndFeel();\n      return;\n    }\n\n    initializeLookAndFeel();\n\n    // open interpreter binding setting when there're none selected\n    getInterpreterBindings();\n    getPermissions();\n    let isPersonalized = $scope.note.config.personalizedMode;\n    isPersonalized = isPersonalized === undefined ? 'false' : isPersonalized;\n    $scope.note.config.personalizedMode = isPersonalized;\n  });\n\n  $scope.$on('$routeChangeStart', function(event, next, current) {\n    if (!$scope.note || !$scope.note.paragraphs) {\n      return;\n    }\n    if ($scope.note && $scope.note.paragraphs) {\n      $scope.note.paragraphs.map((par) => {\n        if ($scope.allowLeave === true) {\n          return;\n        }\n        let thisScope = angular.element(\n          '#' + par.id + '_paragraphColumn_main').scope();\n\n        if (thisScope.dirtyText === undefined ||\n          thisScope.originalText === undefined ||\n          thisScope.dirtyText === thisScope.originalText) {\n          return true;\n        } else {\n          event.preventDefault();\n          $scope.showParagraphWarning(next);\n        }\n      });\n    }\n  });\n\n  $scope.showParagraphWarning = function(next) {\n    if ($scope.paragraphWarningDialog.opened !== true) {\n      $scope.paragraphWarningDialog = BootstrapDialog.show({\n        closable: false,\n        closeByBackdrop: false,\n        closeByKeyboard: false,\n        title: 'Do you want to leave this site?',\n        message: 'Changes that you have made will not be saved.',\n        buttons: [{\n          label: 'Stay',\n          action: function(dialog) {\n            dialog.close();\n          },\n        }, {\n          label: 'Leave',\n          action: function(dialog) {\n            dialog.close();\n            let locationToRedirect = next['$$route']['originalPath'];\n            Object.keys(next.pathParams).map((key) => {\n              locationToRedirect = locationToRedirect.replace(':' + key,\n                next.pathParams[key]);\n            });\n            $scope.allowLeave = true;\n            $location.path(locationToRedirect);\n          },\n        }],\n      });\n    }\n  };\n\n  $scope.$on('saveNoteForms', function(event, data) {\n    $scope.note.noteForms = data.formsData.forms;\n    $scope.note.noteParams = data.formsData.params;\n  });\n\n  $scope.isShowNoteForms = function() {\n    if ($scope.note && !_.isEmpty($scope.note.noteForms) && !$scope.paragraphUrl) {\n      return true;\n    }\n    return false;\n  };\n\n  $scope.saveNoteForms = function() {\n    websocketMsgSrv.saveNoteForms($scope.note);\n  };\n\n  $scope.removeNoteForms = function(formName) {\n    websocketMsgSrv.removeNoteForms($scope.note, formName);\n  };\n\n  $scope.$on('$destroy', function() {\n    angular.element(window).off('beforeunload');\n    $scope.killSaveTimer();\n    $scope.saveNote();\n\n    document.removeEventListener('click', $scope.focusParagraphOnClick);\n    document.removeEventListener('keydown', $scope.keyboardShortcut);\n  });\n\n  $scope.$on('$unBindKeyEvent', function() {\n    document.removeEventListener('click', $scope.focusParagraphOnClick);\n    document.removeEventListener('keydown', $scope.keyboardShortcut);\n  });\n\n  let content = document.getElementById('content');\n  if (content && content.id) {\n    $scope.addEvent({\n      eventID: content.id,\n      eventType: 'resize',\n      element: window,\n      onDestroyElement: content,\n      handler: () => {\n        const actionbarHeight = document.getElementById('actionbar').lastElementChild.clientHeight;\n        angular.element(document.getElementById('content')).css('padding-top', actionbarHeight - 20);\n      },\n    });\n  }\n}\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","var map = {\n\t\"./af\": 8,\n\t\"./af.js\": 8,\n\t\"./ar\": 9,\n\t\"./ar-dz\": 10,\n\t\"./ar-dz.js\": 10,\n\t\"./ar-kw\": 11,\n\t\"./ar-kw.js\": 11,\n\t\"./ar-ly\": 12,\n\t\"./ar-ly.js\": 12,\n\t\"./ar-ma\": 13,\n\t\"./ar-ma.js\": 13,\n\t\"./ar-sa\": 14,\n\t\"./ar-sa.js\": 14,\n\t\"./ar-tn\": 15,\n\t\"./ar-tn.js\": 15,\n\t\"./ar.js\": 9,\n\t\"./az\": 16,\n\t\"./az.js\": 16,\n\t\"./be\": 17,\n\t\"./be.js\": 17,\n\t\"./bg\": 18,\n\t\"./bg.js\": 18,\n\t\"./bm\": 19,\n\t\"./bm.js\": 19,\n\t\"./bn\": 20,\n\t\"./bn.js\": 20,\n\t\"./bo\": 21,\n\t\"./bo.js\": 21,\n\t\"./br\": 22,\n\t\"./br.js\": 22,\n\t\"./bs\": 23,\n\t\"./bs.js\": 23,\n\t\"./ca\": 24,\n\t\"./ca.js\": 24,\n\t\"./cs\": 25,\n\t\"./cs.js\": 25,\n\t\"./cv\": 26,\n\t\"./cv.js\": 26,\n\t\"./cy\": 27,\n\t\"./cy.js\": 27,\n\t\"./da\": 28,\n\t\"./da.js\": 28,\n\t\"./de\": 29,\n\t\"./de-at\": 30,\n\t\"./de-at.js\": 30,\n\t\"./de-ch\": 31,\n\t\"./de-ch.js\": 31,\n\t\"./de.js\": 29,\n\t\"./dv\": 32,\n\t\"./dv.js\": 32,\n\t\"./el\": 33,\n\t\"./el.js\": 33,\n\t\"./en-au\": 34,\n\t\"./en-au.js\": 34,\n\t\"./en-ca\": 35,\n\t\"./en-ca.js\": 35,\n\t\"./en-gb\": 36,\n\t\"./en-gb.js\": 36,\n\t\"./en-ie\": 37,\n\t\"./en-ie.js\": 37,\n\t\"./en-il\": 38,\n\t\"./en-il.js\": 38,\n\t\"./en-nz\": 39,\n\t\"./en-nz.js\": 39,\n\t\"./eo\": 40,\n\t\"./eo.js\": 40,\n\t\"./es\": 41,\n\t\"./es-do\": 42,\n\t\"./es-do.js\": 42,\n\t\"./es-us\": 43,\n\t\"./es-us.js\": 43,\n\t\"./es.js\": 41,\n\t\"./et\": 44,\n\t\"./et.js\": 44,\n\t\"./eu\": 45,\n\t\"./eu.js\": 45,\n\t\"./fa\": 46,\n\t\"./fa.js\": 46,\n\t\"./fi\": 47,\n\t\"./fi.js\": 47,\n\t\"./fo\": 48,\n\t\"./fo.js\": 48,\n\t\"./fr\": 49,\n\t\"./fr-ca\": 50,\n\t\"./fr-ca.js\": 50,\n\t\"./fr-ch\": 51,\n\t\"./fr-ch.js\": 51,\n\t\"./fr.js\": 49,\n\t\"./fy\": 52,\n\t\"./fy.js\": 52,\n\t\"./gd\": 53,\n\t\"./gd.js\": 53,\n\t\"./gl\": 54,\n\t\"./gl.js\": 54,\n\t\"./gom-latn\": 55,\n\t\"./gom-latn.js\": 55,\n\t\"./gu\": 56,\n\t\"./gu.js\": 56,\n\t\"./he\": 57,\n\t\"./he.js\": 57,\n\t\"./hi\": 58,\n\t\"./hi.js\": 58,\n\t\"./hr\": 59,\n\t\"./hr.js\": 59,\n\t\"./hu\": 60,\n\t\"./hu.js\": 60,\n\t\"./hy-am\": 61,\n\t\"./hy-am.js\": 61,\n\t\"./id\": 62,\n\t\"./id.js\": 62,\n\t\"./is\": 63,\n\t\"./is.js\": 63,\n\t\"./it\": 64,\n\t\"./it.js\": 64,\n\t\"./ja\": 65,\n\t\"./ja.js\": 65,\n\t\"./jv\": 66,\n\t\"./jv.js\": 66,\n\t\"./ka\": 67,\n\t\"./ka.js\": 67,\n\t\"./kk\": 68,\n\t\"./kk.js\": 68,\n\t\"./km\": 69,\n\t\"./km.js\": 69,\n\t\"./kn\": 70,\n\t\"./kn.js\": 70,\n\t\"./ko\": 71,\n\t\"./ko.js\": 71,\n\t\"./ky\": 72,\n\t\"./ky.js\": 72,\n\t\"./lb\": 73,\n\t\"./lb.js\": 73,\n\t\"./lo\": 74,\n\t\"./lo.js\": 74,\n\t\"./lt\": 75,\n\t\"./lt.js\": 75,\n\t\"./lv\": 76,\n\t\"./lv.js\": 76,\n\t\"./me\": 77,\n\t\"./me.js\": 77,\n\t\"./mi\": 78,\n\t\"./mi.js\": 78,\n\t\"./mk\": 79,\n\t\"./mk.js\": 79,\n\t\"./ml\": 80,\n\t\"./ml.js\": 80,\n\t\"./mn\": 81,\n\t\"./mn.js\": 81,\n\t\"./mr\": 82,\n\t\"./mr.js\": 82,\n\t\"./ms\": 83,\n\t\"./ms-my\": 84,\n\t\"./ms-my.js\": 84,\n\t\"./ms.js\": 83,\n\t\"./mt\": 85,\n\t\"./mt.js\": 85,\n\t\"./my\": 86,\n\t\"./my.js\": 86,\n\t\"./nb\": 87,\n\t\"./nb.js\": 87,\n\t\"./ne\": 88,\n\t\"./ne.js\": 88,\n\t\"./nl\": 89,\n\t\"./nl-be\": 90,\n\t\"./nl-be.js\": 90,\n\t\"./nl.js\": 89,\n\t\"./nn\": 91,\n\t\"./nn.js\": 91,\n\t\"./pa-in\": 92,\n\t\"./pa-in.js\": 92,\n\t\"./pl\": 93,\n\t\"./pl.js\": 93,\n\t\"./pt\": 94,\n\t\"./pt-br\": 95,\n\t\"./pt-br.js\": 95,\n\t\"./pt.js\": 94,\n\t\"./ro\": 96,\n\t\"./ro.js\": 96,\n\t\"./ru\": 97,\n\t\"./ru.js\": 97,\n\t\"./sd\": 98,\n\t\"./sd.js\": 98,\n\t\"./se\": 99,\n\t\"./se.js\": 99,\n\t\"./si\": 100,\n\t\"./si.js\": 100,\n\t\"./sk\": 101,\n\t\"./sk.js\": 101,\n\t\"./sl\": 102,\n\t\"./sl.js\": 102,\n\t\"./sq\": 103,\n\t\"./sq.js\": 103,\n\t\"./sr\": 104,\n\t\"./sr-cyrl\": 105,\n\t\"./sr-cyrl.js\": 105,\n\t\"./sr.js\": 104,\n\t\"./ss\": 106,\n\t\"./ss.js\": 106,\n\t\"./sv\": 107,\n\t\"./sv.js\": 107,\n\t\"./sw\": 108,\n\t\"./sw.js\": 108,\n\t\"./ta\": 109,\n\t\"./ta.js\": 109,\n\t\"./te\": 110,\n\t\"./te.js\": 110,\n\t\"./tet\": 111,\n\t\"./tet.js\": 111,\n\t\"./tg\": 112,\n\t\"./tg.js\": 112,\n\t\"./th\": 113,\n\t\"./th.js\": 113,\n\t\"./tl-ph\": 114,\n\t\"./tl-ph.js\": 114,\n\t\"./tlh\": 115,\n\t\"./tlh.js\": 115,\n\t\"./tr\": 116,\n\t\"./tr.js\": 116,\n\t\"./tzl\": 117,\n\t\"./tzl.js\": 117,\n\t\"./tzm\": 118,\n\t\"./tzm-latn\": 119,\n\t\"./tzm-latn.js\": 119,\n\t\"./tzm.js\": 118,\n\t\"./ug-cn\": 120,\n\t\"./ug-cn.js\": 120,\n\t\"./uk\": 121,\n\t\"./uk.js\": 121,\n\t\"./ur\": 122,\n\t\"./ur.js\": 122,\n\t\"./uz\": 123,\n\t\"./uz-latn\": 124,\n\t\"./uz-latn.js\": 124,\n\t\"./uz.js\": 123,\n\t\"./vi\": 125,\n\t\"./vi.js\": 125,\n\t\"./x-pseudo\": 126,\n\t\"./x-pseudo.js\": 126,\n\t\"./yo\": 127,\n\t\"./yo.js\": 127,\n\t\"./zh-cn\": 128,\n\t\"./zh-cn.js\": 128,\n\t\"./zh-hk\": 129,\n\t\"./zh-hk.js\": 129,\n\t\"./zh-tw\": 130,\n\t\"./zh-tw.js\": 130\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 157;","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Transformation from './transformation';\n\nimport {\n  getCurrentChart, getCurrentChartAxis, getCurrentChartParam,\n  serializeSharedAxes, useSharedAxis,\n  getCurrentChartAxisSpecs, getCurrentChartParamSpecs,\n  initializeConfig, resetAxisConfig, resetParameterConfig,\n  isAggregatorAxis, isGroupAxis, isKeyAxis, isSingleDimensionAxis,\n  removeDuplicatedColumnsInMultiDimensionAxis, applyMaxAxisCount,\n  isInputWidget, isOptionWidget, isCheckboxWidget, isTextareaWidget, parseParameter,\n  getTransformer,\n} from './advanced-transformation-util';\n\nconst SETTING_TEMPLATE = 'app/tabledata/advanced-transformation-setting.html';\n\nexport default class AdvancedTransformation extends Transformation {\n  constructor(config, spec) {\n    super(config);\n\n    this.columns = []; /** [{ name, index, comment }] */\n    this.props = {};\n    this.spec = spec;\n\n    initializeConfig(config, spec);\n  }\n\n  emitConfigChange(conf) {\n    conf.chartChanged = false;\n    conf.parameterChanged = false;\n    this.emitConfig(conf);\n  }\n\n  emitChartChange(conf) {\n    conf.chartChanged = true;\n    conf.parameterChanged = false;\n    this.emitConfig(conf);\n  }\n\n  emitParameterChange(conf) {\n    conf.chartChanged = false;\n    conf.parameterChanged = true;\n    this.emitConfig(conf);\n  }\n\n  getSetting() {\n    const self = this; /** for closure */\n    const configInstance = self.config; /** for closure */\n\n    if (self.spec.initialized) {\n      self.spec.initialized = false;\n      self.emitConfig(configInstance);\n    }\n\n    return {\n      template: SETTING_TEMPLATE,\n      scope: {\n        config: configInstance,\n        columns: self.columns,\n        resetAxisConfig: () => {\n          resetAxisConfig(configInstance);\n          self.emitChartChange(configInstance);\n        },\n\n        resetParameterConfig: () => {\n          resetParameterConfig(configInstance);\n          self.emitParameterChange(configInstance);\n        },\n\n        toggleColumnPanel: () => {\n          configInstance.panel.columnPanelOpened = !configInstance.panel.columnPanelOpened;\n          self.emitConfigChange(configInstance);\n        },\n\n        toggleParameterPanel: () => {\n          configInstance.panel.parameterPanelOpened = !configInstance.panel.parameterPanelOpened;\n          self.emitConfigChange(configInstance);\n        },\n\n        getAxisAnnotation: (axisSpec) => {\n          let anno = `${axisSpec.name}`;\n          if (axisSpec.valueType) {\n            anno = `${anno} (${axisSpec.valueType})`;\n          }\n\n          return anno;\n        },\n\n        getAxisTypeAnnotation: (axisSpec) => {\n          let anno = '';\n\n          let minAxisCount = axisSpec.minAxisCount;\n          let maxAxisCount = axisSpec.maxAxisCount;\n\n          if (isSingleDimensionAxis(axisSpec)) {\n            maxAxisCount = 1;\n          }\n\n          let comment = '';\n          if (minAxisCount) {\n            comment = `min: ${minAxisCount}`;\n          }\n          if (minAxisCount && maxAxisCount) {\n            comment = `${comment}, `;\n          }\n          if (maxAxisCount) {\n            comment = `${comment}max: ${maxAxisCount}`;\n          }\n\n          if (comment !== '') {\n            anno = `${anno} (${comment})`;\n          }\n\n          return anno;\n        },\n\n        getAxisAnnotationColor: (axisSpec) => {\n          if (isAggregatorAxis(axisSpec)) {\n            return {'background-color': '#5782bd'};\n          } else if (isGroupAxis(axisSpec)) {\n            return {'background-color': '#cd5c5c'};\n          } else if (isKeyAxis(axisSpec)) {\n            return {'background-color': '#906ebd'};\n          } else {\n            return {'background-color': '#62bda9'};\n          }\n        },\n\n        useSharedAxis: (chartName) => {\n          return useSharedAxis(configInstance, chartName);\n        },\n        isGroupAxis: (axisSpec) => {\n          return isGroupAxis(axisSpec);\n        },\n        isKeyAxis: (axisSpec) => {\n          return isKeyAxis(axisSpec);\n        },\n        isAggregatorAxis: (axisSpec) => {\n          return isAggregatorAxis(axisSpec);\n        },\n        isSingleDimensionAxis: (axisSpec) => {\n          return isSingleDimensionAxis(axisSpec);\n        },\n        getSingleDimensionAxis: (axisSpec) => {\n          return getCurrentChartAxis(configInstance)[axisSpec.name];\n        },\n\n        chartChanged: (selected) => {\n          configInstance.chart.current = selected;\n          self.emitChartChange(configInstance);\n        },\n\n        axisChanged: function(e, ui, axisSpec) {\n          removeDuplicatedColumnsInMultiDimensionAxis(configInstance, axisSpec);\n          applyMaxAxisCount(configInstance, axisSpec);\n\n          self.emitChartChange(configInstance);\n        },\n\n        aggregatorChanged: (colIndex, axisSpec, aggregator) => {\n          if (isSingleDimensionAxis(axisSpec)) {\n            getCurrentChartAxis(configInstance)[axisSpec.name].aggr = aggregator;\n          } else {\n            getCurrentChartAxis(configInstance)[axisSpec.name][colIndex].aggr = aggregator;\n            removeDuplicatedColumnsInMultiDimensionAxis(configInstance, axisSpec);\n          }\n\n          self.emitChartChange(configInstance);\n        },\n\n        removeFromAxis: function(colIndex, axisSpec) {\n          if (isSingleDimensionAxis(axisSpec)) {\n            getCurrentChartAxis(configInstance)[axisSpec.name] = null;\n          } else {\n            getCurrentChartAxis(configInstance)[axisSpec.name].splice(colIndex, 1);\n          }\n\n          self.emitChartChange(configInstance);\n        },\n\n        isInputWidget: function(paramSpec) {\n          return isInputWidget(paramSpec);\n        },\n        isCheckboxWidget: function(paramSpec) {\n          return isCheckboxWidget(paramSpec);\n        },\n        isOptionWidget: function(paramSpec) {\n          return isOptionWidget(paramSpec);\n        },\n        isTextareaWidget: function(paramSpec) {\n          return isTextareaWidget(paramSpec);\n        },\n\n        parameterChanged: (paramSpec) => {\n          configInstance.chartChanged = false;\n          configInstance.parameterChanged = true;\n          self.emitParameterChange(configInstance);\n        },\n\n        parameterOnKeyDown: function(event, paramSpec) {\n          const code = event.keyCode || event.which;\n          if (code === 13 && isInputWidget(paramSpec)) {\n            self.emitParameterChange(configInstance);\n          } else if (code === 13 && event.shiftKey && isTextareaWidget(paramSpec)) {\n            self.emitParameterChange(configInstance);\n          }\n\n          event.stopPropagation(); /** avoid to conflict with paragraph shortcuts */\n        },\n\n      },\n    };\n  }\n\n  transform(tableData) {\n    this.columns = tableData.columns; /** used in `getSetting` */\n    /** initialize in `transform` instead of `getSetting` because this method is called before */\n    serializeSharedAxes(this.config);\n\n    const conf = this.config;\n    const chart = getCurrentChart(conf);\n    const axis = getCurrentChartAxis(conf);\n    const axisSpecs = getCurrentChartAxisSpecs(conf);\n    const param = getCurrentChartParam(conf);\n    const paramSpecs = getCurrentChartParamSpecs(conf);\n    const parsedParam = parseParameter(paramSpecs, param);\n\n    let {transformer, column} = getTransformer(conf, tableData.rows, axisSpecs, axis);\n\n    return {\n      chartChanged: conf.chartChanged,\n      parameterChanged: conf.parameterChanged,\n\n      chart: chart, /** current chart */\n      axis: axis, /** persisted axis */\n      parameter: parsedParam, /** persisted parameter */\n      column: column,\n\n      transformer: transformer,\n    };\n  }\n}\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function getCurrentChart(config) {\n  return config.chart.current;\n}\n\nexport function getCurrentChartTransform(config) {\n  return config.spec.charts[getCurrentChart(config)].transform;\n}\n\nexport function getCurrentChartAxis(config) {\n  return config.axis[getCurrentChart(config)];\n}\n\nexport function getCurrentChartParam(config) {\n  return config.parameter[getCurrentChart(config)];\n}\n\nexport function getCurrentChartAxisSpecs(config) {\n  return config.axisSpecs[getCurrentChart(config)];\n}\n\nexport function getCurrentChartParamSpecs(config) {\n  return config.paramSpecs[getCurrentChart(config)];\n}\n\nexport function useSharedAxis(config, chart) {\n  return config.spec.charts[chart].sharedAxis;\n}\n\nexport function serializeSharedAxes(config) {\n  const availableCharts = getAvailableChartNames(config.spec.charts);\n  for (let i = 0; i < availableCharts.length; i++) {\n    const chartName = availableCharts[i];\n    if (useSharedAxis(config, chartName)) {\n      /** use reference :) in case of sharedAxis */\n      config.axis[chartName] = config.sharedAxis;\n    }\n  }\n}\n\nexport const Widget = {\n  INPUT: 'input', /** default */\n  OPTION: 'option',\n  CHECKBOX: 'checkbox',\n  TEXTAREA: 'textarea',\n};\n\nexport function isInputWidget(paramSpec) {\n  return (paramSpec && !paramSpec.widget) || (paramSpec && paramSpec.widget === Widget.INPUT);\n}\n\nexport function isOptionWidget(paramSpec) {\n  return paramSpec && paramSpec.widget === Widget.OPTION;\n}\n\nexport function isCheckboxWidget(paramSpec) {\n  return paramSpec && paramSpec.widget === Widget.CHECKBOX;\n}\n\nexport function isTextareaWidget(paramSpec) {\n  return paramSpec && paramSpec.widget === Widget.TEXTAREA;\n}\n\nexport const ParameterValueType = {\n  INT: 'int',\n  FLOAT: 'float',\n  BOOLEAN: 'boolean',\n  STRING: 'string',\n  JSON: 'JSON',\n};\n\nexport function parseParameter(paramSpecs, param) {\n  /** copy original params */\n  const parsed = JSON.parse(JSON.stringify(param));\n\n  for (let i = 0; i < paramSpecs.length; i++) {\n    const paramSpec = paramSpecs[i];\n    const name = paramSpec.name;\n\n    if (paramSpec.valueType === ParameterValueType.INT &&\n      typeof parsed[name] !== 'number') {\n      try {\n        parsed[name] = parseInt(parsed[name]);\n      } catch (error) {\n        parsed[name] = paramSpec.defaultValue;\n      }\n    } else if (paramSpec.valueType === ParameterValueType.FLOAT &&\n      typeof parsed[name] !== 'number') {\n      try {\n        parsed[name] = parseFloat(parsed[name]);\n      } catch (error) {\n        parsed[name] = paramSpec.defaultValue;\n      }\n    } else if (paramSpec.valueType === ParameterValueType.BOOLEAN) {\n      if (parsed[name] === 'false') {\n        parsed[name] = false;\n      } else if (parsed[name] === 'true') {\n        parsed[name] = true;\n      } else if (typeof parsed[name] !== 'boolean') {\n        parsed[name] = paramSpec.defaultValue;\n      }\n    } else if (paramSpec.valueType === ParameterValueType.JSON) {\n      if (parsed[name] !== null && typeof parsed[name] !== 'object') {\n        try {\n          parsed[name] = JSON.parse(parsed[name]);\n        } catch (error) {\n          parsed[name] = paramSpec.defaultValue;\n        }\n      } else if (parsed[name] === null) {\n        parsed[name] = paramSpec.defaultValue;\n      }\n    }\n  }\n\n  return parsed;\n}\n\nexport const AxisType = {\n  AGGREGATOR: 'aggregator',\n  KEY: 'key',\n  GROUP: 'group',\n};\n\nexport function isAggregatorAxis(axisSpec) {\n  return axisSpec && axisSpec.axisType === AxisType.AGGREGATOR;\n}\nexport function isGroupAxis(axisSpec) {\n  return axisSpec && axisSpec.axisType === AxisType.GROUP;\n}\nexport function isKeyAxis(axisSpec) {\n  return axisSpec && axisSpec.axisType === AxisType.KEY;\n}\nexport function isSingleDimensionAxis(axisSpec) {\n  return axisSpec && axisSpec.dimension === 'single';\n}\n\n/**\n * before: { name: { ... } }\n * after: [ { name, ... } ]\n *\n * add the `name` field while converting to array to easily manipulate\n */\nexport function getSpecs(specObject) {\n  const specs = [];\n  for (let name in specObject) {\n    if (specObject.hasOwnProperty(name)) {\n      const singleSpec = specObject[name];\n      if (!singleSpec) {\n        continue;\n      }\n      singleSpec.name = name;\n      specs.push(singleSpec);\n    }\n  }\n\n  return specs;\n}\n\nexport function getAvailableChartNames(charts) {\n  const available = [];\n  for (let name in charts) {\n    if (charts.hasOwnProperty(name)) {\n      available.push(name);\n    }\n  }\n\n  return available;\n}\n\nexport function applyMaxAxisCount(config, axisSpec) {\n  if (isSingleDimensionAxis(axisSpec) || typeof axisSpec.maxAxisCount === 'undefined') {\n    return;\n  }\n\n  const columns = getCurrentChartAxis(config)[axisSpec.name];\n  if (columns.length <= axisSpec.maxAxisCount) {\n    return;\n  }\n\n  const sliced = columns.slice(1);\n  getCurrentChartAxis(config)[axisSpec.name] = sliced;\n}\n\nexport function removeDuplicatedColumnsInMultiDimensionAxis(config, axisSpec) {\n  if (isSingleDimensionAxis(axisSpec)) {\n    return config;\n  }\n\n  const columns = getCurrentChartAxis(config)[axisSpec.name];\n  const uniqObject = columns.reduce((acc, col) => {\n    if (!acc[`${col.name}(${col.aggr})`]) {\n      acc[`${col.name}(${col.aggr})`] = col;\n    }\n    return acc;\n  }, {});\n\n  const filtered = [];\n  for (let name in uniqObject) {\n    if (uniqObject.hasOwnProperty(name)) {\n      const col = uniqObject[name];\n      filtered.push(col);\n    }\n  }\n\n  getCurrentChartAxis(config)[axisSpec.name] = filtered;\n  return config;\n}\n\nexport function clearAxisConfig(config) {\n  delete config.axis; /** Object: persisted axis for each chart */\n  delete config.sharedAxis;\n}\n\nexport function initAxisConfig(config) {\n  if (!config.axis) {\n    config.axis = {};\n  }\n  if (!config.sharedAxis) {\n    config.sharedAxis = {};\n  }\n\n  const spec = config.spec;\n  const availableCharts = getAvailableChartNames(spec.charts);\n\n  if (!config.axisSpecs) {\n    config.axisSpecs = {};\n  }\n  for (let i = 0; i < availableCharts.length; i++) {\n    const chartName = availableCharts[i];\n\n    if (!config.axis[chartName]) {\n      config.axis[chartName] = {};\n    }\n    const axisSpecs = getSpecs(spec.charts[chartName].axis);\n    if (!config.axisSpecs[chartName]) {\n      config.axisSpecs[chartName] = axisSpecs;\n    }\n\n    /** initialize multi-dimension axes */\n    for (let i = 0; i < axisSpecs.length; i++) {\n      const axisSpec = axisSpecs[i];\n      if (isSingleDimensionAxis(axisSpec)) {\n        continue;\n      }\n\n      /** intentionally nested if-stmt is used because order of conditions matter here */\n      if (!useSharedAxis(config, chartName)) {\n        if (!Array.isArray(config.axis[chartName][axisSpec.name])) {\n          config.axis[chartName][axisSpec.name] = [];\n        }\n      } else if (useSharedAxis(config, chartName)) {\n        /**\n         * initialize multiple times even if shared axis because it's not that expensive, assuming that\n         * all charts using shared axis have the same axis specs\n         */\n        if (!Array.isArray(config.sharedAxis[axisSpec.name])) {\n          config.sharedAxis[axisSpec.name] = [];\n        }\n      }\n    }\n  }\n\n  /** this function should be called after initializing */\n  serializeSharedAxes(config);\n}\n\nexport function resetAxisConfig(config) {\n  clearAxisConfig(config);\n  initAxisConfig(config);\n}\n\nexport function clearParameterConfig(config) {\n  delete config.parameter;  /** Object: persisted parameter for each chart */\n}\n\nexport function initParameterConfig(config) {\n  if (!config.parameter) {\n    config.parameter = {};\n  }\n\n  const spec = config.spec;\n  const availableCharts = getAvailableChartNames(spec.charts);\n\n  if (!config.paramSpecs) {\n    config.paramSpecs = {};\n  }\n  for (let i = 0; i < availableCharts.length; i++) {\n    const chartName = availableCharts[i];\n\n    if (!config.parameter[chartName]) {\n      config.parameter[chartName] = {};\n    }\n    const paramSpecs = getSpecs(spec.charts[chartName].parameter);\n    if (!config.paramSpecs[chartName]) {\n      config.paramSpecs[chartName] = paramSpecs;\n    }\n\n    for (let i = 0; i < paramSpecs.length; i++) {\n      const paramSpec = paramSpecs[i];\n      if (!config.parameter[chartName][paramSpec.name]) {\n        config.parameter[chartName][paramSpec.name] = paramSpec.defaultValue;\n      }\n    }\n  }\n}\n\nexport function resetParameterConfig(config) {\n  clearParameterConfig(config);\n  initParameterConfig(config);\n}\n\nexport function getSpecVersion(availableCharts, spec) {\n  const axisHash = {};\n  const paramHash = {};\n\n  for (let i = 0; i < availableCharts.length; i++) {\n    const chartName = availableCharts[i];\n    const axisSpecs = getSpecs(spec.charts[chartName].axis);\n    axisHash[chartName] = axisSpecs;\n\n    const paramSpecs = getSpecs(spec.charts[chartName].parameter);\n    paramHash[chartName] = paramSpecs;\n  }\n\n  return {axisVersion: JSON.stringify(axisHash), paramVersion: JSON.stringify(paramHash)};\n}\n\nexport function initializeConfig(config, spec) {\n  config.chartChanged = true;\n  config.parameterChanged = false;\n\n  let updated = false;\n\n  const availableCharts = getAvailableChartNames(spec.charts);\n  const {axisVersion, paramVersion} = getSpecVersion(availableCharts, spec);\n\n  if (!config.spec || !config.spec.version ||\n    !config.spec.version.axis ||\n    config.spec.version.axis !== axisVersion) {\n    spec.initialized = true;\n    updated = true;\n\n    delete config.chart;      /** Object: contains current, available chart */\n    config.panel = {columnPanelOpened: true, parameterPanelOpened: false};\n\n    clearAxisConfig(config);\n    delete config.axisSpecs;  /** Object: persisted axisSpecs for each chart */\n  }\n\n  if (!config.spec || !config.spec.version ||\n    !config.spec.version.parameter ||\n    config.spec.version.parameter !== paramVersion) {\n    updated = true;\n\n    clearParameterConfig(config);\n    delete config.paramSpecs; /** Object: persisted paramSpecs for each chart */\n  }\n\n  if (!spec.version) {\n    spec.version = {};\n  }\n  spec.version.axis = axisVersion;\n  spec.version.parameter = paramVersion;\n\n  if (!config.spec || updated) {\n    config.spec = spec;\n  }\n\n  if (!config.chart) {\n    config.chart = {};\n    config.chart.current = availableCharts[0];\n    config.chart.available = availableCharts;\n  }\n\n  /** initialize config.axis, config.axisSpecs for each chart */\n  initAxisConfig(config);\n\n  /** initialize config.parameter for each chart */\n  initParameterConfig(config);\n  return config;\n}\n\nexport function getColumnsForMultipleAxes(axisType, axisSpecs, axis) {\n  const axisNames = [];\n  let column = {};\n\n  for (let i = 0; i < axisSpecs.length; i++) {\n    const axisSpec = axisSpecs[i];\n\n    if (axisType === AxisType.KEY && isKeyAxis(axisSpec)) {\n      axisNames.push(axisSpec.name);\n    } else if (axisType === AxisType.GROUP && isGroupAxis(axisSpec)) {\n      axisNames.push(axisSpec.name);\n    } else if (axisType.AGGREGATOR && isAggregatorAxis(axisSpec)) {\n      axisNames.push(axisSpec.name);\n    }\n  }\n\n  for (let axisName of axisNames) {\n    const columns = axis[axisName];\n    if (typeof axis[axisName] === 'undefined') {\n      continue;\n    }\n    if (!column[axisName]) {\n      column[axisName] = [];\n    }\n    column[axisName] = column[axisName].concat(columns);\n  }\n\n  return column;\n}\n\nexport function getColumnsFromAxis(axisSpecs, axis) {\n  const keyAxisNames = [];\n  const groupAxisNames = [];\n  const aggrAxisNames = [];\n\n  for (let i = 0; i < axisSpecs.length; i++) {\n    const axisSpec = axisSpecs[i];\n\n    if (isKeyAxis(axisSpec)) {\n      keyAxisNames.push(axisSpec.name);\n    } else if (isGroupAxis(axisSpec)) {\n      groupAxisNames.push(axisSpec.name);\n    } else if (isAggregatorAxis(axisSpec)) {\n      aggrAxisNames.push(axisSpec.name);\n    }\n  }\n\n  let keyColumns = [];\n  let groupColumns = [];\n  let aggregatorColumns = [];\n  let customColumn = {};\n\n  for (let axisName in axis) {\n    if (axis.hasOwnProperty(axisName)) {\n      const columns = axis[axisName];\n      if (keyAxisNames.includes(axisName)) {\n        keyColumns = keyColumns.concat(columns);\n      } else if (groupAxisNames.includes(axisName)) {\n        groupColumns = groupColumns.concat(columns);\n      } else if (aggrAxisNames.includes(axisName)) {\n        aggregatorColumns = aggregatorColumns.concat(columns);\n      } else {\n        const axisType = axisSpecs.filter((s) => s.name === axisName)[0].axisType;\n        if (!customColumn[axisType]) {\n          customColumn[axisType] = [];\n        }\n        customColumn[axisType] = customColumn[axisType].concat(columns);\n      }\n    }\n  }\n\n  return {\n    key: keyColumns,\n    group: groupColumns,\n    aggregator: aggregatorColumns,\n    custom: customColumn,\n  };\n}\n\nexport const Aggregator = {\n  SUM: 'sum',\n  COUNT: 'count',\n  AVG: 'avg',\n  MIN: 'min',\n  MAX: 'max',\n};\n\nconst TransformMethod = {\n  /**\n   * `raw` is designed for users who want to get raw (original) rows.\n   */\n  RAW: 'raw',\n  /**\n   * `object` is * designed for serial(line, area) charts.\n   */\n  OBJECT: 'object',\n  /**\n   * `array` is designed for column, pie charts which have categorical `key` values.\n   * But some libraries may require `OBJECT` transform method even if pie, column charts.\n   *\n   * `row.value` will be filled for `keyNames`.\n   * In other words, if you have `keyNames` which is length 4,\n   * every `row.value`'s length will be 4 too.\n   * (DO NOT use this transform method for serial (numerical) x axis charts which have so-oo many keys)\n   */\n  ARRAY: 'array',\n  ARRAY_2_KEY: 'array:2-key',\n  DRILL_DOWN: 'drill-down',\n};\n\n/** return function for lazy computation */\nexport function getTransformer(conf, rows, axisSpecs, axis) {\n  let transformer = () => {};\n\n  const transformSpec = getCurrentChartTransform(conf);\n  if (!transformSpec) {\n    return transformer;\n  }\n\n  const method = transformSpec.method;\n\n  const columns = getColumnsFromAxis(axisSpecs, axis);\n  const keyColumns = columns.key;\n  const groupColumns = columns.group;\n  const aggregatorColumns = columns.aggregator;\n  const customColumns = columns.custom;\n\n  let column = {\n    key: keyColumns, group: groupColumns, aggregator: aggregatorColumns, custom: customColumns,\n  };\n\n  if (method === TransformMethod.RAW) {\n    transformer = () => {\n      return rows;\n    };\n  } else if (method === TransformMethod.OBJECT) {\n    transformer = () => {\n      const {cube, schema, keyColumnName, keyNames, groupNameSet, selectorNameWithIndex} =\n        getKGACube(rows, keyColumns, groupColumns, aggregatorColumns);\n\n      const {\n        transformed, groupNames, sortedSelectors,\n      } = getObjectRowsFromKGACube(cube, schema, aggregatorColumns,\n        keyColumnName, keyNames, groupNameSet, selectorNameWithIndex);\n\n      return {\n        rows: transformed,\n        keyColumnName,\n        keyNames,\n        groupNames: groupNames,\n        selectors: sortedSelectors,\n      };\n    };\n  } else if (method === TransformMethod.ARRAY) {\n    transformer = () => {\n      const {cube, schema, keyColumnName, keyNames, groupNameSet, selectorNameWithIndex} =\n        getKGACube(rows, keyColumns, groupColumns, aggregatorColumns);\n\n      const {\n        transformed, groupNames, sortedSelectors,\n      } = getArrayRowsFromKGACube(cube, schema, aggregatorColumns,\n        keyColumnName, keyNames, groupNameSet, selectorNameWithIndex);\n\n      return {\n        rows: transformed,\n        keyColumnName,\n        keyNames,\n        groupNames: groupNames,\n        selectors: sortedSelectors,\n      };\n    };\n  } else if (method === TransformMethod.ARRAY_2_KEY) {\n    const keyAxisColumn = getColumnsForMultipleAxes(AxisType.KEY, axisSpecs, axis);\n    column.key = keyAxisColumn;\n\n    let key1Columns = [];\n    let key2Columns = [];\n\n    // since ARRAY_2_KEY :)\n    let i = 0;\n    for (let axisName in keyAxisColumn) {\n      if (i === 2) {\n        break;\n      }\n\n      if (i === 0) {\n        key1Columns = keyAxisColumn[axisName];\n      } else if (i === 1) {\n        key2Columns = keyAxisColumn[axisName];\n      }\n      i++;\n    }\n\n    const {cube, schema,\n      key1ColumnName, key1Names, key2ColumnName, key2Names,\n      groupNameSet, selectorNameWithIndex,\n    } = getKKGACube(rows, key1Columns, key2Columns, groupColumns, aggregatorColumns);\n\n    const {\n      transformed, groupNames, sortedSelectors,\n      key1NameWithIndex, key2NameWithIndex,\n    } = getArrayRowsFromKKGACube(cube, schema, aggregatorColumns,\n      key1Names, key2Names, groupNameSet, selectorNameWithIndex);\n\n    transformer = () => {\n      return {\n        rows: transformed,\n        key1Names: key1Names,\n        key1ColumnName: key1ColumnName,\n        key1NameWithIndex: key1NameWithIndex,\n        key2Names: key2Names,\n        key2ColumnName: key2ColumnName,\n        key2NameWithIndex: key2NameWithIndex,\n        groupNames: groupNames,\n        selectors: sortedSelectors,\n      };\n    };\n  } else if (method === TransformMethod.DRILL_DOWN) {\n    transformer = () => {\n      const {cube, schema, keyColumnName, keyNames, groupNameSet, selectorNameWithIndex} =\n        getKAGCube(rows, keyColumns, groupColumns, aggregatorColumns);\n\n      const {\n        transformed, groupNames, sortedSelectors,\n      } = getDrilldownRowsFromKAGCube(cube, schema, aggregatorColumns,\n        keyColumnName, keyNames, groupNameSet, selectorNameWithIndex);\n\n      return {\n        rows: transformed,\n        keyColumnName,\n        keyNames,\n        groupNames: groupNames,\n        selectors: sortedSelectors,\n      };\n    };\n  }\n\n  return {transformer: transformer, column: column};\n}\n\nconst AggregatorFunctions = {\n  sum: function(a, b) {\n    const varA = (a !== undefined) ? (isNaN(a) ? 1 : parseFloat(a)) : 0;\n    const varB = (b !== undefined) ? (isNaN(b) ? 1 : parseFloat(b)) : 0;\n    return varA + varB;\n  },\n  count: function(a, b) {\n    const varA = (a !== undefined) ? parseInt(a) : 0;\n    const varB = (b !== undefined) ? 1 : 0;\n    return varA + varB;\n  },\n  min: function(a, b) {\n    const varA = (a !== undefined) ? (isNaN(a) ? 1 : parseFloat(a)) : 0;\n    const varB = (b !== undefined) ? (isNaN(b) ? 1 : parseFloat(b)) : 0;\n    return Math.min(varA, varB);\n  },\n  max: function(a, b) {\n    const varA = (a !== undefined) ? (isNaN(a) ? 1 : parseFloat(a)) : 0;\n    const varB = (b !== undefined) ? (isNaN(b) ? 1 : parseFloat(b)) : 0;\n    return Math.max(varA, varB);\n  },\n  avg: function(a, b, c) {\n    const varA = (a !== undefined) ? (isNaN(a) ? 1 : parseFloat(a)) : 0;\n    const varB = (b !== undefined) ? (isNaN(b) ? 1 : parseFloat(b)) : 0;\n    return varA + varB;\n  },\n};\n\nconst AggregatorFunctionDiv = {\n  sum: false,\n  min: false,\n  max: false,\n  count: false,\n  avg: true,\n};\n\n/** nested cube `(key) -> (group) -> aggregator` */\nexport function getKGACube(rows, keyColumns, groupColumns, aggrColumns) {\n  const schema = {\n    key: keyColumns.length !== 0,\n    group: groupColumns.length !== 0,\n    aggregator: aggrColumns.length !== 0,\n  };\n\n  let cube = {};\n  const entry = {};\n\n  const keyColumnName = keyColumns.map((c) => c.name).join('.');\n  const groupNameSet = new Set();\n  const keyNameSet = new Set();\n  const selectorNameWithIndex = {}; /** { selectorName: index } */\n  let indexCounter = 0;\n\n  for (let i = 0; i < rows.length; i++) {\n    const row = rows[i];\n    let e = entry;\n    let c = cube;\n\n    // key: add to entry\n    let mergedKeyName;\n    if (schema.key) {\n      mergedKeyName = keyColumns.map((c) => row[c.index]).join('.');\n      if (!e[mergedKeyName]) {\n        e[mergedKeyName] = {children: {}};\n      }\n      e = e[mergedKeyName].children;\n      // key: add to row\n      if (!c[mergedKeyName]) {\n        c[mergedKeyName] = {};\n      }\n      c = c[mergedKeyName];\n\n      keyNameSet.add(mergedKeyName);\n    }\n\n    let mergedGroupName;\n    if (schema.group) {\n      mergedGroupName = groupColumns.map((c) => row[c.index]).join('.');\n\n      // add group to entry\n      if (!e[mergedGroupName]) {\n        e[mergedGroupName] = {children: {}};\n      }\n      e = e[mergedGroupName].children;\n      // add group to row\n      if (!c[mergedGroupName]) {\n        c[mergedGroupName] = {};\n      }\n      c = c[mergedGroupName];\n      groupNameSet.add(mergedGroupName);\n    }\n\n    for (let a = 0; a < aggrColumns.length; a++) {\n      const aggrColumn = aggrColumns[a];\n      const aggrName = `${aggrColumn.name}(${aggrColumn.aggr})`;\n\n      // update groupNameSet\n      if (!mergedGroupName) {\n        groupNameSet.add(aggrName); /** aggr column name will be used as group name if group is empty */\n      }\n\n      // update selectorNameWithIndex\n      const selector = getSelectorName(mergedGroupName, aggrColumns.length, aggrName);\n      if (typeof selectorNameWithIndex[selector] === 'undefined' /** value might be 0 */) {\n        selectorNameWithIndex[selector] = indexCounter;\n        indexCounter = indexCounter + 1;\n      }\n\n      // add aggregator to entry\n      if (!e[aggrName]) {\n        e[aggrName] = {type: 'aggregator', order: aggrColumn, index: aggrColumn.index};\n      }\n\n      // add aggregatorName to row\n      if (!c[aggrName]) {\n        c[aggrName] = {\n          aggr: aggrColumn.aggr,\n          value: (aggrColumn.aggr !== 'count') ? row[aggrColumn.index] : 1,\n          count: 1,\n        };\n      } else {\n        const value = AggregatorFunctions[aggrColumn.aggr](\n          c[aggrName].value, row[aggrColumn.index], c[aggrName].count + 1);\n        const count = (AggregatorFunctionDiv[aggrColumn.aggr])\n          ? c[aggrName].count + 1 : c[aggrName].count;\n\n        c[aggrName].value = value;\n        c[aggrName].count = count;\n      }\n    } /** end loop for aggrColumns */\n  }\n\n  let keyNames = null;\n  if (!schema.key) {\n    const mergedGroupColumnName = groupColumns.map((c) => c.name).join('.');\n    cube = {[mergedGroupColumnName]: cube};\n    keyNames = [mergedGroupColumnName];\n  } else {\n    keyNames = sortWithNumberSupport(Object.keys(cube)); /** keys should be sorted */\n  }\n\n  return {\n    cube: cube,\n    schema: schema,\n    keyColumnName: keyColumnName,\n    keyNames: keyNames,\n    groupNameSet: groupNameSet,\n    selectorNameWithIndex: selectorNameWithIndex,\n  };\n}\n\n/** nested cube `(key) -> aggregator -> (group)` for drill-down support */\nexport function getKAGCube(rows, keyColumns, groupColumns, aggrColumns) {\n  const schema = {\n    key: keyColumns.length !== 0,\n    group: groupColumns.length !== 0,\n    aggregator: aggrColumns.length !== 0,\n  };\n\n  let cube = {};\n\n  const keyColumnName = keyColumns.map((c) => c.name).join('.');\n  const groupNameSet = new Set();\n  const keyNameSet = new Set();\n  const selectorNameWithIndex = {}; /** { selectorName: index } */\n  let indexCounter = 0;\n\n  for (let i = 0; i < rows.length; i++) {\n    const row = rows[i];\n    let c = cube;\n\n    // key: add to entry\n    let mergedKeyName;\n    if (schema.key) {\n      mergedKeyName = keyColumns.map((c) => row[c.index]).join('.');\n      // key: add to row\n      if (!c[mergedKeyName]) {\n        c[mergedKeyName] = {};\n      }\n      c = c[mergedKeyName];\n\n      keyNameSet.add(mergedKeyName);\n    }\n\n    let mergedGroupName;\n    if (schema.group) {\n      mergedGroupName = groupColumns.map((c) => row[c.index]).join('.');\n      groupNameSet.add(mergedGroupName);\n    }\n\n    for (let a = 0; a < aggrColumns.length; a++) {\n      const aggrColumn = aggrColumns[a];\n      const aggrName = `${aggrColumn.name}(${aggrColumn.aggr})`;\n\n      // update groupNameSet\n      if (!mergedGroupName) {\n        groupNameSet.add(aggrName); /** aggr column name will be used as group name if group is empty */\n      }\n\n      // update selectorNameWithIndex\n      const selector = getSelectorName(mergedKeyName, aggrColumns.length, aggrName);\n      if (typeof selectorNameWithIndex[selector] === 'undefined' /** value might be 0 */) {\n        selectorNameWithIndex[selector] = indexCounter;\n        indexCounter = indexCounter + 1;\n      }\n\n      // add aggregatorName to row\n      if (!c[aggrName]) {\n        const value = (aggrColumn.aggr !== 'count') ? row[aggrColumn.index] : 1;\n        const count = 1;\n\n        c[aggrName] = {aggr: aggrColumn.aggr, value: value, count: count, children: {}};\n      } else {\n        const value = AggregatorFunctions[aggrColumn.aggr](\n          c[aggrName].value, row[aggrColumn.index], c[aggrName].count + 1);\n        const count = (AggregatorFunctionDiv[aggrColumn.aggr])\n          ? c[aggrName].count + 1 : c[aggrName].count;\n\n        c[aggrName].value = value;\n        c[aggrName].count = count;\n      }\n\n      // add aggregated group (for drill-down) to row iff group is enabled\n      if (mergedGroupName) {\n        if (!c[aggrName].children[mergedGroupName]) {\n          const value = (aggrColumn.aggr !== 'count') ? row[aggrColumn.index] : 1;\n          const count = 1;\n\n          c[aggrName].children[mergedGroupName] = {value: value, count: count};\n        } else {\n          const drillDownedValue = c[aggrName].children[mergedGroupName].value;\n          const drillDownedCount = c[aggrName].children[mergedGroupName].count;\n          const value = AggregatorFunctions[aggrColumn.aggr](\n            drillDownedValue, row[aggrColumn.index], drillDownedCount + 1);\n          const count = (AggregatorFunctionDiv[aggrColumn.aggr])\n            ? drillDownedCount + 1 : drillDownedCount;\n\n          c[aggrName].children[mergedGroupName].value = value;\n          c[aggrName].children[mergedGroupName].count = count;\n        }\n      }\n    } /** end loop for aggrColumns */\n  }\n\n  let keyNames = null;\n  if (!schema.key) {\n    const mergedGroupColumnName = groupColumns.map((c) => c.name).join('.');\n    cube = {[mergedGroupColumnName]: cube};\n    keyNames = [mergedGroupColumnName];\n  } else {\n    keyNames = sortWithNumberSupport(Object.keys(cube)); /** keys should be sorted */\n  }\n\n  return {\n    cube: cube,\n    schema: schema,\n    keyColumnName: keyColumnName,\n    keyNames: keyNames,\n    groupNameSet: groupNameSet,\n    selectorNameWithIndex: selectorNameWithIndex,\n  };\n}\n/** nested cube `(key1) -> (key2) -> (group) -> aggregator` */\nexport function getKKGACube(rows, key1Columns, key2Columns, groupColumns, aggrColumns) {\n  const schema = {\n    key1: key1Columns.length !== 0,\n    key2: key2Columns.length !== 0,\n    group: groupColumns.length !== 0,\n    aggregator: aggrColumns.length !== 0,\n  };\n\n  let cube = {};\n  const entry = {};\n\n  const key1ColumnName = key1Columns.map((c) => c.name).join('.');\n  const key1NameSet = {};\n  const key2ColumnName = key2Columns.map((c) => c.name).join('.');\n  const key2NameSet = {};\n  const groupNameSet = new Set();\n  const selectorNameWithIndex = {}; /** { selectorName: index } */\n  let indexCounter = 0;\n\n  for (let i = 0; i < rows.length; i++) {\n    const row = rows[i];\n    let e = entry;\n    let c = cube;\n\n    // key1: add to entry\n    let mergedKey1Name;\n    if (schema.key1) {\n      mergedKey1Name = key1Columns.map((c) => row[c.index]).join('.');\n      if (!e[mergedKey1Name]) {\n        e[mergedKey1Name] = {children: {}};\n      }\n      e = e[mergedKey1Name].children;\n      // key1: add to row\n      if (!c[mergedKey1Name]) {\n        c[mergedKey1Name] = {};\n      }\n      c = c[mergedKey1Name];\n\n      if (!key1NameSet[mergedKey1Name]) {\n        key1NameSet[mergedKey1Name] = true;\n      }\n    }\n\n    // key2: add to entry\n    let mergedKey2Name;\n    if (schema.key2) {\n      mergedKey2Name = key2Columns.map((c) => row[c.index]).join('.');\n      if (!e[mergedKey2Name]) {\n        e[mergedKey2Name] = {children: {}};\n      }\n      e = e[mergedKey2Name].children;\n      // key2: add to row\n      if (!c[mergedKey2Name]) {\n        c[mergedKey2Name] = {};\n      }\n      c = c[mergedKey2Name];\n\n      if (!key2NameSet[mergedKey2Name]) {\n        key2NameSet[mergedKey2Name] = true;\n      }\n    }\n\n    let mergedGroupName;\n    if (schema.group) {\n      mergedGroupName = groupColumns.map((c) => row[c.index]).join('.');\n\n      // add group to entry\n      if (!e[mergedGroupName]) {\n        e[mergedGroupName] = {children: {}};\n      }\n      e = e[mergedGroupName].children;\n      // add group to row\n      if (!c[mergedGroupName]) {\n        c[mergedGroupName] = {};\n      }\n      c = c[mergedGroupName];\n      groupNameSet.add(mergedGroupName);\n    }\n\n    for (let a = 0; a < aggrColumns.length; a++) {\n      const aggrColumn = aggrColumns[a];\n      const aggrName = `${aggrColumn.name}(${aggrColumn.aggr})`;\n\n      // update groupNameSet\n      if (!mergedGroupName) {\n        groupNameSet.add(aggrName); /** aggr column name will be used as group name if group is empty */\n      }\n\n      // update selectorNameWithIndex\n      const selector = getSelectorName(mergedGroupName, aggrColumns.length, aggrName);\n      if (typeof selectorNameWithIndex[selector] === 'undefined' /** value might be 0 */) {\n        selectorNameWithIndex[selector] = indexCounter;\n        indexCounter = indexCounter + 1;\n      }\n\n      // add aggregator to entry\n      if (!e[aggrName]) {\n        e[aggrName] = {type: 'aggregator', order: aggrColumn, index: aggrColumn.index};\n      }\n\n      // add aggregatorName to row\n      if (!c[aggrName]) {\n        c[aggrName] = {\n          aggr: aggrColumn.aggr,\n          value: (aggrColumn.aggr !== 'count') ? row[aggrColumn.index] : 1,\n          count: 1,\n        };\n      } else {\n        const value = AggregatorFunctions[aggrColumn.aggr](\n          c[aggrName].value, row[aggrColumn.index], c[aggrName].count + 1);\n        const count = (AggregatorFunctionDiv[aggrColumn.aggr])\n          ? c[aggrName].count + 1 : c[aggrName].count;\n\n        c[aggrName].value = value;\n        c[aggrName].count = count;\n      }\n    } /** end loop for aggrColumns */\n  }\n\n  let key1Names = sortWithNumberSupport(Object.keys(key1NameSet)); /** keys should be sorted */\n  let key2Names = sortWithNumberSupport(Object.keys(key2NameSet)); /** keys should be sorted */\n\n  return {\n    cube: cube,\n    schema: schema,\n    key1ColumnName: key1ColumnName,\n    key1Names: key1Names,\n    key2ColumnName: key2ColumnName,\n    key2Names: key2Names,\n    groupNameSet: groupNameSet,\n    selectorNameWithIndex: selectorNameWithIndex,\n  };\n}\n\nexport function getSelectorName(mergedGroupName, aggrColumnLength, aggrColumnName) {\n  if (!mergedGroupName) {\n    return aggrColumnName;\n  } else {\n    return (aggrColumnLength > 1)\n      ? `${mergedGroupName} / ${aggrColumnName}` : mergedGroupName;\n  }\n}\n\nexport function getCubeValue(obj, aggregator, aggrColumnName) {\n  let value = null; /** default is null */\n  try {\n    /** if AVG or COUNT, calculate it now, previously we can't because we were doing accumulation */\n    if (aggregator === Aggregator.AVG) {\n      value = obj[aggrColumnName].value / obj[aggrColumnName].count;\n    } else if (aggregator === Aggregator.COUNT) {\n      value = obj[aggrColumnName].value;\n    } else {\n      value = obj[aggrColumnName].value;\n    }\n\n    if (typeof value === 'undefined') {\n      value = null;\n    }\n  } catch (error) { /** iognore */ }\n\n  return value;\n}\n\nexport function getNameWithIndex(names) {\n  const nameWithIndex = {};\n\n  for (let i = 0; i < names.length; i++) {\n    const name = names[i];\n    nameWithIndex[name] = i;\n  }\n\n  return nameWithIndex;\n}\n\nexport function getArrayRowsFromKKGACube(cube, schema, aggregatorColumns,\n                                         key1Names, key2Names, groupNameSet, selectorNameWithIndex) {\n  const sortedSelectors = sortWithNumberSupport(Object.keys(selectorNameWithIndex));\n  const sortedSelectorNameWithIndex = getNameWithIndex(sortedSelectors);\n\n  const selectorRows = new Array(sortedSelectors.length);\n  const key1NameWithIndex = getNameWithIndex(key1Names);\n  const key2NameWithIndex = getNameWithIndex(key2Names);\n\n  fillSelectorRows(schema, cube, selectorRows,\n    aggregatorColumns, sortedSelectorNameWithIndex,\n    key1Names, key2Names, key1NameWithIndex, key2NameWithIndex);\n\n  return {\n    key1NameWithIndex: key1NameWithIndex,\n    key2NameWithIndex: key2NameWithIndex,\n    transformed: selectorRows,\n    groupNames: sortWithNumberSupport(Array.from(groupNameSet)),\n    sortedSelectors: sortedSelectors,\n  };\n}\n\n/** truly mutable style func. will return nothing */\nexport function fillSelectorRows(schema, cube, selectorRows,\n                                 aggrColumns, selectorNameWithIndex,\n                                 key1Names, key2Names) {\n  function fill(grouped, mergedGroupName, key1Name, key2Name) {\n    // should iterate aggrColumns in the most nested loop to utilize memory locality\n    for (let aggrColumn of aggrColumns) {\n      const aggrName = `${aggrColumn.name}(${aggrColumn.aggr})`;\n      const value = getCubeValue(grouped, aggrColumn.aggr, aggrName);\n      const selector = getSelectorName(mergedGroupName, aggrColumns.length, aggrName);\n      const selectorIndex = selectorNameWithIndex[selector];\n\n      if (typeof selectorRows[selectorIndex] === 'undefined') {\n        selectorRows[selectorIndex] = {selector: selector, value: []};\n      }\n\n      const row = {aggregated: value};\n\n      if (typeof key1Name !== 'undefined') {\n        row.key1 = key1Name;\n      }\n      if (typeof key2Name !== 'undefined') {\n        row.key2 = key2Name;\n      }\n\n      selectorRows[selectorIndex].value.push(row);\n    }\n  }\n\n  function iterateGroupNames(keyed, key1Name, key2Name) {\n    if (!schema.group) {\n      fill(keyed, undefined, key1Name, key2Name);\n    } else {\n      // assuming sparse distribution (usual case)\n      // otherwise we need to iterate using `groupNameSet`\n      const availableGroupNames = Object.keys(keyed);\n\n      for (let groupName of availableGroupNames) {\n        const grouped = keyed[groupName];\n        fill(grouped, groupName, key1Name, key2Name);\n      }\n    }\n  }\n\n  if (schema.key1 && schema.key2) {\n    for (let key1Name of key1Names) {\n      const key1ed = cube[key1Name];\n\n      // assuming sparse distribution (usual case)\n      // otherwise we need to iterate using `key2Names`\n      const availableKey2Names = Object.keys(key1ed);\n\n      for (let key2Name of availableKey2Names) {\n        const keyed = key1ed[key2Name];\n        iterateGroupNames(keyed, key1Name, key2Name);\n      }\n    }\n  } else if (schema.key1 && !schema.key2) {\n    for (let key1Name of key1Names) {\n      const keyed = cube[key1Name];\n      iterateGroupNames(keyed, key1Name, undefined);\n    }\n  } else if (!schema.key1 && schema.key2) {\n    for (let key2Name of key2Names) {\n      const keyed = cube[key2Name];\n      iterateGroupNames(keyed, undefined, key2Name);\n    }\n  } else {\n    iterateGroupNames(cube, undefined, undefined);\n  }\n}\n\nexport function getArrayRowsFromKGACube(cube, schema, aggregatorColumns,\n                                        keyColumnName, keyNames, groupNameSet,\n                                        selectorNameWithIndex) {\n  const sortedSelectors = sortWithNumberSupport(Object.keys(selectorNameWithIndex));\n  const sortedSelectorNameWithIndex = getNameWithIndex(sortedSelectors);\n\n  const keyArrowRows = new Array(sortedSelectors.length);\n  const keyNameWithIndex = getNameWithIndex(keyNames);\n\n  for (let i = 0; i < keyNames.length; i++) {\n    const key = keyNames[i];\n\n    const obj = cube[key];\n    fillArrayRow(schema, aggregatorColumns, obj,\n      groupNameSet, sortedSelectorNameWithIndex,\n      key, keyNames, keyArrowRows, keyNameWithIndex);\n  }\n\n  return {\n    transformed: keyArrowRows,\n    groupNames: sortWithNumberSupport(Array.from(groupNameSet)),\n    sortedSelectors: sortedSelectors,\n  };\n}\n\n/** truly mutable style func. will return nothing, just modify `keyArrayRows` */\nexport function fillArrayRow(schema, aggrColumns, obj,\n                             groupNameSet, selectorNameWithIndex,\n                             keyName, keyNames, keyArrayRows, keyNameWithIndex) {\n  function fill(target, mergedGroupName, aggr, aggrName) {\n    const value = getCubeValue(target, aggr, aggrName);\n    const selector = getSelectorName(mergedGroupName, aggrColumns.length, aggrName);\n    const selectorIndex = selectorNameWithIndex[selector];\n    const keyIndex = keyNameWithIndex[keyName];\n\n    if (typeof keyArrayRows[selectorIndex] === 'undefined') {\n      keyArrayRows[selectorIndex] = {\n        selector: selector, value: new Array(keyNames.length),\n      };\n    }\n    keyArrayRows[selectorIndex].value[keyIndex] = value;\n  }\n\n  /** when group is empty */\n  if (!schema.group) {\n    for (let i = 0; i < aggrColumns.length; i++) {\n      const aggrColumn = aggrColumns[i];\n      const aggrName = `${aggrColumn.name}(${aggrColumn.aggr})`;\n      fill(obj, undefined, aggrColumn.aggr, aggrName);\n    }\n  } else {\n    for (let i = 0; i < aggrColumns.length; i++) {\n      const aggrColumn = aggrColumns[i];\n      const aggrName = `${aggrColumn.name}(${aggrColumn.aggr})`;\n\n      for (let groupName of groupNameSet) {\n        const grouped = obj[groupName];\n        fill(grouped, groupName, aggrColumn.aggr, aggrName);\n      }\n    }\n  }\n}\n\nexport function getObjectRowsFromKGACube(cube, schema, aggregatorColumns,\n                                         keyColumnName, keyNames, groupNameSet,\n                                         selectorNameWithIndex) {\n  const rows = keyNames.reduce((acc, key) => {\n    const obj = cube[key];\n    const row = getObjectRow(schema, aggregatorColumns, obj, groupNameSet);\n\n    if (schema.key) {\n      row[keyColumnName] = key;\n    }\n    acc.push(row);\n\n    return acc;\n  }, []);\n\n  return {\n    transformed: rows,\n    sortedSelectors: sortWithNumberSupport(Object.keys(selectorNameWithIndex)),\n    groupNames: sortWithNumberSupport(Array.from(groupNameSet)),\n  };\n}\n\nexport function getObjectRow(schema, aggrColumns, obj, groupNameSet) {\n  const row = {};\n\n  function fill(row, target, mergedGroupName, aggr, aggrName) {\n    const value = getCubeValue(target, aggr, aggrName);\n    const selector = getSelectorName(mergedGroupName, aggrColumns.length, aggrName);\n    row[selector] = value;\n  }\n\n  /** when group is empty */\n  if (!schema.group) {\n    for (let i = 0; i < aggrColumns.length; i++) {\n      const aggrColumn = aggrColumns[i];\n      const aggrName = `${aggrColumn.name}(${aggrColumn.aggr})`;\n\n      fill(row, obj, undefined, aggrColumn.aggr, aggrName);\n    }\n\n    return row;\n  }\n\n  /** when group is specified */\n  for (let i = 0; i < aggrColumns.length; i++) {\n    const aggrColumn = aggrColumns[i];\n    const aggrName = `${aggrColumn.name}(${aggrColumn.aggr})`;\n\n    for (let groupName of groupNameSet) {\n      const grouped = obj[groupName];\n\n      if (grouped) {\n        fill(row, grouped, groupName, aggrColumn.aggr, aggrName);\n      }\n    }\n  }\n\n  return row;\n}\n\nexport function getDrilldownRowsFromKAGCube(cube, schema, aggregatorColumns,\n                                            keyColumnName, keyNames, groupNameSet, selectorNameWithIndex) {\n  const sortedSelectors = sortWithNumberSupport(Object.keys(selectorNameWithIndex));\n  const sortedSelectorNameWithIndex = getNameWithIndex(sortedSelectors);\n\n  const rows = new Array(sortedSelectors.length);\n\n  const groupNames = sortWithNumberSupport(Array.from(groupNameSet));\n\n  keyNames.map((key) => {\n    const obj = cube[key];\n    fillDrillDownRow(schema, obj, rows, key,\n      sortedSelectorNameWithIndex, aggregatorColumns, groupNames);\n  });\n\n  return {\n    transformed: rows,\n    groupNames: groupNames,\n    sortedSelectors: sortedSelectors,\n    sortedSelectorNameWithIndex: sortedSelectorNameWithIndex,\n  };\n}\n\n/** truly mutable style func. will return nothing, just modify `rows` */\nexport function fillDrillDownRow(schema, obj, rows, key,\n                                 selectorNameWithIndex, aggrColumns, groupNames) {\n  /** when group is empty */\n  for (let i = 0; i < aggrColumns.length; i++) {\n    const row = {};\n    const aggrColumn = aggrColumns[i];\n    const aggrName = `${aggrColumn.name}(${aggrColumn.aggr})`;\n\n    const value = getCubeValue(obj, aggrColumn.aggr, aggrName);\n    const selector = getSelectorName((schema.key) ? key : undefined, aggrColumns.length, aggrName);\n\n    const selectorIndex = selectorNameWithIndex[selector];\n    row.value = value;\n    row.drillDown = [];\n    row.selector = selector;\n\n    if (schema.group) {\n      row.drillDown = [];\n\n      for (let groupName of groupNames) {\n        const value = getCubeValue(obj[aggrName].children, aggrColumn.aggr, groupName);\n        row.drillDown.push({group: groupName, value: value});\n      }\n    }\n\n    rows[selectorIndex] = row;\n  }\n}\n\nexport function sortWithNumberSupport(arr) {\n  let isNumeric = function(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n  };\n\n  if (arr.every(isNumeric)) {\n    return arr.sort(function(a, b) {\n      return parseFloat(a) - parseFloat(b);\n    });\n  } else {\n    return arr.sort();\n  }\n}\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const Widget = {\n  CHECKBOX: 'checkbox',\n  INPUT: 'input',\n  TEXTAREA: 'textarea',\n  OPTION: 'option',\n  BTN_GROUP: 'btn-group',\n};\n\nexport const ValueType = {\n  INT: 'int',\n  FLOAT: 'float',\n  BOOLEAN: 'boolean',\n  STRING: 'string',\n  JSON: 'JSON',\n};\n\nexport const TableColumnType = {\n  STRING: 'string',\n  BOOLEAN: 'boolean',\n  NUMBER: 'number',\n  DATE: 'date',\n  OBJECT: 'object',\n  NUMBER_STR: 'numberStr',\n};\n\nexport const DefaultTableColumnType = TableColumnType.STRING;\n\nexport function isInputWidget(spec) {\n  return spec.widget === Widget.INPUT;\n}\nexport function isOptionWidget(spec) {\n  return spec.widget === Widget.OPTION;\n}\nexport function isCheckboxWidget(spec) {\n  return spec.widget === Widget.CHECKBOX;\n}\nexport function isTextareaWidget(spec) {\n  return spec.widget === Widget.TEXTAREA;\n}\nexport function isBtnGroupWidget(spec) {\n  return spec.widget === Widget.BTN_GROUP;\n}\n\nexport function resetTableOptionConfig(config) {\n  delete config.tableOptionSpecHash;\n  config.tableOptionSpecHash = {};\n  delete config.tableOptionValue;\n  config.tableOptionValue = {};\n  delete config.tableColumnTypeState.names;\n  config.tableColumnTypeState.names = {};\n  config.updated = false;\n  return config;\n}\n\nexport function initializeTableConfig(config, tableOptionSpecs) {\n  if (typeof config.tableOptionValue === 'undefined') {\n    config.tableOptionValue = {};\n  }\n  if (typeof config.tableGridState === 'undefined') {\n    config.tableGridState = {};\n  }\n  if (typeof config.tableColumnTypeState === 'undefined') {\n    config.tableColumnTypeState = {};\n  }\n\n  // should remove `$$hashKey` using angular.toJson\n  const newSpecHash = JSON.stringify(JSON.parse(angular.toJson(tableOptionSpecs)));\n  const previousSpecHash = config.tableOptionSpecHash;\n\n  // check whether spec is updated or not\n  if (typeof previousSpecHash === 'undefined' || (previousSpecHash !== newSpecHash)) {\n    resetTableOptionConfig(config);\n\n    config.tableOptionSpecHash = newSpecHash;\n    config.initialized = true;\n\n    // reset all persisted option values if spec is updated\n    for (let i = 0; i < tableOptionSpecs.length; i++) {\n      const option = tableOptionSpecs[i];\n      config.tableOptionValue[option.name] = option.defaultValue;\n    }\n  }\n\n  return config;\n}\n\nexport function parseTableOption(specs, persistedTableOption) {\n  /** copy original params */\n  let parsed;\n  try {\n    parsed = JSON.parse(JSON.stringify(persistedTableOption));\n  } catch (e) {\n    // if not able to parse fall back to default values coming from specs\n    parsed = {};\n    for (let spec of specs) {\n      parsed[spec['name']] = spec['defaultValue'];\n    }\n  }\n\n  for (let i = 0; i < specs.length; i++) {\n    const s = specs[i];\n    const name = s.name;\n\n    if (s.valueType === ValueType.INT &&\n      typeof parsed[name] !== 'number') {\n      try {\n        parsed[name] = parseInt(parsed[name]);\n      } catch (error) {\n        parsed[name] = s.defaultValue;\n      }\n    } else if (s.valueType === ValueType.FLOAT &&\n      typeof parsed[name] !== 'number') {\n      try {\n        parsed[name] = parseFloat(parsed[name]);\n      } catch (error) {\n        parsed[name] = s.defaultValue;\n      }\n    } else if (s.valueType === ValueType.BOOLEAN) {\n      if (parsed[name] === 'false') {\n        parsed[name] = false;\n      } else if (parsed[name] === 'true') {\n        parsed[name] = true;\n      } else if (typeof parsed[name] !== 'boolean') {\n        parsed[name] = s.defaultValue;\n      }\n    } else if (s.valueType === ValueType.JSON) {\n      if (parsed[name] !== null && typeof parsed[name] !== 'object') {\n        try {\n          parsed[name] = JSON.parse(parsed[name]);\n        } catch (error) {\n          parsed[name] = s.defaultValue;\n        }\n      } else if (parsed[name] === null) {\n        parsed[name] = s.defaultValue;\n      }\n    }\n  }\n\n  return parsed;\n}\n\nexport function isColumnNameUpdated(prevColumnNames, newColumnNames) {\n  if (typeof prevColumnNames === 'undefined') {\n    return true;\n  }\n\n  let columnNameUpdated = false;\n\n  for (let prevColName in prevColumnNames) {\n    if (!newColumnNames[prevColName]) {\n      return true;\n    }\n  }\n\n  if (!columnNameUpdated) {\n    for (let newColName in newColumnNames) {\n      if (!prevColumnNames[newColName]) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nexport function updateColumnTypeState(columns, config, columnDefs) {\n  const columnTypeState = config.tableColumnTypeState;\n\n  if (!columnTypeState) {\n    return;\n  }\n\n  // compare objects because order might be changed\n  const prevColumnNames = columnTypeState.names || {};\n  const newColumnNames = columns.reduce((acc, c) => {\n    const prevColumnType = prevColumnNames[c.name];\n\n    // use previous column type if exists\n    if (prevColumnType) {\n      acc[c.name] = prevColumnType;\n    } else {\n      acc[c.name] = DefaultTableColumnType;\n    }\n    return acc;\n  }, {});\n\n  let columnNameUpdated = isColumnNameUpdated(prevColumnNames, newColumnNames);\n\n  if (columnNameUpdated) {\n    columnTypeState.names = newColumnNames;\n    columnTypeState.updated = true;\n  }\n\n  // update `columnDefs[n].type`\n  for (let i = 0; i < columnDefs.length; i++) {\n    const colName = columnDefs[i].name;\n    columnDefs[i].type = columnTypeState.names[colName];\n  }\n}\n","module.exports = \"<!--\\nLicensed under the Apache License, Version 2.0 (the \\\"License\\\");\\nyou may not use this file except in compliance with the License.\\nYou may obtain a copy of the License at\\n\\n    http://www.apache.org/licenses/LICENSE-2.0\\n\\nUnless required by applicable law or agreed to in writing, software\\ndistributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\nSee the License for the specific language governing permissions and\\nlimitations under the License.\\n-->\\n\\n<div class=\\\"panel panel-default\\\" style=\\\"margin-top: 10px; margin-bottom: 11px;\\\">\\n  <div class=\\\"panel-heading\\\" style=\\\"padding: 6px 12px 6px 12px; font-size: 13px;\\\">\\n    <span style=\\\"vertical-align: middle; display: inline-block; margin-top: 3px;\\\">Table Options</span>\\n    <span style=\\\"float: right;\\\">\\n       <div class=\\\"btn-group\\\" role=\\\"group\\\" aria-label=\\\"...\\\">\\n         <div type=\\\"button\\\" ng-click=\\\"applyTableOption()\\\"\\n                       uib-tooltip=\\\"Apply new setting\\\" tooltip-placement=\\\"top\\\"\\n                       class=\\\"btn btn-default\\\" style=\\\"font-size: 11px; padding: 2px 5px 2px 5px;\\\">\\n           <i class=\\\"fa fa-floppy-o\\\" aria-hidden=\\\"true\\\"></i>\\n         </div>\\n\\n         <div type=\\\"button\\\" ng-click=\\\"resetTableOption()\\\"\\n              uib-tooltip=\\\"Restore the default setting\\\" tooltip-placement=\\\"top\\\"\\n              class=\\\"btn btn-default\\\" style=\\\"font-size: 11px; padding: 2px 5px 2px 5px;\\\">\\n           <i class=\\\"fa fa-undo\\\" aria-hidden=\\\"true\\\"></i>\\n         </div>\\n       </div>\\n    </span>\\n    <div style=\\\"clear: both;\\\"></div> <!-- to fix previous span which has float: right -->\\n  </div>\\n\\n  <div class=\\\"panel-body\\\" style=\\\"padding: 8px 12px; margin-top: 3px;\\\">\\n    <table class=\\\"table table-striped\\\">\\n      <tr>\\n        <th style=\\\"font-size: 12px; font-style: italic\\\">Name</th>\\n        <th style=\\\"font-size: 12px; font-style: italic\\\">Value</th>\\n      </tr>\\n      <tr>\\n      </tr>\\n\\n      <tr data-ng-repeat=\\\"optSpec in tableOptionSpecs\\\">\\n        <td style=\\\"font-weight: 400; vertical-align: middle;\\\">\\n          <span uib-tooltip=\\\"{{optSpec.description}}\\\" tooltip-placement=\\\"right\\\">\\n            {{optSpec.name}}\\n            <i class=\\\"fa fa-info-circle\\\" style=\\\"margin-top: 2px; margin-left: 3px; color: #7b7bbd;\\\" aria-hidden=\\\"true\\\"></i>\\n          </span>\\n        </td>\\n        <td>\\n          <div ng-if=\\\"isInputWidget(optSpec)\\\"\\n               class=\\\"input-group\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control input-sm\\\"\\n                   style=\\\"font-weight: 400; font-size: 12px; vertical-align:middle; border-radius: 5px;\\\"\\n                   ng-keydown=\\\"tableWidgetOnKeyDown($event, optSpec)\\\"\\n                   data-ng-model=\\\"config.tableOptionValue[optSpec.name]\\\" />\\n          </div>\\n          <div class=\\\"btn-group\\\"\\n               ng-if=\\\"isOptionWidget(optSpec)\\\">\\n            <select class=\\\"form-control input-sm\\\"\\n                    ng-change=\\\"tableOptionValueChanged(optSpec)\\\"\\n                    data-ng-model=\\\"config.tableOptionValue[optSpec.name]\\\"\\n                    data-ng-options=\\\"optionValue for optionValue in optSpec.optionValues\\\"\\n                    style=\\\"font-weight: 400; font-size: 12px;\\\">\\n            </select>\\n          </div>\\n\\n          <div ng-if=\\\"isCheckboxWidget(optSpec)\\\">\\n            <input type=\\\"checkbox\\\"\\n                   ng-keydown=\\\"parameterOnKeyDown($event, optSpec)\\\"\\n                   ng-click=\\\"tableOptionValueChanged(optSpec)\\\"\\n                   data-ng-model=\\\"config.tableOptionValue[optSpec.name]\\\"\\n                   data-ng-checked=\\\"config.tableOptionValue[optSpec.name]\\\" />\\n          </div>\\n\\n          <div ng-if=\\\"isTextareaWidget(optSpec)\\\">\\n            <textarea class=\\\"form-control\\\" rows=\\\"3\\\"\\n                      ng-keydown=\\\"tableWidgetOnKeyDown($event, optSpec)\\\"\\n                      data-ng-model=\\\"config.tableOptionValue[optSpec.name]\\\"\\n                      style=\\\"font-weight: 400; font-size: 12px;\\\">\\n            </textarea>\\n          </div>\\n\\n        </td>\\n      </tr>\\n    </table>\\n  </div>\\n</div>\\n\"","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport './job/job.component';\nimport {JobManagerFilter} from './jobmanager.filter';\nimport {JobManagerService} from './jobmanager.service';\n\nimport {getJobIconByStatus, getJobColorByStatus} from './job-status';\n\nangular.module('zeppelinWebApp')\n  .controller('JobManagerCtrl', JobManagerController)\n  .filter('JobManager', JobManagerFilter)\n  .service('JobManagerService', JobManagerService);\n\nconst JobDateSorter = {\n  RECENTLY_UPDATED: 'Recently Update',\n  OLDEST_UPDATED: 'Oldest Updated',\n};\n\nfunction JobManagerController($scope, ngToast, JobManagerFilter, JobManagerService) {\n  'ngInject';\n\n  $scope.isFilterLoaded = false;\n  $scope.jobs = [];\n  $scope.sorter = {\n    availableDateSorter: Object.keys(JobDateSorter).map((key) => {\n      return JobDateSorter[key];\n    }),\n    currentDateSorter: JobDateSorter.RECENTLY_UPDATED,\n  };\n  $scope.filteredJobs = $scope.jobs;\n  $scope.filterConfig = {\n    isRunningAlwaysTop: true,\n    noteNameFilterValue: '',\n    interpreterFilterValue: '*',\n    isSortByAsc: true,\n  };\n\n  $scope.pagination = {\n    currentPage: 1,\n    itemsPerPage: 10,\n    maxPageCount: 5,\n  };\n\n  ngToast.dismiss();\n  init();\n\n  /** functions */\n\n  $scope.setJobDateSorter = function(dateSorter) {\n    $scope.sorter.currentDateSorter = dateSorter;\n  };\n\n  $scope.getJobsInCurrentPage = function(jobs) {\n    const cp = $scope.pagination.currentPage;\n    const itp = $scope.pagination.itemsPerPage;\n    return jobs.slice((cp - 1) * itp, (cp * itp));\n  };\n\n  let asyncNotebookJobFilter = function(jobs, filterConfig) {\n    return new Promise((resolve, reject) => {\n      // eslint-disable-next-line new-cap\n      $scope.filteredJobs = JobManagerFilter(jobs, filterConfig);\n      resolve($scope.filteredJobs);\n    });\n  };\n\n  $scope.$watch('sorter.currentDateSorter', function() {\n    $scope.filterConfig.isSortByAsc =\n      $scope.sorter.currentDateSorter === JobDateSorter.OLDEST_UPDATED;\n    asyncNotebookJobFilter($scope.jobs, $scope.filterConfig);\n  });\n\n  $scope.getJobIconByStatus = getJobIconByStatus;\n  $scope.getJobColorByStatus = getJobColorByStatus;\n\n  $scope.filterJobs = function(jobs, filterConfig) {\n    asyncNotebookJobFilter(jobs, filterConfig)\n      .then(() => {\n        $scope.isFilterLoaded = true;\n      })\n      .catch((error) => {\n        console.error('Failed to search jobs from server', error);\n      });\n  };\n\n  $scope.filterValueToName = function(filterValue, maxStringLength) {\n    if (typeof $scope.defaultInterpreters === 'undefined') {\n      return;\n    }\n\n    let index = $scope.defaultInterpreters.findIndex((intp) => intp.value === filterValue);\n    if (typeof $scope.defaultInterpreters[index].name !== 'undefined') {\n      if (typeof maxStringLength !== 'undefined' &&\n        maxStringLength > $scope.defaultInterpreters[index].name) {\n        return $scope.defaultInterpreters[index].name.substr(0, maxStringLength - 3) + '...';\n      }\n      return $scope.defaultInterpreters[index].name;\n    } else {\n      return 'NONE';\n    }\n  };\n\n  $scope.setFilterValue = function(filterValue) {\n    $scope.filterConfig.interpreterFilterValue = filterValue;\n    $scope.filterJobs($scope.jobs, $scope.filterConfig);\n  };\n\n  $scope.setJobs = function(jobs) {\n    $scope.jobs = jobs;\n    let interpreters = $scope.jobs\n      .filter((j) => typeof j.interpreter !== 'undefined')\n      .map((j) => j.interpreter);\n    interpreters = [...new Set(interpreters)]; // remove duplicated interpreters\n\n    $scope.defaultInterpreters = [{name: 'ALL', value: '*'}];\n    for (let i = 0; i < interpreters.length; i++) {\n      $scope.defaultInterpreters.push({name: interpreters[i], value: interpreters[i]});\n    }\n  };\n\n  function init() {\n    JobManagerService.getJobs();\n    JobManagerService.subscribeSetJobs($scope, setJobsCallback);\n    JobManagerService.subscribeUpdateJobs($scope, updateJobsCallback);\n\n    $scope.$on('$destroy', function() {\n      JobManagerService.disconnect();\n    });\n  }\n\n  /*\n   ** $scope.$on functions below\n   */\n\n  function setJobsCallback(event, response) {\n    const jobs = response.jobs;\n    $scope.setJobs(jobs);\n    $scope.filterJobs($scope.jobs, $scope.filterConfig);\n  }\n\n  function updateJobsCallback(event, response) {\n    let jobs = $scope.jobs;\n    let jobByNoteId = jobs.reduce((acc, j) => {\n      const noteId = j.noteId;\n      acc[noteId] = j;\n      return acc;\n    }, {});\n\n    let updatedJobs = response.jobs;\n    updatedJobs.map((updatedJob) => {\n      if (typeof jobByNoteId[updatedJob.noteId] === 'undefined') {\n        let newItem = angular.copy(updatedJob);\n        jobs.push(newItem);\n        jobByNoteId[updatedJob.noteId] = newItem;\n      } else {\n        let job = jobByNoteId[updatedJob.noteId];\n\n        if (updatedJob.isRemoved === true) {\n          delete jobByNoteId[updatedJob.noteId];\n          let removeIndex = jobs.findIndex((j) => j.noteId === updatedJob.noteId);\n          if (removeIndex) {\n            jobs.splice(removeIndex, 1);\n          }\n        } else {\n          // update the job\n          job.isRunningJob = updatedJob.isRunningJob;\n          job.noteName = updatedJob.noteName;\n          job.noteType = updatedJob.noteType;\n          job.interpreter = updatedJob.interpreter;\n          job.unixTimeLastRun = updatedJob.unixTimeLastRun;\n          job.paragraphs = updatedJob.paragraphs;\n        }\n      }\n    });\n    $scope.filterJobs(jobs, $scope.filterConfig);\n  }\n}\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport moment from 'moment';\n\nimport {ParagraphStatus} from '../../notebook/paragraph/paragraph.status';\nimport {getJobColorByStatus, getJobIconByStatus} from '../job-status';\n\nimport jobTemplate from './job.html';\nimport './job.css';\n\nclass JobController {\n  constructor($http, JobManagerService) {\n    'ngInject';\n    this.$http = $http;\n    this.JobManagerService = JobManagerService;\n  }\n\n  isRunning() {\n    return this.note.isRunningJob;\n  }\n\n  getParagraphs() {\n    return this.note.paragraphs;\n  }\n\n  getNoteId() {\n    return this.note.noteId;\n  }\n\n  getNoteName() {\n    return this.note.noteName;\n  }\n\n  runJob() {\n    BootstrapDialog.confirm({\n      closable: true,\n      title: 'Job Dialog',\n      message: 'Run all paragraphs?',\n      callback: (clickOk) => {\n        if (!clickOk) {\n          return;\n        }\n\n        const noteId = this.getNoteId();\n        // if the request is handled successfully, the job page will get updated using websocket\n        this.JobManagerService.sendRunJobRequest(noteId)\n          .catch((response) => {\n            let message = (response.data && response.data.message)\n              ? response.data.message : 'SERVER ERROR';\n            this.showErrorDialog('Execution Failure', message);\n          });\n      },\n    });\n  }\n\n  stopJob() {\n    BootstrapDialog.confirm({\n      closable: true,\n      title: 'Job Dialog',\n      message: 'Stop all paragraphs?',\n      callback: (clickOk) => {\n        if (!clickOk) {\n          return;\n        }\n\n        const noteId = this.getNoteId();\n        // if the request is handled successfully, the job page will get updated using websocket\n        this.JobManagerService.sendStopJobRequest(noteId)\n          .catch((response) => {\n            let message = (response.data && response.data.message)\n              ? response.data.message : 'SERVER ERROR';\n            this.showErrorDialog('Stop Failure', message);\n          });\n      },\n    });\n  }\n\n  showErrorDialog(title, errorMessage) {\n    if (!errorMessage) {\n      errorMessage = 'SERVER ERROR';\n    }\n    BootstrapDialog.alert({\n      closable: true,\n      title: title,\n      message: _.escape(errorMessage),\n    });\n  }\n\n  lastExecuteTime() {\n    const timestamp = this.note.unixTimeLastRun;\n    return moment.unix(timestamp / 1000).fromNow();\n  }\n\n  getInterpreterName() {\n    return typeof this.note.interpreter === 'undefined'\n      ? 'interpreter is not set' : this.note.interpreter;\n  }\n\n  getInterpreterNameStyle() {\n    return typeof this.note.interpreter === 'undefined'\n      ? {color: 'gray'} : {color: 'black'};\n  }\n\n  getJobTypeIcon() {\n    const noteType = this.note.noteType;\n    if (noteType === 'normal') {\n      return 'icon-doc';\n    } else if (noteType === 'cron') {\n      return 'icon-clock';\n    } else {\n      return 'icon-question';\n    }\n  }\n\n  getJobColorByStatus(status) {\n    return getJobColorByStatus(status);\n  }\n\n  getJobIconByStatus(status) {\n    return getJobIconByStatus(status);\n  }\n\n  getProgress() {\n    const paragraphs = this.getParagraphs();\n    let paragraphStatuses = paragraphs.map((p) => p.status);\n    let runningOrFinishedParagraphs = paragraphStatuses.filter((status) => {\n      return status === ParagraphStatus.RUNNING || status === ParagraphStatus.FINISHED;\n    });\n\n    let totalCount = paragraphStatuses.length;\n    let runningCount = runningOrFinishedParagraphs.length;\n    let result = Math.ceil(runningCount / totalCount * 100);\n    result = isNaN(result) ? 0 : result;\n\n    return `${result}%`;\n  }\n\n  showPercentProgressBar() {\n    return this.getProgress() > 0 && this.getProgress() < 100;\n  }\n}\n\nexport const JobComponent = {\n  bindings: {\n    note: '<',\n  },\n  template: jobTemplate,\n  controller: JobController,\n};\n\nexport const JobModule = angular\n  .module('zeppelinWebApp')\n  .component('job', JobComponent)\n  .name;\n","module.exports = \"<!--\\nLicensed under the Apache License, Version 2.0 (the \\\"License\\\");\\nyou may not use this file except in compliance with the License.\\nYou may obtain a copy of the License at\\n\\n    http://www.apache.org/licenses/LICENSE-2.0\\n\\nUnless required by applicable law or agreed to in writing, software\\ndistributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\nSee the License for the specific language governing permissions and\\nlimitations under the License.\\n-->\\n\\n<div class=\\\"job\\\" >\\n  <div>\\n    <!-- job control: start -->\\n    <div id=\\\"{{$ctrl.getNoteId()}}_control\\\" class=\\\"control\\\">\\n      <span ng-bind=\\\"$ctrl.lastExecuteTime()\\\"></span>\\n      <span>\\n        <span ng-bind=\\\"$ctrl.isRunning() ? 'RUNNING' : 'READY'\\\"></span>\\n      </span>\\n\\n      <span ng-if=\\\"$ctrl.isRunning()\\\" ng-bind=\\\"$ctrl.getProgress()\\\"></span>\\n\\n      <span\\n        class=\\\"job-control-btn\\\" tooltip-placement=\\\"left\\\"\\n        uib-tooltip-html=\\\"!$ctrl.isRunning() ? 'Start All Paragraphs' : 'Stop All Paragraphs'\\\"\\n        ng-click=\\\"!$ctrl.isRunning() ? $ctrl.runJob() : $ctrl.stopJob()\\\"\\n        ng-class=\\\"!$ctrl.isRunning() ? 'icon-control-play' : 'icon-control-pause'\\\"\\n        ng-style=\\\"{'color': $ctrl.isRunning() ? '#CD5C5C' : '#3071A9'}\\\">\\n      </span>\\n    </div>\\n    <!-- job control: end -->\\n\\n    <span class=\\\"job-types\\\">\\n      <i ng-class=\\\"$ctrl.getJobTypeIcon()\\\"></i>\\n    </span>\\n    <a style=\\\"text-decoration: none !important;\\\" ng-href=\\\"#/notebook/{{$ctrl.getNoteId()}}\\\">\\n      <span ng-bind=\\\"$ctrl.getNoteName() + ' - '\\\"></span>\\n      <span ng-style=\\\"$ctrl.getInterpreterNameStyle()\\\"\\n            ng-bind=\\\"$ctrl.getInterpreterName()\\\">\\n      </span>\\n    </a>\\n    <!-- job progress bar: start -->\\n    <div id=\\\"{{$ctrl.getNoteId()}}_runControl\\\" class=\\\"runControl\\\">\\n      <div id=\\\"{{$ctrl.getNoteId()}}_progress\\\" class=\\\"progress\\\" ng-if=\\\"$ctrl.isRunning() === true\\\">\\n        <div class=\\\"progress-bar\\\" role=\\\"progressbar\\\"\\n             ng-style=\\\"$ctrl.showPercentProgressBar() ? { 'width': $ctrl.getProgress() } : { 'width': '100%' }\\\"\\n             ng-class=\\\"$ctrl.showPercentProgressBar() ? '' : 'progress-bar-striped active'\\\">\\n        </div>\\n      </div>\\n    </div>\\n    <!-- job progress bar: end -->\\n  </div>\\n\\n  <div>\\n    <span ng-repeat=\\\"paragraph in $ctrl.getParagraphs()\\\">\\n      <a style=\\\"text-decoration: none !important;\\\"\\n         ng-href=\\\"#/notebook/{{$ctrl.getNoteId()}}?paragraph={{paragraph.id}}\\\">\\n        <i ng-style=\\\"{'color': $ctrl.getJobColorByStatus(paragraph.status)}\\\"\\n           ng-class=\\\"$ctrl.getJobIconByStatus(paragraph.status)\\\"\\n           tooltip-placement=\\\"top-left\\\"\\n           uib-tooltip=\\\"{{paragraph.name}} is {{paragraph.status}}\\\">\\n        </i>\\n      </a>\\n    </span>\\n  </div>\\n</div>\\n\\n\"","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function JobManagerFilter() {\n  function filterContext(jobs, filterConfig) {\n    let interpreter = filterConfig.interpreterFilterValue;\n    let noteName = filterConfig.noteNameFilterValue;\n    let isSortByAsc = filterConfig.isSortByAsc;\n    let filteredJobs = jobs;\n\n    if (typeof interpreter === 'undefined') {\n      filteredJobs = filteredJobs.filter((jobItem) => {\n        return typeof jobItem.interpreter === 'undefined';\n      });\n    } else if (interpreter !== '*') {\n      filteredJobs = filteredJobs.filter((j) => j.interpreter === interpreter);\n    }\n\n    // filter by note name\n    if (noteName !== '') {\n      filteredJobs = filteredJobs.filter((jobItem) => {\n        let lowerFilterValue = noteName.toLocaleLowerCase();\n        let lowerNotebookName = jobItem.noteName.toLocaleLowerCase();\n        return lowerNotebookName.match(new RegExp('.*' + lowerFilterValue + '.*'));\n      });\n    }\n\n    // sort by name\n    filteredJobs = filteredJobs.sort((jobItem) => {\n      return jobItem.noteName.toLowerCase();\n    });\n\n    // sort by timestamp\n    filteredJobs = filteredJobs.sort((x, y) => {\n      if (isSortByAsc) {\n        return x.unixTimeLastRun - y.unixTimeLastRun;\n      } else {\n        return y.unixTimeLastRun - x.unixTimeLastRun;\n      }\n    });\n\n    return filteredJobs;\n  }\n  return filterContext;\n}\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class JobManagerService {\n  constructor($http, $rootScope, baseUrlSrv, websocketMsgSrv) {\n    'ngInject';\n\n    this.$http = $http;\n    this.$rootScope = $rootScope;\n    this.BaseUrlService = baseUrlSrv;\n    this.WebsocketMessageService = websocketMsgSrv;\n  }\n\n  sendStopJobRequest(noteId) {\n    const apiURL = this.BaseUrlService.getRestApiBase() + `/notebook/job/${noteId}`;\n    return this.$http({method: 'DELETE', url: apiURL});\n  }\n\n  sendRunJobRequest(noteId) {\n    const apiURL = this.BaseUrlService.getRestApiBase() + `/notebook/job/${noteId}`;\n    return this.$http({method: 'POST', url: apiURL});\n  }\n\n  getJobs() {\n    this.WebsocketMessageService.getJobs();\n  }\n\n  disconnect() {\n    this.WebsocketMessageService.disconnectJobEvent();\n  }\n\n  subscribeSetJobs(controllerScope, receiveCallback) {\n    const event = 'jobmanager:set-jobs';\n    console.log(`(Event) Subscribed: ${event}`);\n    const unsubscribeHandler = this.$rootScope.$on(event, receiveCallback);\n\n    controllerScope.$on('$destroy', () => {\n      console.log(`(Event) Unsubscribed: ${event}`);\n      unsubscribeHandler();\n    });\n  }\n\n  subscribeUpdateJobs(controllerScope, receiveCallback) {\n    const event = 'jobmanager:update-jobs';\n    console.log(`(Event) Subscribed: ${event}`);\n    const unsubscribeHandler = this.$rootScope.$on(event, receiveCallback);\n\n    controllerScope.$on('$destroy', () => {\n      console.log(`(Event) Unsubscribed: ${event}`);\n      unsubscribeHandler();\n    });\n  }\n}\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {getNodeColorByStatus, getNodeIconByStatus} from './node-status';\n\nangular.module('zeppelinWebApp').controller('ClusterCtrl', ClusterController);\n\nconst NodeDateSorter = {\n  Domain_ASC: 'Domain ASC',\n  Domain_DSC: 'Domain DSC',\n};\n\nfunction ClusterController($scope, $rootScope, $http, baseUrlSrv, ngToast, websocketMsgSrv) {\n  'ngInject';\n\n  $scope.isFilterLoaded = false;\n  $scope.nodes = [];\n  $scope.sorter = {\n    availableDateSorter: Object.keys(NodeDateSorter).map((key) => {\n      return NodeDateSorter[key];\n    }),\n    currentDateSorter: NodeDateSorter.Domain_ASC,\n  };\n  $scope.filteredNodes = $scope.nodes;\n  $scope.filterConfig = {\n    isRunningAlwaysTop: true,\n    nodeNameFilterValue: '',\n    interpreterFilterValue: '*',\n    isSortByAsc: true,\n  };\n\n  $scope.pagination = {\n    currentPage: 1,\n    itemsPerPage: 10,\n    maxPageCount: 5,\n  };\n\n  ngToast.dismiss();\n  init();\n\n  /** functions */\n\n  $scope.setNodeDateSorter = function(dateSorter) {\n    $scope.sorter.currentDateSorter = dateSorter;\n  };\n\n  $scope.getNodesInCurrentPage = function(nodes) {\n    const cp = $scope.pagination.currentPage;\n    const itp = $scope.pagination.itemsPerPage;\n    return nodes.slice((cp - 1) * itp, (cp * itp));\n  };\n\n  $scope.getNodeIconByStatus = getNodeIconByStatus;\n\n  $scope.getNodeColorByStatus = getNodeColorByStatus;\n\n  $scope.filterNodes = function(nodes, filterConfig) {\n    return nodes;\n  };\n\n  function init() {\n    $http.get(baseUrlSrv.getRestApiBase() + '/cluster/nodes')\n      .success(function(data, status, headers, config) {\n        $scope.nodes = data.body;\n        $scope.filteredNodes = $scope.nodes;\n        console.log(JSON.stringify($scope.nodes));\n      })\n      .error(function(data, status, headers, config) {\n        if (status === 401) {\n          ngToast.danger({\n            content: 'You don\\'t have permission on this page',\n            verticalPosition: 'bottom',\n            timeout: '3000',\n          });\n          setTimeout(function() {\n            window.location = baseUrlSrv.getBase();\n          }, 3000);\n        }\n        console.log('Error %o %o', status, data.message);\n      });\n    $scope.isFilterLoaded = true;\n  }\n}\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const NodeStatus = {\n  READY: 'READY',\n  FINISHED: 'FINISHED',\n  ABORT: 'ABORT',\n  ERROR: 'ERROR',\n  PENDING: 'PENDING',\n  RUNNING: 'RUNNING',\n};\n\nexport function getNodeIconByStatus(task) {\n  let i = parseInt(task);\n  if (i % 6 === 0) {\n    return 'fa fa-circle-o';\n  } else if (i % 6 === 1) {\n    return 'fa fa-circle';\n  } else if (i % 6 === 2) {\n    return 'fa fa-circle';\n  } else if (i % 6 === 3) {\n    return 'fa fa-circle';\n  } else if (i % 6 === 4) {\n    return 'fa fa-circle';\n  } else if (i % 6 === 5) {\n    return 'fa fa-spinner';\n  }\n}\n\nexport function getNodeColorByStatus(task) {\n  let i = parseInt(task);\n  if (i % 6 === 0) {\n    return 'green';\n  } else if (i % 6 === 1) {\n    return 'green';\n  } else if (i % 6 === 2) {\n    return 'orange';\n  } else if (i % 6 === 3) {\n    return 'red';\n  } else if (i % 6 === 4) {\n    return 'gray';\n  } else if (i % 6 === 5) {\n    return 'blue';\n  }\n}\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nangular.module('zeppelinWebApp').controller('NodeCtrl', NodeCtrl);\n\nfunction NodeCtrl($scope, $routeParams, $http, baseUrlSrv, ngToast) {\n  'ngInject';\n  $scope.nodeName = $routeParams.nodeName;\n  $scope.intpName = $routeParams.intpName;\n  $scope.intpProcesses = [];\n  $scope.pagination = {\n    currentPage: 1,\n    itemsPerPage: 10,\n    maxPageCount: 5,\n  };\n  if ($scope.intpName !== null && $scope.intpName !== '' && $scope.intpName !== 'all') {\n    $scope.searchNode = $scope.intpName;\n  } else {\n    $scope.searchNode = '';\n  }\n  $scope.filteredProcesses=$scope.intpProcesses;\n  $scope.nodeFilter = function(intpProcess) {\n    return intpProcess.properties.INTP_PROCESS_NAME.indexOf($scope.searchNode) !== -1;\n  };\n  $scope._ = _;\n  ngToast.dismiss();\n\n  $scope.getProgressInCurrentPage = function(pros) {\n    $scope.filteredProcesses = pros;\n    const cp = $scope.pagination.currentPage;\n    const itp = $scope.pagination.itemsPerPage;\n    return pros.slice((cp - 1) * itp, (cp * itp));\n  };\n\n  let init = function() {\n    $http.get(baseUrlSrv.getRestApiBase() + '/cluster/node/' + $scope.nodeName + '/' + $scope.intpName)\n      .success(function(data, status, headers, config) {\n        $scope.intpProcesses = data.body;\n        console.log('scope.intpProcesses.length='+$scope.intpProcesses.length);\n        console.log('scope.intpProcesses='+$scope.intpProcesses);\n        console.log(JSON.stringify($scope.intpProcesses));\n      })\n      .error(function(data, status, headers, config) {\n        if (status === 401) {\n          ngToast.danger({\n            content: 'You don\\'t have permission on this page',\n            verticalPosition: 'bottom',\n            timeout: '3000',\n          });\n          setTimeout(function() {\n            window.location = baseUrlSrv.getBase();\n          }, 3000);\n        }\n        console.log('Error %o %o', status, data.message);\n      });\n  };\n\n  init();\n}\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {ParagraphStatus} from '../notebook/paragraph/paragraph.status';\n\nangular.module('zeppelinWebApp').controller('InterpreterCtrl', InterpreterCtrl);\n\nfunction InterpreterCtrl($rootScope, $scope, $http, baseUrlSrv, ngToast, $timeout, $route) {\n  'ngInject';\n\n  let interpreterSettingsTmp = [];\n  $scope.interpreterSettings = [];\n  $scope.availableInterpreters = {};\n  $scope.showAddNewSetting = false;\n  $scope.showRepositoryInfo = false;\n  $scope.searchInterpreter = '';\n  $scope._ = _;\n  $scope.interpreterPropertyTypes = [];\n  ngToast.dismiss();\n\n  $scope.openPermissions = function() {\n    $scope.showInterpreterAuth = true;\n  };\n\n  $scope.closePermissions = function() {\n    $scope.showInterpreterAuth = false;\n  };\n\n  let getSelectJson = function() {\n    let selectJson = {\n      tags: true,\n      minimumInputLength: 3,\n      multiple: true,\n      tokenSeparators: [',', ' '],\n      ajax: {\n        url: function(params) {\n          if (!params.term) {\n            return false;\n          }\n          return baseUrlSrv.getRestApiBase() + '/security/userlist/' + params.term;\n        },\n        delay: 250,\n        processResults: function(data, params) {\n          let results = [];\n\n          if (data.body.users.length !== 0) {\n            let users = [];\n            for (let len = 0; len < data.body.users.length; len++) {\n              users.push({\n                'id': data.body.users[len],\n                'text': data.body.users[len],\n              });\n            }\n            results.push({\n              'text': 'Users :',\n              'children': users,\n            });\n          }\n          if (data.body.roles.length !== 0) {\n            let roles = [];\n            for (let len = 0; len < data.body.roles.length; len++) {\n              roles.push({\n                'id': data.body.roles[len],\n                'text': data.body.roles[len],\n              });\n            }\n            results.push({\n              'text': 'Roles :',\n              'children': roles,\n            });\n          }\n          return {\n            results: results,\n            pagination: {\n              more: false,\n            },\n          };\n        },\n        cache: false,\n      },\n    };\n    return selectJson;\n  };\n\n  $scope.togglePermissions = function(intpName) {\n    angular.element('#' + intpName + 'Owners').select2(getSelectJson());\n    if ($scope.showInterpreterAuth) {\n      $scope.closePermissions();\n    } else {\n      $scope.openPermissions();\n    }\n  };\n\n  $scope.$on('ngRenderFinished', function(event, data) {\n    for (let setting = 0; setting < $scope.interpreterSettings.length; setting++) {\n      angular.element('#' + $scope.interpreterSettings[setting].name + 'Owners').select2(getSelectJson());\n    }\n  });\n\n  let getInterpreterSettings = function() {\n    $http.get(baseUrlSrv.getRestApiBase() + '/interpreter/setting')\n      .then(function(res) {\n        $scope.interpreterSettings = res.data.body;\n        checkDownloadingDependencies();\n      }).catch(function(res) {\n        if (res.status === 401) {\n          ngToast.danger({\n            content: 'You don\\'t have permission on this page',\n            verticalPosition: 'bottom',\n            timeout: '3000',\n          });\n          setTimeout(function() {\n            window.location = baseUrlSrv.getBase();\n          }, 3000);\n        }\n        console.log('Error %o %o', res.status, res.data ? res.data.message : '');\n      });\n  };\n\n  const checkDownloadingDependencies = function() {\n    let isDownloading = false;\n    for (let index = 0; index < $scope.interpreterSettings.length; index++) {\n      let setting = $scope.interpreterSettings[index];\n      if (setting.status === 'DOWNLOADING_DEPENDENCIES') {\n        isDownloading = true;\n      }\n\n      if (setting.status === ParagraphStatus.ERROR || setting.errorReason) {\n        ngToast.danger({content: 'Error setting properties for interpreter \\'' +\n        setting.group + '.' + setting.name + '\\': ' + setting.errorReason,\n          verticalPosition: 'top',\n          dismissOnTimeout: false,\n        });\n      }\n    }\n\n    if (isDownloading) {\n      $timeout(function() {\n        if ($route.current.$$route.originalPath === '/interpreter') {\n          getInterpreterSettings();\n        }\n      }, 2000);\n    }\n  };\n\n  let getAvailableInterpreters = function() {\n    $http.get(baseUrlSrv.getRestApiBase() + '/interpreter').then(function(res) {\n      $scope.availableInterpreters = res.data.body;\n    }).catch(function(res) {\n      console.log('Error %o %o', res.status, res.data ? res.data.message : '');\n    });\n  };\n\n  let getAvailableInterpreterPropertyWidgets = function() {\n    $http.get(baseUrlSrv.getRestApiBase() + '/interpreter/property/types')\n      .then(function(res) {\n        $scope.interpreterPropertyTypes = res.data.body;\n      }).catch(function(res) {\n        console.log('Error %o %o', res.status, res.data ? res.data.message : '');\n      });\n  };\n\n  let emptyNewProperty = function(object) {\n    angular.extend(object, {propertyValue: '', propertyKey: '', propertyType: $scope.interpreterPropertyTypes[0]});\n  };\n\n  let emptyNewDependency = function(object) {\n    angular.extend(object, {depArtifact: '', depExclude: ''});\n  };\n\n  let removeTMPSettings = function(index) {\n    interpreterSettingsTmp.splice(index, 1);\n  };\n\n  $scope.copyOriginInterpreterSettingProperties = function(settingId) {\n    let index = _.findIndex($scope.interpreterSettings, {'id': settingId});\n    interpreterSettingsTmp[index] = angular.copy($scope.interpreterSettings[index]);\n  };\n\n  $scope.setPerNoteOption = function(settingId, sessionOption) {\n    let option;\n    if (settingId === undefined) {\n      option = $scope.newInterpreterSetting.option;\n    } else {\n      let index = _.findIndex($scope.interpreterSettings, {'id': settingId});\n      let setting = $scope.interpreterSettings[index];\n      option = setting.option;\n    }\n\n    if (sessionOption === 'isolated') {\n      option.perNote = sessionOption;\n      option.session = false;\n      option.process = true;\n    } else if (sessionOption === 'scoped') {\n      option.perNote = sessionOption;\n      option.session = true;\n      option.process = false;\n    } else {\n      option.perNote = 'shared';\n      option.session = false;\n      option.process = false;\n    }\n  };\n\n  $scope.defaultValueByType = function(setting) {\n    if (setting.propertyType === 'checkbox') {\n      setting.propertyValue = false;\n      return;\n    }\n\n    setting.propertyValue = '';\n  };\n\n  $scope.setPerUserOption = function(settingId, sessionOption) {\n    let option;\n    if (settingId === undefined) {\n      option = $scope.newInterpreterSetting.option;\n    } else {\n      let index = _.findIndex($scope.interpreterSettings, {'id': settingId});\n      let setting = $scope.interpreterSettings[index];\n      option = setting.option;\n    }\n\n    if (sessionOption === 'isolated') {\n      option.perUser = sessionOption;\n      option.session = false;\n      option.process = true;\n    } else if (sessionOption === 'scoped') {\n      option.perUser = sessionOption;\n      option.session = true;\n      option.process = false;\n    } else {\n      option.perUser = 'shared';\n      option.session = false;\n      option.process = false;\n    }\n  };\n\n  $scope.getPerNoteOption = function(settingId) {\n    let option;\n    if (settingId === undefined) {\n      option = $scope.newInterpreterSetting.option;\n    } else {\n      let index = _.findIndex($scope.interpreterSettings, {'id': settingId});\n      let setting = $scope.interpreterSettings[index];\n      option = setting.option;\n    }\n\n    if (option.perNote === 'scoped') {\n      return 'scoped';\n    } else if (option.perNote === 'isolated') {\n      return 'isolated';\n    } else {\n      return 'shared';\n    }\n  };\n\n  $scope.getPerUserOption = function(settingId) {\n    let option;\n    if (settingId === undefined) {\n      option = $scope.newInterpreterSetting.option;\n    } else {\n      let index = _.findIndex($scope.interpreterSettings, {'id': settingId});\n      let setting = $scope.interpreterSettings[index];\n      option = setting.option;\n    }\n\n    if (option.perUser === 'scoped') {\n      return 'scoped';\n    } else if (option.perUser === 'isolated') {\n      return 'isolated';\n    } else {\n      return 'shared';\n    }\n  };\n\n  $scope.getInterpreterRunningOption = function(settingId) {\n    let sharedModeName = 'shared';\n\n    let globallyModeName = 'Globally';\n    let perNoteModeName = 'Per Note';\n    let perUserModeName = 'Per User';\n\n    let option;\n    if (settingId === undefined) {\n      option = $scope.newInterpreterSetting.option;\n    } else {\n      let index = _.findIndex($scope.interpreterSettings, {'id': settingId});\n      let setting = $scope.interpreterSettings[index];\n      option = setting.option;\n    }\n\n    let perNote = option.perNote;\n    let perUser = option.perUser;\n\n    // Globally == shared_perNote + shared_perUser\n    if (perNote === sharedModeName && perUser === sharedModeName) {\n      return globallyModeName;\n    }\n\n    if ($rootScope.ticket.ticket === 'anonymous' && $rootScope.ticket.roles === '[]') {\n      if (perNote !== undefined && typeof perNote === 'string' && perNote !== '') {\n        return perNoteModeName;\n      }\n    } else if ($rootScope.ticket.ticket !== 'anonymous') {\n      if (perNote !== undefined && typeof perNote === 'string' && perNote !== '') {\n        if (perUser !== undefined && typeof perUser === 'string' && perUser !== '') {\n          return perUserModeName;\n        }\n        return perNoteModeName;\n      }\n    }\n\n    option.perNote = sharedModeName;\n    option.perUser = sharedModeName;\n    return globallyModeName;\n  };\n\n  $scope.setInterpreterRunningOption = function(settingId, isPerNoteMode, isPerUserMode) {\n    let option;\n    if (settingId === undefined) {\n      option = $scope.newInterpreterSetting.option;\n    } else {\n      let index = _.findIndex($scope.interpreterSettings, {'id': settingId});\n      let setting = $scope.interpreterSettings[index];\n      option = setting.option;\n    }\n    option.perNote = isPerNoteMode;\n    option.perUser = isPerUserMode;\n  };\n\n  $scope.updateInterpreterSetting = function(form, settingId) {\n    const thisConfirm = BootstrapDialog.confirm({\n      closable: false,\n      closeByBackdrop: false,\n      closeByKeyboard: false,\n      title: '',\n      message: 'Do you want to update this interpreter and restart with new settings?',\n      callback: function(result) {\n        if (result) {\n          let index = _.findIndex($scope.interpreterSettings, {'id': settingId});\n          let setting = $scope.interpreterSettings[index];\n          if (setting.propertyKey !== '' || setting.propertyKey) {\n            $scope.addNewInterpreterProperty(settingId);\n          }\n          if (setting.depArtifact !== '' || setting.depArtifact) {\n            $scope.addNewInterpreterDependency(settingId);\n          }\n          // add missing field of option\n          if (!setting.option) {\n            setting.option = {};\n          }\n          if (setting.option.isExistingProcess === undefined) {\n            setting.option.isExistingProcess = false;\n          }\n          if (setting.option.setPermission === undefined) {\n            setting.option.setPermission = false;\n          }\n          if (setting.option.isUserImpersonate === undefined) {\n            setting.option.isUserImpersonate = false;\n          }\n          if (!($scope.getInterpreterRunningOption(settingId) === 'Per User' &&\n            $scope.getPerUserOption(settingId) === 'isolated')) {\n            setting.option.isUserImpersonate = false;\n          }\n          if (setting.option.remote === undefined) {\n            // remote always true for now\n            setting.option.remote = true;\n          }\n          setting.option.owners = angular.element('#' + setting.name + 'Owners').val();\n          for (let i = 0; i < setting.option.owners.length; i++) {\n            setting.option.owners[i] = setting.option.owners[i].trim();\n          }\n\n          let request = {\n            option: angular.copy(setting.option),\n            properties: angular.copy(setting.properties),\n            dependencies: angular.copy(setting.dependencies),\n          };\n\n          thisConfirm.$modalFooter.find('button').addClass('disabled');\n          thisConfirm.$modalFooter.find('button:contains(\"OK\")')\n            .html('<i class=\"fa fa-circle-o-notch fa-spin\"></i> Saving Setting');\n\n          $http.put(baseUrlSrv.getRestApiBase() + '/interpreter/setting/' + settingId, request)\n            .then(function(res) {\n              $scope.interpreterSettings[index] = res.data.body;\n              removeTMPSettings(index);\n              checkDownloadingDependencies();\n              thisConfirm.close();\n            })\n            .catch(function(res) {\n              const message = res.data ? res.data.message : 'Could not connect to server.';\n              console.log('Error %o %o', res.status, message);\n              ngToast.danger({content: message, verticalPosition: 'bottom'});\n              form.$show();\n              thisConfirm.close();\n            });\n          return false;\n        } else {\n          form.$show();\n        }\n      },\n    });\n  };\n\n  $scope.resetInterpreterSetting = function(settingId) {\n    let index = _.findIndex($scope.interpreterSettings, {'id': settingId});\n\n    // Set the old settings back\n    $scope.interpreterSettings[index] = angular.copy(interpreterSettingsTmp[index]);\n    removeTMPSettings(index);\n  };\n\n  $scope.removeInterpreterSetting = function(settingId) {\n    BootstrapDialog.confirm({\n      closable: true,\n      title: '',\n      message: 'Do you want to delete this interpreter setting?',\n      callback: function(result) {\n        if (result) {\n          $http.delete(baseUrlSrv.getRestApiBase() + '/interpreter/setting/' + settingId)\n            .then(function(res) {\n              let index = _.findIndex($scope.interpreterSettings, {'id': settingId});\n              $scope.interpreterSettings.splice(index, 1);\n            }).catch(function(res) {\n              console.log('Error %o %o', res.status, res.data ? res.data.message : '');\n            });\n        }\n      },\n    });\n  };\n\n  $scope.newInterpreterGroupChange = function() {\n    let el = _.pluck(_.filter($scope.availableInterpreters, {'name': $scope.newInterpreterSetting.group}),\n      'properties');\n    let properties = {};\n    for (let i = 0; i < el.length; i++) {\n      let intpInfo = el[i];\n      for (let key in intpInfo) {\n        if (intpInfo.hasOwnProperty(key)) {\n          properties[key] = {\n            value: intpInfo[key].defaultValue,\n            description: intpInfo[key].description,\n            type: intpInfo[key].type,\n          };\n        }\n      }\n    }\n    $scope.newInterpreterSetting.properties = properties;\n  };\n\n  $scope.restartInterpreterSetting = function(settingId) {\n    BootstrapDialog.confirm({\n      closable: true,\n      title: '',\n      message: 'Do you want to restart this interpreter?',\n      callback: function(result) {\n        if (result) {\n          $http.put(baseUrlSrv.getRestApiBase() + '/interpreter/setting/restart/' + settingId)\n            .then(function(res) {\n              let index = _.findIndex($scope.interpreterSettings, {'id': settingId});\n              $scope.interpreterSettings[index] = res.data.body;\n              ngToast.info('Interpreter stopped. Will be lazily started on next run.');\n            }).catch(function(res) {\n              let errorMsg = (res.data !== null) ? res.data.message : 'Could not connect to server.';\n              console.log('Error %o %o', res.status, errorMsg);\n              ngToast.danger(errorMsg);\n            });\n        }\n      },\n    });\n  };\n\n  $scope.addNewInterpreterSetting = function() {\n    // user input validation on interpreter creation\n    if (!$scope.newInterpreterSetting.name ||\n        !$scope.newInterpreterSetting.name.trim() ||\n        !$scope.newInterpreterSetting.name.match(/^[-_a-zA-Z0-9]+$/g)) {\n      BootstrapDialog.alert({\n        closable: true,\n        title: 'Add interpreter',\n        message: 'Interpreter name shouldn\\'t be empty, and can consist only of: -_a-zA-Z0-9',\n      });\n      return;\n    }\n\n    if (!$scope.newInterpreterSetting.group) {\n      BootstrapDialog.alert({\n        closable: true,\n        title: 'Add interpreter',\n        message: 'Please choose an interpreter group',\n      });\n      return;\n    }\n\n    if (_.findIndex($scope.interpreterSettings, {'name': $scope.newInterpreterSetting.name}) >= 0) {\n      BootstrapDialog.alert({\n        closable: true,\n        title: 'Add interpreter',\n        message: 'Name ' + _.escape($scope.newInterpreterSetting.name) + ' already exists',\n      });\n      return;\n    }\n\n    let newSetting = $scope.newInterpreterSetting;\n    if (newSetting.propertyKey !== '' || newSetting.propertyKey) {\n      $scope.addNewInterpreterProperty();\n    }\n    if (newSetting.depArtifact !== '' || newSetting.depArtifact) {\n      $scope.addNewInterpreterDependency();\n    }\n    if (newSetting.option.setPermission === undefined) {\n      newSetting.option.setPermission = false;\n    }\n    newSetting.option.owners = angular.element('#newInterpreterOwners').val();\n\n    let request = angular.copy($scope.newInterpreterSetting);\n\n    // Change properties to proper request format\n    let newProperties = {};\n\n    for (let p in newSetting.properties) {\n      if (newSetting.properties.hasOwnProperty(p)) {\n        newProperties[p] = {\n          value: newSetting.properties[p].value,\n          type: newSetting.properties[p].type,\n          description: newSetting.properties[p].description,\n          name: p,\n        };\n      }\n    }\n\n    request.properties = newProperties;\n\n    $http.post(baseUrlSrv.getRestApiBase() + '/interpreter/setting', request)\n      .then(function(res) {\n        $scope.resetNewInterpreterSetting();\n        getInterpreterSettings();\n        $scope.showAddNewSetting = false;\n        checkDownloadingDependencies();\n      }).catch(function(res) {\n        const errorMsg = res.data ? res.data.message : 'Could not connect to server.';\n        console.log('Error %o %o', res.status, errorMsg);\n        ngToast.danger({content: errorMsg, verticalPosition: 'bottom'});\n      });\n  };\n\n  $scope.cancelInterpreterSetting = function() {\n    $scope.showAddNewSetting = false;\n    $scope.resetNewInterpreterSetting();\n  };\n\n  $scope.resetNewInterpreterSetting = function() {\n    $scope.newInterpreterSetting = {\n      name: undefined,\n      group: undefined,\n      properties: {},\n      dependencies: [],\n      option: {\n        remote: true,\n        isExistingProcess: false,\n        setPermission: false,\n        session: false,\n        process: false,\n\n      },\n    };\n    emptyNewProperty($scope.newInterpreterSetting);\n  };\n\n  $scope.removeInterpreterProperty = function(key, settingId) {\n    if (settingId === undefined) {\n      delete $scope.newInterpreterSetting.properties[key];\n    } else {\n      let index = _.findIndex($scope.interpreterSettings, {'id': settingId});\n      delete $scope.interpreterSettings[index].properties[key];\n    }\n  };\n\n  $scope.removeInterpreterDependency = function(artifact, settingId) {\n    if (settingId === undefined) {\n      $scope.newInterpreterSetting.dependencies = _.reject($scope.newInterpreterSetting.dependencies,\n        function(el) {\n          return el.groupArtifactVersion === artifact;\n        });\n    } else {\n      let index = _.findIndex($scope.interpreterSettings, {'id': settingId});\n      $scope.interpreterSettings[index].dependencies = _.reject($scope.interpreterSettings[index].dependencies,\n        function(el) {\n          return el.groupArtifactVersion === artifact;\n        });\n    }\n  };\n\n  $scope.addNewInterpreterProperty = function(settingId) {\n    if (settingId === undefined) {\n      // Add new property from create form\n      if (!$scope.newInterpreterSetting.propertyKey || $scope.newInterpreterSetting.propertyKey === '') {\n        return;\n      }\n      $scope.newInterpreterSetting.properties[$scope.newInterpreterSetting.propertyKey] = {\n        value: $scope.newInterpreterSetting.propertyValue,\n        type: $scope.newInterpreterSetting.propertyType,\n      };\n      emptyNewProperty($scope.newInterpreterSetting);\n    } else {\n      // Add new property from edit form\n      let index = _.findIndex($scope.interpreterSettings, {'id': settingId});\n      let setting = $scope.interpreterSettings[index];\n\n      if (!setting.propertyKey || setting.propertyKey === '') {\n        return;\n      }\n\n      setting.properties[setting.propertyKey] = {name: setting.propertyKey, value: setting.propertyValue,\n        type: setting.propertyType, description: setting.description};\n\n      emptyNewProperty(setting);\n    }\n  };\n\n  $scope.addNewInterpreterDependency = function(settingId) {\n    if (settingId === undefined) {\n      // Add new dependency from create form\n      if (!$scope.newInterpreterSetting.depArtifact || $scope.newInterpreterSetting.depArtifact === '') {\n        return;\n      }\n\n      // overwrite if artifact already exists\n      let newSetting = $scope.newInterpreterSetting;\n      for (let d in newSetting.dependencies) {\n        if (newSetting.dependencies[d].groupArtifactVersion === newSetting.depArtifact) {\n          newSetting.dependencies[d] = {\n            'groupArtifactVersion': newSetting.depArtifact,\n            'exclusions': newSetting.depExclude,\n          };\n          newSetting.dependencies.splice(d, 1);\n        }\n      }\n\n      newSetting.dependencies.push({\n        'groupArtifactVersion': newSetting.depArtifact,\n        'exclusions': (newSetting.depExclude === '') ? [] : newSetting.depExclude,\n      });\n      emptyNewDependency(newSetting);\n    } else {\n      // Add new dependency from edit form\n      let index = _.findIndex($scope.interpreterSettings, {'id': settingId});\n      let setting = $scope.interpreterSettings[index];\n      if (!setting.depArtifact || setting.depArtifact === '') {\n        return;\n      }\n\n      // overwrite if artifact already exists\n      for (let dep in setting.dependencies) {\n        if (setting.dependencies[dep].groupArtifactVersion === setting.depArtifact) {\n          setting.dependencies[dep] = {\n            'groupArtifactVersion': setting.depArtifact,\n            'exclusions': setting.depExclude,\n          };\n          setting.dependencies.splice(dep, 1);\n        }\n      }\n\n      setting.dependencies.push({\n        'groupArtifactVersion': setting.depArtifact,\n        'exclusions': (setting.depExclude === '') ? [] : setting.depExclude,\n      });\n      emptyNewDependency(setting);\n    }\n  };\n\n  $scope.resetNewRepositorySetting = function() {\n    $scope.newRepoSetting = {\n      id: '',\n      url: '',\n      snapshot: false,\n      username: '',\n      password: '',\n      proxyProtocol: 'HTTP',\n      proxyHost: '',\n      proxyPort: null,\n      proxyLogin: '',\n      proxyPassword: '',\n    };\n  };\n\n  let getRepositories = function() {\n    $http.get(baseUrlSrv.getRestApiBase() + '/interpreter/repository')\n      .success(function(data, status, headers, config) {\n        $scope.repositories = data.body;\n      }).error(function(data, status, headers, config) {\n        console.log('Error %o %o', status, data.message);\n      });\n  };\n\n  $scope.addNewRepository = function() {\n    let request = angular.copy($scope.newRepoSetting);\n\n    $http.post(baseUrlSrv.getRestApiBase() + '/interpreter/repository', request)\n      .then(function(res) {\n        getRepositories();\n        $scope.resetNewRepositorySetting();\n        angular.element('#repoModal').modal('hide');\n      }).catch(function(res) {\n        console.log('Error %o %o', res.headers, res.config);\n      });\n  };\n\n  $scope.removeRepository = function(repoId) {\n    BootstrapDialog.confirm({\n      closable: true,\n      title: '',\n      message: 'Do you want to delete this repository?',\n      callback: function(result) {\n        if (result) {\n          $http.delete(baseUrlSrv.getRestApiBase() + '/interpreter/repository/' + repoId)\n            .then(function(res) {\n              let index = _.findIndex($scope.repositories, {'id': repoId});\n              $scope.repositories.splice(index, 1);\n            }).catch(function(res) {\n              console.log('Error %o %o', res.status, res.data ? res.data.message : '');\n            });\n        }\n      },\n    });\n  };\n\n  $scope.isDefaultRepository = function(repoId) {\n    if (repoId === 'central' || repoId === 'local') {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  $scope.showErrorMessage = function(setting) {\n    BootstrapDialog.show({\n      title: 'Error downloading dependencies',\n      message: _.escape(setting.errorReason),\n    });\n  };\n\n  let init = function() {\n    getAvailableInterpreterPropertyWidgets();\n\n    $scope.resetNewInterpreterSetting();\n    $scope.resetNewRepositorySetting();\n\n    getInterpreterSettings();\n    getAvailableInterpreters();\n    getRepositories();\n  };\n\n  $scope.getInterpreterBindingModeDocsLink = function() {\n    const currentVersion = $rootScope.zeppelinVersion;\n    return `https://zeppelin.apache.org/docs/${currentVersion}/usage/interpreter/interpreter_binding_mode.html`;\n  };\n\n  init();\n}\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nangular.module('zeppelinWebApp').filter('sortByKey', sortByKey);\n\nfunction sortByKey() {\n  return function(properties) {\n    let sortedKeys = properties ? Object.keys(properties) : [];\n    return sortedKeys.sort();\n  };\n}\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nangular.module('zeppelinWebApp').directive('interpreterItem', InterpreterItemDirective);\n\nfunction InterpreterItemDirective($timeout) {\n  'ngInject';\n\n  return {\n    restrict: 'A',\n    link: function(scope, element, attr) {\n      if (scope.$last === true) {\n        $timeout(function() {\n          let id = 'ngRenderFinished';\n          scope.$emit(id);\n        });\n      }\n    },\n  };\n}\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nangular.module('zeppelinWebApp').directive('numberWidget', InterpreterNumberDirective);\n\nfunction InterpreterNumberDirective() {\n  return {\n    require: 'ngModel',\n    link: function(scope, element, attrs, modelCtrl) {\n      modelCtrl.$parsers.push(function(inputValue) {\n        let transformedInput = inputValue ? inputValue.replace(/[^\\d.-]/g, '') : null;\n        if (transformedInput !== inputValue) {\n          modelCtrl.$setViewValue(transformedInput);\n          modelCtrl.$render();\n        }\n        return transformedInput;\n      });\n    },\n  };\n}\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nangular.module('zeppelinWebApp').controller('CredentialCtrl', CredentialController);\n\nfunction CredentialController($scope, $rootScope, $http, baseUrlSrv, ngToast) {\n  'ngInject';\n\n  ngToast.dismiss();\n\n  $scope.credentialInfo = [];\n  $scope.showAddNewCredentialInfo = false;\n  $scope.availableInterpreters = [];\n\n  $scope.entity = '';\n  $scope.password = '';\n  $scope.username = '';\n\n  $scope.hasCredential = () => {\n    return Array.isArray($scope.credentialInfo) && $scope.credentialInfo.length;\n  };\n\n  let getCredentialInfo = function() {\n    $http.get(baseUrlSrv.getRestApiBase() + '/credential')\n      .success(function(data, status, headers, config) {\n        $scope.credentialInfo.length = 0; // keep the ref while cleaning\n        const returnedCredentials = data.body.userCredentials;\n\n        for (let key in returnedCredentials) {\n          if (returnedCredentials.hasOwnProperty(key)) {\n            const value = returnedCredentials[key];\n            $scope.credentialInfo.push({\n              entity: key,\n              password: value.password,\n              username: value.username,\n            });\n          }\n        }\n\n        console.log('Success %o %o', status, $scope.credentialInfo);\n      })\n      .error(function(data, status, headers, config) {\n        if (status === 401) {\n          showToast('You do not have permission on this page', 'danger');\n          setTimeout(function() {\n            window.location = baseUrlSrv.getBase();\n          }, 3000);\n        }\n        console.log('Error %o %o', status, data.message);\n      });\n  };\n\n  $scope.isValidCredential = function() {\n    return $scope.entity.trim() !== '' && $scope.username.trim() !== '';\n  };\n\n  $scope.addNewCredentialInfo = function() {\n    if (!$scope.isValidCredential()) {\n      showToast('Username \\\\ Entity can not be empty.', 'danger');\n      return;\n    }\n\n    let newCredential = {\n      'entity': $scope.entity,\n      'username': $scope.username,\n      'password': $scope.password,\n    };\n\n    $http.put(baseUrlSrv.getRestApiBase() + '/credential', newCredential)\n      .success(function(data, status, headers, config) {\n        showToast('Successfully saved credentials.', 'success');\n        $scope.credentialInfo.push(newCredential);\n        resetCredentialInfo();\n        $scope.showAddNewCredentialInfo = false;\n        console.log('Success %o %o', status, data.message);\n      })\n      .error(function(data, status, headers, config) {\n        showToast('Error saving credentials', 'danger');\n        console.log('Error %o %o', status, data.message);\n      });\n  };\n\n  let getAvailableInterpreters = function() {\n    $http.get(baseUrlSrv.getRestApiBase() + '/interpreter/setting')\n      .success(function(data, status, headers, config) {\n        for (let setting = 0; setting < data.body.length; setting++) {\n          $scope.availableInterpreters.push(\n            data.body[setting].group + '.' + data.body[setting].name);\n        }\n        angular.element('#entityname').autocomplete({\n          source: $scope.availableInterpreters,\n          select: function(event, selected) {\n            $scope.entity = selected.item.value;\n            return false;\n          },\n        });\n      })\n      .error(function(data, status, headers, config) {\n        showToast(data.message, 'danger');\n        console.log('Error %o %o', status, data.message);\n      });\n  };\n\n  $scope.toggleAddNewCredentialInfo = function() {\n    if ($scope.showAddNewCredentialInfo) {\n      $scope.showAddNewCredentialInfo = false;\n    } else {\n      $scope.showAddNewCredentialInfo = true;\n    }\n  };\n\n  $scope.cancelCredentialInfo = function() {\n    $scope.showAddNewCredentialInfo = false;\n    resetCredentialInfo();\n  };\n\n  const resetCredentialInfo = function() {\n    $scope.entity = '';\n    $scope.username = '';\n    $scope.password = '';\n  };\n\n  $scope.copyOriginCredentialsInfo = function() {\n    showToast('Since entity is a unique key, you can edit only username & password', 'info');\n  };\n\n  $scope.updateCredentialInfo = function(form, data, entity) {\n    if (!data.username || !data.password) {\n      showToast('Username \\\\ Password can not be empty.', 'danger');\n      return false;\n    }\n\n    let credential = {\n      entity: entity,\n      username: data.username,\n      password: data.password,\n    };\n\n    $http.put(baseUrlSrv.getRestApiBase() + '/credential/', credential)\n      .success(function(data, status, headers, config) {\n        const index = $scope.credentialInfo.findIndex((elem) => elem.entity === entity);\n        $scope.credentialInfo[index] = credential;\n        return true;\n      })\n      .error(function(data, status, headers, config) {\n        showToast('We could not save the credential', 'danger');\n        console.log('Error %o %o', status, data.message);\n        form.$show();\n      });\n    return false;\n  };\n\n  $scope.removeCredentialInfo = function(entity) {\n    BootstrapDialog.confirm({\n      closable: false,\n      closeByBackdrop: false,\n      closeByKeyboard: false,\n      title: '',\n      message: 'Do you want to delete this credential information?',\n      callback: function(result) {\n        if (result) {\n          $http.delete(baseUrlSrv.getRestApiBase() + '/credential/' + entity)\n            .success(function(data, status, headers, config) {\n              const index = $scope.credentialInfo.findIndex((elem) => elem.entity === entity);\n              $scope.credentialInfo.splice(index, 1);\n              console.log('Success %o %o', status, data.message);\n            })\n            .error(function(data, status, headers, config) {\n              showToast(data.message, 'danger');\n              console.log('Error %o %o', status, data.message);\n            });\n        }\n      },\n    });\n  };\n\n  function showToast(message, type) {\n    const verticalPosition = 'bottom';\n    const timeout = '3000';\n\n    if (type === 'success') {\n      ngToast.success({content: message, verticalPosition: verticalPosition, timeout: timeout});\n    } else if (type === 'info') {\n      ngToast.info({content: message, verticalPosition: verticalPosition, timeout: timeout});\n    } else {\n      ngToast.danger({content: message, verticalPosition: verticalPosition, timeout: timeout});\n    }\n  }\n\n  $scope.getCredentialDocsLink = function() {\n    const currentVersion = $rootScope.zeppelinVersion;\n    const isVersionOver0Point7 = currentVersion && currentVersion.split('.')[1] > 7;\n    /*\n     * Add '/setup' to doc link on the version over 0.7.0\n     */\n    return `https://zeppelin.apache.org/docs/${currentVersion}${\n      isVersionOver0Point7 ? '/setup' : ''\n    }/security/datasource_authorization.html`;\n  };\n\n  let init = function() {\n    getAvailableInterpreters();\n    getCredentialInfo();\n  };\n\n  init();\n}\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nangular.module('zeppelinWebApp').controller('ConfigurationCtrl', ConfigurationCtrl);\n\nfunction ConfigurationCtrl($scope, $http, baseUrlSrv, ngToast) {\n  'ngInject';\n\n  $scope.configrations = [];\n  ngToast.dismiss();\n\n  let getConfigurations = function() {\n    $http.get(baseUrlSrv.getRestApiBase() + '/configurations/all')\n    .success(function(data, status, headers, config) {\n      $scope.configurations = data.body;\n    })\n    .error(function(data, status, headers, config) {\n      if (status === 401) {\n        ngToast.danger({\n          content: 'You don\\'t have permission on this page',\n          verticalPosition: 'bottom',\n          timeout: '3000',\n        });\n        setTimeout(function() {\n          window.location = baseUrlSrv.getBase();\n        }, 3000);\n      }\n      console.log('Error %o %o', status, data.message);\n    });\n  };\n\n  let init = function() {\n    getConfigurations();\n  };\n\n  init();\n}\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport revisionsComparatorTemplate from './revisions-comparator.html';\nimport './revisions-comparator.css';\nimport moment from 'moment';\n\nfunction RevisionsComparatorController($scope, websocketMsgSrv, $routeParams) {\n  'ngInject';\n\n  $scope.firstNoteRevisionForCompare = null;\n  $scope.secondNoteRevisionForCompare = null;\n  $scope.mergeNoteRevisionsForCompare = null;\n  $scope.currentParagraphDiffDisplay = null;\n  $scope.currentFirstRevisionForCompare = 'Choose...';\n  $scope.currentSecondRevisionForCompare = 'Choose...';\n\n  $scope.getNoteRevisionForReview = function(revision, position) {\n    if (position) {\n      if (position === 'first') {\n        $scope.currentFirstRevisionForCompare = revision.message;\n      } else {\n        $scope.currentSecondRevisionForCompare = revision.message;\n      }\n      websocketMsgSrv.getNoteByRevisionForCompare($routeParams.noteId, revision.id, position);\n    }\n  };\n\n  // compare revisions\n  $scope.compareRevisions = function() {\n    if ($scope.firstNoteRevisionForCompare && $scope.secondNoteRevisionForCompare) {\n      let paragraphs1 = $scope.firstNoteRevisionForCompare.note.paragraphs;\n      let paragraphs2 = $scope.secondNoteRevisionForCompare.note.paragraphs;\n      let added = 'added';\n      let deleted = 'deleted';\n      let compared = 'compared';\n      let merge = [];\n      for (let p1 of paragraphs1) {\n        let p2 = null;\n        for (let p of paragraphs2) {\n          if (p1.id === p.id) {\n            p2 = p;\n            break;\n          }\n        }\n        if (p2 === null) {\n          merge.push({paragraph: p1, firstString: (p1.text || '').split('\\n')[0], type: deleted});\n        } else {\n          let colorClass = '';\n          let span = null;\n          let text1 = p1.text || '';\n          let text2 = p2.text || '';\n\n          let diff = window.JsDiff.diffLines(text1, text2);\n          let diffHtml = document.createDocumentFragment();\n          let identical = true;\n          let identicalClass = 'color-black';\n\n          diff.forEach(function(part) {\n            colorClass = part.added ? 'color-green-row' : part.removed ? 'color-red-row' : identicalClass;\n            span = document.createElement('span');\n            span.className = colorClass;\n            if (identical && colorClass !== identicalClass) {\n              identical = false;\n            }\n\n            let str = part.value;\n\n            if (str[str.length - 1] !== '\\n') {\n              str = str + '\\n';\n            }\n\n            span.appendChild(document.createTextNode(str));\n            diffHtml.appendChild(span);\n          });\n\n          let pre = document.createElement('pre');\n          pre.appendChild(diffHtml);\n\n          merge.push(\n            {\n              paragraph: p1,\n              diff: pre.innerHTML,\n              identical: identical,\n              firstString: (p1.text || '').split('\\n')[0],\n              type: compared,\n            });\n        }\n      }\n\n      for (let p2 of paragraphs2) {\n        let p1 = null;\n        for (let p of paragraphs1) {\n          if (p2.id === p.id) {\n            p1 = p;\n            break;\n          }\n        }\n        if (p1 === null) {\n          merge.push({paragraph: p2, firstString: (p2.text || '').split('\\n')[0], type: added});\n        }\n      }\n\n      merge.sort(function(a, b) {\n        if (a.type === added) {\n          return -1;\n        }\n        if (a.type === compared) {\n          return 1;\n        }\n        if (a.type === deleted) {\n          if (b.type === compared) {\n            return -1;\n          } else {\n            return 1;\n          }\n        }\n      });\n\n      $scope.mergeNoteRevisionsForCompare = merge;\n\n      if ($scope.currentParagraphDiffDisplay !== null) {\n        $scope.changeCurrentParagraphDiffDisplay($scope.currentParagraphDiffDisplay.paragraph.id);\n      }\n    }\n  };\n\n  $scope.$on('noteRevisionForCompare', function(event, data) {\n    console.debug('received note revision for compare %o', data);\n    if (data.note && data.position) {\n      if (data.position === 'first') {\n        $scope.firstNoteRevisionForCompare = data;\n      } else {\n        $scope.secondNoteRevisionForCompare = data;\n      }\n\n      if ($scope.firstNoteRevisionForCompare !== null && $scope.secondNoteRevisionForCompare !== null &&\n        $scope.firstNoteRevisionForCompare.revisionId !== $scope.secondNoteRevisionForCompare.revisionId) {\n        $scope.compareRevisions();\n      }\n    }\n  });\n\n  $scope.formatRevisionDate = function(date) {\n    return moment.unix(date).format('MMMM Do YYYY, h:mm:ss a');\n  };\n\n  $scope.changeCurrentParagraphDiffDisplay = function(paragraphId) {\n    for (let p of $scope.mergeNoteRevisionsForCompare) {\n      if (p.paragraph.id === paragraphId) {\n        $scope.currentParagraphDiffDisplay = p;\n        return;\n      }\n    }\n    $scope.currentParagraphDiffDisplay = null;\n  };\n}\n\nexport const RevisionsComparatorComponent = {\n  template: revisionsComparatorTemplate,\n  controller: RevisionsComparatorController,\n  bindings: {\n    noteRevisions: '<',\n  },\n};\n\nexport const RevisionsComparatorModule = angular\n  .module('zeppelinWebApp')\n  .component('revisionsComparator', RevisionsComparatorComponent)\n  .name;\n","module.exports = \"<!--\\nLicensed under the Apache License, Version 2.0 (the \\\"License\\\");\\nyou may not use this file except in compliance with the License.\\nYou may obtain a copy of the License at\\n\\n    http://www.apache.org/licenses/LICENSE-2.0\\n\\nUnless required by applicable law or agreed to in writing, software\\ndistributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\nSee the License for the specific language governing permissions and\\nlimitations under the License.\\n-->\\n<div class=\\\"col-md-4\\\">\\n\\n  <div class=\\\"commit-tree\\\">\\n    <table class=\\\"table\\\">\\n      <thead>\\n      <tr>\\n        <th>Revision name</th>\\n        <th>Date</th>\\n      </tr>\\n      </thead>\\n      <tbody class=\\\"commit-rows\\\">\\n      <tr ng-repeat=\\\"revision in $ctrl.noteRevisions | orderBy:'time':true\\\"\\n          ng-class=\\\"{'cursor-hand': !$last, 'selected-revision': revision.message === currentSecondRevisionForCompare}\\\"\\n          ng-click=\\\"getNoteRevisionForReview($ctrl.noteRevisions[$index + 1], 'first'); getNoteRevisionForReview(revision, 'second')\\\">\\n        <td>{{revision.message}}</td>\\n        <td>{{formatRevisionDate(revision.time)}}</td>\\n      </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n\\n  <div class=\\\"revisions-comparator-bar\\\">\\n    <div class=\\\"btn-group\\\">\\n      <button type=\\\"button\\\" ng-if=\\\"$ctrl.noteRevisions.length > 0\\\"\\n              class=\\\"btn btn-default revisions-comparator-dropdown dropdown-toggle\\\"\\n              data-toggle=\\\"dropdown\\\" id=\\\"firstRevisionDropdown\\\" title=\\\"{{currentFirstRevisionForCompare}}\\\">\\n        <div class=\\\"revision-name-for-compare\\\">{{currentFirstRevisionForCompare}}</div>\\n        <span class=\\\"caret revisions-comparator-caret\\\"></span>\\n      </button>\\n      <ul class=\\\"dropdown-menu dropdown-menu-left\\\" aria-labelledby=\\\"firstRevisionDropdown\\\">\\n        <li></li>\\n        <li ng-repeat=\\\"revision in $ctrl.noteRevisions | orderBy:'time':true\\\" class=\\\"revision\\\">\\n          <a style=\\\"cursor:pointer\\\" ng-click=\\\"getNoteRevisionForReview(revision, 'first')\\\">\\n          <span style=\\\"display: block;\\\">\\n            <strong>{{revision.message}}</strong>\\n          </span>\\n            <span class=\\\"revisionDate\\\">\\n            <em>{{formatRevisionDate(revision.time)}}</em>\\n          </span>\\n          </a>\\n        </li>\\n      </ul>\\n    </div>\\n    <span>compare with</span>\\n    <div class=\\\"btn-group\\\">\\n      <button type=\\\"button\\\" ng-if=\\\"$ctrl.noteRevisions.length > 0\\\"\\n              class=\\\"btn btn-default revisions-comparator-dropdown dropdown-toggle\\\"\\n              ng-disabled=\\\"firstNoteRevisionForCompare === null\\\"\\n              data-toggle=\\\"dropdown\\\" id=\\\"secondRevisionDropdown\\\" title=\\\"{{currentSecondRevisionForCompare}}\\\">\\n        <div class=\\\"revision-name-for-compare\\\">{{currentSecondRevisionForCompare}}</div>\\n        <span class=\\\"caret revisions-comparator-caret\\\"></span>\\n      </button>\\n      <ul class=\\\"dropdown-menu dropdown-menu-left\\\" aria-labelledby=\\\"secondRevisionDropdown\\\">\\n        <li ng-repeat=\\\"revision in $ctrl.noteRevisions | orderBy:'time':true\\\" class=\\\"revision\\\">\\n          <a style=\\\"cursor:pointer\\\" ng-click=\\\"getNoteRevisionForReview(revision, 'second')\\\">\\n          <span style=\\\"display: block;\\\">\\n            <strong>{{revision.message}}</strong>\\n          </span>\\n            <span class=\\\"revisionDate\\\">\\n            <em>{{formatRevisionDate(revision.time)}}</em>\\n          </span>\\n          </a>\\n        </li>\\n      </ul>\\n    </div>\\n  </div>\\n\\n  <div id=\\\"diffPanel\\\">\\n    <div class=\\\"panel-group\\\" style=\\\"margin-bottom: 0px\\\">\\n      <div class=\\\"paragraphs-div\\\">\\n        <div class=\\\"panel revisions-comparator-panel\\\" data-ng-repeat=\\\"p in mergeNoteRevisionsForCompare | orderBy:'time':true\\\"\\n             ng-class=\\\"{'revisions-comparator-panel-selected' : currentParagraphDiffDisplay.paragraph.id === p.paragraph.id}\\\">\\n          <div class=\\\"revisions-comparator-panel-heading\\\"\\n               ng-click=\\\"changeCurrentParagraphDiffDisplay(p.paragraph.id)\\\">\\n            <h4 class=\\\"panel-title\\\">\\n              {{p.paragraph.id}}<strong style=\\\"padding: 5px;\\\" ng-if=\\\"p.paragraph.title\\\">({{p.paragraph.title}})</strong>\\n              <i ng-if=\\\"p.type === 'added'\\\" class=\\\"revisions-comparator-status color-green\\\">added</i>\\n              <i ng-if=\\\"p.type === 'deleted'\\\" class=\\\"revisions-comparator-status color-red\\\">deleted</i>\\n              <i ng-if=\\\"p.type === 'compared' && !(p.identical)\\\" class=\\\"revisions-comparator-status color-orange\\\">there\\n                are differences</i>\\n              <i ng-if=\\\"p.type === 'compared' && p.identical\\\" class=\\\"revisions-comparator-status\\\">contents are\\n                identical</i>\\n              <i class=\\\"revisions-comparator-first-string\\\">{{p.firstString}}</i>\\n            </h4>\\n          </div>\\n        </div>\\n        <div style=\\\"display: table; width: 100%; height: 100%\\\"\\n             ng-if=\\\"currentSecondRevisionForCompare === 'Choose...'\\\">\\n          <div class=\\\"empty-paragraph-message\\\">\\n            Please select a revision\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<div id=\\\"revisions-comparator-code-panel-id center-block\\\" class=\\\"panel col-md-8\\\">\\n  <span\\n    class=\\\"revisions-comparator-code-panel-title\\\">Revision: <strong>{{currentFirstRevisionForCompare}} --> {{currentSecondRevisionForCompare}}</strong></span>\\n  <pre ng-if=\\\"currentParagraphDiffDisplay.type === 'added'\\\"\\n       class=\\\"revisions-comparator-code-panel color-green-row\\\">{{currentParagraphDiffDisplay.paragraph.text}}</pre>\\n  <pre ng-if=\\\"currentParagraphDiffDisplay.type === 'deleted'\\\"\\n       class=\\\"revisions-comparator-code-panel color-red-row\\\">{{currentParagraphDiffDisplay.paragraph.text}}</pre>\\n  <pre ng-if=\\\"currentParagraphDiffDisplay.type === 'compared'\\\"\\n       class=\\\"revisions-comparator-code-panel\\\" ng-bind-html=\\\"currentParagraphDiffDisplay.diff\\\"></pre>\\n  <pre ng-if=\\\"currentParagraphDiffDisplay === null\\\"\\n       class=\\\"revisions-comparator-code-panel empty-code-panel\\\"><div>Nothing to display</div></pre>\\n</div>\\n\\n<div class=\\\"clearfix\\\"></div>\\n\"","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {SpellResult} from '../../spell';\nimport {isParagraphRunning, ParagraphStatus} from './paragraph.status';\n\nimport moment from 'moment';\nimport DiffMatchPatch from 'diff-match-patch';\n\nrequire('moment-duration-format');\n\nconst ParagraphExecutor = {\n  SPELL: 'SPELL',\n  INTERPRETER: 'INTERPRETER',\n  NONE: '', /** meaning `DONE` */\n};\n\nangular.module('zeppelinWebApp').controller('ParagraphCtrl', ParagraphCtrl);\n\nfunction ParagraphCtrl($scope, $rootScope, $route, $window, $routeParams, $location,\n                       $timeout, $compile, $http, $q, websocketMsgSrv,\n                       baseUrlSrv, ngToast, noteVarShareService,\n                       heliumService) {\n  'ngInject';\n\n  let ANGULAR_FUNCTION_OBJECT_NAME_PREFIX = '_Z_ANGULAR_FUNC_';\n  let completionListLength = undefined;\n  $rootScope.keys = Object.keys;\n  $scope.parentNote = null;\n  $scope.paragraph = {};\n  $scope.paragraph.results = {};\n  $scope.paragraph.results.msg = [];\n  $scope.originalText = '';\n  $scope.editor = null;\n  $scope.cursorPosition = null;\n  $scope.diffMatchPatch = new DiffMatchPatch();\n  $scope.isNoteRunning = false;\n\n  // transactional info for spell execution\n  $scope.spellTransaction = {\n    totalResultCount: 0,\n    renderedResultCount: 0,\n    propagated: false,\n    resultsMsg: [],\n    paragraphText: '',\n  };\n\n  let searchRanges = [];\n  const getCurrentRangeDefault = function() {\n    return {id: -1, markerId: -1};\n  };\n  let currentRange = getCurrentRangeDefault();\n\n  let editorSetting = {};\n  // flag that is used to set editor setting on paste percent sign\n  let pastePercentSign = false;\n  // flag that is used to set editor setting on save interpreter bindings\n  let setInterpreterBindings = false;\n  let paragraphScope = $rootScope.$new(true, $rootScope);\n\n  // to keep backward compatibility\n  $scope.compiledScope = paragraphScope;\n\n  paragraphScope.z = {\n    // z.runParagraph('20150213-231621_168813393')\n    runParagraph: function(paragraphId) {\n      if (paragraphId) {\n        let filtered = $scope.parentNote.paragraphs.filter(function(x) {\n          return x.id === paragraphId;\n        });\n        if (filtered.length === 1) {\n          let paragraph = filtered[0];\n          websocketMsgSrv.runParagraph(paragraph.id, paragraph.title, paragraph.text,\n            paragraph.config, paragraph.settings.params);\n        } else {\n          ngToast.danger({\n            content: 'Cannot find a paragraph with id \\'' + paragraphId + '\\'',\n            verticalPosition: 'top',\n            dismissOnTimeout: false,\n          });\n        }\n      } else {\n        ngToast.danger({\n          content: 'Please provide a \\'paragraphId\\' when calling z.runParagraph(paragraphId)',\n          verticalPosition: 'top',\n          dismissOnTimeout: false,\n        });\n      }\n    },\n\n    // Example: z.angularBind('my_var', 'Test Value', '20150213-231621_168813393')\n    angularBind: function(varName, value, paragraphId) {\n      // Only push to server if there paragraphId is defined\n      if (paragraphId) {\n        websocketMsgSrv.clientBindAngularObject($routeParams.noteId, varName, value, paragraphId);\n      } else {\n        ngToast.danger({\n          content: 'Please provide a \\'paragraphId\\' when calling ' +\n          'z.angularBind(varName, value, \\'PUT_HERE_PARAGRAPH_ID\\')',\n          verticalPosition: 'top',\n          dismissOnTimeout: false,\n        });\n      }\n    },\n\n    // Example: z.angularUnBind('my_var', '20150213-231621_168813393')\n    angularUnbind: function(varName, paragraphId) {\n      // Only push to server if paragraphId is defined\n      if (paragraphId) {\n        websocketMsgSrv.clientUnbindAngularObject($routeParams.noteId, varName, paragraphId);\n      } else {\n        ngToast.danger({\n          content: 'Please provide a \\'paragraphId\\' when calling ' +\n          'z.angularUnbind(varName, \\'PUT_HERE_PARAGRAPH_ID\\')',\n          verticalPosition: 'top',\n          dismissOnTimeout: false});\n      }\n    },\n  };\n\n  let angularObjectRegistry = {};\n\n  // Controller init\n  $scope.init = function(newParagraph, note) {\n    $scope.paragraph = newParagraph;\n    $scope.parentNote = note;\n    $scope.originalText = angular.copy(newParagraph.text);\n    $scope.chart = {};\n    $scope.baseMapOption = ['Streets', 'Satellite', 'Hybrid', 'Topo', 'Gray', 'Oceans', 'Terrain'];\n    $scope.colWidthOption = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n    $scope.fontSizeOption = [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\n    $scope.paragraphFocused = false;\n    if (newParagraph.focus) {\n      $scope.paragraphFocused = true;\n    }\n    if (!$scope.paragraph.config) {\n      $scope.paragraph.config = {};\n    }\n\n    $scope.isNoteRunning = !!(note && note.hasOwnProperty('info') &&\n      note.info.hasOwnProperty('isRunning')\n      && note.info.isRunning === true);\n\n    noteVarShareService.put($scope.paragraph.id + '_paragraphScope', paragraphScope);\n\n    initializeDefault($scope.paragraph.config);\n  };\n\n  $scope.$on('noteRunningStatus', function(event, status) {\n    $scope.isNoteRunning = status;\n    $scope.editor.setReadOnly(status);\n  });\n\n  const initializeDefault = function(config) {\n    let forms = $scope.paragraph.settings.forms;\n\n    if (!config.colWidth) {\n      config.colWidth = 12;\n    }\n\n    if (!config.fontSize) {\n      config.fontSize = 9;\n    }\n\n    if (config.enabled === undefined) {\n      config.enabled = true;\n    }\n\n    for (let idx in forms) {\n      if (forms[idx]) {\n        if (forms[idx].options) {\n          if (config.runOnSelectionChange === undefined) {\n            config.runOnSelectionChange = true;\n          }\n        }\n      }\n    }\n\n    if (!config.results) {\n      config.results = {};\n    }\n\n    if (!config.editorSetting) {\n      config.editorSetting = {};\n    } else if (config.editorSetting.editOnDblClick) {\n      editorSetting.isOutputHidden = config.editorSetting.editOnDblClick;\n    }\n  };\n\n  const isTabCompletion = function() {\n    const completionKey = $scope.paragraph.config.editorSetting.completionKey;\n    return completionKey === 'TAB';\n  };\n\n  $scope.$on('updateParagraphOutput', function(event, data) {\n    if ($scope.paragraph.id === data.paragraphId) {\n      if (!$scope.paragraph.results) {\n        $scope.paragraph.results = {};\n      }\n      if (!$scope.paragraph.results.msg) {\n        $scope.paragraph.results.msg = [];\n      }\n\n      let update = typeof $scope.paragraph.results.msg[data.index] !== 'undefined';\n\n      $scope.paragraph.results.msg[data.index] = {\n        data: data.data,\n        type: data.type,\n      };\n\n      if (update) {\n        $rootScope.$broadcast(\n          'updateResult',\n          $scope.paragraph.results.msg[data.index],\n          $scope.paragraph.config.results[data.index],\n          $scope.paragraph,\n          data.index);\n      }\n    }\n  });\n\n  $scope.getIframeDimensions = function() {\n    if ($scope.asIframe) {\n      let paragraphid = '#' + $routeParams.paragraphId + '_container';\n      let height = angular.element(paragraphid).height();\n      return height;\n    }\n    return 0;\n  };\n\n  $scope.$watch($scope.getIframeDimensions, function(newValue, oldValue) {\n    if ($scope.asIframe && newValue) {\n      let message = {};\n      message.height = newValue;\n      message.url = $location.$$absUrl;\n      $window.parent.postMessage(angular.toJson(message), '*');\n    }\n  });\n\n  $scope.getEditor = function() {\n    return $scope.editor;\n  };\n\n  $scope.$watch($scope.getEditor, function(newValue, oldValue) {\n    if (!$scope.editor) {\n      return;\n    }\n    if (newValue === null || newValue === undefined) {\n      console.log('editor isnt loaded yet, returning');\n      return;\n    }\n    if ($scope.revisionView === true || $scope.isNoteRunning === true) {\n      $scope.editor.setReadOnly(true);\n    } else {\n      $scope.editor.setReadOnly(false);\n    }\n  });\n\n  let isEmpty = function(object) {\n    return !object;\n  };\n\n  $scope.isRunning = function(paragraph) {\n    return isParagraphRunning(paragraph);\n  };\n\n  $scope.cancelParagraph = function(paragraph) {\n    if ($scope.isNoteRunning) {\n      return;\n    }\n    console.log('Cancel %o', paragraph.id);\n    websocketMsgSrv.cancelParagraphRun(paragraph.id);\n  };\n\n  $scope.propagateSpellResult = function(paragraphId, paragraphTitle,\n                                         paragraphText, paragraphResults,\n                                         paragraphStatus, paragraphErrorMessage,\n                                         paragraphConfig, paragraphSettingsParam,\n                                         paragraphDateStarted, paragraphDateFinished) {\n    websocketMsgSrv.paragraphExecutedBySpell(\n      paragraphId, paragraphTitle,\n      paragraphText, paragraphResults,\n      paragraphStatus, paragraphErrorMessage,\n      paragraphConfig, paragraphSettingsParam,\n      paragraphDateStarted, paragraphDateFinished\n    );\n  };\n\n  $scope.handleSpellError = function(paragraphText, error,\n                                     digestRequired, propagated) {\n    const errorMessage = error.stack;\n    $scope.paragraph.status = ParagraphStatus.ERROR;\n    $scope.paragraph.errorMessage = errorMessage;\n    console.error('Failed to execute interpret() in spell\\n', error);\n\n    if (!propagated) {\n      $scope.paragraph.dateFinished = $scope.getFormattedParagraphTime();\n    }\n\n    if (!propagated) {\n      $scope.propagateSpellResult(\n        $scope.paragraph.id, $scope.paragraph.title,\n        paragraphText, [], $scope.paragraph.status, errorMessage,\n        $scope.paragraph.config, $scope.paragraph.settings.params,\n        $scope.paragraph.dateStarted, $scope.paragraph.dateFinished);\n    }\n  };\n\n  $scope.prepareSpellTransaction = function(resultsMsg, propagated, paragraphText) {\n    $scope.spellTransaction.totalResultCount = resultsMsg.length;\n    $scope.spellTransaction.renderedResultCount = 0;\n    $scope.spellTransaction.propagated = propagated;\n    $scope.spellTransaction.resultsMsg = resultsMsg;\n    $scope.spellTransaction.paragraphText = paragraphText;\n  };\n\n  /**\n   * - update spell transaction count and\n   * - check transaction is finished based on the result count\n   * @returns {boolean}\n   */\n  $scope.increaseSpellTransactionResultCount = function() {\n    $scope.spellTransaction.renderedResultCount += 1;\n\n    const total = $scope.spellTransaction.totalResultCount;\n    const current = $scope.spellTransaction.renderedResultCount;\n    return total === current;\n  };\n\n  $scope.cleanupSpellTransaction = function() {\n    const status = ParagraphStatus.FINISHED;\n    $scope.paragraph.executor = ParagraphExecutor.NONE;\n    $scope.paragraph.status = status;\n    $scope.paragraph.results.code = status;\n\n    const propagated = $scope.spellTransaction.propagated;\n    const resultsMsg = $scope.spellTransaction.resultsMsg;\n    const paragraphText = $scope.spellTransaction.paragraphText;\n\n    if (!propagated) {\n      $scope.paragraph.dateFinished = $scope.getFormattedParagraphTime();\n    }\n\n    if (!propagated) {\n      const propagable = SpellResult.createPropagable(resultsMsg);\n      $scope.propagateSpellResult(\n        $scope.paragraph.id, $scope.paragraph.title,\n        paragraphText, propagable, status, '',\n        $scope.paragraph.config, $scope.paragraph.settings.params,\n        $scope.paragraph.dateStarted, $scope.paragraph.dateFinished);\n    }\n  };\n\n  $scope.runParagraphUsingSpell = function(paragraphText,\n                                           magic, digestRequired, propagated) {\n    $scope.paragraph.status = 'RUNNING';\n    $scope.paragraph.executor = ParagraphExecutor.SPELL;\n    $scope.paragraph.results = {};\n    $scope.paragraph.errorMessage = '';\n    if (digestRequired) {\n      $scope.$digest();\n    }\n\n    try {\n      // remove magic from paragraphText\n      const splited = paragraphText.slice(paragraphText.indexOf(magic) + magic.length);\n      // remove leading spaces\n      const textWithoutMagic = splited.replace(/^\\s+/g, '');\n\n      if (!propagated) {\n        $scope.paragraph.dateStarted = $scope.getFormattedParagraphTime();\n      }\n\n      // handle actual result message in promise\n      heliumService.executeSpell(magic, textWithoutMagic)\n        .then((resultsMsg) => {\n          $scope.prepareSpellTransaction(resultsMsg, propagated, paragraphText);\n\n          $scope.paragraph.results.msg = resultsMsg;\n          $scope.paragraph.config.tableHide = false;\n        })\n        .catch((error) => {\n          $scope.handleSpellError(paragraphText, error,\n            digestRequired, propagated);\n        });\n    } catch (error) {\n      $scope.handleSpellError(paragraphText, error,\n        digestRequired, propagated);\n    }\n  };\n\n  $scope.runParagraphUsingBackendInterpreter = function(paragraphText) {\n    websocketMsgSrv.runParagraph($scope.paragraph.id, $scope.paragraph.title,\n      paragraphText, $scope.paragraph.config, $scope.paragraph.settings.params);\n  };\n\n  $scope.bindBeforeUnload = function() {\n    angular.element(window).off('beforeunload');\n\n    let confirmOnPageExit = function(e) {\n      // If we haven't been passed the event get the window.event\n      e = e || window.event;\n      let message = 'Do you want to reload this site?';\n\n      // For IE6-8 and Firefox prior to version 4\n      if (e) {\n        e.returnValue = message;\n      }\n      // For Chrome, Safari, IE8+ and Opera 12+\n      return message;\n    };\n    angular.element(window).on('beforeunload', confirmOnPageExit);\n  };\n\n  $scope.unBindBeforeUnload = function() {\n    angular.element(window).off('beforeunload');\n  };\n\n  $scope.saveParagraph = function(paragraph) {\n    const dirtyText = paragraph.text;\n    if (dirtyText === undefined || dirtyText === $scope.originalText) {\n      return;\n    }\n\n    $scope.bindBeforeUnload();\n\n    commitParagraph(paragraph).then(function() {\n      $scope.originalText = dirtyText;\n      $scope.dirtyText = undefined;\n      $scope.unBindBeforeUnload();\n    });\n  };\n\n  $scope.toggleEnableDisable = function(paragraph) {\n    if ($scope.isNoteRunning) {\n      return;\n    }\n    paragraph.config.enabled = !paragraph.config.enabled;\n    commitParagraph(paragraph);\n  };\n\n  /**\n   * @param paragraphText to be parsed\n   * @param digestRequired true if calling `$digest` is required\n   * @param propagated true if update request is sent from other client\n   */\n  $scope.runParagraph = function(paragraphText, digestRequired, propagated) {\n    if (!paragraphText || $scope.isRunning($scope.paragraph)) {\n      return;\n    }\n\n    const magic = SpellResult.extractMagic(paragraphText);\n\n    if (heliumService.getSpellByMagic(magic)) {\n      $scope.runParagraphUsingSpell(paragraphText, magic, digestRequired, propagated);\n    } else {\n      $scope.runParagraphUsingBackendInterpreter(paragraphText);\n    }\n\n    $scope.originalText = angular.copy(paragraphText);\n    $scope.dirtyText = undefined;\n\n    if ($scope.paragraph.config.editorSetting.editOnDblClick) {\n      closeEditorAndOpenTable($scope.paragraph);\n    } else if (editorSetting.isOutputHidden &&\n      !$scope.paragraph.config.editorSetting.editOnDblClick) {\n      // %md/%angular repl make output to be hidden by default after running\n      // so should open output if repl changed from %md/%angular to another\n      openEditorAndOpenTable($scope.paragraph);\n    }\n    editorSetting.isOutputHidden = $scope.paragraph.config.editorSetting.editOnDblClick;\n  };\n\n  $scope.runParagraphFromShortcut = function(paragraphText) {\n    // passing `digestRequired` as true to update view immediately\n    // without this, results cannot be rendered in view more than once\n    $scope.runParagraph(paragraphText, true, false);\n  };\n\n  $scope.runParagraphFromButton = function() {\n    if ($scope.isNoteRunning) {\n      return;\n    }\n    // we come here from the view, so we don't need to call `$digest()`\n    $scope.runParagraph($scope.getEditorValue(), false, false);\n  };\n\n  $scope.runAllToThis = function(paragraph) {\n    if ($scope.isNoteRunning) {\n      return;\n    }\n    $scope.$emit('runAllAbove', paragraph, true);\n  };\n\n  $scope.runAllFromThis = function(paragraph) {\n    if ($scope.isNoteRunning) {\n      return;\n    }\n    $scope.$emit('runAllBelowAndCurrent', paragraph, true);\n  };\n\n  $scope.runAllFromThisFromShortcut = function(paragraph) {\n    if ($scope.isNoteRunning) {\n      return;\n    }\n    $scope.$emit('runAllBelowAndCurrent', paragraph, false);\n  };\n\n  $scope.runAllToThisFromShortcut = function(paragraph) {\n    if ($scope.isNoteRunning) {\n      return;\n    }\n    $scope.$emit('runAllAbove', paragraph, false);\n  };\n\n  $scope.turnOnAutoRun = function(paragraph) {\n    paragraph.config.runOnSelectionChange = !paragraph.config.runOnSelectionChange;\n    commitParagraph(paragraph);\n  };\n\n  $scope.moveUp = function(paragraph) {\n    if ($scope.isNoteRunning) {\n      return;\n    }\n    $scope.$emit('moveParagraphUp', paragraph);\n  };\n\n  $scope.moveDown = function(paragraph) {\n    if ($scope.isNoteRunning) {\n      return;\n    }\n    $scope.$emit('moveParagraphDown', paragraph);\n  };\n\n  $scope.insertNew = function(position) {\n    if ($scope.isNoteRunning) {\n      return;\n    }\n    $scope.$emit('insertParagraph', $scope.paragraph.id, position);\n  };\n\n  $scope.copyPara = function(position) {\n    if ($scope.isNoteRunning) {\n      return;\n    }\n    let editorValue = $scope.getEditorValue();\n    if (editorValue) {\n      $scope.copyParagraph(editorValue, position);\n    }\n  };\n\n  $scope.copyParagraph = function(data, position) {\n    let newIndex = -1;\n    for (let i = 0; i < $scope.note.paragraphs.length; i++) {\n      if ($scope.note.paragraphs[i].id === $scope.paragraph.id) {\n        // determine position of where to add new paragraph; default is below\n        if (position === 'above') {\n          newIndex = i;\n        } else {\n          newIndex = i + 1;\n        }\n        break;\n      }\n    }\n\n    if (newIndex < 0 || newIndex > $scope.note.paragraphs.length) {\n      return;\n    }\n\n    let config = angular.copy($scope.paragraph.config);\n    config.editorHide = false;\n\n    websocketMsgSrv.copyParagraph(newIndex, $scope.paragraph.title, data,\n      config, $scope.paragraph.settings.params);\n  };\n\n  $scope.removeParagraph = function(paragraph) {\n    if ($scope.isNoteRunning) {\n      return;\n    }\n    if ($scope.note.paragraphs.length === 1) {\n      BootstrapDialog.alert({\n        closable: true,\n        message: 'All the paragraphs can\\'t be deleted.',\n      });\n    } else {\n      BootstrapDialog.confirm({\n        closable: true,\n        title: '',\n        message: 'Do you want to delete this paragraph?',\n        callback: function(result) {\n          if (result) {\n            console.log('Remove paragraph');\n            websocketMsgSrv.removeParagraph(paragraph.id);\n            $scope.$emit('moveFocusToNextParagraph', $scope.paragraph.id);\n          }\n        },\n      });\n    }\n  };\n\n  $scope.clearParagraphOutput = function(paragraph) {\n    websocketMsgSrv.clearParagraphOutput(paragraph.id);\n  };\n\n  $scope.toggleEditor = function(paragraph) {\n    if (paragraph.config.editorHide) {\n      $scope.openEditor(paragraph);\n    } else {\n      $scope.closeEditor(paragraph);\n    }\n  };\n\n  $scope.closeEditor = function(paragraph) {\n    console.log('close the note');\n    paragraph.config.editorHide = true;\n    commitParagraph(paragraph);\n  };\n\n  $scope.openEditor = function(paragraph) {\n    console.log('open the note');\n    paragraph.config.editorHide = false;\n    commitParagraph(paragraph);\n  };\n\n  $scope.closeTable = function(paragraph) {\n    console.log('close the output');\n    paragraph.config.tableHide = true;\n    commitParagraph(paragraph);\n  };\n\n  $scope.openTable = function(paragraph) {\n    console.log('open the output');\n    paragraph.config.tableHide = false;\n    commitParagraph(paragraph);\n  };\n\n  let openEditorAndCloseTable = function(paragraph) {\n    manageEditorAndTableState(paragraph, false, true);\n  };\n\n  const closeEditorAndOpenTable = function(paragraph) {\n    manageEditorAndTableState(paragraph, true, false);\n  };\n\n  const openEditorAndOpenTable = function(paragraph) {\n    manageEditorAndTableState(paragraph, false, false);\n  };\n\n  const manageEditorAndTableState = function(paragraph, hideEditor, hideTable) {\n    paragraph.config.editorHide = hideEditor;\n    paragraph.config.tableHide = hideTable;\n    commitParagraph(paragraph);\n  };\n\n  $scope.showTitle = function(paragraph) {\n    paragraph.config.title = true;\n    commitParagraph(paragraph);\n  };\n\n  $scope.hideTitle = function(paragraph) {\n    paragraph.config.title = false;\n    commitParagraph(paragraph);\n  };\n\n  $scope.setTitle = function(paragraph) {\n    commitParagraph(paragraph);\n  };\n\n  $scope.showLineNumbers = function(paragraph) {\n    if ($scope.editor) {\n      paragraph.config.lineNumbers = true;\n      $scope.editor.renderer.setShowGutter(true);\n      commitParagraph(paragraph);\n    }\n  };\n\n  $scope.hideLineNumbers = function(paragraph) {\n    if ($scope.editor) {\n      paragraph.config.lineNumbers = false;\n      $scope.editor.renderer.setShowGutter(false);\n      commitParagraph(paragraph);\n    }\n  };\n\n  $scope.columnWidthClass = function(n) {\n    if ($scope.asIframe) {\n      return 'col-md-12';\n    } else {\n      return 'paragraph-col col-md-' + n;\n    }\n  };\n\n  $scope.changeColWidth = function(paragraph, width) {\n    angular.element('.navbar-right.open').removeClass('open');\n    paragraph.config.colWidth = width;\n    $scope.$broadcast('paragraphResized', $scope.paragraph.id);\n    commitParagraph(paragraph);\n  };\n\n  $scope.changeFontSize = function(paragraph, fontSize) {\n    angular.element('.navbar-right.open').removeClass('open');\n    if ($scope.editor) {\n      $scope.editor.setOptions({\n        fontSize: fontSize + 'pt',\n      });\n      autoAdjustEditorHeight($scope.editor);\n      paragraph.config.fontSize = fontSize;\n      commitParagraph(paragraph);\n    }\n  };\n\n  $scope.toggleOutput = function(paragraph) {\n    paragraph.config.tableHide = !paragraph.config.tableHide;\n    commitParagraph(paragraph);\n  };\n\n  $scope.aceChanged = function(_, editor) {\n    let session = editor.getSession();\n    let dirtyText = session.getValue();\n    $scope.dirtyText = dirtyText;\n    if ($scope.dirtyText !== $scope.originalText) {\n      if ($scope.collaborativeMode) {\n        $scope.sendPatch();\n      } else {\n        $scope.startSaveTimer();\n      }\n    }\n    setParagraphMode(session, dirtyText, editor.getCursorPosition());\n    if ($scope.cursorPosition) {\n      editor.moveCursorToPosition($scope.cursorPosition);\n      $scope.cursorPosition = null;\n    }\n  };\n\n  $scope.sendPatch = function() {\n    $scope.originalText = $scope.originalText ? $scope.originalText : '';\n    let patch = $scope.diffMatchPatch.patch_make($scope.originalText, $scope.dirtyText).toString();\n    $scope.originalText = $scope.dirtyText;\n    return websocketMsgSrv.patchParagraph($scope.paragraph.id, $route.current.pathParams.noteId, patch);\n  };\n\n  $scope.aceLoaded = function(_editor) {\n    let langTools = ace.require('ace/ext/language_tools');\n    let Range = ace.require('ace/range').Range;\n\n    _editor.$blockScrolling = Infinity;\n    $scope.editor = _editor;\n    $scope.editor.on('input', $scope.aceChanged);\n    if (_editor.container.id !== '{{paragraph.id}}_editor') {\n      $scope.editor.renderer.setShowGutter($scope.paragraph.config.lineNumbers);\n      $scope.editor.setShowFoldWidgets(false);\n      $scope.editor.setHighlightActiveLine(false);\n      $scope.editor.getSession().setUseWrapMode(true);\n      $scope.editor.setTheme('ace/theme/chrome');\n      $scope.editor.setReadOnly($scope.isRunning($scope.paragraph) || $scope.isNoteRunning);\n      $scope.editor.setHighlightActiveLine($scope.paragraphFocused);\n\n      if ($scope.paragraphFocused) {\n        let prefix = getParagraphMagic($scope.paragraph.text);\n        let paragraphText = $scope.paragraph.text ? $scope.paragraph.text.trim() : '';\n\n        $scope.editor.focus();\n        $scope.goToEnd($scope.editor);\n        if (prefix === paragraphText) {\n          $timeout(function() {\n            $scope.editor.gotoLine(2, 0);\n          }, 0);\n        }\n      }\n\n      autoAdjustEditorHeight(_editor);\n\n      let adjustEditorListener = () => autoAdjustEditorHeight(_editor);\n      angular.element(window).resize(adjustEditorListener);\n      $scope.$on('$destroy', () => angular.element(window).unbind('resize', adjustEditorListener));\n\n      if (navigator.appVersion.indexOf('Mac') !== -1) {\n        $scope.editor.setKeyboardHandler('ace/keyboard/emacs');\n        $rootScope.isMac = true;\n      } else if (navigator.appVersion.indexOf('Win') !== -1 ||\n        navigator.appVersion.indexOf('X11') !== -1 ||\n        navigator.appVersion.indexOf('Linux') !== -1) {\n        $rootScope.isMac = false;\n        // not applying emacs key binding while the binding override Ctrl-v. default behavior of paste text on windows.\n      }\n\n      $scope.$on('completionListLength', function(event, data) {\n        completionListLength = data;\n      });\n\n      $scope.$on('callCompletion', function(event, data) {\n        if($scope.paragraphFocused) {\n          websocketMsgSrv.completion($scope.paragraph.id, data.buf, data.pos);\n        }\n      });\n\n      let remoteCompleter = {\n        getCompletions: function(editor, session, pos, prefix, callback) {\n          let langTools = ace.require('ace/ext/language_tools');\n          let defaultKeywords = new Set();\n\n          // eslint-disable-next-line handle-callback-err\n          let getDefaultKeywords = function(err, completions) {\n            if (completions !== undefined) {\n              completions.forEach(function(c) {\n                defaultKeywords.add(c.value);\n              });\n            }\n          };\n          if (langTools.keyWordCompleter !== undefined) {\n            langTools.keyWordCompleter.getCompletions(editor, session, pos, prefix, getDefaultKeywords);\n          }\n\n          if (!editor.isFocused()) {\n            return;\n          }\n\n          pos = session.getTextRange(new Range(0, 0, pos.row, pos.column)).length;\n          let buf = session.getValue();\n\n          $rootScope.$broadcast('callCompletion', {buf: buf, pos: pos});\n\n          $scope.$on('completionList', function(event, data) {\n            let computeCaption = function(value, meta) {\n              let metaLength = meta !== undefined ? meta.length : 0;\n              let length = 42;\n              let whitespaceLength = 3;\n              let ellipses = '...';\n              let maxLengthCaption = length - metaLength - whitespaceLength - ellipses.length;\n              if (value !== undefined && value.length > maxLengthCaption) {\n                return value.substr(0, maxLengthCaption) + ellipses;\n              }\n              return value;\n            };\n            if (data.completions) {\n              let completions = [];\n              for (let c in data.completions) {\n                if (data.completions.hasOwnProperty(c)) {\n                  let v = data.completions[c];\n                  if (v.meta !== undefined && v.meta === 'keyword' && defaultKeywords.has(v.value.trim())) {\n                    continue;\n                  }\n                  completions.push({\n                    name: v.name,\n                    value: v.value,\n                    meta: v.meta,\n                    caption: computeCaption(v.name, v.meta),\n                    score: 300,\n                  });\n                }\n              }\n              $rootScope.$broadcast('completionListLength', completions.length);\n              callback(null, completions);\n            }\n          });\n        },\n      };\n\n      langTools.setCompleters([remoteCompleter, langTools.keyWordCompleter, langTools.snippetCompleter,\n        langTools.textCompleter]);\n\n      $scope.editor.setOptions({\n        fontSize: $scope.paragraph.config.fontSize + 'pt',\n        enableBasicAutocompletion: true,\n        enableSnippets: false,\n        enableLiveAutocompletion: false,\n      });\n\n      $scope.editor.on('focus', function() {\n        handleFocus(true);\n      });\n\n      $scope.editor.on('blur', function() {\n        handleFocus(false);\n        $scope.saveParagraph($scope.paragraph);\n      });\n\n      $scope.editor.on('paste', function(e) {\n        if (e.text.indexOf('%') === 0) {\n          pastePercentSign = true;\n        }\n      });\n\n      $scope.editor.getSession().on('change', function(e, editSession) {\n        autoAdjustEditorHeight(_editor);\n      });\n\n      setParagraphMode($scope.editor.getSession(), $scope.editor.getSession().getValue());\n\n      // autocomplete on '.'\n      /*\n       $scope.editor.commands.on(\"afterExec\", function(e, t) {\n       if (e.command.name == \"insertstring\" && e.args == \".\" ) {\n       var all = e.editor.completers;\n       //e.editor.completers = [remoteCompleter];\n       e.editor.execCommand(\"startAutocomplete\");\n       //e.editor.completers = all;\n       }\n       });\n       */\n\n      // remove binding\n      $scope.editor.commands.removeCommand('showSettingsMenu');\n      $scope.editor.commands.removeCommand('find');\n      $scope.editor.commands.removeCommand('replace');\n\n      let isOption = $rootScope.isMac ? 'option' : 'alt';\n\n      $scope.editor.commands.bindKey('ctrl-' + isOption + '-n.', null);\n      $scope.editor.commands.bindKey('ctrl-' + isOption + '-l', null);\n      $scope.editor.commands.bindKey('ctrl-' + isOption + '-w', null);\n      $scope.editor.commands.bindKey('ctrl-' + isOption + '-a', null);\n      $scope.editor.commands.bindKey('ctrl-' + isOption + '-k', null);\n      $scope.editor.commands.bindKey('ctrl-' + isOption + '-e', null);\n      $scope.editor.commands.bindKey('ctrl-' + isOption + '-t', null);\n      $scope.editor.commands.bindKey('ctrl-space', null);\n\n      if ($rootScope.isMac) {\n        $scope.editor.commands.bindKey('command-l', null);\n      } else {\n        $scope.editor.commands.bindKey('ctrl-l', null);\n      }\n\n      // autocomplete on 'ctrl+.'\n      $scope.editor.commands.bindKey('ctrl-.', 'startAutocomplete');\n\n      // Show autocomplete on tab\n      $scope.editor.commands.addCommand({\n        name: 'tabAutocomplete',\n        bindKey: {\n          win: 'tab',\n          mac: 'tab',\n          sender: 'editor|cli',\n        },\n        exec: function(env, args, request) {\n          let iCursor = $scope.editor.getCursorPosition();\n          let currentLine = $scope.editor.session.getLine(iCursor.row);\n          let isAllTabs = currentLine.substring(0, iCursor.column - 1).split('').every(function(char) {\n            return (char === '\\t' || char === ' ');\n          });\n\n          // If user has pressed tab on first line char or if isTabCompletion() is false, keep existing behavior\n          // If user has pressed tab anywhere in between and editor mode is not %md, show autocomplete\n          if (!isAllTabs && iCursor.column && isTabCompletion()) {\n            $scope.editor.execCommand('startAutocomplete');\n          } else {\n            ace.config.loadModule('ace/ext/language_tools', function() {\n              $scope.editor.indent();\n            });\n          }\n        },\n      });\n\n      let keyBindingEditorFocusAction = function(scrollValue) {\n        let numRows = $scope.editor.getSession().getLength();\n        let currentRow = $scope.editor.getCursorPosition().row;\n        if (currentRow === 0 && scrollValue <= 0) {\n          // move focus to previous paragraph\n          $scope.$emit('moveFocusToPreviousParagraph', $scope.paragraph.id);\n        } else if (currentRow === numRows - 1 && scrollValue >= 0) {\n          $scope.$emit('moveFocusToNextParagraph', $scope.paragraph.id);\n        } else {\n          $scope.scrollToCursor($scope.paragraph.id, scrollValue);\n        }\n      };\n\n      // handle cursor moves\n      $scope.editor.keyBinding.origOnCommandKey = $scope.editor.keyBinding.onCommandKey;\n      $scope.editor.keyBinding.onCommandKey = function(e, hashId, keyCode) {\n        if ($scope.editor.completer && $scope.editor.completer.activated) { // if autocompleter is active\n        } else {\n          // fix ace editor focus issue in chrome (textarea element goes to top: -1000px after focused by cursor move)\n          if (parseInt(angular.element('#' + $scope.paragraph.id + '_editor > textarea')\n              .css('top').replace('px', '')) < 0) {\n            let position = $scope.editor.getCursorPosition();\n            let cursorPos = $scope.editor.renderer.$cursorLayer.getPixelPosition(position, true);\n            angular.element('#' + $scope.paragraph.id + '_editor > textarea').css('top', cursorPos.top);\n          }\n\n          let ROW_UP = -1;\n          let ROW_DOWN = 1;\n\n          switch (keyCode) {\n            case 38:\n              if (!e.shiftKey) {\n                keyBindingEditorFocusAction(ROW_UP);\n              }\n              break;\n            case 80:\n              if (e.ctrlKey && !e.altKey) {\n                keyBindingEditorFocusAction(ROW_UP);\n              }\n              break;\n            case 40:\n              if (!e.shiftKey) {\n                keyBindingEditorFocusAction(ROW_DOWN);\n              }\n              break;\n            case 78:\n              if (e.ctrlKey && !e.altKey) {\n                keyBindingEditorFocusAction(ROW_DOWN);\n              }\n              break;\n          }\n        }\n        this.origOnCommandKey(e, hashId, keyCode);\n      };\n    }\n  };\n\n  // ref: https://github.com/ajaxorg/ace/blob/5021d0193d9f2bba5a978d0b1d7a4f73d18ce713/lib/ace/autocomplete.js#L454\n  const completionSupportWithoutBackend = function(str) {\n    let matches;\n    if (str.length > this.filterText && str.lastIndexOf(\n        this.filterText, 0) === 0) {\n      matches = this.filtered;\n    } else {\n      matches = this.all;\n    }\n\n    this.filterText = str;\n    matches = this.filterCompletions(matches, this.filterText);\n    matches = matches.sort(function(a, b) {\n      return b.exactMatch - a.exactMatch || b.score - a.score;\n    });\n    let prev = null;\n\n    matches = matches.filter(function(item) {\n      let caption = item.snippet || item.caption || item.value;\n      if (caption === prev) {\n        return false;\n      }\n      prev = caption;\n      return true;\n    });\n    this.filtered = matches;\n  };\n\n  const completionSupportWithBackend = function(str) {\n    let matches;\n    if (str.length > this.filterText && str.lastIndexOf(\n        this.filterText, 0) === 0) {\n      matches = this.filtered;\n    } else {\n      matches = this.all;\n    }\n    this.filterText = str;\n    matches = this.filterCompletions(matches, this.filterText);\n    matches = matches.sort(function(a, b) {\n      return b.exactMatch - a.exactMatch || b.score - a.score;\n    });\n    let prev = null;\n\n    matches = matches.filter(function(item) {\n      if (!_.isEmpty(item.meta)) {\n        if (completionListLength !== 0) {\n          return false;\n        }\n      }\n      let caption = item.snippet || item.caption || item.value;\n      if (caption === prev) {\n        return false;\n      }\n      prev = caption;\n      return true;\n    });\n    this.filtered = matches;\n    completionListLength = undefined;\n  };\n\n  const handleFocus = function(focused, isDigestPass) {\n    $scope.paragraphFocused = focused;\n    if (focused) {\n      let filteredList = ace.require('ace/autocomplete').FilteredList;\n      if ($scope.paragraph.config.editorSetting.completionSupport) {\n        filteredList.prototype.setFilter = completionSupportWithBackend;\n      } else {\n        filteredList.prototype.setFilter = completionSupportWithoutBackend;\n      }\n    }\n\n    if ($scope.editor) {\n      $scope.editor.setHighlightActiveLine(focused);\n    }\n\n    if (isDigestPass === false || isDigestPass === undefined) {\n      // Protect against error in case digest is already running\n      $timeout(function() {\n        // Apply changes since they come from 3rd party library\n        $scope.$digest();\n      });\n    }\n  };\n\n  let getEditorSetting = function(paragraph, pragraphText) {\n    let deferred = $q.defer();\n    if (!$scope.revisionView) {\n      websocketMsgSrv.getEditorSetting(paragraph.id, pragraphText);\n      $timeout(\n        $scope.$on('editorSetting', function(event, data) {\n          if (paragraph.id === data.paragraphId) {\n            deferred.resolve(data);\n          }\n        }\n      ), 1000);\n    }\n    return deferred.promise;\n  };\n\n  let setEditorLanguage = function(session, language) {\n    let mode = 'ace/mode/';\n    mode += language;\n    $scope.paragraph.config.editorMode = mode;\n    session.setMode(mode);\n  };\n\n  const setParagraphMode = function(session, paragraphText, pos) {\n    // Evaluate the mode only if the the position is undefined\n    // or the first 30 characters of the paragraph have been modified\n    // or cursor position is at beginning of second line.(in case user hit enter after typing %magic)\n    if ((typeof pos === 'undefined') || (pos.row === 0 && pos.column < 30) ||\n      (pos.row === 1 && pos.column === 0) || pastePercentSign) {\n      // If paragraph loading, use config value if exists\n      if ((typeof pos === 'undefined') && $scope.paragraph.config.editorMode &&\n        !setInterpreterBindings) {\n        session.setMode($scope.paragraph.config.editorMode);\n      } else {\n        let magic = getParagraphMagic(paragraphText);\n        if (editorSetting.magic !== magic) {\n          editorSetting.magic = magic;\n          getEditorSetting($scope.paragraph, paragraphText)\n            .then(function(setting) {\n              setEditorLanguage(session, setting.editor.language);\n              _.merge($scope.paragraph.config.editorSetting, setting.editor);\n            });\n        }\n      }\n    }\n    pastePercentSign = false;\n    setInterpreterBindings = false;\n  };\n\n  // return the text that is composed of interpreter name and paragraph properties\n  const getParagraphMagic = function(paragraphText) {\n    let intpNameRegexp = /^\\s*(%.+?)(\\s)/g;\n    let match = intpNameRegexp.exec(paragraphText);\n    if (match) {\n      return match[1].trim();\n      // get default interpreter name if paragraph text doesn't start with '%'\n      // TODO(mina): dig into the cause what makes interpreterBindings to have no element\n    } else if ($scope.$parent.interpreterBindings && $scope.$parent.interpreterBindings.length !== 0) {\n      return $scope.$parent.interpreterBindings[0].name;\n    }\n    return '';\n  };\n\n  const autoAdjustEditorHeight = function(editor) {\n    let height =\n      editor.getSession().getScreenLength() *\n      editor.renderer.lineHeight;\n\n    angular.element('#' + editor.container.id).height(height.toString() + 'px');\n    editor.resize();\n  };\n\n  $rootScope.$on('scrollToCursor', function(event) {\n    // scroll on 'scrollToCursor' event only when cursor is in the last paragraph\n    let paragraphs = angular.element('div[id$=\"_paragraphColumn_main\"]');\n    if (paragraphs[paragraphs.length - 1].id.indexOf($scope.paragraph.id) === 0) {\n      $scope.scrollToCursor($scope.paragraph.id, 0);\n    }\n  });\n\n  /** scrollToCursor if it is necessary\n   * when cursor touches scrollTriggerEdgeMargin from the top (or bottom) of the screen, it autoscroll to place cursor around 1/3 of screen height from the top (or bottom)\n   * paragraphId : paragraph that has active cursor\n   * lastCursorMove : 1(down), 0, -1(up) last cursor move event\n   **/\n  $scope.scrollToCursor = function(paragraphId, lastCursorMove) {\n    if (!$scope.editor || !$scope.editor.isFocused()) {\n      // only make sense when editor is focused\n      return;\n    }\n    let lineHeight = $scope.editor.renderer.lineHeight;\n    let headerHeight = 103; // menubar, notebook titlebar\n    let scrollTriggerEdgeMargin = 50;\n\n    let documentHeight = angular.element(document).height();\n    let windowHeight = angular.element(window).height();  // actual viewport height\n\n    let scrollPosition = angular.element(document).scrollTop();\n    let editorPosition = angular.element('#' + paragraphId + '_editor').offset();\n    let position = $scope.editor.getCursorPosition();\n    let lastCursorPosition = $scope.editor.renderer.$cursorLayer.getPixelPosition(position, true);\n\n    let calculatedCursorPosition = editorPosition.top + lastCursorPosition.top + lineHeight * lastCursorMove;\n\n    let scrollTargetPos;\n    if (calculatedCursorPosition < scrollPosition + headerHeight + scrollTriggerEdgeMargin) {\n      scrollTargetPos = calculatedCursorPosition - headerHeight - ((windowHeight - headerHeight) / 3);\n      if (scrollTargetPos < 0) {\n        scrollTargetPos = 0;\n      }\n    } else if (calculatedCursorPosition > scrollPosition + scrollTriggerEdgeMargin + windowHeight - headerHeight) {\n      scrollTargetPos = calculatedCursorPosition - headerHeight - ((windowHeight - headerHeight) * 2 / 3);\n\n      if (scrollTargetPos > documentHeight) {\n        scrollTargetPos = documentHeight;\n      }\n    }\n\n    // cancel previous scroll animation\n    let bodyEl = angular.element('body');\n    bodyEl.stop();\n    bodyEl.finish();\n\n    // scroll to scrollTargetPos\n    if (scrollTargetPos) {\n      bodyEl.scrollTo(scrollTargetPos, {axis: 'y', interrupt: true, duration: 100});\n    }\n  };\n\n  $scope.getEditorValue = function() {\n    return !$scope.editor ? $scope.paragraph.text : $scope.editor.getValue();\n  };\n\n  $scope.getProgress = function() {\n    return $scope.currentProgress || 0;\n  };\n\n  $scope.getFormattedParagraphTime = () => {\n    return moment().toISOString();\n  };\n\n  $scope.getExecutionTime = function(pdata) {\n    const end = pdata.dateFinished;\n    const start = pdata.dateStarted;\n    let timeMs = Date.parse(end) - Date.parse(start);\n    if (isNaN(timeMs) || timeMs < 0) {\n      if ($scope.isResultOutdated(pdata)) {\n        return 'outdated';\n      }\n      return '';\n    }\n\n    const durationFormat = moment.duration((timeMs / 1000), 'seconds').format('h [hrs] m [min] s [sec]');\n    const endFormat = moment(pdata.dateFinished).format('MMMM DD YYYY, h:mm:ss A');\n\n    let user = (pdata.user === undefined || pdata.user === null) ? 'anonymous' : pdata.user;\n    let desc = `Took ${durationFormat}. Last updated by ${user} at ${endFormat}.`;\n\n    if ($scope.isResultOutdated(pdata)) {\n      desc += ' (outdated)';\n    }\n\n    return desc;\n  };\n\n  $scope.getElapsedTime = function(paragraph) {\n    return 'Started ' + moment(paragraph.dateStarted).fromNow() + '.';\n  };\n\n  $scope.isResultOutdated = function(pdata) {\n    if (pdata.dateUpdated !== undefined && Date.parse(pdata.dateUpdated) > Date.parse(pdata.dateStarted)) {\n      return true;\n    }\n    return false;\n  };\n\n  $scope.goToEnd = function(editor) {\n    editor.navigateFileEnd();\n  };\n\n  $scope.parseTableCell = function(cell) {\n    if (!isNaN(cell)) {\n      if (cell.length === 0 || Number(cell) > Number.MAX_SAFE_INTEGER || Number(cell) < Number.MIN_SAFE_INTEGER) {\n        return cell;\n      } else {\n        return Number(cell);\n      }\n    }\n    let d = moment(cell);\n    if (d.isValid()) {\n      return d;\n    }\n    return cell;\n  };\n\n  const commitParagraph = function(paragraph) {\n    const {\n      id,\n      title,\n      text,\n      config,\n      settings: {params},\n    } = paragraph;\n\n    return websocketMsgSrv.commitParagraph(id, title, text, config, params,\n      $route.current.pathParams.noteId);\n  };\n\n  /** Utility function */\n  $scope.goToSingleParagraph = function() {\n    let noteId = $route.current.pathParams.noteId;\n    let redirectToUrl = location.protocol + '//' + location.host + location.pathname + '#/notebook/' + noteId +\n      '/paragraph/' + $scope.paragraph.id + '?asIframe';\n    $window.open(redirectToUrl);\n  };\n\n  $scope.showScrollDownIcon = function(id) {\n    let doc = angular.element('#p' + id + '_text');\n    if (doc[0]) {\n      return doc[0].scrollHeight > doc.innerHeight();\n    }\n    return false;\n  };\n\n  $scope.scrollParagraphDown = function(id) {\n    let doc = angular.element('#p' + id + '_text');\n    doc.animate({scrollTop: doc[0].scrollHeight}, 500);\n    $scope.keepScrollDown = true;\n  };\n\n  $scope.showScrollUpIcon = function(id) {\n    if (angular.element('#p' + id + '_text')[0]) {\n      return angular.element('#p' + id + '_text')[0].scrollTop !== 0;\n    }\n    return false;\n  };\n\n  $scope.scrollParagraphUp = function(id) {\n    let doc = angular.element('#p' + id + '_text');\n    doc.animate({scrollTop: 0}, 500);\n    $scope.keepScrollDown = false;\n  };\n\n  $scope.$on('angularObjectUpdate', function(event, data) {\n    let noteId = $route.current.pathParams.noteId;\n    if (!data.noteId || data.noteId === noteId) {\n      let scope;\n      let registry;\n\n      if (!data.paragraphId || data.paragraphId === $scope.paragraph.id) {\n        scope = paragraphScope;\n        registry = angularObjectRegistry;\n      } else {\n        return;\n      }\n      let varName = data.angularObject.name;\n\n      if (angular.equals(data.angularObject.object, scope[varName])) {\n        // return when update has no change\n        return;\n      }\n\n      if (!registry[varName]) {\n        registry[varName] = {\n          interpreterGroupId: data.interpreterGroupId,\n          noteId: data.noteId,\n          paragraphId: data.paragraphId,\n        };\n      } else {\n        registry[varName].noteId = registry[varName].noteId || data.noteId;\n        registry[varName].paragraphId = registry[varName].paragraphId || data.paragraphId;\n      }\n\n      registry[varName].skipEmit = true;\n\n      if (!registry[varName].clearWatcher) {\n        registry[varName].clearWatcher = scope.$watch(varName, function(newValue, oldValue) {\n          console.log('angular object (paragraph) updated %o %o', varName, registry[varName]);\n          if (registry[varName].skipEmit) {\n            registry[varName].skipEmit = false;\n            return;\n          }\n          websocketMsgSrv.updateAngularObject(\n            registry[varName].noteId,\n            registry[varName].paragraphId,\n            varName,\n            newValue,\n            registry[varName].interpreterGroupId);\n        });\n      }\n      console.log('angular object (paragraph) created %o', varName);\n      scope[varName] = data.angularObject.object;\n\n      // create proxy for AngularFunction\n      if (varName.indexOf(ANGULAR_FUNCTION_OBJECT_NAME_PREFIX) === 0) {\n        let funcName = varName.substring((ANGULAR_FUNCTION_OBJECT_NAME_PREFIX).length);\n        scope[funcName] = function() {\n          // eslint-disable-next-line prefer-rest-params\n          scope[varName] = arguments;\n          // eslint-disable-next-line prefer-rest-params\n          console.log('angular function (paragraph) invoked %o', arguments);\n        };\n\n        console.log('angular function (paragraph) created %o', scope[funcName]);\n      }\n    }\n  });\n\n  $scope.$on('updateParaInfos', function(event, data) {\n    if (data.id === $scope.paragraph.id) {\n      $scope.paragraph.runtimeInfos = data.infos;\n    }\n  });\n\n  $scope.$on('angularObjectRemove', function(event, data) {\n    let noteId = $route.current.pathParams.noteId;\n    if (!data.noteId || data.noteId === noteId) {\n      let scope;\n      let registry;\n\n      if (!data.paragraphId || data.paragraphId === $scope.paragraph.id) {\n        scope = paragraphScope;\n        registry = angularObjectRegistry;\n      } else {\n        return;\n      }\n\n      let varName = data.name;\n\n      // clear watcher\n      if (registry[varName]) {\n        registry[varName].clearWatcher();\n        registry[varName] = undefined;\n      }\n\n      // remove scope variable\n      scope[varName] = undefined;\n\n      // remove proxy for AngularFunction\n      if (varName.indexOf(ANGULAR_FUNCTION_OBJECT_NAME_PREFIX) === 0) {\n        let funcName = varName.substring((ANGULAR_FUNCTION_OBJECT_NAME_PREFIX).length);\n        scope[funcName] = undefined;\n      }\n    }\n  });\n\n  /**\n   * @returns {boolean} true if updated is needed\n   */\n  function isUpdateRequired(oldPara, newPara) {\n    return (newPara.id === oldPara.id &&\n      (newPara.dateCreated !== oldPara.dateCreated ||\n      newPara.text !== oldPara.text ||\n      newPara.dateFinished !== oldPara.dateFinished ||\n      newPara.dateStarted !== oldPara.dateStarted ||\n      newPara.dateUpdated !== oldPara.dateUpdated ||\n      newPara.status !== oldPara.status ||\n      newPara.jobName !== oldPara.jobName ||\n      newPara.title !== oldPara.title ||\n      isEmpty(newPara.results) !== isEmpty(oldPara.results) ||\n      newPara.errorMessage !== oldPara.errorMessage ||\n      !angular.equals(newPara.settings, oldPara.settings) ||\n      !angular.equals(newPara.config, oldPara.config) ||\n      !angular.equals(newPara.runtimeInfos, oldPara.runtimeInfos)));\n  }\n\n  $scope.updateAllScopeTexts = function(oldPara, newPara) {\n    if (oldPara.text !== newPara.text) {\n      if ($scope.dirtyText) {         // check if editor has local update\n        if ($scope.dirtyText === newPara.text) {  // when local update is the same from remote, clear local update\n          $scope.paragraph.text = newPara.text;\n          $scope.dirtyText = undefined;\n          $scope.originalText = angular.copy(newPara.text);\n        } else { // if there're local update, keep it.\n          $scope.paragraph.text = newPara.text;\n        }\n      } else {\n        $scope.paragraph.text = newPara.text;\n        $scope.originalText = angular.copy(newPara.text);\n      }\n    }\n  };\n\n  $scope.updateParagraphObjectWhenUpdated = function(newPara) {\n    // resize col width\n    if ($scope.paragraph.config.colWidth !== newPara.config.colWidth) {\n      $scope.$broadcast('paragraphResized', $scope.paragraph.id);\n    }\n\n    if ($scope.paragraph.config.fontSize !== newPara.config.fontSize) {\n      $rootScope.$broadcast('fontSizeChanged', newPara.config.fontSize);\n    }\n\n    /** push the rest */\n    $scope.paragraph.aborted = newPara.aborted;\n    $scope.paragraph.user = newPara.user;\n    $scope.paragraph.dateUpdated = newPara.dateUpdated;\n    $scope.paragraph.dateCreated = newPara.dateCreated;\n    $scope.paragraph.dateFinished = newPara.dateFinished;\n    $scope.paragraph.dateStarted = newPara.dateStarted;\n    $scope.paragraph.errorMessage = newPara.errorMessage;\n    $scope.paragraph.jobName = newPara.jobName;\n    $scope.paragraph.title = newPara.title;\n    $scope.paragraph.lineNumbers = newPara.lineNumbers;\n    $scope.paragraph.status = newPara.status;\n    $scope.paragraph.fontSize = newPara.fontSize;\n    if (newPara.status !== ParagraphStatus.RUNNING) {\n      $scope.paragraph.results = newPara.results;\n    }\n    $scope.paragraph.settings = newPara.settings;\n    $scope.paragraph.runtimeInfos = newPara.runtimeInfos;\n    if ($scope.editor) {\n      let isReadOnly = $scope.isRunning(newPara) || $scope.isNoteRunning;\n      $scope.editor.setReadOnly(isReadOnly);\n    }\n\n    if (!$scope.asIframe) {\n      $scope.paragraph.config = newPara.config;\n      initializeDefault(newPara.config);\n    } else {\n      newPara.config.editorHide = true;\n      newPara.config.tableHide = false;\n      $scope.paragraph.config = newPara.config;\n    }\n  };\n\n  $scope.updateParagraph = function(oldPara, newPara, updateCallback) {\n     // 1. can't update on revision view\n    if ($scope.revisionView === true) {\n      return;\n    }\n\n     // 2. get status, refreshed\n    const statusChanged = (newPara.status !== oldPara.status);\n    const resultRefreshed = (newPara.dateFinished !== oldPara.dateFinished) ||\n       isEmpty(newPara.results) !== isEmpty(oldPara.results) ||\n       newPara.status === ParagraphStatus.ERROR ||\n       (newPara.status === ParagraphStatus.FINISHED && statusChanged);\n\n     // 3. update texts managed by $scope\n    $scope.updateAllScopeTexts(oldPara, newPara);\n\n     // 4. execute callback to update result\n    updateCallback();\n\n     // 5. update remaining paragraph objects\n    $scope.updateParagraphObjectWhenUpdated(newPara);\n\n     // 6. handle scroll down by key properly if new paragraph is added\n    if (statusChanged || resultRefreshed) {\n       // when last paragraph runs, zeppelin automatically appends new paragraph.\n       // this broadcast will focus to the newly inserted paragraph\n      const paragraphs = angular.element('div[id$=\"_paragraphColumn_main\"]');\n      if (paragraphs.length >= 2 && paragraphs[paragraphs.length - 2].id.indexOf($scope.paragraph.id) === 0) {\n         // rendering output can took some time. So delay scrolling event firing for sometime.\n        setTimeout(() => {\n          $rootScope.$broadcast('scrollToCursor');\n        }, 500);\n      }\n    }\n  };\n\n  /** $scope.$on */\n\n  $scope.$on('runParagraphUsingSpell', function(event, data) {\n    const oldPara = $scope.paragraph;\n    let newPara = data.paragraph;\n    const updateCallback = () => {\n      $scope.runParagraph(newPara.text, true, true);\n    };\n\n    if (!isUpdateRequired(oldPara, newPara)) {\n      return;\n    }\n\n    $scope.updateParagraph(oldPara, newPara, updateCallback);\n  });\n\n  $scope.$on('updateParagraph', function(event, data) {\n    const oldPara = $scope.paragraph;\n    const newPara = data.paragraph;\n\n    if (!isUpdateRequired(oldPara, newPara)) {\n      return;\n    }\n\n    const updateCallback = () => {\n      // broadcast `updateResult` message to trigger result update\n      if (newPara.results && newPara.results.msg) {\n        for (let i in newPara.results.msg) {\n          if (newPara.results.msg.hasOwnProperty(i)) {\n            const newResult = newPara.results.msg ? newPara.results.msg[i] : {};\n            const oldResult = (oldPara.results && oldPara.results.msg)\n              ? oldPara.results.msg[i] : {};\n            const newConfig = newPara.config.results ? newPara.config.results[i] : {};\n            const oldConfig = oldPara.config.results ? oldPara.config.results[i] : {};\n            if (!angular.equals(newResult, oldResult) ||\n              !angular.equals(newConfig, oldConfig)) {\n              $rootScope.$broadcast('updateResult', newResult, newConfig, newPara, parseInt(i));\n            }\n          }\n        }\n      }\n    };\n\n    $scope.updateParagraph(oldPara, newPara, updateCallback);\n  });\n\n  $scope.$on('patchReceived', function(event, data) {\n    if (data.paragraphId === $scope.paragraph.id) {\n      let patch = data.patch;\n      patch = $scope.diffMatchPatch.patch_fromText(patch);\n      if (!$scope.paragraph.text || $scope.paragraph.text === undefined) {\n        $scope.paragraph.text = '';\n      }\n      $scope.paragraph.text = $scope.diffMatchPatch.patch_apply(patch, $scope.paragraph.text)[0];\n      $scope.originalText = angular.copy($scope.paragraph.text);\n      let newPosition = $scope.editor.getCursorPosition();\n      if (newPosition && newPosition.row && newPosition.column) {\n        $scope.cursorPosition = $scope.editor.getCursorPosition();\n      }\n    }\n  });\n\n  $scope.$on('updateProgress', function(event, data) {\n    if (data.id === $scope.paragraph.id) {\n      $scope.currentProgress = data.progress;\n    }\n  });\n\n  $scope.$on('updateStatus', function(event, data) {\n    if (data.id === $scope.paragraph.id) {\n      $scope.paragraph.status = data.status;\n    }\n  });\n\n  $scope.$on('appendParagraphOutput', function(event, data) {\n    if (data.paragraphId === $scope.paragraph.id) {\n      if (!$scope.paragraph.results) {\n        $scope.paragraph.results = {};\n\n        if (!$scope.paragraph.results.msg) {\n          $scope.paragraph.results.msg = [];\n        }\n\n        $scope.paragraph.results.msg[data.index] = {\n          data: data.data,\n          type: data.type,\n        };\n\n        $rootScope.$broadcast(\n          'updateResult',\n          $scope.paragraph.results.msg[data.index],\n          $scope.paragraph.config.results[data.index],\n          $scope.paragraph,\n          data.index);\n      }\n    }\n  });\n\n  $scope.$on('keyEvent', function(event, keyEvent) {\n    if ($scope.paragraphFocused) {\n      let paragraphId = $scope.paragraph.id;\n      let keyCode = keyEvent.keyCode;\n      let noShortcutDefined = false;\n      let editorHide = $scope.paragraph.config.editorHide;\n\n      if (editorHide && (keyCode === 38 || (keyCode === 80 && keyEvent.ctrlKey && !keyEvent.altKey))) { // up\n        // move focus to previous paragraph\n        $scope.$emit('moveFocusToPreviousParagraph', paragraphId);\n      } else if (editorHide && (keyCode === 40 || (keyCode === 78 && keyEvent.ctrlKey && !keyEvent.altKey))) { // down\n        // move focus to next paragraph\n        // $timeout stops chaining effect of focus propogation\n        $timeout(() => $scope.$emit('moveFocusToNextParagraph', paragraphId));\n      } else if (!keyEvent.ctrlKey && keyEvent.shiftKey && keyCode === 13) { // Shift + Enter\n        $scope.runParagraphFromShortcut($scope.getEditorValue());\n      } else if (keyEvent.ctrlKey && keyEvent.shiftKey && keyCode === 38) { // Ctrl + Shift + UP\n        $scope.runAllToThisFromShortcut($scope.paragraph);\n      } else if (keyEvent.ctrlKey && keyEvent.shiftKey && keyCode === 40) { // Ctrl + Shift + Down\n        $scope.runAllFromThisFromShortcut($scope.paragraph);\n      }else if (keyEvent.ctrlKey && keyEvent.altKey && keyCode === 67) { // Ctrl + Alt + c\n        $scope.cancelParagraph($scope.paragraph);\n      } else if (keyEvent.ctrlKey && keyEvent.altKey && keyCode === 68) { // Ctrl + Alt + d\n        $scope.removeParagraph($scope.paragraph);\n      } else if (keyEvent.ctrlKey && keyEvent.altKey && keyCode === 75) { // Ctrl + Alt + k\n        $scope.moveUp($scope.paragraph);\n      } else if (keyEvent.ctrlKey && keyEvent.altKey && keyCode === 74) { // Ctrl + Alt + j\n        $scope.moveDown($scope.paragraph);\n      } else if (keyEvent.ctrlKey && keyEvent.altKey && keyCode === 65) { // Ctrl + Alt + a\n        $scope.insertNew('above');\n      } else if (keyEvent.ctrlKey && keyEvent.altKey && keyCode === 66) { // Ctrl + Alt + b\n        $scope.insertNew('below');\n      } else if (keyEvent.ctrlKey && keyEvent.altKey && keyCode === 79) { // Ctrl + Alt + o\n        $scope.toggleOutput($scope.paragraph);\n      } else if (keyEvent.ctrlKey && keyEvent.altKey && keyCode === 82) { // Ctrl + Alt + r\n        $scope.toggleEnableDisable($scope.paragraph);\n      } else if (keyEvent.ctrlKey && keyEvent.altKey && keyCode === 69) { // Ctrl + Alt + e\n        $scope.toggleEditor($scope.paragraph);\n      } else if (keyEvent.ctrlKey && keyEvent.altKey && keyCode === 77) { // Ctrl + Alt + m\n        if ($scope.paragraph.config.lineNumbers) {\n          $scope.hideLineNumbers($scope.paragraph);\n        } else {\n          $scope.showLineNumbers($scope.paragraph);\n        }\n      } else if (keyEvent.ctrlKey && keyEvent.shiftKey && keyCode === 189) { // Ctrl + Shift + -\n        $scope.changeColWidth($scope.paragraph, Math.max(1, $scope.paragraph.config.colWidth - 1));\n      } else if (keyEvent.ctrlKey && keyEvent.shiftKey && keyCode === 187) { // Ctrl + Shift + =\n        $scope.changeColWidth($scope.paragraph, Math.min(12, $scope.paragraph.config.colWidth + 1));\n      } else if (keyEvent.ctrlKey && keyEvent.altKey && keyCode === 84) { // Ctrl + Alt + t\n        if ($scope.paragraph.config.title) {\n          $scope.hideTitle($scope.paragraph);\n        } else {\n          $scope.showTitle($scope.paragraph);\n        }\n      } else if (keyEvent.ctrlKey && keyEvent.shiftKey && keyCode === 67) { // Ctrl + Alt + c\n        $scope.copyPara('below');\n      } else if (keyEvent.ctrlKey && keyEvent.altKey && keyCode === 76) { // Ctrl + Alt + l\n        $scope.clearParagraphOutput($scope.paragraph);\n      } else if (keyEvent.ctrlKey && keyEvent.altKey && keyCode === 87) { // Ctrl + Alt + w\n        $scope.goToSingleParagraph();\n      } else if (keyEvent.ctrlKey && keyEvent.altKey && keyCode === 70) { // Ctrl + f\n        $scope.$emit('toggleSearchBox');\n      } else {\n        noShortcutDefined = true;\n      }\n\n      if (!noShortcutDefined) {\n        keyEvent.preventDefault();\n      }\n    }\n  });\n\n  $scope.$on('focusParagraph', function(event, paragraphId, cursorPosRow, cursorPosCol, mouseEvent) {\n    if (cursorPosCol === null || cursorPosCol === undefined) {\n      cursorPosCol = 0;\n    }\n    if ($scope.paragraph.id === paragraphId) {\n      // focus editor\n      if (!$scope.paragraph.config.editorHide) {\n        if (!mouseEvent) {\n          $scope.editor.focus();\n          // move cursor to the first row (or the last row)\n          let row;\n          if (cursorPosRow >= 0) {\n            row = cursorPosRow;\n            $scope.editor.gotoLine(row, cursorPosCol);\n          } else {\n            row = $scope.editor.session.getLength();\n            $scope.editor.gotoLine(row, cursorPosCol);\n          }\n          $scope.scrollToCursor($scope.paragraph.id, cursorPosCol);\n        }\n      }\n      handleFocus(true);\n    } else {\n      if ($scope.editor !== undefined && $scope.editor !== null) {\n        $scope.editor.blur();\n      }\n      let isDigestPass = true;\n      handleFocus(false, isDigestPass);\n    }\n  });\n\n  $scope.$on('saveInterpreterBindings', function(event, paragraphId) {\n    if ($scope.paragraph.id === paragraphId && $scope.editor) {\n      setInterpreterBindings = true;\n      setParagraphMode($scope.editor.getSession(), $scope.editor.getSession().getValue());\n    }\n  });\n\n  $scope.$on('doubleClickParagraph', function(event, paragraphId) {\n    if ($scope.paragraph.id === paragraphId && $scope.paragraph.config.editorHide &&\n      $scope.paragraph.config.editorSetting.editOnDblClick && $scope.revisionView !== true) {\n      let deferred = $q.defer();\n      openEditorAndCloseTable($scope.paragraph);\n      $timeout(\n        $scope.$on('updateParagraph', function(event, data) {\n          deferred.resolve(data);\n        }\n        ), 1000);\n\n      deferred.promise.then(function(data) {\n        if ($scope.editor) {\n          $scope.editor.focus();\n          $scope.goToEnd($scope.editor);\n        }\n      });\n    }\n  });\n\n  $scope.$on('openEditor', function(event) {\n    $scope.openEditor($scope.paragraph);\n  });\n\n  $scope.$on('closeEditor', function(event) {\n    $scope.closeEditor($scope.paragraph);\n  });\n\n  $scope.$on('openTable', function(event) {\n    $scope.openTable($scope.paragraph);\n  });\n\n  $scope.$on('closeTable', function(event) {\n    $scope.closeTable($scope.paragraph);\n  });\n\n  $scope.$on('resultRendered', function(event, paragraphId) {\n    if ($scope.paragraph.id !== paragraphId) {\n      return;\n    }\n\n    /** increase spell result count and return if not finished */\n    if (!$scope.increaseSpellTransactionResultCount()) {\n      return;\n    }\n\n    $scope.cleanupSpellTransaction();\n  });\n\n  $scope.$on('fontSizeChanged', function(event, fontSize) {\n    if ($scope.editor) {\n      $scope.editor.setOptions({\n        fontSize: fontSize + 'pt',\n      });\n    }\n  });\n\n  const clearSearchSelection = function() {\n    for (let i = 0; i < searchRanges.length; ++i) {\n      $scope.editor.session.removeMarker(searchRanges[i].markerId);\n    }\n    searchRanges = [];\n    if (currentRange.id !== -1) {\n      $scope.editor.session.removeMarker(currentRange.markerId);\n    }\n    currentRange = getCurrentRangeDefault();\n  };\n\n  $scope.onEditorClick = function() {\n    $scope.$emit('editorClicked');\n  };\n\n  $scope.$on('unmarkAll', function() {\n    clearSearchSelection();\n  });\n\n  const markAllOccurrences = function(text) {\n    clearSearchSelection();\n    if (text === '') {\n      return;\n    }\n    if ($scope.editor.findAll(text) === 0) {\n      return;\n    }\n    let ranges = $scope.editor.selection.getAllRanges();\n    $scope.editor.selection.toSingleRange();\n    $scope.editor.selection.clearSelection();\n    for (let i = 0; i < ranges.length; ++i) {\n      let id = $scope.editor.session.addMarker(ranges[i], 'ace_selected-word', 'text');\n      searchRanges.push({markerId: id, range: ranges[i]});\n    }\n  };\n\n  $scope.$on('markAllOccurrences', function(event, text) {\n    markAllOccurrences(text);\n    if (searchRanges.length > 0) {\n      $scope.$emit('occurrencesExists', searchRanges.length);\n    }\n  });\n\n  $scope.$on('nextOccurrence', function(event, paragraphId) {\n    if ($scope.paragraph.id !== paragraphId) {\n      return;\n    }\n    let highlightedRangeExists = currentRange.id !== -1;\n    if (highlightedRangeExists) {\n      $scope.editor.session.removeMarker(currentRange.markerId);\n      currentRange.markerId = -1;\n    }\n    ++currentRange.id;\n    if (currentRange.id >= searchRanges.length) {\n      currentRange.id = -1;\n      $scope.$emit('noNextOccurrence');\n      return;\n    }\n    currentRange.markerId = $scope.editor.session.addMarker(\n      searchRanges[currentRange.id].range, 'ace_selection', 'text');\n  });\n\n  $scope.$on('prevOccurrence', function(event, paragraphId) {\n    if ($scope.paragraph.id !== paragraphId) {\n      return;\n    }\n    let highlightedRangeExists = currentRange.id !== -1;\n    if (highlightedRangeExists) {\n      $scope.editor.session.removeMarker(currentRange.markerId);\n      currentRange.markerId = -1;\n    }\n    if (currentRange.id === -1) {\n      currentRange.id = searchRanges.length;\n    }\n    --currentRange.id;\n    if (currentRange.id === -1) {\n      $scope.$emit('noPrevOccurrence');\n      return;\n    }\n    currentRange.markerId = $scope.editor.session.addMarker(\n      searchRanges[currentRange.id].range, 'ace_selection', 'text');\n  });\n\n  $scope.$on('replaceCurrent', function(event, from, to) {\n    if (currentRange.id === -1) {\n      return;\n    }\n    let indexFromEnd = searchRanges.length - currentRange.id - 1;\n    let prevId = currentRange.id;\n    $scope.editor.session.removeMarker(currentRange.markerId);\n    $scope.editor.session.replace(searchRanges[currentRange.id].range, to);\n    markAllOccurrences(from);\n    let currentIndex = searchRanges.length - indexFromEnd;\n    $scope.$emit('occurrencesCountChanged', currentIndex - prevId - 1);\n    currentRange.id = currentIndex;\n    if (currentRange.id === searchRanges.length) {\n      currentRange.id = -1;\n      $scope.$emit('noNextOccurrenceAfterReplace');\n    } else {\n      currentRange.markerId = $scope.editor.session.addMarker(\n        searchRanges[currentRange.id].range, 'ace_selection', 'text');\n    }\n  });\n\n  $scope.$on('replaceAll', function(event, from, to) {\n    clearSearchSelection();\n    $scope.editor.replaceAll(to, {needle: from});\n  });\n\n  $scope.$on('checkOccurrences', function() {\n    if (searchRanges.length > 0) {\n      $scope.$emit('occurrencesExists', searchRanges.length);\n    }\n  });\n}\n","/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint-disable no-unused-vars */\nimport {\n  DefaultDisplayType,\n  SpellResult,\n} from './spell-result';\n/* eslint-enable no-unused-vars */\n\nexport class SpellBase {\n  constructor(magic) {\n    this.magic = magic;\n  }\n\n  /**\n   * Consumes text and return `SpellResult`.\n   *\n   * @param paragraphText {string} which doesn't include magic\n   * @param config {Object}\n   * @return {SpellResult}\n   */\n  interpret(paragraphText, config) {\n    throw new Error('SpellBase.interpret() should be overrided');\n  }\n\n  /**\n   * return magic for this spell.\n   * (e.g `%flowchart`)\n   * @return {string}\n   */\n  getMagic() {\n    return this.magic;\n  }\n}\n","'use strict'\r\n\r\n/**\r\n * Diff Match and Patch\r\n *\r\n * Copyright 2006 Google Inc.\r\n * http://code.google.com/p/google-diff-match-patch/\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\n/**\r\n * @fileoverview Computes the difference between two texts to create a patch.\r\n * Applies the patch onto another text, allowing for errors.\r\n * @author fraser@google.com (Neil Fraser)\r\n */\r\n\r\n/**\r\n * Class containing the diff, match and patch methods.\r\n * @constructor\r\n */\r\nfunction diff_match_patch() {\r\n\r\n  // Defaults.\r\n  // Redefine these in your program to override the defaults.\r\n\r\n  // Number of seconds to map a diff before giving up (0 for infinity).\r\n  this.Diff_Timeout = 1.0;\r\n  // Cost of an empty edit operation in terms of edit characters.\r\n  this.Diff_EditCost = 4;\r\n  // At what point is no match declared (0.0 = perfection, 1.0 = very loose).\r\n  this.Match_Threshold = 0.5;\r\n  // How far to search for a match (0 = exact location, 1000+ = broad match).\r\n  // A match this many characters away from the expected location will add\r\n  // 1.0 to the score (0.0 is a perfect match).\r\n  this.Match_Distance = 1000;\r\n  // When deleting a large block of text (over ~64 characters), how close do\r\n  // the contents have to be to match the expected contents. (0.0 = perfection,\r\n  // 1.0 = very loose).  Note that Match_Threshold controls how closely the\r\n  // end points of a delete need to match.\r\n  this.Patch_DeleteThreshold = 0.5;\r\n  // Chunk size for context length.\r\n  this.Patch_Margin = 4;\r\n\r\n  // The number of bits in an int.\r\n  this.Match_MaxBits = 32;\r\n}\r\n\r\n\r\n//  DIFF FUNCTIONS\r\n\r\n\r\n/**\r\n * The data structure representing a diff is an array of tuples:\r\n * [[DIFF_DELETE, 'Hello'], [DIFF_INSERT, 'Goodbye'], [DIFF_EQUAL, ' world.']]\r\n * which means: delete 'Hello', add 'Goodbye' and keep ' world.'\r\n */\r\nvar DIFF_DELETE = -1;\r\nvar DIFF_INSERT = 1;\r\nvar DIFF_EQUAL = 0;\r\n\r\n/** @typedef {{0: number, 1: string}} */\r\ndiff_match_patch.Diff;\r\n\r\n\r\n/**\r\n * Find the differences between two texts.  Simplifies the problem by stripping\r\n * any common prefix or suffix off the texts before diffing.\r\n * @param {string} text1 Old string to be diffed.\r\n * @param {string} text2 New string to be diffed.\r\n * @param {boolean=} opt_checklines Optional speedup flag. If present and false,\r\n *     then don't run a line-level diff first to identify the changed areas.\r\n *     Defaults to true, which does a faster, slightly less optimal diff.\r\n * @param {number} opt_deadline Optional time when the diff should be complete\r\n *     by.  Used internally for recursive calls.  Users should set DiffTimeout\r\n *     instead.\r\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\r\n */\r\ndiff_match_patch.prototype.diff_main = function(text1, text2, opt_checklines,\r\n    opt_deadline) {\r\n  // Set a deadline by which time the diff must be complete.\r\n  if (typeof opt_deadline == 'undefined') {\r\n    if (this.Diff_Timeout <= 0) {\r\n      opt_deadline = Number.MAX_VALUE;\r\n    } else {\r\n      opt_deadline = (new Date).getTime() + this.Diff_Timeout * 1000;\r\n    }\r\n  }\r\n  var deadline = opt_deadline;\r\n\r\n  // Check for null inputs.\r\n  if (text1 == null || text2 == null) {\r\n    throw new Error('Null input. (diff_main)');\r\n  }\r\n\r\n  // Check for equality (speedup).\r\n  if (text1 == text2) {\r\n    if (text1) {\r\n      return [[DIFF_EQUAL, text1]];\r\n    }\r\n    return [];\r\n  }\r\n\r\n  if (typeof opt_checklines == 'undefined') {\r\n    opt_checklines = true;\r\n  }\r\n  var checklines = opt_checklines;\r\n\r\n  // Trim off common prefix (speedup).\r\n  var commonlength = this.diff_commonPrefix(text1, text2);\r\n  var commonprefix = text1.substring(0, commonlength);\r\n  text1 = text1.substring(commonlength);\r\n  text2 = text2.substring(commonlength);\r\n\r\n  // Trim off common suffix (speedup).\r\n  commonlength = this.diff_commonSuffix(text1, text2);\r\n  var commonsuffix = text1.substring(text1.length - commonlength);\r\n  text1 = text1.substring(0, text1.length - commonlength);\r\n  text2 = text2.substring(0, text2.length - commonlength);\r\n\r\n  // Compute the diff on the middle block.\r\n  var diffs = this.diff_compute_(text1, text2, checklines, deadline);\r\n\r\n  // Restore the prefix and suffix.\r\n  if (commonprefix) {\r\n    diffs.unshift([DIFF_EQUAL, commonprefix]);\r\n  }\r\n  if (commonsuffix) {\r\n    diffs.push([DIFF_EQUAL, commonsuffix]);\r\n  }\r\n  this.diff_cleanupMerge(diffs);\r\n  return diffs;\r\n};\r\n\r\n\r\n/**\r\n * Find the differences between two texts.  Assumes that the texts do not\r\n * have any common prefix or suffix.\r\n * @param {string} text1 Old string to be diffed.\r\n * @param {string} text2 New string to be diffed.\r\n * @param {boolean} checklines Speedup flag.  If false, then don't run a\r\n *     line-level diff first to identify the changed areas.\r\n *     If true, then run a faster, slightly less optimal diff.\r\n * @param {number} deadline Time when the diff should be complete by.\r\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\r\n * @private\r\n */\r\ndiff_match_patch.prototype.diff_compute_ = function(text1, text2, checklines,\r\n    deadline) {\r\n  var diffs;\r\n\r\n  if (!text1) {\r\n    // Just add some text (speedup).\r\n    return [[DIFF_INSERT, text2]];\r\n  }\r\n\r\n  if (!text2) {\r\n    // Just delete some text (speedup).\r\n    return [[DIFF_DELETE, text1]];\r\n  }\r\n\r\n  var longtext = text1.length > text2.length ? text1 : text2;\r\n  var shorttext = text1.length > text2.length ? text2 : text1;\r\n  var i = longtext.indexOf(shorttext);\r\n  if (i != -1) {\r\n    // Shorter text is inside the longer text (speedup).\r\n    diffs = [[DIFF_INSERT, longtext.substring(0, i)],\r\n             [DIFF_EQUAL, shorttext],\r\n             [DIFF_INSERT, longtext.substring(i + shorttext.length)]];\r\n    // Swap insertions for deletions if diff is reversed.\r\n    if (text1.length > text2.length) {\r\n      diffs[0][0] = diffs[2][0] = DIFF_DELETE;\r\n    }\r\n    return diffs;\r\n  }\r\n\r\n  if (shorttext.length == 1) {\r\n    // Single character string.\r\n    // After the previous speedup, the character can't be an equality.\r\n    return [[DIFF_DELETE, text1], [DIFF_INSERT, text2]];\r\n  }\r\n\r\n  // Check to see if the problem can be split in two.\r\n  var hm = this.diff_halfMatch_(text1, text2);\r\n  if (hm) {\r\n    // A half-match was found, sort out the return data.\r\n    var text1_a = hm[0];\r\n    var text1_b = hm[1];\r\n    var text2_a = hm[2];\r\n    var text2_b = hm[3];\r\n    var mid_common = hm[4];\r\n    // Send both pairs off for separate processing.\r\n    var diffs_a = this.diff_main(text1_a, text2_a, checklines, deadline);\r\n    var diffs_b = this.diff_main(text1_b, text2_b, checklines, deadline);\r\n    // Merge the results.\r\n    return diffs_a.concat([[DIFF_EQUAL, mid_common]], diffs_b);\r\n  }\r\n\r\n  if (checklines && text1.length > 100 && text2.length > 100) {\r\n    return this.diff_lineMode_(text1, text2, deadline);\r\n  }\r\n\r\n  return this.diff_bisect_(text1, text2, deadline);\r\n};\r\n\r\n\r\n/**\r\n * Do a quick line-level diff on both strings, then rediff the parts for\r\n * greater accuracy.\r\n * This speedup can produce non-minimal diffs.\r\n * @param {string} text1 Old string to be diffed.\r\n * @param {string} text2 New string to be diffed.\r\n * @param {number} deadline Time when the diff should be complete by.\r\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\r\n * @private\r\n */\r\ndiff_match_patch.prototype.diff_lineMode_ = function(text1, text2, deadline) {\r\n  // Scan the text on a line-by-line basis first.\r\n  var a = this.diff_linesToChars_(text1, text2);\r\n  text1 = a.chars1;\r\n  text2 = a.chars2;\r\n  var linearray = a.lineArray;\r\n\r\n  var diffs = this.diff_main(text1, text2, false, deadline);\r\n\r\n  // Convert the diff back to original text.\r\n  this.diff_charsToLines_(diffs, linearray);\r\n  // Eliminate freak matches (e.g. blank lines)\r\n  this.diff_cleanupSemantic(diffs);\r\n\r\n  // Rediff any replacement blocks, this time character-by-character.\r\n  // Add a dummy entry at the end.\r\n  diffs.push([DIFF_EQUAL, '']);\r\n  var pointer = 0;\r\n  var count_delete = 0;\r\n  var count_insert = 0;\r\n  var text_delete = '';\r\n  var text_insert = '';\r\n  while (pointer < diffs.length) {\r\n    switch (diffs[pointer][0]) {\r\n      case DIFF_INSERT:\r\n        count_insert++;\r\n        text_insert += diffs[pointer][1];\r\n        break;\r\n      case DIFF_DELETE:\r\n        count_delete++;\r\n        text_delete += diffs[pointer][1];\r\n        break;\r\n      case DIFF_EQUAL:\r\n        // Upon reaching an equality, check for prior redundancies.\r\n        if (count_delete >= 1 && count_insert >= 1) {\r\n          // Delete the offending records and add the merged ones.\r\n          diffs.splice(pointer - count_delete - count_insert,\r\n                       count_delete + count_insert);\r\n          pointer = pointer - count_delete - count_insert;\r\n          var a = this.diff_main(text_delete, text_insert, false, deadline);\r\n          for (var j = a.length - 1; j >= 0; j--) {\r\n            diffs.splice(pointer, 0, a[j]);\r\n          }\r\n          pointer = pointer + a.length;\r\n        }\r\n        count_insert = 0;\r\n        count_delete = 0;\r\n        text_delete = '';\r\n        text_insert = '';\r\n        break;\r\n    }\r\n    pointer++;\r\n  }\r\n  diffs.pop();  // Remove the dummy entry at the end.\r\n\r\n  return diffs;\r\n};\r\n\r\n\r\n/**\r\n * Find the 'middle snake' of a diff, split the problem in two\r\n * and return the recursively constructed diff.\r\n * See Myers 1986 paper: An O(ND) Difference Algorithm and Its Variations.\r\n * @param {string} text1 Old string to be diffed.\r\n * @param {string} text2 New string to be diffed.\r\n * @param {number} deadline Time at which to bail if not yet complete.\r\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\r\n * @private\r\n */\r\ndiff_match_patch.prototype.diff_bisect_ = function(text1, text2, deadline) {\r\n  // Cache the text lengths to prevent multiple calls.\r\n  var text1_length = text1.length;\r\n  var text2_length = text2.length;\r\n  var max_d = Math.ceil((text1_length + text2_length) / 2);\r\n  var v_offset = max_d;\r\n  var v_length = 2 * max_d;\r\n  var v1 = new Array(v_length);\r\n  var v2 = new Array(v_length);\r\n  // Setting all elements to -1 is faster in Chrome & Firefox than mixing\r\n  // integers and undefined.\r\n  for (var x = 0; x < v_length; x++) {\r\n    v1[x] = -1;\r\n    v2[x] = -1;\r\n  }\r\n  v1[v_offset + 1] = 0;\r\n  v2[v_offset + 1] = 0;\r\n  var delta = text1_length - text2_length;\r\n  // If the total number of characters is odd, then the front path will collide\r\n  // with the reverse path.\r\n  var front = (delta % 2 != 0);\r\n  // Offsets for start and end of k loop.\r\n  // Prevents mapping of space beyond the grid.\r\n  var k1start = 0;\r\n  var k1end = 0;\r\n  var k2start = 0;\r\n  var k2end = 0;\r\n  for (var d = 0; d < max_d; d++) {\r\n    // Bail out if deadline is reached.\r\n    if ((new Date()).getTime() > deadline) {\r\n      break;\r\n    }\r\n\r\n    // Walk the front path one step.\r\n    for (var k1 = -d + k1start; k1 <= d - k1end; k1 += 2) {\r\n      var k1_offset = v_offset + k1;\r\n      var x1;\r\n      if (k1 == -d || (k1 != d && v1[k1_offset - 1] < v1[k1_offset + 1])) {\r\n        x1 = v1[k1_offset + 1];\r\n      } else {\r\n        x1 = v1[k1_offset - 1] + 1;\r\n      }\r\n      var y1 = x1 - k1;\r\n      while (x1 < text1_length && y1 < text2_length &&\r\n             text1.charAt(x1) == text2.charAt(y1)) {\r\n        x1++;\r\n        y1++;\r\n      }\r\n      v1[k1_offset] = x1;\r\n      if (x1 > text1_length) {\r\n        // Ran off the right of the graph.\r\n        k1end += 2;\r\n      } else if (y1 > text2_length) {\r\n        // Ran off the bottom of the graph.\r\n        k1start += 2;\r\n      } else if (front) {\r\n        var k2_offset = v_offset + delta - k1;\r\n        if (k2_offset >= 0 && k2_offset < v_length && v2[k2_offset] != -1) {\r\n          // Mirror x2 onto top-left coordinate system.\r\n          var x2 = text1_length - v2[k2_offset];\r\n          if (x1 >= x2) {\r\n            // Overlap detected.\r\n            return this.diff_bisectSplit_(text1, text2, x1, y1, deadline);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // Walk the reverse path one step.\r\n    for (var k2 = -d + k2start; k2 <= d - k2end; k2 += 2) {\r\n      var k2_offset = v_offset + k2;\r\n      var x2;\r\n      if (k2 == -d || (k2 != d && v2[k2_offset - 1] < v2[k2_offset + 1])) {\r\n        x2 = v2[k2_offset + 1];\r\n      } else {\r\n        x2 = v2[k2_offset - 1] + 1;\r\n      }\r\n      var y2 = x2 - k2;\r\n      while (x2 < text1_length && y2 < text2_length &&\r\n             text1.charAt(text1_length - x2 - 1) ==\r\n             text2.charAt(text2_length - y2 - 1)) {\r\n        x2++;\r\n        y2++;\r\n      }\r\n      v2[k2_offset] = x2;\r\n      if (x2 > text1_length) {\r\n        // Ran off the left of the graph.\r\n        k2end += 2;\r\n      } else if (y2 > text2_length) {\r\n        // Ran off the top of the graph.\r\n        k2start += 2;\r\n      } else if (!front) {\r\n        var k1_offset = v_offset + delta - k2;\r\n        if (k1_offset >= 0 && k1_offset < v_length && v1[k1_offset] != -1) {\r\n          var x1 = v1[k1_offset];\r\n          var y1 = v_offset + x1 - k1_offset;\r\n          // Mirror x2 onto top-left coordinate system.\r\n          x2 = text1_length - x2;\r\n          if (x1 >= x2) {\r\n            // Overlap detected.\r\n            return this.diff_bisectSplit_(text1, text2, x1, y1, deadline);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  // Diff took too long and hit the deadline or\r\n  // number of diffs equals number of characters, no commonality at all.\r\n  return [[DIFF_DELETE, text1], [DIFF_INSERT, text2]];\r\n};\r\n\r\n\r\n/**\r\n * Given the location of the 'middle snake', split the diff in two parts\r\n * and recurse.\r\n * @param {string} text1 Old string to be diffed.\r\n * @param {string} text2 New string to be diffed.\r\n * @param {number} x Index of split point in text1.\r\n * @param {number} y Index of split point in text2.\r\n * @param {number} deadline Time at which to bail if not yet complete.\r\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\r\n * @private\r\n */\r\ndiff_match_patch.prototype.diff_bisectSplit_ = function(text1, text2, x, y,\r\n    deadline) {\r\n  var text1a = text1.substring(0, x);\r\n  var text2a = text2.substring(0, y);\r\n  var text1b = text1.substring(x);\r\n  var text2b = text2.substring(y);\r\n\r\n  // Compute both diffs serially.\r\n  var diffs = this.diff_main(text1a, text2a, false, deadline);\r\n  var diffsb = this.diff_main(text1b, text2b, false, deadline);\r\n\r\n  return diffs.concat(diffsb);\r\n};\r\n\r\n\r\n/**\r\n * Split two texts into an array of strings.  Reduce the texts to a string of\r\n * hashes where each Unicode character represents one line.\r\n * @param {string} text1 First string.\r\n * @param {string} text2 Second string.\r\n * @return {{chars1: string, chars2: string, lineArray: !Array.<string>}}\r\n *     An object containing the encoded text1, the encoded text2 and\r\n *     the array of unique strings.\r\n *     The zeroth element of the array of unique strings is intentionally blank.\r\n * @private\r\n */\r\ndiff_match_patch.prototype.diff_linesToChars_ = function(text1, text2) {\r\n  var lineArray = [];  // e.g. lineArray[4] == 'Hello\\n'\r\n  var lineHash = {};   // e.g. lineHash['Hello\\n'] == 4\r\n\r\n  // '\\x00' is a valid character, but various debuggers don't like it.\r\n  // So we'll insert a junk entry to avoid generating a null character.\r\n  lineArray[0] = '';\r\n\r\n  /**\r\n   * Split a text into an array of strings.  Reduce the texts to a string of\r\n   * hashes where each Unicode character represents one line.\r\n   * Modifies linearray and linehash through being a closure.\r\n   * @param {string} text String to encode.\r\n   * @return {string} Encoded string.\r\n   * @private\r\n   */\r\n  function diff_linesToCharsMunge_(text) {\r\n    var chars = '';\r\n    // Walk the text, pulling out a substring for each line.\r\n    // text.split('\\n') would would temporarily double our memory footprint.\r\n    // Modifying text would create many large strings to garbage collect.\r\n    var lineStart = 0;\r\n    var lineEnd = -1;\r\n    // Keeping our own length variable is faster than looking it up.\r\n    var lineArrayLength = lineArray.length;\r\n    while (lineEnd < text.length - 1) {\r\n      lineEnd = text.indexOf('\\n', lineStart);\r\n      if (lineEnd == -1) {\r\n        lineEnd = text.length - 1;\r\n      }\r\n      var line = text.substring(lineStart, lineEnd + 1);\r\n      lineStart = lineEnd + 1;\r\n\r\n      if (lineHash.hasOwnProperty ? lineHash.hasOwnProperty(line) :\r\n          (lineHash[line] !== undefined)) {\r\n        chars += String.fromCharCode(lineHash[line]);\r\n      } else {\r\n        chars += String.fromCharCode(lineArrayLength);\r\n        lineHash[line] = lineArrayLength;\r\n        lineArray[lineArrayLength++] = line;\r\n      }\r\n    }\r\n    return chars;\r\n  }\r\n\r\n  var chars1 = diff_linesToCharsMunge_(text1);\r\n  var chars2 = diff_linesToCharsMunge_(text2);\r\n  return {chars1: chars1, chars2: chars2, lineArray: lineArray};\r\n};\r\n\r\n\r\n/**\r\n * Rehydrate the text in a diff from a string of line hashes to real lines of\r\n * text.\r\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\r\n * @param {!Array.<string>} lineArray Array of unique strings.\r\n * @private\r\n */\r\ndiff_match_patch.prototype.diff_charsToLines_ = function(diffs, lineArray) {\r\n  for (var x = 0; x < diffs.length; x++) {\r\n    var chars = diffs[x][1];\r\n    var text = [];\r\n    for (var y = 0; y < chars.length; y++) {\r\n      text[y] = lineArray[chars.charCodeAt(y)];\r\n    }\r\n    diffs[x][1] = text.join('');\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * Determine the common prefix of two strings.\r\n * @param {string} text1 First string.\r\n * @param {string} text2 Second string.\r\n * @return {number} The number of characters common to the start of each\r\n *     string.\r\n */\r\ndiff_match_patch.prototype.diff_commonPrefix = function(text1, text2) {\r\n  // Quick check for common null cases.\r\n  if (!text1 || !text2 || text1.charAt(0) != text2.charAt(0)) {\r\n    return 0;\r\n  }\r\n  // Binary search.\r\n  // Performance analysis: http://neil.fraser.name/news/2007/10/09/\r\n  var pointermin = 0;\r\n  var pointermax = Math.min(text1.length, text2.length);\r\n  var pointermid = pointermax;\r\n  var pointerstart = 0;\r\n  while (pointermin < pointermid) {\r\n    if (text1.substring(pointerstart, pointermid) ==\r\n        text2.substring(pointerstart, pointermid)) {\r\n      pointermin = pointermid;\r\n      pointerstart = pointermin;\r\n    } else {\r\n      pointermax = pointermid;\r\n    }\r\n    pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\r\n  }\r\n  return pointermid;\r\n};\r\n\r\n\r\n/**\r\n * Determine the common suffix of two strings.\r\n * @param {string} text1 First string.\r\n * @param {string} text2 Second string.\r\n * @return {number} The number of characters common to the end of each string.\r\n */\r\ndiff_match_patch.prototype.diff_commonSuffix = function(text1, text2) {\r\n  // Quick check for common null cases.\r\n  if (!text1 || !text2 ||\r\n      text1.charAt(text1.length - 1) != text2.charAt(text2.length - 1)) {\r\n    return 0;\r\n  }\r\n  // Binary search.\r\n  // Performance analysis: http://neil.fraser.name/news/2007/10/09/\r\n  var pointermin = 0;\r\n  var pointermax = Math.min(text1.length, text2.length);\r\n  var pointermid = pointermax;\r\n  var pointerend = 0;\r\n  while (pointermin < pointermid) {\r\n    if (text1.substring(text1.length - pointermid, text1.length - pointerend) ==\r\n        text2.substring(text2.length - pointermid, text2.length - pointerend)) {\r\n      pointermin = pointermid;\r\n      pointerend = pointermin;\r\n    } else {\r\n      pointermax = pointermid;\r\n    }\r\n    pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\r\n  }\r\n  return pointermid;\r\n};\r\n\r\n\r\n/**\r\n * Determine if the suffix of one string is the prefix of another.\r\n * @param {string} text1 First string.\r\n * @param {string} text2 Second string.\r\n * @return {number} The number of characters common to the end of the first\r\n *     string and the start of the second string.\r\n * @private\r\n */\r\ndiff_match_patch.prototype.diff_commonOverlap_ = function(text1, text2) {\r\n  // Cache the text lengths to prevent multiple calls.\r\n  var text1_length = text1.length;\r\n  var text2_length = text2.length;\r\n  // Eliminate the null case.\r\n  if (text1_length == 0 || text2_length == 0) {\r\n    return 0;\r\n  }\r\n  // Truncate the longer string.\r\n  if (text1_length > text2_length) {\r\n    text1 = text1.substring(text1_length - text2_length);\r\n  } else if (text1_length < text2_length) {\r\n    text2 = text2.substring(0, text1_length);\r\n  }\r\n  var text_length = Math.min(text1_length, text2_length);\r\n  // Quick check for the worst case.\r\n  if (text1 == text2) {\r\n    return text_length;\r\n  }\r\n\r\n  // Start by looking for a single character match\r\n  // and increase length until no match is found.\r\n  // Performance analysis: http://neil.fraser.name/news/2010/11/04/\r\n  var best = 0;\r\n  var length = 1;\r\n  while (true) {\r\n    var pattern = text1.substring(text_length - length);\r\n    var found = text2.indexOf(pattern);\r\n    if (found == -1) {\r\n      return best;\r\n    }\r\n    length += found;\r\n    if (found == 0 || text1.substring(text_length - length) ==\r\n        text2.substring(0, length)) {\r\n      best = length;\r\n      length++;\r\n    }\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * Do the two texts share a substring which is at least half the length of the\r\n * longer text?\r\n * This speedup can produce non-minimal diffs.\r\n * @param {string} text1 First string.\r\n * @param {string} text2 Second string.\r\n * @return {Array.<string>} Five element Array, containing the prefix of\r\n *     text1, the suffix of text1, the prefix of text2, the suffix of\r\n *     text2 and the common middle.  Or null if there was no match.\r\n * @private\r\n */\r\ndiff_match_patch.prototype.diff_halfMatch_ = function(text1, text2) {\r\n  if (this.Diff_Timeout <= 0) {\r\n    // Don't risk returning a non-optimal diff if we have unlimited time.\r\n    return null;\r\n  }\r\n  var longtext = text1.length > text2.length ? text1 : text2;\r\n  var shorttext = text1.length > text2.length ? text2 : text1;\r\n  if (longtext.length < 4 || shorttext.length * 2 < longtext.length) {\r\n    return null;  // Pointless.\r\n  }\r\n  var dmp = this;  // 'this' becomes 'window' in a closure.\r\n\r\n  /**\r\n   * Does a substring of shorttext exist within longtext such that the substring\r\n   * is at least half the length of longtext?\r\n   * Closure, but does not reference any external variables.\r\n   * @param {string} longtext Longer string.\r\n   * @param {string} shorttext Shorter string.\r\n   * @param {number} i Start index of quarter length substring within longtext.\r\n   * @return {Array.<string>} Five element Array, containing the prefix of\r\n   *     longtext, the suffix of longtext, the prefix of shorttext, the suffix\r\n   *     of shorttext and the common middle.  Or null if there was no match.\r\n   * @private\r\n   */\r\n  function diff_halfMatchI_(longtext, shorttext, i) {\r\n    // Start with a 1/4 length substring at position i as a seed.\r\n    var seed = longtext.substring(i, i + Math.floor(longtext.length / 4));\r\n    var j = -1;\r\n    var best_common = '';\r\n    var best_longtext_a, best_longtext_b, best_shorttext_a, best_shorttext_b;\r\n    while ((j = shorttext.indexOf(seed, j + 1)) != -1) {\r\n      var prefixLength = dmp.diff_commonPrefix(longtext.substring(i),\r\n                                               shorttext.substring(j));\r\n      var suffixLength = dmp.diff_commonSuffix(longtext.substring(0, i),\r\n                                               shorttext.substring(0, j));\r\n      if (best_common.length < suffixLength + prefixLength) {\r\n        best_common = shorttext.substring(j - suffixLength, j) +\r\n            shorttext.substring(j, j + prefixLength);\r\n        best_longtext_a = longtext.substring(0, i - suffixLength);\r\n        best_longtext_b = longtext.substring(i + prefixLength);\r\n        best_shorttext_a = shorttext.substring(0, j - suffixLength);\r\n        best_shorttext_b = shorttext.substring(j + prefixLength);\r\n      }\r\n    }\r\n    if (best_common.length * 2 >= longtext.length) {\r\n      return [best_longtext_a, best_longtext_b,\r\n              best_shorttext_a, best_shorttext_b, best_common];\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  // First check if the second quarter is the seed for a half-match.\r\n  var hm1 = diff_halfMatchI_(longtext, shorttext,\r\n                             Math.ceil(longtext.length / 4));\r\n  // Check again based on the third quarter.\r\n  var hm2 = diff_halfMatchI_(longtext, shorttext,\r\n                             Math.ceil(longtext.length / 2));\r\n  var hm;\r\n  if (!hm1 && !hm2) {\r\n    return null;\r\n  } else if (!hm2) {\r\n    hm = hm1;\r\n  } else if (!hm1) {\r\n    hm = hm2;\r\n  } else {\r\n    // Both matched.  Select the longest.\r\n    hm = hm1[4].length > hm2[4].length ? hm1 : hm2;\r\n  }\r\n\r\n  // A half-match was found, sort out the return data.\r\n  var text1_a, text1_b, text2_a, text2_b;\r\n  if (text1.length > text2.length) {\r\n    text1_a = hm[0];\r\n    text1_b = hm[1];\r\n    text2_a = hm[2];\r\n    text2_b = hm[3];\r\n  } else {\r\n    text2_a = hm[0];\r\n    text2_b = hm[1];\r\n    text1_a = hm[2];\r\n    text1_b = hm[3];\r\n  }\r\n  var mid_common = hm[4];\r\n  return [text1_a, text1_b, text2_a, text2_b, mid_common];\r\n};\r\n\r\n\r\n/**\r\n * Reduce the number of edits by eliminating semantically trivial equalities.\r\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\r\n */\r\ndiff_match_patch.prototype.diff_cleanupSemantic = function(diffs) {\r\n  var changes = false;\r\n  var equalities = [];  // Stack of indices where equalities are found.\r\n  var equalitiesLength = 0;  // Keeping our own length var is faster in JS.\r\n  /** @type {?string} */\r\n  var lastequality = null;\r\n  // Always equal to diffs[equalities[equalitiesLength - 1]][1]\r\n  var pointer = 0;  // Index of current position.\r\n  // Number of characters that changed prior to the equality.\r\n  var length_insertions1 = 0;\r\n  var length_deletions1 = 0;\r\n  // Number of characters that changed after the equality.\r\n  var length_insertions2 = 0;\r\n  var length_deletions2 = 0;\r\n  while (pointer < diffs.length) {\r\n    if (diffs[pointer][0] == DIFF_EQUAL) {  // Equality found.\r\n      equalities[equalitiesLength++] = pointer;\r\n      length_insertions1 = length_insertions2;\r\n      length_deletions1 = length_deletions2;\r\n      length_insertions2 = 0;\r\n      length_deletions2 = 0;\r\n      lastequality = diffs[pointer][1];\r\n    } else {  // An insertion or deletion.\r\n      if (diffs[pointer][0] == DIFF_INSERT) {\r\n        length_insertions2 += diffs[pointer][1].length;\r\n      } else {\r\n        length_deletions2 += diffs[pointer][1].length;\r\n      }\r\n      // Eliminate an equality that is smaller or equal to the edits on both\r\n      // sides of it.\r\n      if (lastequality && (lastequality.length <=\r\n          Math.max(length_insertions1, length_deletions1)) &&\r\n          (lastequality.length <= Math.max(length_insertions2,\r\n                                           length_deletions2))) {\r\n        // Duplicate record.\r\n        diffs.splice(equalities[equalitiesLength - 1], 0,\r\n                     [DIFF_DELETE, lastequality]);\r\n        // Change second copy to insert.\r\n        diffs[equalities[equalitiesLength - 1] + 1][0] = DIFF_INSERT;\r\n        // Throw away the equality we just deleted.\r\n        equalitiesLength--;\r\n        // Throw away the previous equality (it needs to be reevaluated).\r\n        equalitiesLength--;\r\n        pointer = equalitiesLength > 0 ? equalities[equalitiesLength - 1] : -1;\r\n        length_insertions1 = 0;  // Reset the counters.\r\n        length_deletions1 = 0;\r\n        length_insertions2 = 0;\r\n        length_deletions2 = 0;\r\n        lastequality = null;\r\n        changes = true;\r\n      }\r\n    }\r\n    pointer++;\r\n  }\r\n\r\n  // Normalize the diff.\r\n  if (changes) {\r\n    this.diff_cleanupMerge(diffs);\r\n  }\r\n  this.diff_cleanupSemanticLossless(diffs);\r\n\r\n  // Find any overlaps between deletions and insertions.\r\n  // e.g: <del>abcxxx</del><ins>xxxdef</ins>\r\n  //   -> <del>abc</del>xxx<ins>def</ins>\r\n  // e.g: <del>xxxabc</del><ins>defxxx</ins>\r\n  //   -> <ins>def</ins>xxx<del>abc</del>\r\n  // Only extract an overlap if it is as big as the edit ahead or behind it.\r\n  pointer = 1;\r\n  while (pointer < diffs.length) {\r\n    if (diffs[pointer - 1][0] == DIFF_DELETE &&\r\n        diffs[pointer][0] == DIFF_INSERT) {\r\n      var deletion = diffs[pointer - 1][1];\r\n      var insertion = diffs[pointer][1];\r\n      var overlap_length1 = this.diff_commonOverlap_(deletion, insertion);\r\n      var overlap_length2 = this.diff_commonOverlap_(insertion, deletion);\r\n      if (overlap_length1 >= overlap_length2) {\r\n        if (overlap_length1 >= deletion.length / 2 ||\r\n            overlap_length1 >= insertion.length / 2) {\r\n          // Overlap found.  Insert an equality and trim the surrounding edits.\r\n          diffs.splice(pointer, 0,\r\n              [DIFF_EQUAL, insertion.substring(0, overlap_length1)]);\r\n          diffs[pointer - 1][1] =\r\n              deletion.substring(0, deletion.length - overlap_length1);\r\n          diffs[pointer + 1][1] = insertion.substring(overlap_length1);\r\n          pointer++;\r\n        }\r\n      } else {\r\n        if (overlap_length2 >= deletion.length / 2 ||\r\n            overlap_length2 >= insertion.length / 2) {\r\n          // Reverse overlap found.\r\n          // Insert an equality and swap and trim the surrounding edits.\r\n          diffs.splice(pointer, 0,\r\n              [DIFF_EQUAL, deletion.substring(0, overlap_length2)]);\r\n          diffs[pointer - 1][0] = DIFF_INSERT;\r\n          diffs[pointer - 1][1] =\r\n              insertion.substring(0, insertion.length - overlap_length2);\r\n          diffs[pointer + 1][0] = DIFF_DELETE;\r\n          diffs[pointer + 1][1] =\r\n              deletion.substring(overlap_length2);\r\n          pointer++;\r\n        }\r\n      }\r\n      pointer++;\r\n    }\r\n    pointer++;\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * Look for single edits surrounded on both sides by equalities\r\n * which can be shifted sideways to align the edit to a word boundary.\r\n * e.g: The c<ins>at c</ins>ame. -> The <ins>cat </ins>came.\r\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\r\n */\r\ndiff_match_patch.prototype.diff_cleanupSemanticLossless = function(diffs) {\r\n  /**\r\n   * Given two strings, compute a score representing whether the internal\r\n   * boundary falls on logical boundaries.\r\n   * Scores range from 6 (best) to 0 (worst).\r\n   * Closure, but does not reference any external variables.\r\n   * @param {string} one First string.\r\n   * @param {string} two Second string.\r\n   * @return {number} The score.\r\n   * @private\r\n   */\r\n  function diff_cleanupSemanticScore_(one, two) {\r\n    if (!one || !two) {\r\n      // Edges are the best.\r\n      return 6;\r\n    }\r\n\r\n    // Each port of this function behaves slightly differently due to\r\n    // subtle differences in each language's definition of things like\r\n    // 'whitespace'.  Since this function's purpose is largely cosmetic,\r\n    // the choice has been made to use each language's native features\r\n    // rather than force total conformity.\r\n    var char1 = one.charAt(one.length - 1);\r\n    var char2 = two.charAt(0);\r\n    var nonAlphaNumeric1 = char1.match(diff_match_patch.nonAlphaNumericRegex_);\r\n    var nonAlphaNumeric2 = char2.match(diff_match_patch.nonAlphaNumericRegex_);\r\n    var whitespace1 = nonAlphaNumeric1 &&\r\n        char1.match(diff_match_patch.whitespaceRegex_);\r\n    var whitespace2 = nonAlphaNumeric2 &&\r\n        char2.match(diff_match_patch.whitespaceRegex_);\r\n    var lineBreak1 = whitespace1 &&\r\n        char1.match(diff_match_patch.linebreakRegex_);\r\n    var lineBreak2 = whitespace2 &&\r\n        char2.match(diff_match_patch.linebreakRegex_);\r\n    var blankLine1 = lineBreak1 &&\r\n        one.match(diff_match_patch.blanklineEndRegex_);\r\n    var blankLine2 = lineBreak2 &&\r\n        two.match(diff_match_patch.blanklineStartRegex_);\r\n\r\n    if (blankLine1 || blankLine2) {\r\n      // Five points for blank lines.\r\n      return 5;\r\n    } else if (lineBreak1 || lineBreak2) {\r\n      // Four points for line breaks.\r\n      return 4;\r\n    } else if (nonAlphaNumeric1 && !whitespace1 && whitespace2) {\r\n      // Three points for end of sentences.\r\n      return 3;\r\n    } else if (whitespace1 || whitespace2) {\r\n      // Two points for whitespace.\r\n      return 2;\r\n    } else if (nonAlphaNumeric1 || nonAlphaNumeric2) {\r\n      // One point for non-alphanumeric.\r\n      return 1;\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  var pointer = 1;\r\n  // Intentionally ignore the first and last element (don't need checking).\r\n  while (pointer < diffs.length - 1) {\r\n    if (diffs[pointer - 1][0] == DIFF_EQUAL &&\r\n        diffs[pointer + 1][0] == DIFF_EQUAL) {\r\n      // This is a single edit surrounded by equalities.\r\n      var equality1 = diffs[pointer - 1][1];\r\n      var edit = diffs[pointer][1];\r\n      var equality2 = diffs[pointer + 1][1];\r\n\r\n      // First, shift the edit as far left as possible.\r\n      var commonOffset = this.diff_commonSuffix(equality1, edit);\r\n      if (commonOffset) {\r\n        var commonString = edit.substring(edit.length - commonOffset);\r\n        equality1 = equality1.substring(0, equality1.length - commonOffset);\r\n        edit = commonString + edit.substring(0, edit.length - commonOffset);\r\n        equality2 = commonString + equality2;\r\n      }\r\n\r\n      // Second, step character by character right, looking for the best fit.\r\n      var bestEquality1 = equality1;\r\n      var bestEdit = edit;\r\n      var bestEquality2 = equality2;\r\n      var bestScore = diff_cleanupSemanticScore_(equality1, edit) +\r\n          diff_cleanupSemanticScore_(edit, equality2);\r\n      while (edit.charAt(0) === equality2.charAt(0)) {\r\n        equality1 += edit.charAt(0);\r\n        edit = edit.substring(1) + equality2.charAt(0);\r\n        equality2 = equality2.substring(1);\r\n        var score = diff_cleanupSemanticScore_(equality1, edit) +\r\n            diff_cleanupSemanticScore_(edit, equality2);\r\n        // The >= encourages trailing rather than leading whitespace on edits.\r\n        if (score >= bestScore) {\r\n          bestScore = score;\r\n          bestEquality1 = equality1;\r\n          bestEdit = edit;\r\n          bestEquality2 = equality2;\r\n        }\r\n      }\r\n\r\n      if (diffs[pointer - 1][1] != bestEquality1) {\r\n        // We have an improvement, save it back to the diff.\r\n        if (bestEquality1) {\r\n          diffs[pointer - 1][1] = bestEquality1;\r\n        } else {\r\n          diffs.splice(pointer - 1, 1);\r\n          pointer--;\r\n        }\r\n        diffs[pointer][1] = bestEdit;\r\n        if (bestEquality2) {\r\n          diffs[pointer + 1][1] = bestEquality2;\r\n        } else {\r\n          diffs.splice(pointer + 1, 1);\r\n          pointer--;\r\n        }\r\n      }\r\n    }\r\n    pointer++;\r\n  }\r\n};\r\n\r\n// Define some regex patterns for matching boundaries.\r\ndiff_match_patch.nonAlphaNumericRegex_ = /[^a-zA-Z0-9]/;\r\ndiff_match_patch.whitespaceRegex_ = /\\s/;\r\ndiff_match_patch.linebreakRegex_ = /[\\r\\n]/;\r\ndiff_match_patch.blanklineEndRegex_ = /\\n\\r?\\n$/;\r\ndiff_match_patch.blanklineStartRegex_ = /^\\r?\\n\\r?\\n/;\r\n\r\n/**\r\n * Reduce the number of edits by eliminating operationally trivial equalities.\r\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\r\n */\r\ndiff_match_patch.prototype.diff_cleanupEfficiency = function(diffs) {\r\n  var changes = false;\r\n  var equalities = [];  // Stack of indices where equalities are found.\r\n  var equalitiesLength = 0;  // Keeping our own length var is faster in JS.\r\n  /** @type {?string} */\r\n  var lastequality = null;\r\n  // Always equal to diffs[equalities[equalitiesLength - 1]][1]\r\n  var pointer = 0;  // Index of current position.\r\n  // Is there an insertion operation before the last equality.\r\n  var pre_ins = false;\r\n  // Is there a deletion operation before the last equality.\r\n  var pre_del = false;\r\n  // Is there an insertion operation after the last equality.\r\n  var post_ins = false;\r\n  // Is there a deletion operation after the last equality.\r\n  var post_del = false;\r\n  while (pointer < diffs.length) {\r\n    if (diffs[pointer][0] == DIFF_EQUAL) {  // Equality found.\r\n      if (diffs[pointer][1].length < this.Diff_EditCost &&\r\n          (post_ins || post_del)) {\r\n        // Candidate found.\r\n        equalities[equalitiesLength++] = pointer;\r\n        pre_ins = post_ins;\r\n        pre_del = post_del;\r\n        lastequality = diffs[pointer][1];\r\n      } else {\r\n        // Not a candidate, and can never become one.\r\n        equalitiesLength = 0;\r\n        lastequality = null;\r\n      }\r\n      post_ins = post_del = false;\r\n    } else {  // An insertion or deletion.\r\n      if (diffs[pointer][0] == DIFF_DELETE) {\r\n        post_del = true;\r\n      } else {\r\n        post_ins = true;\r\n      }\r\n      /*\r\n       * Five types to be split:\r\n       * <ins>A</ins><del>B</del>XY<ins>C</ins><del>D</del>\r\n       * <ins>A</ins>X<ins>C</ins><del>D</del>\r\n       * <ins>A</ins><del>B</del>X<ins>C</ins>\r\n       * <ins>A</del>X<ins>C</ins><del>D</del>\r\n       * <ins>A</ins><del>B</del>X<del>C</del>\r\n       */\r\n      if (lastequality && ((pre_ins && pre_del && post_ins && post_del) ||\r\n                           ((lastequality.length < this.Diff_EditCost / 2) &&\r\n                            (pre_ins + pre_del + post_ins + post_del) == 3))) {\r\n        // Duplicate record.\r\n        diffs.splice(equalities[equalitiesLength - 1], 0,\r\n                     [DIFF_DELETE, lastequality]);\r\n        // Change second copy to insert.\r\n        diffs[equalities[equalitiesLength - 1] + 1][0] = DIFF_INSERT;\r\n        equalitiesLength--;  // Throw away the equality we just deleted;\r\n        lastequality = null;\r\n        if (pre_ins && pre_del) {\r\n          // No changes made which could affect previous entry, keep going.\r\n          post_ins = post_del = true;\r\n          equalitiesLength = 0;\r\n        } else {\r\n          equalitiesLength--;  // Throw away the previous equality.\r\n          pointer = equalitiesLength > 0 ?\r\n              equalities[equalitiesLength - 1] : -1;\r\n          post_ins = post_del = false;\r\n        }\r\n        changes = true;\r\n      }\r\n    }\r\n    pointer++;\r\n  }\r\n\r\n  if (changes) {\r\n    this.diff_cleanupMerge(diffs);\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * Reorder and merge like edit sections.  Merge equalities.\r\n * Any edit section can move as long as it doesn't cross an equality.\r\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\r\n */\r\ndiff_match_patch.prototype.diff_cleanupMerge = function(diffs) {\r\n  diffs.push([DIFF_EQUAL, '']);  // Add a dummy entry at the end.\r\n  var pointer = 0;\r\n  var count_delete = 0;\r\n  var count_insert = 0;\r\n  var text_delete = '';\r\n  var text_insert = '';\r\n  var commonlength;\r\n  while (pointer < diffs.length) {\r\n    switch (diffs[pointer][0]) {\r\n      case DIFF_INSERT:\r\n        count_insert++;\r\n        text_insert += diffs[pointer][1];\r\n        pointer++;\r\n        break;\r\n      case DIFF_DELETE:\r\n        count_delete++;\r\n        text_delete += diffs[pointer][1];\r\n        pointer++;\r\n        break;\r\n      case DIFF_EQUAL:\r\n        // Upon reaching an equality, check for prior redundancies.\r\n        if (count_delete + count_insert > 1) {\r\n          if (count_delete !== 0 && count_insert !== 0) {\r\n            // Factor out any common prefixies.\r\n            commonlength = this.diff_commonPrefix(text_insert, text_delete);\r\n            if (commonlength !== 0) {\r\n              if ((pointer - count_delete - count_insert) > 0 &&\r\n                  diffs[pointer - count_delete - count_insert - 1][0] ==\r\n                  DIFF_EQUAL) {\r\n                diffs[pointer - count_delete - count_insert - 1][1] +=\r\n                    text_insert.substring(0, commonlength);\r\n              } else {\r\n                diffs.splice(0, 0, [DIFF_EQUAL,\r\n                                    text_insert.substring(0, commonlength)]);\r\n                pointer++;\r\n              }\r\n              text_insert = text_insert.substring(commonlength);\r\n              text_delete = text_delete.substring(commonlength);\r\n            }\r\n            // Factor out any common suffixies.\r\n            commonlength = this.diff_commonSuffix(text_insert, text_delete);\r\n            if (commonlength !== 0) {\r\n              diffs[pointer][1] = text_insert.substring(text_insert.length -\r\n                  commonlength) + diffs[pointer][1];\r\n              text_insert = text_insert.substring(0, text_insert.length -\r\n                  commonlength);\r\n              text_delete = text_delete.substring(0, text_delete.length -\r\n                  commonlength);\r\n            }\r\n          }\r\n          // Delete the offending records and add the merged ones.\r\n          if (count_delete === 0) {\r\n            diffs.splice(pointer - count_insert,\r\n                count_delete + count_insert, [DIFF_INSERT, text_insert]);\r\n          } else if (count_insert === 0) {\r\n            diffs.splice(pointer - count_delete,\r\n                count_delete + count_insert, [DIFF_DELETE, text_delete]);\r\n          } else {\r\n            diffs.splice(pointer - count_delete - count_insert,\r\n                count_delete + count_insert, [DIFF_DELETE, text_delete],\r\n                [DIFF_INSERT, text_insert]);\r\n          }\r\n          pointer = pointer - count_delete - count_insert +\r\n                    (count_delete ? 1 : 0) + (count_insert ? 1 : 0) + 1;\r\n        } else if (pointer !== 0 && diffs[pointer - 1][0] == DIFF_EQUAL) {\r\n          // Merge this equality with the previous one.\r\n          diffs[pointer - 1][1] += diffs[pointer][1];\r\n          diffs.splice(pointer, 1);\r\n        } else {\r\n          pointer++;\r\n        }\r\n        count_insert = 0;\r\n        count_delete = 0;\r\n        text_delete = '';\r\n        text_insert = '';\r\n        break;\r\n    }\r\n  }\r\n  if (diffs[diffs.length - 1][1] === '') {\r\n    diffs.pop();  // Remove the dummy entry at the end.\r\n  }\r\n\r\n  // Second pass: look for single edits surrounded on both sides by equalities\r\n  // which can be shifted sideways to eliminate an equality.\r\n  // e.g: A<ins>BA</ins>C -> <ins>AB</ins>AC\r\n  var changes = false;\r\n  pointer = 1;\r\n  // Intentionally ignore the first and last element (don't need checking).\r\n  while (pointer < diffs.length - 1) {\r\n    if (diffs[pointer - 1][0] == DIFF_EQUAL &&\r\n        diffs[pointer + 1][0] == DIFF_EQUAL) {\r\n      // This is a single edit surrounded by equalities.\r\n      if (diffs[pointer][1].substring(diffs[pointer][1].length -\r\n          diffs[pointer - 1][1].length) == diffs[pointer - 1][1]) {\r\n        // Shift the edit over the previous equality.\r\n        diffs[pointer][1] = diffs[pointer - 1][1] +\r\n            diffs[pointer][1].substring(0, diffs[pointer][1].length -\r\n                                        diffs[pointer - 1][1].length);\r\n        diffs[pointer + 1][1] = diffs[pointer - 1][1] + diffs[pointer + 1][1];\r\n        diffs.splice(pointer - 1, 1);\r\n        changes = true;\r\n      } else if (diffs[pointer][1].substring(0, diffs[pointer + 1][1].length) ==\r\n          diffs[pointer + 1][1]) {\r\n        // Shift the edit over the next equality.\r\n        diffs[pointer - 1][1] += diffs[pointer + 1][1];\r\n        diffs[pointer][1] =\r\n            diffs[pointer][1].substring(diffs[pointer + 1][1].length) +\r\n            diffs[pointer + 1][1];\r\n        diffs.splice(pointer + 1, 1);\r\n        changes = true;\r\n      }\r\n    }\r\n    pointer++;\r\n  }\r\n  // If shifts were made, the diff needs reordering and another shift sweep.\r\n  if (changes) {\r\n    this.diff_cleanupMerge(diffs);\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * loc is a location in text1, compute and return the equivalent location in\r\n * text2.\r\n * e.g. 'The cat' vs 'The big cat', 1->1, 5->8\r\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\r\n * @param {number} loc Location within text1.\r\n * @return {number} Location within text2.\r\n */\r\ndiff_match_patch.prototype.diff_xIndex = function(diffs, loc) {\r\n  var chars1 = 0;\r\n  var chars2 = 0;\r\n  var last_chars1 = 0;\r\n  var last_chars2 = 0;\r\n  var x;\r\n  for (x = 0; x < diffs.length; x++) {\r\n    if (diffs[x][0] !== DIFF_INSERT) {  // Equality or deletion.\r\n      chars1 += diffs[x][1].length;\r\n    }\r\n    if (diffs[x][0] !== DIFF_DELETE) {  // Equality or insertion.\r\n      chars2 += diffs[x][1].length;\r\n    }\r\n    if (chars1 > loc) {  // Overshot the location.\r\n      break;\r\n    }\r\n    last_chars1 = chars1;\r\n    last_chars2 = chars2;\r\n  }\r\n  // Was the location was deleted?\r\n  if (diffs.length != x && diffs[x][0] === DIFF_DELETE) {\r\n    return last_chars2;\r\n  }\r\n  // Add the remaining character length.\r\n  return last_chars2 + (loc - last_chars1);\r\n};\r\n\r\n\r\n/**\r\n * Convert a diff array into a pretty HTML report.\r\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\r\n * @return {string} HTML representation.\r\n */\r\ndiff_match_patch.prototype.diff_prettyHtml = function(diffs) {\r\n  var html = [];\r\n  var pattern_amp = /&/g;\r\n  var pattern_lt = /</g;\r\n  var pattern_gt = />/g;\r\n  var pattern_para = /\\n/g;\r\n  for (var x = 0; x < diffs.length; x++) {\r\n    var op = diffs[x][0];    // Operation (insert, delete, equal)\r\n    var data = diffs[x][1];  // Text of change.\r\n    var text = data.replace(pattern_amp, '&amp;').replace(pattern_lt, '&lt;')\r\n        .replace(pattern_gt, '&gt;').replace(pattern_para, '&para;<br>');\r\n    switch (op) {\r\n      case DIFF_INSERT:\r\n        html[x] = '<ins style=\"background:#e6ffe6;\">' + text + '</ins>';\r\n        break;\r\n      case DIFF_DELETE:\r\n        html[x] = '<del style=\"background:#ffe6e6;\">' + text + '</del>';\r\n        break;\r\n      case DIFF_EQUAL:\r\n        html[x] = '<span>' + text + '</span>';\r\n        break;\r\n    }\r\n  }\r\n  return html.join('');\r\n};\r\n\r\n\r\n/**\r\n * Compute and return the source text (all equalities and deletions).\r\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\r\n * @return {string} Source text.\r\n */\r\ndiff_match_patch.prototype.diff_text1 = function(diffs) {\r\n  var text = [];\r\n  for (var x = 0; x < diffs.length; x++) {\r\n    if (diffs[x][0] !== DIFF_INSERT) {\r\n      text[x] = diffs[x][1];\r\n    }\r\n  }\r\n  return text.join('');\r\n};\r\n\r\n\r\n/**\r\n * Compute and return the destination text (all equalities and insertions).\r\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\r\n * @return {string} Destination text.\r\n */\r\ndiff_match_patch.prototype.diff_text2 = function(diffs) {\r\n  var text = [];\r\n  for (var x = 0; x < diffs.length; x++) {\r\n    if (diffs[x][0] !== DIFF_DELETE) {\r\n      text[x] = diffs[x][1];\r\n    }\r\n  }\r\n  return text.join('');\r\n};\r\n\r\n\r\n/**\r\n * Compute the Levenshtein distance; the number of inserted, deleted or\r\n * substituted characters.\r\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\r\n * @return {number} Number of changes.\r\n */\r\ndiff_match_patch.prototype.diff_levenshtein = function(diffs) {\r\n  var levenshtein = 0;\r\n  var insertions = 0;\r\n  var deletions = 0;\r\n  for (var x = 0; x < diffs.length; x++) {\r\n    var op = diffs[x][0];\r\n    var data = diffs[x][1];\r\n    switch (op) {\r\n      case DIFF_INSERT:\r\n        insertions += data.length;\r\n        break;\r\n      case DIFF_DELETE:\r\n        deletions += data.length;\r\n        break;\r\n      case DIFF_EQUAL:\r\n        // A deletion and an insertion is one substitution.\r\n        levenshtein += Math.max(insertions, deletions);\r\n        insertions = 0;\r\n        deletions = 0;\r\n        break;\r\n    }\r\n  }\r\n  levenshtein += Math.max(insertions, deletions);\r\n  return levenshtein;\r\n};\r\n\r\n\r\n/**\r\n * Crush the diff into an encoded string which describes the operations\r\n * required to transform text1 into text2.\r\n * E.g. =3\\t-2\\t+ing  -> Keep 3 chars, delete 2 chars, insert 'ing'.\r\n * Operations are tab-separated.  Inserted text is escaped using %xx notation.\r\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\r\n * @return {string} Delta text.\r\n */\r\ndiff_match_patch.prototype.diff_toDelta = function(diffs) {\r\n  var text = [];\r\n  for (var x = 0; x < diffs.length; x++) {\r\n    switch (diffs[x][0]) {\r\n      case DIFF_INSERT:\r\n        text[x] = '+' + encodeURI(diffs[x][1]);\r\n        break;\r\n      case DIFF_DELETE:\r\n        text[x] = '-' + diffs[x][1].length;\r\n        break;\r\n      case DIFF_EQUAL:\r\n        text[x] = '=' + diffs[x][1].length;\r\n        break;\r\n    }\r\n  }\r\n  return text.join('\\t').replace(/%20/g, ' ');\r\n};\r\n\r\n\r\n/**\r\n * Given the original text1, and an encoded string which describes the\r\n * operations required to transform text1 into text2, compute the full diff.\r\n * @param {string} text1 Source string for the diff.\r\n * @param {string} delta Delta text.\r\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\r\n * @throws {!Error} If invalid input.\r\n */\r\ndiff_match_patch.prototype.diff_fromDelta = function(text1, delta) {\r\n  var diffs = [];\r\n  var diffsLength = 0;  // Keeping our own length var is faster in JS.\r\n  var pointer = 0;  // Cursor in text1\r\n  var tokens = delta.split(/\\t/g);\r\n  for (var x = 0; x < tokens.length; x++) {\r\n    // Each token begins with a one character parameter which specifies the\r\n    // operation of this token (delete, insert, equality).\r\n    var param = tokens[x].substring(1);\r\n    switch (tokens[x].charAt(0)) {\r\n      case '+':\r\n        try {\r\n          diffs[diffsLength++] = [DIFF_INSERT, decodeURI(param)];\r\n        } catch (ex) {\r\n          // Malformed URI sequence.\r\n          throw new Error('Illegal escape in diff_fromDelta: ' + param);\r\n        }\r\n        break;\r\n      case '-':\r\n        // Fall through.\r\n      case '=':\r\n        var n = parseInt(param, 10);\r\n        if (isNaN(n) || n < 0) {\r\n          throw new Error('Invalid number in diff_fromDelta: ' + param);\r\n        }\r\n        var text = text1.substring(pointer, pointer += n);\r\n        if (tokens[x].charAt(0) == '=') {\r\n          diffs[diffsLength++] = [DIFF_EQUAL, text];\r\n        } else {\r\n          diffs[diffsLength++] = [DIFF_DELETE, text];\r\n        }\r\n        break;\r\n      default:\r\n        // Blank tokens are ok (from a trailing \\t).\r\n        // Anything else is an error.\r\n        if (tokens[x]) {\r\n          throw new Error('Invalid diff operation in diff_fromDelta: ' +\r\n                          tokens[x]);\r\n        }\r\n    }\r\n  }\r\n  if (pointer != text1.length) {\r\n    throw new Error('Delta length (' + pointer +\r\n        ') does not equal source text length (' + text1.length + ').');\r\n  }\r\n  return diffs;\r\n};\r\n\r\n\r\n//  MATCH FUNCTIONS\r\n\r\n\r\n/**\r\n * Locate the best instance of 'pattern' in 'text' near 'loc'.\r\n * @param {string} text The text to search.\r\n * @param {string} pattern The pattern to search for.\r\n * @param {number} loc The location to search around.\r\n * @return {number} Best match index or -1.\r\n */\r\ndiff_match_patch.prototype.match_main = function(text, pattern, loc) {\r\n  // Check for null inputs.\r\n  if (text == null || pattern == null || loc == null) {\r\n    throw new Error('Null input. (match_main)');\r\n  }\r\n\r\n  loc = Math.max(0, Math.min(loc, text.length));\r\n  if (text == pattern) {\r\n    // Shortcut (potentially not guaranteed by the algorithm)\r\n    return 0;\r\n  } else if (!text.length) {\r\n    // Nothing to match.\r\n    return -1;\r\n  } else if (text.substring(loc, loc + pattern.length) == pattern) {\r\n    // Perfect match at the perfect spot!  (Includes case of null pattern)\r\n    return loc;\r\n  } else {\r\n    // Do a fuzzy compare.\r\n    return this.match_bitap_(text, pattern, loc);\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * Locate the best instance of 'pattern' in 'text' near 'loc' using the\r\n * Bitap algorithm.\r\n * @param {string} text The text to search.\r\n * @param {string} pattern The pattern to search for.\r\n * @param {number} loc The location to search around.\r\n * @return {number} Best match index or -1.\r\n * @private\r\n */\r\ndiff_match_patch.prototype.match_bitap_ = function(text, pattern, loc) {\r\n  if (pattern.length > this.Match_MaxBits) {\r\n    throw new Error('Pattern too long for this browser.');\r\n  }\r\n\r\n  // Initialise the alphabet.\r\n  var s = this.match_alphabet_(pattern);\r\n\r\n  var dmp = this;  // 'this' becomes 'window' in a closure.\r\n\r\n  /**\r\n   * Compute and return the score for a match with e errors and x location.\r\n   * Accesses loc and pattern through being a closure.\r\n   * @param {number} e Number of errors in match.\r\n   * @param {number} x Location of match.\r\n   * @return {number} Overall score for match (0.0 = good, 1.0 = bad).\r\n   * @private\r\n   */\r\n  function match_bitapScore_(e, x) {\r\n    var accuracy = e / pattern.length;\r\n    var proximity = Math.abs(loc - x);\r\n    if (!dmp.Match_Distance) {\r\n      // Dodge divide by zero error.\r\n      return proximity ? 1.0 : accuracy;\r\n    }\r\n    return accuracy + (proximity / dmp.Match_Distance);\r\n  }\r\n\r\n  // Highest score beyond which we give up.\r\n  var score_threshold = this.Match_Threshold;\r\n  // Is there a nearby exact match? (speedup)\r\n  var best_loc = text.indexOf(pattern, loc);\r\n  if (best_loc != -1) {\r\n    score_threshold = Math.min(match_bitapScore_(0, best_loc), score_threshold);\r\n    // What about in the other direction? (speedup)\r\n    best_loc = text.lastIndexOf(pattern, loc + pattern.length);\r\n    if (best_loc != -1) {\r\n      score_threshold =\r\n          Math.min(match_bitapScore_(0, best_loc), score_threshold);\r\n    }\r\n  }\r\n\r\n  // Initialise the bit arrays.\r\n  var matchmask = 1 << (pattern.length - 1);\r\n  best_loc = -1;\r\n\r\n  var bin_min, bin_mid;\r\n  var bin_max = pattern.length + text.length;\r\n  var last_rd;\r\n  for (var d = 0; d < pattern.length; d++) {\r\n    // Scan for the best match; each iteration allows for one more error.\r\n    // Run a binary search to determine how far from 'loc' we can stray at this\r\n    // error level.\r\n    bin_min = 0;\r\n    bin_mid = bin_max;\r\n    while (bin_min < bin_mid) {\r\n      if (match_bitapScore_(d, loc + bin_mid) <= score_threshold) {\r\n        bin_min = bin_mid;\r\n      } else {\r\n        bin_max = bin_mid;\r\n      }\r\n      bin_mid = Math.floor((bin_max - bin_min) / 2 + bin_min);\r\n    }\r\n    // Use the result from this iteration as the maximum for the next.\r\n    bin_max = bin_mid;\r\n    var start = Math.max(1, loc - bin_mid + 1);\r\n    var finish = Math.min(loc + bin_mid, text.length) + pattern.length;\r\n\r\n    var rd = Array(finish + 2);\r\n    rd[finish + 1] = (1 << d) - 1;\r\n    for (var j = finish; j >= start; j--) {\r\n      // The alphabet (s) is a sparse hash, so the following line generates\r\n      // warnings.\r\n      var charMatch = s[text.charAt(j - 1)];\r\n      if (d === 0) {  // First pass: exact match.\r\n        rd[j] = ((rd[j + 1] << 1) | 1) & charMatch;\r\n      } else {  // Subsequent passes: fuzzy match.\r\n        rd[j] = (((rd[j + 1] << 1) | 1) & charMatch) |\r\n                (((last_rd[j + 1] | last_rd[j]) << 1) | 1) |\r\n                last_rd[j + 1];\r\n      }\r\n      if (rd[j] & matchmask) {\r\n        var score = match_bitapScore_(d, j - 1);\r\n        // This match will almost certainly be better than any existing match.\r\n        // But check anyway.\r\n        if (score <= score_threshold) {\r\n          // Told you so.\r\n          score_threshold = score;\r\n          best_loc = j - 1;\r\n          if (best_loc > loc) {\r\n            // When passing loc, don't exceed our current distance from loc.\r\n            start = Math.max(1, 2 * loc - best_loc);\r\n          } else {\r\n            // Already passed loc, downhill from here on in.\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    // No hope for a (better) match at greater error levels.\r\n    if (match_bitapScore_(d + 1, loc) > score_threshold) {\r\n      break;\r\n    }\r\n    last_rd = rd;\r\n  }\r\n  return best_loc;\r\n};\r\n\r\n\r\n/**\r\n * Initialise the alphabet for the Bitap algorithm.\r\n * @param {string} pattern The text to encode.\r\n * @return {!Object} Hash of character locations.\r\n * @private\r\n */\r\ndiff_match_patch.prototype.match_alphabet_ = function(pattern) {\r\n  var s = {};\r\n  for (var i = 0; i < pattern.length; i++) {\r\n    s[pattern.charAt(i)] = 0;\r\n  }\r\n  for (var i = 0; i < pattern.length; i++) {\r\n    s[pattern.charAt(i)] |= 1 << (pattern.length - i - 1);\r\n  }\r\n  return s;\r\n};\r\n\r\n\r\n//  PATCH FUNCTIONS\r\n\r\n\r\n/**\r\n * Increase the context until it is unique,\r\n * but don't let the pattern expand beyond Match_MaxBits.\r\n * @param {!diff_match_patch.patch_obj} patch The patch to grow.\r\n * @param {string} text Source text.\r\n * @private\r\n */\r\ndiff_match_patch.prototype.patch_addContext_ = function(patch, text) {\r\n  if (text.length == 0) {\r\n    return;\r\n  }\r\n  var pattern = text.substring(patch.start2, patch.start2 + patch.length1);\r\n  var padding = 0;\r\n\r\n  // Look for the first and last matches of pattern in text.  If two different\r\n  // matches are found, increase the pattern length.\r\n  while (text.indexOf(pattern) != text.lastIndexOf(pattern) &&\r\n         pattern.length < this.Match_MaxBits - this.Patch_Margin -\r\n         this.Patch_Margin) {\r\n    padding += this.Patch_Margin;\r\n    pattern = text.substring(patch.start2 - padding,\r\n                             patch.start2 + patch.length1 + padding);\r\n  }\r\n  // Add one chunk for good luck.\r\n  padding += this.Patch_Margin;\r\n\r\n  // Add the prefix.\r\n  var prefix = text.substring(patch.start2 - padding, patch.start2);\r\n  if (prefix) {\r\n    patch.diffs.unshift([DIFF_EQUAL, prefix]);\r\n  }\r\n  // Add the suffix.\r\n  var suffix = text.substring(patch.start2 + patch.length1,\r\n                              patch.start2 + patch.length1 + padding);\r\n  if (suffix) {\r\n    patch.diffs.push([DIFF_EQUAL, suffix]);\r\n  }\r\n\r\n  // Roll back the start points.\r\n  patch.start1 -= prefix.length;\r\n  patch.start2 -= prefix.length;\r\n  // Extend the lengths.\r\n  patch.length1 += prefix.length + suffix.length;\r\n  patch.length2 += prefix.length + suffix.length;\r\n};\r\n\r\n\r\n/**\r\n * Compute a list of patches to turn text1 into text2.\r\n * Use diffs if provided, otherwise compute it ourselves.\r\n * There are four ways to call this function, depending on what data is\r\n * available to the caller:\r\n * Method 1:\r\n * a = text1, b = text2\r\n * Method 2:\r\n * a = diffs\r\n * Method 3 (optimal):\r\n * a = text1, b = diffs\r\n * Method 4 (deprecated, use method 3):\r\n * a = text1, b = text2, c = diffs\r\n *\r\n * @param {string|!Array.<!diff_match_patch.Diff>} a text1 (methods 1,3,4) or\r\n * Array of diff tuples for text1 to text2 (method 2).\r\n * @param {string|!Array.<!diff_match_patch.Diff>} opt_b text2 (methods 1,4) or\r\n * Array of diff tuples for text1 to text2 (method 3) or undefined (method 2).\r\n * @param {string|!Array.<!diff_match_patch.Diff>} opt_c Array of diff tuples\r\n * for text1 to text2 (method 4) or undefined (methods 1,2,3).\r\n * @return {!Array.<!diff_match_patch.patch_obj>} Array of Patch objects.\r\n */\r\ndiff_match_patch.prototype.patch_make = function(a, opt_b, opt_c) {\r\n  var text1, diffs;\r\n  if (typeof a == 'string' && typeof opt_b == 'string' &&\r\n      typeof opt_c == 'undefined') {\r\n    // Method 1: text1, text2\r\n    // Compute diffs from text1 and text2.\r\n    text1 = /** @type {string} */(a);\r\n    diffs = this.diff_main(text1, /** @type {string} */(opt_b), true);\r\n    if (diffs.length > 2) {\r\n      this.diff_cleanupSemantic(diffs);\r\n      this.diff_cleanupEfficiency(diffs);\r\n    }\r\n  } else if (a && typeof a == 'object' && typeof opt_b == 'undefined' &&\r\n      typeof opt_c == 'undefined') {\r\n    // Method 2: diffs\r\n    // Compute text1 from diffs.\r\n    diffs = /** @type {!Array.<!diff_match_patch.Diff>} */(a);\r\n    text1 = this.diff_text1(diffs);\r\n  } else if (typeof a == 'string' && opt_b && typeof opt_b == 'object' &&\r\n      typeof opt_c == 'undefined') {\r\n    // Method 3: text1, diffs\r\n    text1 = /** @type {string} */(a);\r\n    diffs = /** @type {!Array.<!diff_match_patch.Diff>} */(opt_b);\r\n  } else if (typeof a == 'string' && typeof opt_b == 'string' &&\r\n      opt_c && typeof opt_c == 'object') {\r\n    // Method 4: text1, text2, diffs\r\n    // text2 is not used.\r\n    text1 = /** @type {string} */(a);\r\n    diffs = /** @type {!Array.<!diff_match_patch.Diff>} */(opt_c);\r\n  } else {\r\n    throw new Error('Unknown call format to patch_make.');\r\n  }\r\n\r\n  if (diffs.length === 0) {\r\n    return [];  // Get rid of the null case.\r\n  }\r\n  var patches = [];\r\n  var patch = new diff_match_patch.patch_obj();\r\n  var patchDiffLength = 0;  // Keeping our own length var is faster in JS.\r\n  var char_count1 = 0;  // Number of characters into the text1 string.\r\n  var char_count2 = 0;  // Number of characters into the text2 string.\r\n  // Start with text1 (prepatch_text) and apply the diffs until we arrive at\r\n  // text2 (postpatch_text).  We recreate the patches one by one to determine\r\n  // context info.\r\n  var prepatch_text = text1;\r\n  var postpatch_text = text1;\r\n  for (var x = 0; x < diffs.length; x++) {\r\n    var diff_type = diffs[x][0];\r\n    var diff_text = diffs[x][1];\r\n\r\n    if (!patchDiffLength && diff_type !== DIFF_EQUAL) {\r\n      // A new patch starts here.\r\n      patch.start1 = char_count1;\r\n      patch.start2 = char_count2;\r\n    }\r\n\r\n    switch (diff_type) {\r\n      case DIFF_INSERT:\r\n        patch.diffs[patchDiffLength++] = diffs[x];\r\n        patch.length2 += diff_text.length;\r\n        postpatch_text = postpatch_text.substring(0, char_count2) + diff_text +\r\n                         postpatch_text.substring(char_count2);\r\n        break;\r\n      case DIFF_DELETE:\r\n        patch.length1 += diff_text.length;\r\n        patch.diffs[patchDiffLength++] = diffs[x];\r\n        postpatch_text = postpatch_text.substring(0, char_count2) +\r\n                         postpatch_text.substring(char_count2 +\r\n                             diff_text.length);\r\n        break;\r\n      case DIFF_EQUAL:\r\n        if (diff_text.length <= 2 * this.Patch_Margin &&\r\n            patchDiffLength && diffs.length != x + 1) {\r\n          // Small equality inside a patch.\r\n          patch.diffs[patchDiffLength++] = diffs[x];\r\n          patch.length1 += diff_text.length;\r\n          patch.length2 += diff_text.length;\r\n        } else if (diff_text.length >= 2 * this.Patch_Margin) {\r\n          // Time for a new patch.\r\n          if (patchDiffLength) {\r\n            this.patch_addContext_(patch, prepatch_text);\r\n            patches.push(patch);\r\n            patch = new diff_match_patch.patch_obj();\r\n            patchDiffLength = 0;\r\n            // Unlike Unidiff, our patch lists have a rolling context.\r\n            // http://code.google.com/p/google-diff-match-patch/wiki/Unidiff\r\n            // Update prepatch text & pos to reflect the application of the\r\n            // just completed patch.\r\n            prepatch_text = postpatch_text;\r\n            char_count1 = char_count2;\r\n          }\r\n        }\r\n        break;\r\n    }\r\n\r\n    // Update the current character count.\r\n    if (diff_type !== DIFF_INSERT) {\r\n      char_count1 += diff_text.length;\r\n    }\r\n    if (diff_type !== DIFF_DELETE) {\r\n      char_count2 += diff_text.length;\r\n    }\r\n  }\r\n  // Pick up the leftover patch if not empty.\r\n  if (patchDiffLength) {\r\n    this.patch_addContext_(patch, prepatch_text);\r\n    patches.push(patch);\r\n  }\r\n\r\n  return patches;\r\n};\r\n\r\n\r\n/**\r\n * Given an array of patches, return another array that is identical.\r\n * @param {!Array.<!diff_match_patch.patch_obj>} patches Array of Patch objects.\r\n * @return {!Array.<!diff_match_patch.patch_obj>} Array of Patch objects.\r\n */\r\ndiff_match_patch.prototype.patch_deepCopy = function(patches) {\r\n  // Making deep copies is hard in JavaScript.\r\n  var patchesCopy = [];\r\n  for (var x = 0; x < patches.length; x++) {\r\n    var patch = patches[x];\r\n    var patchCopy = new diff_match_patch.patch_obj();\r\n    patchCopy.diffs = [];\r\n    for (var y = 0; y < patch.diffs.length; y++) {\r\n      patchCopy.diffs[y] = patch.diffs[y].slice();\r\n    }\r\n    patchCopy.start1 = patch.start1;\r\n    patchCopy.start2 = patch.start2;\r\n    patchCopy.length1 = patch.length1;\r\n    patchCopy.length2 = patch.length2;\r\n    patchesCopy[x] = patchCopy;\r\n  }\r\n  return patchesCopy;\r\n};\r\n\r\n\r\n/**\r\n * Merge a set of patches onto the text.  Return a patched text, as well\r\n * as a list of true/false values indicating which patches were applied.\r\n * @param {!Array.<!diff_match_patch.patch_obj>} patches Array of Patch objects.\r\n * @param {string} text Old text.\r\n * @return {!Array.<string|!Array.<boolean>>} Two element Array, containing the\r\n *      new text and an array of boolean values.\r\n */\r\ndiff_match_patch.prototype.patch_apply = function(patches, text) {\r\n  if (patches.length == 0) {\r\n    return [text, []];\r\n  }\r\n\r\n  // Deep copy the patches so that no changes are made to originals.\r\n  patches = this.patch_deepCopy(patches);\r\n\r\n  var nullPadding = this.patch_addPadding(patches);\r\n  text = nullPadding + text + nullPadding;\r\n\r\n  this.patch_splitMax(patches);\r\n  // delta keeps track of the offset between the expected and actual location\r\n  // of the previous patch.  If there are patches expected at positions 10 and\r\n  // 20, but the first patch was found at 12, delta is 2 and the second patch\r\n  // has an effective expected position of 22.\r\n  var delta = 0;\r\n  var results = [];\r\n  for (var x = 0; x < patches.length; x++) {\r\n    var expected_loc = patches[x].start2 + delta;\r\n    var text1 = this.diff_text1(patches[x].diffs);\r\n    var start_loc;\r\n    var end_loc = -1;\r\n    if (text1.length > this.Match_MaxBits) {\r\n      // patch_splitMax will only provide an oversized pattern in the case of\r\n      // a monster delete.\r\n      start_loc = this.match_main(text, text1.substring(0, this.Match_MaxBits),\r\n                                  expected_loc);\r\n      if (start_loc != -1) {\r\n        end_loc = this.match_main(text,\r\n            text1.substring(text1.length - this.Match_MaxBits),\r\n            expected_loc + text1.length - this.Match_MaxBits);\r\n        if (end_loc == -1 || start_loc >= end_loc) {\r\n          // Can't find valid trailing context.  Drop this patch.\r\n          start_loc = -1;\r\n        }\r\n      }\r\n    } else {\r\n      start_loc = this.match_main(text, text1, expected_loc);\r\n    }\r\n    if (start_loc == -1) {\r\n      // No match found.  :(\r\n      results[x] = false;\r\n      // Subtract the delta for this failed patch from subsequent patches.\r\n      delta -= patches[x].length2 - patches[x].length1;\r\n    } else {\r\n      // Found a match.  :)\r\n      results[x] = true;\r\n      delta = start_loc - expected_loc;\r\n      var text2;\r\n      if (end_loc == -1) {\r\n        text2 = text.substring(start_loc, start_loc + text1.length);\r\n      } else {\r\n        text2 = text.substring(start_loc, end_loc + this.Match_MaxBits);\r\n      }\r\n      if (text1 == text2) {\r\n        // Perfect match, just shove the replacement text in.\r\n        text = text.substring(0, start_loc) +\r\n               this.diff_text2(patches[x].diffs) +\r\n               text.substring(start_loc + text1.length);\r\n      } else {\r\n        // Imperfect match.  Run a diff to get a framework of equivalent\r\n        // indices.\r\n        var diffs = this.diff_main(text1, text2, false);\r\n        if (text1.length > this.Match_MaxBits &&\r\n            this.diff_levenshtein(diffs) / text1.length >\r\n            this.Patch_DeleteThreshold) {\r\n          // The end points match, but the content is unacceptably bad.\r\n          results[x] = false;\r\n        } else {\r\n          this.diff_cleanupSemanticLossless(diffs);\r\n          var index1 = 0;\r\n          var index2;\r\n          for (var y = 0; y < patches[x].diffs.length; y++) {\r\n            var mod = patches[x].diffs[y];\r\n            if (mod[0] !== DIFF_EQUAL) {\r\n              index2 = this.diff_xIndex(diffs, index1);\r\n            }\r\n            if (mod[0] === DIFF_INSERT) {  // Insertion\r\n              text = text.substring(0, start_loc + index2) + mod[1] +\r\n                     text.substring(start_loc + index2);\r\n            } else if (mod[0] === DIFF_DELETE) {  // Deletion\r\n              text = text.substring(0, start_loc + index2) +\r\n                     text.substring(start_loc + this.diff_xIndex(diffs,\r\n                         index1 + mod[1].length));\r\n            }\r\n            if (mod[0] !== DIFF_DELETE) {\r\n              index1 += mod[1].length;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  // Strip the padding off.\r\n  text = text.substring(nullPadding.length, text.length - nullPadding.length);\r\n  return [text, results];\r\n};\r\n\r\n\r\n/**\r\n * Add some padding on text start and end so that edges can match something.\r\n * Intended to be called only from within patch_apply.\r\n * @param {!Array.<!diff_match_patch.patch_obj>} patches Array of Patch objects.\r\n * @return {string} The padding string added to each side.\r\n */\r\ndiff_match_patch.prototype.patch_addPadding = function(patches) {\r\n  var paddingLength = this.Patch_Margin;\r\n  var nullPadding = '';\r\n  for (var x = 1; x <= paddingLength; x++) {\r\n    nullPadding += String.fromCharCode(x);\r\n  }\r\n\r\n  // Bump all the patches forward.\r\n  for (var x = 0; x < patches.length; x++) {\r\n    patches[x].start1 += paddingLength;\r\n    patches[x].start2 += paddingLength;\r\n  }\r\n\r\n  // Add some padding on start of first diff.\r\n  var patch = patches[0];\r\n  var diffs = patch.diffs;\r\n  if (diffs.length == 0 || diffs[0][0] != DIFF_EQUAL) {\r\n    // Add nullPadding equality.\r\n    diffs.unshift([DIFF_EQUAL, nullPadding]);\r\n    patch.start1 -= paddingLength;  // Should be 0.\r\n    patch.start2 -= paddingLength;  // Should be 0.\r\n    patch.length1 += paddingLength;\r\n    patch.length2 += paddingLength;\r\n  } else if (paddingLength > diffs[0][1].length) {\r\n    // Grow first equality.\r\n    var extraLength = paddingLength - diffs[0][1].length;\r\n    diffs[0][1] = nullPadding.substring(diffs[0][1].length) + diffs[0][1];\r\n    patch.start1 -= extraLength;\r\n    patch.start2 -= extraLength;\r\n    patch.length1 += extraLength;\r\n    patch.length2 += extraLength;\r\n  }\r\n\r\n  // Add some padding on end of last diff.\r\n  patch = patches[patches.length - 1];\r\n  diffs = patch.diffs;\r\n  if (diffs.length == 0 || diffs[diffs.length - 1][0] != DIFF_EQUAL) {\r\n    // Add nullPadding equality.\r\n    diffs.push([DIFF_EQUAL, nullPadding]);\r\n    patch.length1 += paddingLength;\r\n    patch.length2 += paddingLength;\r\n  } else if (paddingLength > diffs[diffs.length - 1][1].length) {\r\n    // Grow last equality.\r\n    var extraLength = paddingLength - diffs[diffs.length - 1][1].length;\r\n    diffs[diffs.length - 1][1] += nullPadding.substring(0, extraLength);\r\n    patch.length1 += extraLength;\r\n    patch.length2 += extraLength;\r\n  }\r\n\r\n  return nullPadding;\r\n};\r\n\r\n\r\n/**\r\n * Look through the patches and break up any which are longer than the maximum\r\n * limit of the match algorithm.\r\n * Intended to be called only from within patch_apply.\r\n * @param {!Array.<!diff_match_patch.patch_obj>} patches Array of Patch objects.\r\n */\r\ndiff_match_patch.prototype.patch_splitMax = function(patches) {\r\n  var patch_size = this.Match_MaxBits;\r\n  for (var x = 0; x < patches.length; x++) {\r\n    if (patches[x].length1 <= patch_size) {\r\n      continue;\r\n    }\r\n    var bigpatch = patches[x];\r\n    // Remove the big old patch.\r\n    patches.splice(x--, 1);\r\n    var start1 = bigpatch.start1;\r\n    var start2 = bigpatch.start2;\r\n    var precontext = '';\r\n    while (bigpatch.diffs.length !== 0) {\r\n      // Create one of several smaller patches.\r\n      var patch = new diff_match_patch.patch_obj();\r\n      var empty = true;\r\n      patch.start1 = start1 - precontext.length;\r\n      patch.start2 = start2 - precontext.length;\r\n      if (precontext !== '') {\r\n        patch.length1 = patch.length2 = precontext.length;\r\n        patch.diffs.push([DIFF_EQUAL, precontext]);\r\n      }\r\n      while (bigpatch.diffs.length !== 0 &&\r\n             patch.length1 < patch_size - this.Patch_Margin) {\r\n        var diff_type = bigpatch.diffs[0][0];\r\n        var diff_text = bigpatch.diffs[0][1];\r\n        if (diff_type === DIFF_INSERT) {\r\n          // Insertions are harmless.\r\n          patch.length2 += diff_text.length;\r\n          start2 += diff_text.length;\r\n          patch.diffs.push(bigpatch.diffs.shift());\r\n          empty = false;\r\n        } else if (diff_type === DIFF_DELETE && patch.diffs.length == 1 &&\r\n                   patch.diffs[0][0] == DIFF_EQUAL &&\r\n                   diff_text.length > 2 * patch_size) {\r\n          // This is a large deletion.  Let it pass in one chunk.\r\n          patch.length1 += diff_text.length;\r\n          start1 += diff_text.length;\r\n          empty = false;\r\n          patch.diffs.push([diff_type, diff_text]);\r\n          bigpatch.diffs.shift();\r\n        } else {\r\n          // Deletion or equality.  Only take as much as we can stomach.\r\n          diff_text = diff_text.substring(0,\r\n              patch_size - patch.length1 - this.Patch_Margin);\r\n          patch.length1 += diff_text.length;\r\n          start1 += diff_text.length;\r\n          if (diff_type === DIFF_EQUAL) {\r\n            patch.length2 += diff_text.length;\r\n            start2 += diff_text.length;\r\n          } else {\r\n            empty = false;\r\n          }\r\n          patch.diffs.push([diff_type, diff_text]);\r\n          if (diff_text == bigpatch.diffs[0][1]) {\r\n            bigpatch.diffs.shift();\r\n          } else {\r\n            bigpatch.diffs[0][1] =\r\n                bigpatch.diffs[0][1].substring(diff_text.length);\r\n          }\r\n        }\r\n      }\r\n      // Compute the head context for the next patch.\r\n      precontext = this.diff_text2(patch.diffs);\r\n      precontext =\r\n          precontext.substring(precontext.length - this.Patch_Margin);\r\n      // Append the end context for this patch.\r\n      var postcontext = this.diff_text1(bigpatch.diffs)\r\n                            .substring(0, this.Patch_Margin);\r\n      if (postcontext !== '') {\r\n        patch.length1 += postcontext.length;\r\n        patch.length2 += postcontext.length;\r\n        if (patch.diffs.length !== 0 &&\r\n            patch.diffs[patch.diffs.length - 1][0] === DIFF_EQUAL) {\r\n          patch.diffs[patch.diffs.length - 1][1] += postcontext;\r\n        } else {\r\n          patch.diffs.push([DIFF_EQUAL, postcontext]);\r\n        }\r\n      }\r\n      if (!empty) {\r\n        patches.splice(++x, 0, patch);\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * Take a list of patches and return a textual representation.\r\n * @param {!Array.<!diff_match_patch.patch_obj>} patches Array of Patch objects.\r\n * @return {string} Text representation of patches.\r\n */\r\ndiff_match_patch.prototype.patch_toText = function(patches) {\r\n  var text = [];\r\n  for (var x = 0; x < patches.length; x++) {\r\n    text[x] = patches[x];\r\n  }\r\n  return text.join('');\r\n};\r\n\r\n\r\n/**\r\n * Parse a textual representation of patches and return a list of Patch objects.\r\n * @param {string} textline Text representation of patches.\r\n * @return {!Array.<!diff_match_patch.patch_obj>} Array of Patch objects.\r\n * @throws {!Error} If invalid input.\r\n */\r\ndiff_match_patch.prototype.patch_fromText = function(textline) {\r\n  var patches = [];\r\n  if (!textline) {\r\n    return patches;\r\n  }\r\n  var text = textline.split('\\n');\r\n  var textPointer = 0;\r\n  var patchHeader = /^@@ -(\\d+),?(\\d*) \\+(\\d+),?(\\d*) @@$/;\r\n  while (textPointer < text.length) {\r\n    var m = text[textPointer].match(patchHeader);\r\n    if (!m) {\r\n      throw new Error('Invalid patch string: ' + text[textPointer]);\r\n    }\r\n    var patch = new diff_match_patch.patch_obj();\r\n    patches.push(patch);\r\n    patch.start1 = parseInt(m[1], 10);\r\n    if (m[2] === '') {\r\n      patch.start1--;\r\n      patch.length1 = 1;\r\n    } else if (m[2] == '0') {\r\n      patch.length1 = 0;\r\n    } else {\r\n      patch.start1--;\r\n      patch.length1 = parseInt(m[2], 10);\r\n    }\r\n\r\n    patch.start2 = parseInt(m[3], 10);\r\n    if (m[4] === '') {\r\n      patch.start2--;\r\n      patch.length2 = 1;\r\n    } else if (m[4] == '0') {\r\n      patch.length2 = 0;\r\n    } else {\r\n      patch.start2--;\r\n      patch.length2 = parseInt(m[4], 10);\r\n    }\r\n    textPointer++;\r\n\r\n    while (textPointer < text.length) {\r\n      var sign = text[textPointer].charAt(0);\r\n      try {\r\n        var line = decodeURI(text[textPointer].substring(1));\r\n      } catch (ex) {\r\n        // Malformed URI sequence.\r\n        throw new Error('Illegal escape in patch_fromText: ' + line);\r\n      }\r\n      if (sign == '-') {\r\n        // Deletion.\r\n        patch.diffs.push([DIFF_DELETE, line]);\r\n      } else if (sign == '+') {\r\n        // Insertion.\r\n        patch.diffs.push([DIFF_INSERT, line]);\r\n      } else if (sign == ' ') {\r\n        // Minor equality.\r\n        patch.diffs.push([DIFF_EQUAL, line]);\r\n      } else if (sign == '@') {\r\n        // Start of next patch.\r\n        break;\r\n      } else if (sign === '') {\r\n        // Blank line?  Whatever.\r\n      } else {\r\n        // WTF?\r\n        throw new Error('Invalid patch mode \"' + sign + '\" in: ' + line);\r\n      }\r\n      textPointer++;\r\n    }\r\n  }\r\n  return patches;\r\n};\r\n\r\n\r\n/**\r\n * Class representing one patch operation.\r\n * @constructor\r\n */\r\ndiff_match_patch.patch_obj = function() {\r\n  /** @type {!Array.<!diff_match_patch.Diff>} */\r\n  this.diffs = [];\r\n  /** @type {?number} */\r\n  this.start1 = null;\r\n  /** @type {?number} */\r\n  this.start2 = null;\r\n  /** @type {number} */\r\n  this.length1 = 0;\r\n  /** @type {number} */\r\n  this.length2 = 0;\r\n};\r\n\r\n\r\n/**\r\n * Emmulate GNU diff's format.\r\n * Header: @@ -382,8 +481,9 @@\r\n * Indicies are printed as 1-based, not 0-based.\r\n * @return {string} The GNU diff string.\r\n */\r\ndiff_match_patch.patch_obj.prototype.toString = function() {\r\n  var coords1, coords2;\r\n  if (this.length1 === 0) {\r\n    coords1 = this.start1 + ',0';\r\n  } else if (this.length1 == 1) {\r\n    coords1 = this.start1 + 1;\r\n  } else {\r\n    coords1 = (this.start1 + 1) + ',' + this.length1;\r\n  }\r\n  if (this.length2 === 0) {\r\n    coords2 = this.start2 + ',0';\r\n  } else if (this.length2 == 1) {\r\n    coords2 = this.start2 + 1;\r\n  } else {\r\n    coords2 = (this.start2 + 1) + ',' + this.length2;\r\n  }\r\n  var text = ['@@ -' + coords1 + ' +' + coords2 + ' @@\\n'];\r\n  var op;\r\n  // Escape the body of the patch with %xx notation.\r\n  for (var x = 0; x < this.diffs.length; x++) {\r\n    switch (this.diffs[x][0]) {\r\n      case DIFF_INSERT:\r\n        op = '+';\r\n        break;\r\n      case DIFF_DELETE:\r\n        op = '-';\r\n        break;\r\n      case DIFF_EQUAL:\r\n        op = ' ';\r\n        break;\r\n    }\r\n    text[x + 1] = op + encodeURI(this.diffs[x][1]) + '\\n';\r\n  }\r\n  return text.join('').replace(/%20/g, ' ');\r\n};\r\n\r\n\r\n// The following export code was added by @ForbesLindesay\r\nmodule.exports = diff_match_patch;\r\nmodule.exports['diff_match_patch'] = diff_match_patch;\r\nmodule.exports['DIFF_DELETE'] = DIFF_DELETE;\r\nmodule.exports['DIFF_INSERT'] = DIFF_INSERT;\r\nmodule.exports['DIFF_EQUAL'] = DIFF_EQUAL;\r\n","/*! Moment Duration Format v1.3.0\n *  https://github.com/jsmreese/moment-duration-format \n *  Date: 2014-07-15\n *\n *  Duration format plugin function for the Moment.js library\n *  http://momentjs.com/\n *\n *  Copyright 2014 John Madhavan-Reese\n *  Released under the MIT license\n */\n\n(function (root, undefined) {\n\n\t// repeatZero(qty)\n\t// returns \"0\" repeated qty times\n\tfunction repeatZero(qty) {\n\t\tvar result = \"\";\n\t\t\n\t\t// exit early\n\t\t// if qty is 0 or a negative number\n\t\t// or doesn't coerce to an integer\n\t\tqty = parseInt(qty, 10);\n\t\tif (!qty || qty < 1) { return result; }\n\t\t\n\t\twhile (qty) {\n\t\t\tresult += \"0\";\n\t\t\tqty -= 1;\n\t\t}\n\t\t\n\t\treturn result;\n\t}\n\t\n\t// padZero(str, len [, isRight])\n\t// pads a string with zeros up to a specified length\n\t// will not pad a string if its length is aready\n\t// greater than or equal to the specified length\n\t// default output pads with zeros on the left\n\t// set isRight to `true` to pad with zeros on the right\n\tfunction padZero(str, len, isRight) {\n\t\tif (str == null) { str = \"\"; }\n\t\tstr = \"\" + str;\n\t\t\n\t\treturn (isRight ? str : \"\") + repeatZero(len - str.length) + (isRight ? \"\" : str);\n\t}\n\t\n\t// isArray\n\tfunction isArray(array) {\n\t\treturn Object.prototype.toString.call(array) === \"[object Array]\";\n\t}\n\t\n\t// isObject\n\tfunction isObject(obj) {\n\t\treturn Object.prototype.toString.call(obj) === \"[object Object]\";\n\t}\n\t\n\t// findLast\n\tfunction findLast(array, callback) {\n\t\tvar index = array.length;\n\n\t\twhile (index -= 1) {\n\t\t\tif (callback(array[index])) { return array[index]; }\n\t\t}\n\t}\n\n\t// find\n\tfunction find(array, callback) {\n\t\tvar index = 0,\n\t\t\tmax = array.length,\n\t\t\tmatch;\n\t\t\t\n\t\tif (typeof callback !== \"function\") {\n\t\t\tmatch = callback;\n\t\t\tcallback = function (item) {\n\t\t\t\treturn item === match;\n\t\t\t};\n\t\t}\n\n\t\twhile (index < max) {\n\t\t\tif (callback(array[index])) { return array[index]; }\n\t\t\tindex += 1;\n\t\t}\n\t}\n\t\n\t// each\n\tfunction each(array, callback) {\n\t\tvar index = 0,\n\t\t\tmax = array.length;\n\t\t\t\n\t\tif (!array || !max) { return; }\n\n\t\twhile (index < max) {\n\t\t\tif (callback(array[index], index) === false) { return; }\n\t\t\tindex += 1;\n\t\t}\n\t}\n\t\n\t// map\n\tfunction map(array, callback) {\n\t\tvar index = 0,\n\t\t\tmax = array.length,\n\t\t\tret = [];\n\n\t\tif (!array || !max) { return ret; }\n\t\t\t\t\n\t\twhile (index < max) {\n\t\t\tret[index] = callback(array[index], index);\n\t\t\tindex += 1;\n\t\t}\n\t\t\n\t\treturn ret;\n\t}\n\t\n\t// pluck\n\tfunction pluck(array, prop) {\n\t\treturn map(array, function (item) {\n\t\t\treturn item[prop];\n\t\t});\n\t}\n\t\n\t// compact\n\tfunction compact(array) {\n\t\tvar ret = [];\n\t\t\n\t\teach(array, function (item) {\n\t\t\tif (item) { ret.push(item); }\n\t\t});\n\t\t\n\t\treturn ret;\n\t}\n\t\n\t// unique\n\tfunction unique(array) {\n\t\tvar ret = [];\n\t\t\n\t\teach(array, function (_a) {\n\t\t\tif (!find(ret, _a)) { ret.push(_a); }\n\t\t});\n\t\t\n\t\treturn ret;\n\t}\n\t\n\t// intersection\n\tfunction intersection(a, b) {\n\t\tvar ret = [];\n\t\t\n\t\teach(a, function (_a) {\n\t\t\teach(b, function (_b) {\n\t\t\t\tif (_a === _b) { ret.push(_a); }\n\t\t\t});\n\t\t});\n\t\t\n\t\treturn unique(ret);\n\t}\n\t\n\t// rest\n\tfunction rest(array, callback) {\n\t\tvar ret = [];\n\t\t\n\t\teach(array, function (item, index) {\n\t\t\tif (!callback(item)) {\n\t\t\t\tret = array.slice(index);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\t\t\n\t\treturn ret;\n\t}\n\n\t// initial\n\tfunction initial(array, callback) {\n\t\tvar reversed = array.slice().reverse();\n\t\t\n\t\treturn rest(reversed, callback).reverse();\n\t}\n\t\n\t// extend\n\tfunction extend(a, b) {\n\t\tfor (var key in b) {\n\t\t\tif (b.hasOwnProperty(key)) { a[key] = b[key]; }\n\t\t}\n\t\t\n\t\treturn a;\n\t}\n\t\t\t\n\t// define internal moment reference\n\tvar moment;\n\n\tif (typeof require === \"function\") {\n\t\ttry { moment = require('moment'); } \n\t\tcatch (e) {}\n\t} \n\t\n\tif (!moment && root.moment) {\n\t\tmoment = root.moment;\n\t}\n\t\n\tif (!moment) {\n\t\tthrow \"Moment Duration Format cannot find Moment.js\";\n\t}\n\t\n\t// moment.duration.format([template] [, precision] [, settings])\n\tmoment.duration.fn.format = function () {\n\n\t\tvar tokenizer, tokens, types, typeMap, momentTypes, foundFirst, trimIndex,\n\t\t\targs = [].slice.call(arguments),\n\t\t\tsettings = extend({}, this.format.defaults),\n\t\t\t// keep a shadow copy of this moment for calculating remainders\n\t\t\tremainder = moment.duration(this);\n\n\t\t// add a reference to this duration object to the settings for use\n\t\t// in a template function\n\t\tsettings.duration = this;\n\n\t\t// parse arguments\n\t\teach(args, function (arg) {\n\t\t\tif (typeof arg === \"string\" || typeof arg === \"function\") {\n\t\t\t\tsettings.template = arg;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (typeof arg === \"number\") {\n\t\t\t\tsettings.precision = arg;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (isObject(arg)) {\n\t\t\t\textend(settings, arg);\n\t\t\t}\n\t\t});\n\n\t\t// types\n\t\ttypes = settings.types = (isArray(settings.types) ? settings.types : settings.types.split(\" \"));\n\n\t\t// template\n\t\tif (typeof settings.template === \"function\") {\n\t\t\tsettings.template = settings.template.apply(settings);\n\t\t}\n\n\t\t// tokenizer regexp\n\t\ttokenizer = new RegExp(map(types, function (type) {\n\t\t\treturn settings[type].source;\n\t\t}).join(\"|\"), \"g\");\n\n\t\t// token type map function\n\t\ttypeMap = function (token) {\n\t\t\treturn find(types, function (type) {\n\t\t\t\treturn settings[type].test(token);\n\t\t\t});\n\t\t};\n\n\t\t// tokens array\n\t\ttokens = map(settings.template.match(tokenizer), function (token, index) {\n\t\t\tvar type = typeMap(token),\n\t\t\t\tlength = token.length;\n\n\t\t\treturn {\n\t\t\t\tindex: index,\n\t\t\t\tlength: length,\n\n\t\t\t\t// replace escaped tokens with the non-escaped token text\n\t\t\t\ttoken: (type === \"escape\" ? token.replace(settings.escape, \"$1\") : token),\n\n\t\t\t\t// ignore type on non-moment tokens\n\t\t\t\ttype: ((type === \"escape\" || type === \"general\") ? null : type)\n\n\t\t\t\t// calculate base value for all moment tokens\n\t\t\t\t//baseValue: ((type === \"escape\" || type === \"general\") ? null : this.as(type))\n\t\t\t};\n\t\t}, this);\n\n\t\t// unique moment token types in the template (in order of descending magnitude)\n\t\tmomentTypes = intersection(types, unique(compact(pluck(tokens, \"type\"))));\n\n\t\t// exit early if there are no momentTypes\n\t\tif (!momentTypes.length) {\n\t\t\treturn pluck(tokens, \"token\").join(\"\");\n\t\t}\n\n\t\t// calculate values for each token type in the template\n\t\teach(momentTypes, function (momentType, index) {\n\t\t\tvar value, wholeValue, decimalValue, isLeast, isMost;\n\n\t\t\t// calculate integer and decimal value portions\n\t\t\tvalue = remainder.as(momentType);\n\t\t\twholeValue = (value > 0 ? Math.floor(value) : Math.ceil(value));\n\t\t\tdecimalValue = value - wholeValue;\n\n\t\t\t// is this the least-significant moment token found?\n\t\t\tisLeast = ((index + 1) === momentTypes.length);\n\n\t\t\t// is this the most-significant moment token found?\n\t\t\tisMost = (!index);\n\n\t\t\t// update tokens array\n\t\t\t// using this algorithm to not assume anything about\n\t\t\t// the order or frequency of any tokens\n\t\t\teach(tokens, function (token) {\n\t\t\t\tif (token.type === momentType) {\n\t\t\t\t\textend(token, {\n\t\t\t\t\t\tvalue: value,\n\t\t\t\t\t\twholeValue: wholeValue,\n\t\t\t\t\t\tdecimalValue: decimalValue,\n\t\t\t\t\t\tisLeast: isLeast,\n\t\t\t\t\t\tisMost: isMost\n\t\t\t\t\t});\n\n\t\t\t\t\tif (isMost) {\n\t\t\t\t\t\t// note the length of the most-significant moment token:\n\t\t\t\t\t\t// if it is greater than one and forceLength is not set, default forceLength to `true`\n\t\t\t\t\t\tif (settings.forceLength == null && token.length > 1) {\n\t\t\t\t\t\t\tsettings.forceLength = true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// rationale is this:\n\t\t\t\t\t\t// if the template is \"h:mm:ss\" and the moment value is 5 minutes, the user-friendly output is \"5:00\", not \"05:00\"\n\t\t\t\t\t\t// shouldn't pad the `minutes` token even though it has length of two\n\t\t\t\t\t\t// if the template is \"hh:mm:ss\", the user clearly wanted everything padded so we should output \"05:00\"\n\t\t\t\t\t\t// if the user wanted the full padded output, they can set `{ trim: false }` to get \"00:05:00\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// update remainder\n\t\t\tremainder.subtract(wholeValue, momentType);\n\t\t});\n\t\n\t\t// trim tokens array\n\t\tif (settings.trim) {\n\t\t\ttokens = (settings.trim === \"left\" ? rest : initial)(tokens, function (token) {\n\t\t\t\t// return `true` if:\n\t\t\t\t// the token is not the least moment token (don't trim the least moment token)\n\t\t\t\t// the token is a moment token that does not have a value (don't trim moment tokens that have a whole value)\n\t\t\t\treturn !(token.isLeast || (token.type != null && token.wholeValue));\n\t\t\t});\n\t\t}\n\t\t\n\t\t\n\t\t// build output\n\n\t\t// the first moment token can have special handling\n\t\tfoundFirst = false;\n\n\t\t// run the map in reverse order if trimming from the right\n\t\tif (settings.trim === \"right\") {\n\t\t\ttokens.reverse();\n\t\t}\n\n\t\ttokens = map(tokens, function (token) {\n\t\t\tvar val,\n\t\t\t\tdecVal;\n\n\t\t\tif (!token.type) {\n\t\t\t\t// if it is not a moment token, use the token as its own value\n\t\t\t\treturn token.token;\n\t\t\t}\n\n\t\t\t// apply negative precision formatting to the least-significant moment token\n\t\t\tif (token.isLeast && (settings.precision < 0)) {\n\t\t\t\tval = (Math.floor(token.wholeValue * Math.pow(10, settings.precision)) * Math.pow(10, -settings.precision)).toString();\n\t\t\t} else {\n\t\t\t\tval = token.wholeValue.toString();\n\t\t\t}\n\t\t\t\n\t\t\t// remove negative sign from the beginning\n\t\t\tval = val.replace(/^\\-/, \"\");\n\n\t\t\t// apply token length formatting\n\t\t\t// special handling for the first moment token that is not the most significant in a trimmed template\n\t\t\tif (token.length > 1 && (foundFirst || token.isMost || settings.forceLength)) {\n\t\t\t\tval = padZero(val, token.length);\n\t\t\t}\n\n\t\t\t// add decimal value if precision > 0\n\t\t\tif (token.isLeast && (settings.precision > 0)) {\n\t\t\t\tdecVal = token.decimalValue.toString().replace(/^\\-/, \"\").split(/\\.|e\\-/);\n\t\t\t\tswitch (decVal.length) {\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tval += \".\" + padZero(decVal[0], settings.precision, true).slice(0, settings.precision);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tval += \".\" + padZero(decVal[1], settings.precision, true).slice(0, settings.precision);\t\t\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tval += \".\" + padZero(repeatZero((+decVal[2]) - 1) + (decVal[0] || \"0\") + decVal[1], settings.precision, true).slice(0, settings.precision);\t\t\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow \"Moment Duration Format: unable to parse token decimal value.\";\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t// add a negative sign if the value is negative and token is most significant\n\t\t\tif (token.isMost && token.value < 0) {\n\t\t\t\tval = \"-\" + val;\n\t\t\t}\n\n\t\t\tfoundFirst = true;\n\n\t\t\treturn val;\n\t\t});\n\n\t\t// undo the reverse if trimming from the right\n\t\tif (settings.trim === \"right\") {\n\t\t\ttokens.reverse();\n\t\t}\n\n\t\treturn tokens.join(\"\");\n\t};\n\n\tmoment.duration.fn.format.defaults = {\n\t\t// token definitions\n\t\tescape: /\\[(.+?)\\]/,\n\t\tyears: /[Yy]+/,\n\t\tmonths: /M+/,\n\t\tweeks: /[Ww]+/,\n\t\tdays: /[Dd]+/,\n\t\thours: /[Hh]+/,\n\t\tminutes: /m+/,\n\t\tseconds: /s+/,\n\t\tmilliseconds: /S+/,\n\t\tgeneral: /.+?/,\n\n\t\t// token type names\n\t\t// in order of descending magnitude\n\t\t// can be a space-separated token name list or an array of token names\n\t\ttypes: \"escape years months weeks days hours minutes seconds milliseconds general\",\n\n\t\t// format options\n\n\t\t// trim\n\t\t// \"left\" - template tokens are trimmed from the left until the first moment token that has a value >= 1\n\t\t// \"right\" - template tokens are trimmed from the right until the first moment token that has a value >= 1\n\t\t// (the final moment token is not trimmed, regardless of value)\n\t\t// `false` - template tokens are not trimmed\n\t\ttrim: \"left\",\n\n\t\t// precision\n\t\t// number of decimal digits to include after (to the right of) the decimal point (positive integer)\n\t\t// or the number of digits to truncate to 0 before (to the left of) the decimal point (negative integer)\n\t\tprecision: 0,\n\n\t\t// force first moment token with a value to render at full length even when template is trimmed and first moment token has length of 1\n\t\tforceLength: null,\n\n\t\t// template used to format duration\n\t\t// may be a function or a string\n\t\t// template functions are executed with the `this` binding of the settings object\n\t\t// so that template strings may be dynamically generated based on the duration object\n\t\t// (accessible via `this.duration`)\n\t\t// or any of the other settings\n\t\ttemplate: function () {\n\t\t\tvar types = this.types,\n\t\t\t\tdur = this.duration,\n\t\t\t\tlastType = findLast(types, function (type) {\n\t\t\t\t\treturn dur._data[type];\n\t\t\t\t});\n\n\t\t\t// default template strings for each duration dimension type\n\t\t\tswitch (lastType) {\n\t\t\t\tcase \"seconds\":\n\t\t\t\t\treturn \"h:mm:ss\";\n\t\t\t\tcase \"minutes\":\n\t\t\t\t\treturn \"d[d] h:mm\";\n\t\t\t\tcase \"hours\":\n\t\t\t\t\treturn \"d[d] h[h]\";\n\t\t\t\tcase \"days\":\n\t\t\t\t\treturn \"M[m] d[d]\";\n\t\t\t\tcase \"weeks\":\n\t\t\t\t\treturn \"y[y] w[w]\";\n\t\t\t\tcase \"months\":\n\t\t\t\t\treturn \"y[y] M[m]\";\n\t\t\t\tcase \"years\":\n\t\t\t\t\treturn \"y[y]\";\n\t\t\t\tdefault:\n\t\t\t\t\treturn \"y[y] M[m] d[d] h:mm:ss\";\n\t\t\t}\n\t\t}\n\t};\n\n})(this);\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nangular.module('zeppelinWebApp').controller('clipboardCtrl', ClipboardController);\n\nfunction ClipboardController($scope) {\n  'ngInject';\n\n  $scope.complete = function(e) {\n    $scope.copied = true;\n    $scope.tooltip = 'Copied!';\n    setTimeout(function() {\n      $scope.tooltip = 'Copy to clipboard';\n    }, 400);\n  };\n  $scope.$watch('input', function() {\n    $scope.copied = false;\n    $scope.tooltip = 'Copy to clipboard';\n  });\n  $scope.clipError = function(e) {\n    console.log('Error: ' + e.name + ' - ' + e.message);\n    $scope.tooltip = 'Not supported browser';\n  };\n}\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nangular.module('zeppelinWebApp').directive('resizable', ResizableDirective);\n\nfunction ResizableDirective() {\n  let resizableConfig = {\n    autoHide: true,\n    handles: 'se',\n    helper: 'resizable-helper',\n    stop: function() {\n      angular.element(this).css({'width': '100%', 'height': '100%'});\n    },\n  };\n\n  let addEvent = function(config) {\n    let removeEventByID = function(id) {\n      let events = jQuery._data(config.element, 'events')[config.eventType];\n      for (let i=0; i < events.length; i++) {\n        if (events[i].data && events[i].data.eventID === id) {\n          events.splice(i, 1);\n          i--;\n        }\n      }\n    };\n    removeEventByID(config.eventID);\n    angular.element(config.element).bind(config.eventType, {eventID: config.eventID}, config.handler);\n    angular.element(config.onDestroyElement).scope().$on('$destroy', () => {\n      removeEventByID(config.eventID);\n    });\n  };\n\n  return {\n    restrict: 'A',\n    scope: {\n      callback: '&onResize',\n    },\n    link: function postLink(scope, elem, attrs) {\n      attrs.$observe('resize', function(resize) {\n        let resetResize = function(elem, resize) {\n          let colStep = window.innerWidth / 12;\n          elem.off('resizestop');\n          let conf = angular.copy(resizableConfig);\n          if (resize.graphType === 'TABLE' || resize.graphType === 'NETWORK' || resize.graphType === 'TEXT') {\n            conf.grid = [colStep, 10];\n            conf.minHeight = 100;\n          } else {\n            conf.grid = [colStep, 10000];\n            conf.minHeight = 0;\n          }\n          conf.maxWidth = window.innerWidth;\n\n          elem.resizable(conf);\n          elem.on('resizestop', function() {\n            if (scope.callback) {\n              let height = elem.height();\n              if (height < 50) {\n                height = 300;\n              }\n              scope.callback({width: Math.ceil(elem.width() / colStep), height: height});\n            }\n          });\n        };\n\n        resize = JSON.parse(resize);\n        if (resize.allowresize === 'true') {\n          resetResize(elem, resize);\n\n          addEvent({\n            eventID: elem[0].id,\n            eventType: 'resize',\n            element: window,\n            onDestroyElement: elem[0],\n            handler: () => resetResize(elem, resize),\n          });\n        }\n      });\n    },\n  };\n}\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport moment from 'moment';\n\nimport DatasetFactory from '../../../tabledata/datasetfactory';\nimport TableVisualization from '../../../visualization/builtins/visualization-table';\nimport BarchartVisualization from '../../../visualization/builtins/visualization-barchart';\nimport PiechartVisualization from '../../../visualization/builtins/visualization-piechart';\nimport AreachartVisualization from '../../../visualization/builtins/visualization-areachart';\nimport LinechartVisualization from '../../../visualization/builtins/visualization-linechart';\nimport ScatterchartVisualization from '../../../visualization/builtins/visualization-scatterchart';\nimport NetworkVisualization from '../../../visualization/builtins/visualization-d3network';\nimport {DefaultDisplayType, SpellResult} from '../../../spell';\nimport {ParagraphStatus} from '../paragraph.status';\nimport Result from './result';\n\nconst AnsiUp = require('ansi_up');\nconst AnsiUpConverter = new AnsiUp.default; // eslint-disable-line new-parens,new-cap\nconst TableGridFilterTemplate = require('../../../visualization/builtins/visualization-table-grid-filter.html');\n\nangular.module('zeppelinWebApp').controller('ResultCtrl', ResultCtrl);\n\nfunction ResultCtrl($scope, $rootScope, $route, $window, $routeParams, $location,\n                    $timeout, $compile, $http, $q, $templateCache, $templateRequest, $sce, websocketMsgSrv,\n                    baseUrlSrv, ngToast, saveAsService, noteVarShareService, heliumService,\n                    uiGridConstants) {\n  'ngInject';\n\n  /**\n   * Built-in visualizations\n   */\n  $scope.builtInTableDataVisualizationList = [\n    {\n      id: 'table',   // paragraph.config.graph.mode\n      name: 'Table', // human readable name. tooltip\n      icon: '<i class=\"fa fa-table\"></i>',\n      supports: [DefaultDisplayType.TABLE, DefaultDisplayType.NETWORK],\n    },\n    {\n      id: 'multiBarChart',\n      name: 'Bar Chart',\n      icon: '<i class=\"fa fa-bar-chart\"></i>',\n      transformation: 'pivot',\n      supports: [DefaultDisplayType.TABLE, DefaultDisplayType.NETWORK],\n    },\n    {\n      id: 'pieChart',\n      name: 'Pie Chart',\n      icon: '<i class=\"fa fa-pie-chart\"></i>',\n      transformation: 'pivot',\n      supports: [DefaultDisplayType.TABLE, DefaultDisplayType.NETWORK],\n    },\n    {\n      id: 'stackedAreaChart',\n      name: 'Area Chart',\n      icon: '<i class=\"fa fa-area-chart\"></i>',\n      transformation: 'pivot',\n      supports: [DefaultDisplayType.TABLE, DefaultDisplayType.NETWORK],\n    },\n    {\n      id: 'lineChart',\n      name: 'Line Chart',\n      icon: '<i class=\"fa fa-line-chart\"></i>',\n      transformation: 'pivot',\n      supports: [DefaultDisplayType.TABLE, DefaultDisplayType.NETWORK],\n    },\n    {\n      id: 'scatterChart',\n      name: 'Scatter Chart',\n      icon: '<i class=\"cf cf-scatter-chart\"></i>',\n      supports: [DefaultDisplayType.TABLE, DefaultDisplayType.NETWORK],\n    },\n    {\n      id: 'network',\n      name: 'Network',\n      icon: '<i class=\"fa fa-share-alt\"></i>',\n      supports: [DefaultDisplayType.NETWORK],\n    },\n  ];\n\n  /**\n   * Holds class and actual runtime instance and related infos of built-in visualizations\n   */\n  let builtInVisualizations = {\n    'table': {\n      class: TableVisualization,\n      instance: undefined,   // created from setGraphMode()\n    },\n    'multiBarChart': {\n      class: BarchartVisualization,\n      instance: undefined,\n    },\n    'pieChart': {\n      class: PiechartVisualization,\n      instance: undefined,\n    },\n    'stackedAreaChart': {\n      class: AreachartVisualization,\n      instance: undefined,\n    },\n    'lineChart': {\n      class: LinechartVisualization,\n      instance: undefined,\n    },\n    'scatterChart': {\n      class: ScatterchartVisualization,\n      instance: undefined,\n    },\n    'network': {\n      class: NetworkVisualization,\n      instance: undefined,\n    },\n  };\n\n  // type\n  $scope.type = null;\n\n  // Data of the result\n  let data;\n\n  // config\n  $scope.config = null;\n\n  // resultId = paragraph.id + index\n  $scope.id = null;\n\n  // referece to paragraph\n  let paragraph;\n\n  // index of the result\n  let resultIndex;\n\n  // TableData instance\n  let tableData;\n\n  // available columns in tabledata\n  $scope.tableDataColumns = [];\n\n  // enable helium\n  let enableHelium = false;\n\n  // graphMode\n  $scope.graphMode = null;\n\n  // image data\n  $scope.imageData = null;\n\n  // queue for append output\n  const textResultQueueForAppend = [];\n\n  const retryRenderElements = {};\n  // prevent body area scrollbar from blocking due to scroll in paragraph results\n  $scope.mouseOver = false;\n  $scope.onMouseOver = function() {\n    $scope.mouseOver = true;\n  };\n  $scope.onMouseOut = function() {\n    $scope.mouseOver = false;\n  };\n  $scope.getPointerEvent = function() {\n    return ($scope.mouseOver) ? {'pointer-events': 'auto'}\n      : {'pointer-events': 'none'};\n  };\n\n  $scope.init = function(result, config, paragraph, index) {\n    // register helium plugin vis packages\n    let visPackages = heliumService.getVisualizationCachedPackages();\n    const visPackageOrder = heliumService.getVisualizationCachedPackageOrder();\n\n    // push the helium vis packages following the order\n    visPackageOrder.map((visName) => {\n      visPackages.map((vis) => {\n        if (vis.name !== visName) {\n          return;\n        }\n        $scope.builtInTableDataVisualizationList.push({\n          id: vis.id,\n          name: vis.name,\n          icon: $sce.trustAsHtml(vis.icon),\n          supports: [DefaultDisplayType.TABLE, DefaultDisplayType.NETWORK],\n        });\n        builtInVisualizations[vis.id] = {\n          class: vis.class,\n        };\n      });\n    });\n\n    updateData(result, config, paragraph, index);\n    renderResult($scope.type);\n  };\n\n  function isDOMLoaded(targetElemId) {\n    const elem = angular.element(`#${targetElemId}`);\n    return elem.length;\n  }\n\n  function cancelRetryRender(targetElemId) {\n    if (retryRenderElements[targetElemId]) {\n      $timeout.cancel(retryRenderElements[targetElemId]);\n      delete retryRenderElements[targetElemId];\n    }\n  }\n\n  /**\n   * Retry until the target element is loaded\n   * @param targetElemId\n   * @param callback\n   * @param nextTick - sometimes need run in next tick\n   */\n  function retryUntilElemIsLoaded(targetElemId, callback, nextTick = false) {\n    cancelRetryRender(targetElemId);\n\n    function callbackFun() {\n      const elem = angular.element(`#${targetElemId}`);\n      callback(elem);\n    }\n\n    function retry() {\n      cancelRetryRender(targetElemId);\n      if (!isDOMLoaded(targetElemId)) {\n        retryRenderElements[targetElemId] = $timeout(retry, 16);\n        return;\n      }\n      callbackFun();\n    }\n\n    if(isDOMLoaded(targetElemId) && !nextTick) {\n      callbackFun();\n    } else {\n      retryRenderElements[targetElemId] = $timeout(retry, 16);\n    }\n  }\n\n  $scope.$on('updateResult', function(event, result, newConfig, paragraphRef, index) {\n    if (paragraph.id !== paragraphRef.id || index !== resultIndex) {\n      return;\n    }\n\n    let refresh = !angular.equals(newConfig, $scope.config) ||\n      !angular.equals(result.type, $scope.type) ||\n      !angular.equals(result.data, data);\n\n    updateData(result, newConfig, paragraph, resultIndex);\n    renderResult($scope.type, refresh);\n  });\n\n  $scope.$on('appendParagraphOutput', function(event, data) {\n    /* It has been observed that append events\n     * can be errorneously called even if paragraph\n     * execution has ended, and in that case, no append\n     * should be made. Also, it was observed that between PENDING\n     * and RUNNING states, append-events can be called and we can't\n     * miss those, else during the length of paragraph run, few\n     * initial output line/s will be missing.\n     */\n    if (paragraph.id === data.paragraphId &&\n      resultIndex === data.index &&\n      (paragraph.status === ParagraphStatus.PENDING || paragraph.status === ParagraphStatus.RUNNING)) {\n      // Check if result type is eiter TEXT or TABLE, if not then treat it like TEXT\n      if ([DefaultDisplayType.TEXT, DefaultDisplayType.TABLE].indexOf($scope.type) < 0) {\n        $scope.type = DefaultDisplayType.TEXT;\n      }\n      if ($scope.type === DefaultDisplayType.TEXT) {\n        appendTextOutput(data.data);\n      } else if ($scope.type === DefaultDisplayType.TABLE) {\n        appendTableOutput(data);\n      }\n    }\n    if (paragraph.id === data.paragraphId &&\n      resultIndex === data.index &&\n      paragraph.status === ParagraphStatus.FINISHED) {\n      if ($scope.type === DefaultDisplayType.TABLE) {\n        appendTableOutput(data);\n      }\n    }\n  });\n\n  const updateData = function(result, config, paragraphRef, index) {\n    data = result.data;\n    paragraph = paragraphRef;\n    resultIndex = parseInt(index);\n\n    $scope.id = paragraph.id + '_' + index;\n    $scope.type = result.type;\n    config = config ? config : {};\n\n    // initialize default config values\n    if (!config.graph) {\n      config.graph = {};\n    }\n\n    if (!config.graph.mode) {\n      config.graph.mode = 'table';\n    }\n\n    if (!config.graph.height) {\n      config.graph.height = 300;\n    }\n\n    if (!config.graph.optionOpen) {\n      config.graph.optionOpen = false;\n    }\n\n    $scope.graphMode = config.graph.mode;\n    $scope.config = angular.copy(config);\n\n    // enable only when it is last result\n    enableHelium = (index === paragraphRef.results.msg.length - 1);\n\n    if ($scope.type === 'TABLE' || $scope.type === 'NETWORK') {\n      tableData = new DatasetFactory().createDataset($scope.type);\n      tableData.loadParagraphResult({type: $scope.type, msg: data});\n      $scope.tableDataColumns = tableData.columns;\n      $scope.tableDataComment = tableData.comment;\n      if ($scope.type === 'NETWORK') {\n        $scope.networkNodes = tableData.networkNodes;\n        $scope.networkRelationships = tableData.networkRelationships;\n        $scope.networkProperties = tableData.networkProperties;\n      }\n    } else if ($scope.type === 'IMG') {\n      $scope.imageData = data;\n    }\n  };\n\n  $scope.createDisplayDOMId = function(baseDOMId, type) {\n    if (type === DefaultDisplayType.TABLE || type === DefaultDisplayType.NETWORK) {\n      return `${baseDOMId}_graph`;\n    } else if (type === DefaultDisplayType.HTML) {\n      return `${baseDOMId}_html`;\n    } else if (type === DefaultDisplayType.ANGULAR) {\n      return `${baseDOMId}_angular`;\n    } else if (type === DefaultDisplayType.TEXT) {\n      return `${baseDOMId}_text`;\n    } else if (type === DefaultDisplayType.ELEMENT) {\n      return `${baseDOMId}_elem`;\n    } else {\n      console.error(`Cannot create display DOM Id due to unknown display type: ${type}`);\n    }\n  };\n\n  $scope.renderDefaultDisplay = function(targetElemId, type, data, refresh) {\n    const afterLoaded = () => {\n      if (type === DefaultDisplayType.TABLE || type === DefaultDisplayType.NETWORK) {\n        renderGraph(targetElemId, $scope.graphMode, refresh);\n      } else if (type === DefaultDisplayType.HTML) {\n        renderHtml(targetElemId, data);\n      } else if (type === DefaultDisplayType.ANGULAR) {\n        renderAngular(targetElemId, data);\n      } else if (type === DefaultDisplayType.TEXT) {\n        renderText(targetElemId, data, refresh);\n      } else if (type === DefaultDisplayType.ELEMENT) {\n        renderElem(targetElemId, data);\n      } else {\n        console.error(`Unknown Display Type: ${type}`);\n      }\n    };\n\n    retryUntilElemIsLoaded(targetElemId, afterLoaded);\n\n    // send message to parent that this result is rendered\n    const paragraphId = $scope.$parent.paragraph.id;\n    $scope.$emit('resultRendered', paragraphId);\n  };\n\n  const renderResult = function(type, refresh) {\n    let activeApp;\n    if (enableHelium) {\n      getSuggestions();\n      getApplicationStates();\n      activeApp = _.get($scope.config, 'helium.activeApp');\n    }\n\n    if (activeApp) {\n      const appState = _.find($scope.apps, {id: activeApp});\n      renderApp(`p${appState.id}`, appState);\n    } else {\n      if (!DefaultDisplayType[type]) {\n        $scope.renderCustomDisplay(type, data);\n      } else {\n        const targetElemId = $scope.createDisplayDOMId(`p${$scope.id}`, type);\n        $scope.renderDefaultDisplay(targetElemId, type, data, refresh);\n      }\n    }\n  };\n\n  $scope.isDefaultDisplay = function() {\n    return DefaultDisplayType[$scope.type];\n  };\n\n  /**\n   * Render multiple sub results for custom display\n   */\n  $scope.renderCustomDisplay = function(type, data) {\n    // get result from intp\n    if (!heliumService.getSpellByMagic(type)) {\n      console.error(`Can't execute spell due to unknown display type: ${type}`);\n      return;\n    }\n\n    // custom display result can include multiple subset results\n    heliumService.executeSpellAsDisplaySystem(type, data)\n      .then((dataWithTypes) => {\n        const containerDOMId = `p${$scope.id}_custom`;\n        const afterLoaded = () => {\n          const containerDOM = angular.element(`#${containerDOMId}`);\n          // Spell.interpret() can create multiple outputs\n          for (let i = 0; i < dataWithTypes.length; i++) {\n            const dt = dataWithTypes[i];\n            const data = dt.data;\n            const type = dt.type;\n\n            // prepare each DOM to be filled\n            const subResultDOMId = $scope.createDisplayDOMId(`p${$scope.id}_custom_${i}`, type);\n            const subResultDOM = document.createElement('div');\n            containerDOM.append(subResultDOM);\n            subResultDOM.setAttribute('id', subResultDOMId);\n\n            $scope.renderDefaultDisplay(subResultDOMId, type, data, true);\n          }\n        };\n\n        retryUntilElemIsLoaded(containerDOMId, afterLoaded);\n      })\n      .catch((error) => {\n        console.error(`Failed to render custom display: ${$scope.type}\\n` + error);\n      });\n  };\n\n  /**\n   * generates actually object which will be consumed from `data` property\n   * feed it to the success callback.\n   * if error occurs, the error is passed to the failure callback\n   *\n   * @param data {Object or Function}\n   * @param type {string} Display Type\n   * @param successCallback\n   * @param failureCallback\n   */\n  const handleData = function(data, type, successCallback, failureCallback) {\n    if (SpellResult.isFunction(data)) {\n      try {\n        successCallback(data());\n      } catch (error) {\n        failureCallback(error);\n        console.error(`Failed to handle ${type} type, function data\\n`, error);\n      }\n    } else if (SpellResult.isObject(data)) {\n      try {\n        successCallback(data);\n      } catch (error) {\n        console.error(`Failed to handle ${type} type, object data\\n`, error);\n      }\n    }\n  };\n\n  const renderElem = function(targetElemId, data) {\n    const elem = angular.element(`#${targetElemId}`);\n    handleData(() => {\n      data(targetElemId);\n    }, DefaultDisplayType.ELEMENT,\n      () => {}, /** HTML element will be filled with data. thus pass empty success callback */\n      (error) => {\n        elem.html(`${error.stack}`);\n      }\n    );\n  };\n\n  const renderHtml = function(targetElemId, data) {\n    const elem = angular.element(`#${targetElemId}`);\n    handleData(data, DefaultDisplayType.HTML,\n      (generated) => {\n        elem.html(generated);\n        elem.find('pre code').each(function(i, e) {\n          hljs.highlightBlock(e);\n        });\n        /* eslint new-cap: [2, {\"capIsNewExceptions\": [\"MathJax.Hub.Queue\"]}] */\n        MathJax.Hub.Queue(['Typeset', MathJax.Hub, elem[0]]);\n      },\n      (error) => {\n        elem.html(`${error.stack}`);\n      }\n    );\n  };\n\n  const renderAngular = function(targetElemId, data) {\n    const elem = angular.element(`#${targetElemId}`);\n    const paragraphScope = noteVarShareService.get(`${paragraph.id}_paragraphScope`);\n    handleData(data, DefaultDisplayType.ANGULAR,\n      (generated) => {\n        elem.html(generated);\n        $compile(elem.contents())(paragraphScope);\n      },\n      (error) => {\n        elem.html(`${error.stack}`);\n      }\n    );\n  };\n\n  const getTextResultElemId = function(resultId) {\n    return `p${resultId}_text`;\n  };\n\n  const checkAndReplaceCarriageReturn = function(str) {\n    return new Result(str).checkAndReplaceCarriageReturn();\n  };\n\n  const renderText = function(targetElemId, data, refresh) {\n    const elem = angular.element(`#${targetElemId}`);\n    handleData(data, DefaultDisplayType.TEXT,\n      (generated) => {\n        // clear all lines before render\n        removeChildrenDOM(targetElemId);\n\n        if (generated) {\n          generated = checkAndReplaceCarriageReturn(generated);\n          const escaped = AnsiUpConverter.ansi_to_html(generated);\n          const divDOM = angular.element('<div></div>').innerHTML = escaped;\n          if (refresh) {\n            elem.html(divDOM);\n          } else {\n            elem.append(divDOM);\n          }\n        } else if (refresh) {\n          elem.html('');\n        }\n\n        elem.bind('mousewheel', (e) => {\n          $scope.keepScrollDown = false;\n        });\n      },\n      (error) => {\n        elem.html(`${error.stack}`);\n      }\n    );\n  };\n\n  const removeChildrenDOM = function(targetElemId) {\n    const elem = angular.element(`#${targetElemId}`);\n    if (elem.length) {\n      elem.children().remove();\n    }\n  };\n\n  function appendTableOutput(data) {\n    if (ParagraphStatus.FINISHED !== paragraph.status) {\n      if (!$scope.$parent.result.data) {\n        $scope.$parent.result.data = [];\n        tableData = undefined;\n      }\n      if (!$scope.$parent.result.data[data.index]) {\n        $scope.$parent.result.data[data.index] = '';\n      }\n      if (tableData) {\n        let textRows = data.data.split('\\n');\n        for (let i = 0; i < textRows.length; i++) {\n          if (textRows[i] !== '') {\n            let row = textRows[i].split('\\t');\n            tableData.rows.push(row);\n            let builtInViz = builtInVisualizations['table'];\n            if (builtInViz.instance !== undefined) {\n              builtInViz.instance.append([row], tableData.columns);\n            }\n          }\n        }\n      }\n      if (!tableData\n        || !builtInVisualizations[$scope.graphMode].instance.append) {\n        $scope.$parent.result.data[data.index] = $scope.$parent.result.data[data.index].concat(\n          data.data);\n        $rootScope.$broadcast(\n          'updateResult',\n          {'data': $scope.$parent.result.data[data.index], 'type': 'TABLE'},\n          $scope.config,\n          paragraph,\n          data.index);\n        let elemId = `p${$scope.id}_` + $scope.graphMode;\n        renderGraph(elemId, $scope.graphMode, true);\n      }\n    }\n  }\n\n  function appendTextOutput(data) {\n    const elemId = getTextResultElemId($scope.id);\n    textResultQueueForAppend.push(data);\n\n    // if DOM is not loaded, just push data and return\n    if (!isDOMLoaded(elemId)) {\n      return;\n    }\n\n    const elem = angular.element(`#${elemId}`);\n\n    // pop all stacked data and append to the DOM\n    while (textResultQueueForAppend.length > 0) {\n      const line = elem.html() + AnsiUpConverter.ansi_to_html(textResultQueueForAppend.pop());\n      elem.html(checkAndReplaceCarriageReturn(line));\n      if ($scope.keepScrollDown) {\n        const doc = angular.element(`#${elemId}`);\n        doc[0].scrollTop = doc[0].scrollHeight;\n      }\n    }\n  }\n\n  const getTrSettingElem = function(scopeId, graphMode) {\n    return angular.element('#trsetting' + scopeId + '_' + graphMode);\n  };\n\n  const getVizSettingElem = function(scopeId, graphMode) {\n    return angular.element('#vizsetting' + scopeId + '_' + graphMode);\n  };\n\n  const renderGraph = function(graphElemId, graphMode, refresh) {\n    // set graph height\n    const height = $scope.config.graph.height;\n    const graphElem = angular.element(`#${graphElemId}`);\n    graphElem.height(height);\n\n    if (!graphMode) {\n      graphMode = 'table';\n    }\n\n    let builtInViz = builtInVisualizations[graphMode];\n    if (!builtInViz) {\n      /** helium package is not available, fallback to table vis */\n      graphMode = 'table';\n      $scope.graphMode = graphMode; /** html depends on this scope value */\n      builtInViz = builtInVisualizations[graphMode];\n    }\n\n    // deactive previsouly active visualization\n    for (let t in builtInVisualizations) {\n      if (builtInVisualizations.hasOwnProperty(t)) {\n        const v = builtInVisualizations[t].instance;\n\n        if (t !== graphMode && v && v.isActive()) {\n          v.deactivate();\n          break;\n        }\n      }\n    }\n\n    let afterLoaded = function() { /** will be overwritten */ };\n\n    if (!builtInViz.instance) { // not instantiated yet\n      // render when targetEl is available\n      afterLoaded = function(loadedElem) {\n        try {\n          const transformationSettingTargetEl = getTrSettingElem($scope.id, graphMode);\n          const visualizationSettingTargetEl = getVizSettingElem($scope.id, graphMode);\n          // set height\n          loadedElem.height(height);\n\n          // instantiate visualization\n          const config = getVizConfig(graphMode);\n          const Visualization = builtInViz.class;\n          builtInViz.instance = new Visualization(loadedElem, config);\n\n          // inject emitter, $templateRequest\n          const emitter = function(graphSetting) {\n            commitVizConfigChange(graphSetting, graphMode);\n          };\n          builtInViz.instance._emitter = emitter;\n          builtInViz.instance._compile = $compile;\n\n          // ui-grid related\n          $templateCache.put('ui-grid/ui-grid-filter', TableGridFilterTemplate);\n          builtInViz.instance._uiGridConstants = uiGridConstants;\n          builtInViz.instance._timeout = $timeout;\n\n          builtInViz.instance._createNewScope = createNewScope;\n          builtInViz.instance._templateRequest = $templateRequest;\n          const transformation = builtInViz.instance.getTransformation();\n          transformation._emitter = emitter;\n          transformation._templateRequest = $templateRequest;\n          transformation._compile = $compile;\n          transformation._createNewScope = createNewScope;\n\n          // render\n          const transformed = transformation.transform(tableData);\n          transformation.renderSetting(transformationSettingTargetEl);\n          builtInViz.instance.render(transformed);\n          builtInViz.instance.renderSetting(visualizationSettingTargetEl);\n          builtInViz.instance.activate();\n\n          let eventID = builtInViz.instance.targetEl.id;\n          if (!eventID) {\n            eventID = builtInViz.instance.targetEl[0].id;\n          }\n\n          $scope.addEvent({\n            eventID: eventID,\n            eventType: 'resize',\n            element: window,\n            onDestroyElement: builtInViz.instance.targetEl,\n            handler: () => builtInViz.instance.resize(),\n          });\n        } catch (err) {\n          console.error('Graph drawing error %o', err);\n        }\n      };\n    } else if (refresh) {\n      // when graph options or data are changed\n      console.log('Refresh data %o', tableData);\n\n      afterLoaded = function(loadedElem) {\n        const transformationSettingTargetEl = getTrSettingElem($scope.id, graphMode);\n        const visualizationSettingTargetEl = getVizSettingElem($scope.id, graphMode);\n        const config = getVizConfig(graphMode);\n        loadedElem.height(height);\n        const transformation = builtInViz.instance.getTransformation();\n        transformation.setConfig(config);\n        const transformed = transformation.transform(tableData);\n        transformation.renderSetting(transformationSettingTargetEl);\n        builtInViz.instance.setConfig(config);\n        builtInViz.instance.render(transformed);\n        builtInViz.instance.renderSetting(visualizationSettingTargetEl);\n        builtInViz.instance.activate();\n      };\n    } else {\n      afterLoaded = function(loadedElem) {\n        loadedElem.height(height);\n        builtInViz.instance.activate();\n      };\n    }\n\n    const tableElemId = `p${$scope.id}_${graphMode}`;\n\n    // Run the callback in next tick to ensure get the correct size for rendering graph\n    retryUntilElemIsLoaded(tableElemId, afterLoaded, true);\n  };\n\n  $scope.switchViz = function(newMode) {\n    let newConfig = angular.copy($scope.config);\n    let newParams = angular.copy(paragraph.settings.params);\n\n    // graph options\n    newConfig.graph.mode = newMode;\n\n    // see switchApp()\n    _.set(newConfig, 'helium.activeApp', undefined);\n\n    commitParagraphResult(paragraph.title, paragraph.text, newConfig, newParams);\n  };\n\n  const createNewScope = function() {\n    return $rootScope.$new(true);\n  };\n\n  const commitParagraphResult = function(title, text, config, params) {\n    let newParagraphConfig = angular.copy(paragraph.config);\n    newParagraphConfig.results = newParagraphConfig.results || [];\n    newParagraphConfig.results[resultIndex] = config;\n\n    // local update without commit\n    updateData({\n      type: $scope.type,\n      data: data,\n    }, newParagraphConfig.results[resultIndex], paragraph, resultIndex);\n    renderResult($scope.type, true);\n\n    if ($scope.revisionView !== true) {\n      if (! $scope.viewOnly) {\n        return websocketMsgSrv.commitParagraph(paragraph.id, title, text, newParagraphConfig, params);\n      }\n    }\n  };\n\n  $scope.toggleGraphSetting = function() {\n    let newConfig = angular.copy($scope.config);\n    newConfig.graph.optionOpen = !newConfig.graph.optionOpen;\n\n    let newParams = angular.copy(paragraph.settings.params);\n    commitParagraphResult(paragraph.title, paragraph.text, newConfig, newParams);\n  };\n\n  const getVizConfig = function(vizId) {\n    let config;\n    let graph = $scope.config.graph;\n    if (graph) {\n      // copy setting for vizId\n      if (graph.setting) {\n        config = angular.copy(graph.setting[vizId]);\n      }\n\n      if (!config) {\n        config = {};\n      }\n\n      // copy common setting\n      config.common = angular.copy(graph.commonSetting) || {};\n\n      // copy pivot setting\n      if (graph.keys) {\n        config.common.pivot = {\n          keys: angular.copy(graph.keys),\n          groups: angular.copy(graph.groups),\n          values: angular.copy(graph.values),\n        };\n      }\n    }\n    console.debug('getVizConfig', config);\n    return config;\n  };\n\n  const commitVizConfigChange = function(config, vizId) {\n    if ([ParagraphStatus.RUNNING, ParagraphStatus.PENDING].indexOf(paragraph.status) < 0) {\n      let newConfig = angular.copy($scope.config);\n      if (!newConfig.graph) {\n        newConfig.graph = {};\n      }\n      // copy setting for vizId\n      if (!newConfig.graph.setting) {\n        newConfig.graph.setting = {};\n      }\n      newConfig.graph.setting[vizId] = angular.copy(config);\n      // copy common setting\n      if (newConfig.graph.setting[vizId]) {\n        newConfig.graph.commonSetting = newConfig.graph.setting[vizId].common;\n        delete newConfig.graph.setting[vizId].common;\n      }\n      // copy pivot setting\n      if (newConfig.graph.commonSetting && newConfig.graph.commonSetting.pivot) {\n        newConfig.graph.keys = newConfig.graph.commonSetting.pivot.keys;\n        newConfig.graph.groups = newConfig.graph.commonSetting.pivot.groups;\n        newConfig.graph.values = newConfig.graph.commonSetting.pivot.values;\n        delete newConfig.graph.commonSetting.pivot;\n      }\n\n      // don't send commitParagraphResult when config is the same.\n      // see https://issues.apache.org/jira/browse/ZEPPELIN-4280.\n      if (angular.equals($scope.config, newConfig)) {\n        return;\n      }\n\n      console.debug('committVizConfig', newConfig);\n      let newParams = angular.copy(paragraph.settings.params);\n      commitParagraphResult(paragraph.title, paragraph.text, newConfig, newParams);\n    }\n  };\n\n  $scope.$on('paragraphResized', function(event, paragraphId) {\n    // paragraph col width changed\n    if (paragraphId === paragraph.id) {\n      let builtInViz = builtInVisualizations[$scope.graphMode];\n      if (builtInViz && builtInViz.instance) {\n        $timeout(() => builtInViz.instance.resize(), 200);\n      }\n    }\n  });\n\n  $scope.resize = function(width, height) {\n    $timeout(function() {\n      changeHeight(width, height);\n    }, 200);\n  };\n\n  const changeHeight = function(width, height) {\n    let newParams = angular.copy(paragraph.settings.params);\n    let newConfig = angular.copy($scope.config);\n\n    newConfig.graph.height = height;\n    paragraph.config.colWidth = width;\n\n    commitParagraphResult(paragraph.title, paragraph.text, newConfig, newParams);\n  };\n\n  $scope.exportToDSV = function(delimiter) {\n    let dsv = '';\n    let dateFinished = moment(paragraph.dateFinished).format('YYYY-MM-DD hh:mm:ss A');\n    let exportedFileName = paragraph.title ? paragraph.title + '_' + dateFinished : 'data_' + dateFinished;\n\n    for (let titleIndex in tableData.columns) {\n      if (tableData.columns.hasOwnProperty(titleIndex)) {\n        dsv += tableData.columns[titleIndex].name + delimiter;\n      }\n    }\n    dsv = dsv.substring(0, dsv.length - 1) + '\\n';\n    for (let r in tableData.rows) {\n      if (tableData.rows.hasOwnProperty(r)) {\n        let row = tableData.rows[r];\n        let dsvRow = '';\n        for (let index in row) {\n          if (row.hasOwnProperty(index)) {\n            let stringValue = (row[index]).toString();\n            if (stringValue.indexOf(delimiter) > -1) {\n              dsvRow += '\"' + stringValue + '\"' + delimiter;\n            } else {\n              dsvRow += row[index] + delimiter;\n            }\n          }\n        }\n        dsv += dsvRow.substring(0, dsvRow.length - 1) + '\\n';\n      }\n    }\n    let extension = '';\n    if (delimiter === '\\t') {\n      extension = 'tsv';\n    } else if (delimiter === ',') {\n      extension = 'csv';\n    }\n    saveAsService.saveAs(dsv, exportedFileName, extension);\n  };\n\n  $scope.getBase64ImageSrc = function(base64Data) {\n    return 'data:image/png;base64,' + base64Data;\n  };\n\n  // Helium ----------------\n  let ANGULAR_FUNCTION_OBJECT_NAME_PREFIX = '_Z_ANGULAR_FUNC_';\n\n  // app states\n  $scope.apps = [];\n\n  // suggested apps\n  $scope.suggestion = {};\n\n  $scope.switchApp = function(appId) {\n    let newConfig = angular.copy($scope.config);\n    let newParams = angular.copy(paragraph.settings.params);\n\n    // 'helium.activeApp' can be cleared by switchViz()\n    _.set(newConfig, 'helium.activeApp', appId);\n\n    commitConfig(newConfig, newParams);\n  };\n\n  $scope.loadApp = function(heliumPackage) {\n    let noteId = $route.current.pathParams.noteId;\n    $http.post(baseUrlSrv.getRestApiBase() + '/helium/load/' + noteId + '/' + paragraph.id, heliumPackage)\n      .success(function(data, status, headers, config) {\n        console.log('Load app %o', data);\n      })\n      .error(function(err, status, headers, config) {\n        console.log('Error %o', err);\n      });\n  };\n\n  const commitConfig = function(config, params) {\n    commitParagraphResult(paragraph.title, paragraph.text, config, params);\n  };\n\n  const getApplicationStates = function() {\n    let appStates = [];\n\n    // Display ApplicationState\n    if (paragraph.apps) {\n      _.forEach(paragraph.apps, function(app) {\n        appStates.push({\n          id: app.id,\n          pkg: app.pkg,\n          status: app.status,\n          output: app.output,\n        });\n      });\n    }\n\n    // update or remove app states no longer exists\n    _.forEach($scope.apps, function(currentAppState, idx) {\n      let newAppState = _.find(appStates, {id: currentAppState.id});\n      if (newAppState) {\n        angular.extend($scope.apps[idx], newAppState);\n      } else {\n        $scope.apps.splice(idx, 1);\n      }\n    });\n\n    // add new app states\n    _.forEach(appStates, function(app, idx) {\n      if ($scope.apps.length <= idx || $scope.apps[idx].id !== app.id) {\n        $scope.apps.splice(idx, 0, app);\n      }\n    });\n  };\n\n  const getSuggestions = function() {\n    // Get suggested apps\n    let noteId = $route.current.pathParams.noteId;\n    if (!noteId) {\n      return;\n    }\n    $http.get(baseUrlSrv.getRestApiBase() + '/helium/suggest/' + noteId + '/' + paragraph.id)\n      .success(function(data, status, headers, config) {\n        $scope.suggestion = data.body;\n      })\n      .error(function(err, status, headers, config) {\n        console.log('Error %o', err);\n      });\n  };\n\n  const renderApp = function(targetElemId, appState) {\n    const afterLoaded = (loadedElem) => {\n      try {\n        console.log('renderApp %o', appState);\n        loadedElem.html(appState.output);\n        $compile(loadedElem.contents())(getAppScope(appState));\n      } catch (err) {\n        console.log('App rendering error %o', err);\n      }\n    };\n    retryUntilElemIsLoaded(targetElemId, afterLoaded);\n  };\n\n  /*\n   ** $scope.$on functions below\n   */\n  $scope.$on('appendAppOutput', function(event, data) {\n    if (paragraph.id === data.paragraphId) {\n      let app = _.find($scope.apps, {id: data.appId});\n      if (app) {\n        app.output += data.data;\n\n        let paragraphAppState = _.find(paragraph.apps, {id: data.appId});\n        paragraphAppState.output = app.output;\n\n        let targetEl = angular.element(document.getElementById('p' + app.id));\n        targetEl.html(app.output);\n        $compile(targetEl.contents())(getAppScope(app));\n        console.log('append app output %o', $scope.apps);\n      }\n    }\n  });\n\n  $scope.$on('updateAppOutput', function(event, data) {\n    if (paragraph.id === data.paragraphId) {\n      let app = _.find($scope.apps, {id: data.appId});\n      if (app) {\n        app.output = data.data;\n\n        let paragraphAppState = _.find(paragraph.apps, {id: data.appId});\n        paragraphAppState.output = app.output;\n\n        let targetEl = angular.element(document.getElementById('p' + app.id));\n        targetEl.html(app.output);\n        $compile(targetEl.contents())(getAppScope(app));\n        console.log('append app output');\n      }\n    }\n  });\n\n  $scope.$on('appLoad', function(event, data) {\n    if (paragraph.id === data.paragraphId) {\n      let app = _.find($scope.apps, {id: data.appId});\n      if (!app) {\n        app = {\n          id: data.appId,\n          pkg: data.pkg,\n          status: 'UNLOADED',\n          output: '',\n        };\n\n        $scope.apps.push(app);\n        paragraph.apps.push(app);\n        $scope.switchApp(app.id);\n      }\n    }\n  });\n\n  $scope.$on('appStatusChange', function(event, data) {\n    if (paragraph.id === data.paragraphId) {\n      let app = _.find($scope.apps, {id: data.appId});\n      if (app) {\n        app.status = data.status;\n        let paragraphAppState = _.find(paragraph.apps, {id: data.appId});\n        paragraphAppState.status = app.status;\n      }\n    }\n  });\n\n  let getAppRegistry = function(appState) {\n    if (!appState.registry) {\n      appState.registry = {};\n    }\n\n    return appState.registry;\n  };\n\n  const getAppScope = function(appState) {\n    if (!appState.scope) {\n      appState.scope = $rootScope.$new(true, $rootScope);\n    }\n    return appState.scope;\n  };\n\n  $scope.$on('angularObjectUpdate', function(event, data) {\n    let noteId = $route.current.pathParams.noteId;\n    if (!data.noteId || data.noteId === noteId) {\n      let scope;\n      let registry;\n\n      let app = _.find($scope.apps, {id: data.paragraphId});\n      if (app) {\n        scope = getAppScope(app);\n        registry = getAppRegistry(app);\n      } else {\n        // no matching app in this paragraph\n        return;\n      }\n\n      let varName = data.angularObject.name;\n\n      if (angular.equals(data.angularObject.object, scope[varName])) {\n        // return when update has no change\n        return;\n      }\n\n      if (!registry[varName]) {\n        registry[varName] = {\n          interpreterGroupId: data.interpreterGroupId,\n          noteId: data.noteId,\n          paragraphId: data.paragraphId,\n        };\n      } else {\n        registry[varName].noteId = registry[varName].noteId || data.noteId;\n        registry[varName].paragraphId = registry[varName].paragraphId || data.paragraphId;\n      }\n\n      registry[varName].skipEmit = true;\n\n      if (!registry[varName].clearWatcher) {\n        registry[varName].clearWatcher = scope.$watch(varName, function(newValue, oldValue) {\n          console.log('angular object (paragraph) updated %o %o', varName, registry[varName]);\n          if (registry[varName].skipEmit) {\n            registry[varName].skipEmit = false;\n            return;\n          }\n          websocketMsgSrv.updateAngularObject(\n            registry[varName].noteId,\n            registry[varName].paragraphId,\n            varName,\n            newValue,\n            registry[varName].interpreterGroupId);\n        });\n      }\n      console.log('angular object (paragraph) created %o', varName);\n      scope[varName] = data.angularObject.object;\n\n      // create proxy for AngularFunction\n      if (varName.indexOf(ANGULAR_FUNCTION_OBJECT_NAME_PREFIX) === 0) {\n        let funcName = varName.substring((ANGULAR_FUNCTION_OBJECT_NAME_PREFIX).length);\n        scope[funcName] = function() {\n          // eslint-disable-next-line prefer-rest-params\n          scope[varName] = arguments;\n          // eslint-disable-next-line prefer-rest-params\n          console.log('angular function (paragraph) invoked %o', arguments);\n        };\n\n        console.log('angular function (paragraph) created %o', scope[funcName]);\n      }\n    }\n  });\n\n  $scope.$on('angularObjectRemove', function(event, data) {\n    let noteId = $route.current.pathParams.noteId;\n    if (!data.noteId || data.noteId === noteId) {\n      let scope;\n      let registry;\n\n      let app = _.find($scope.apps, {id: data.paragraphId});\n      if (app) {\n        scope = getAppScope(app);\n        registry = getAppRegistry(app);\n      } else {\n        // no matching app in this paragraph\n        return;\n      }\n\n      let varName = data.name;\n\n      // clear watcher\n      if (registry[varName]) {\n        registry[varName].clearWatcher();\n        registry[varName] = undefined;\n      }\n\n      // remove scope variable\n      scope[varName] = undefined;\n\n      // remove proxy for AngularFunction\n      if (varName.indexOf(ANGULAR_FUNCTION_OBJECT_NAME_PREFIX) === 0) {\n        let funcName = varName.substring((ANGULAR_FUNCTION_OBJECT_NAME_PREFIX).length);\n        scope[funcName] = undefined;\n      }\n    }\n  });\n}\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport TableData from './tabledata';\nimport NetworkData from './networkdata';\nimport {DatasetType} from './dataset';\n\n/**\n * Create table data object from paragraph table type result\n */\nexport default class DatasetFactory {\n  createDataset(datasetType) {\n    switch (datasetType) {\n      case DatasetType.NETWORK:\n        return new NetworkData();\n      case DatasetType.TABLE:\n        return new TableData();\n      default:\n        throw new Error('Dataset type not found');\n    }\n  }\n}\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport TableData from './tabledata';\nimport {DatasetType} from './dataset';\n\n/**\n * Create network data object from paragraph graph type result\n */\nexport default class NetworkData extends TableData {\n  constructor(graph) {\n    super();\n    this.graph = graph || {};\n    if (this.graph.nodes) {\n      this.loadParagraphResult({msg: JSON.stringify(graph), type: DatasetType.NETWORK});\n    }\n  }\n\n  loadParagraphResult(paragraphResult) {\n    if (!paragraphResult || paragraphResult.type !== DatasetType.NETWORK) {\n      console.log('Can not load paragraph result');\n      return;\n    }\n\n    this.graph = JSON.parse(paragraphResult.msg.trim() || '{}');\n\n    if (!this.graph.nodes) {\n      console.log('Graph result is empty');\n      return;\n    }\n\n    this.graph.edges = this.graph.edges || [];\n    this.networkNodes = angular.equals({}, this.graph.labels || {})\n      ? null : {count: this.graph.nodes.length, labels: this.graph.labels};\n    this.networkRelationships = angular.equals([], this.graph.types || [])\n      ? null : {count: this.graph.edges.length, types: this.graph.types};\n\n    const rows = [];\n    const comment = '';\n    const entities = this.graph.nodes.concat(this.graph.edges);\n    const baseColumnNames = [{name: 'id', index: 0, aggr: 'sum'}];\n    const containsLabelField = _.find(entities, (entity) => 'label' in entity) !== undefined;\n    if (this.graph.labels || this.graph.types || containsLabelField) {\n      baseColumnNames.push({name: 'label', index: 1, aggr: 'sum'});\n    }\n    const internalFieldsToJump = ['count', 'size', 'totalCount',\n      'data', 'x', 'y', 'labels', 'source', 'target'];\n    const baseCols = _.map(baseColumnNames, (col) => col.name);\n    let keys = _.map(entities, (elem) => Object.keys(elem.data || {}));\n    keys = _.flatten(keys);\n    keys = _.uniq(keys).filter((key) => baseCols.indexOf(key) === -1);\n    const entityColumnNames = _.map(keys, (elem, i) => {\n      return {name: elem, index: i + baseColumnNames.length, aggr: 'sum'};\n    });\n    const columnNames = baseColumnNames.concat(entityColumnNames);\n    for (let i = 0; i < entities.length; i++) {\n      const entity = entities[i];\n      const col = [];\n      entity.data = entity.data || {};\n      for (let j = 0; j < columnNames.length; j++) {\n        const name = columnNames[j].name;\n        const value = name in entity && internalFieldsToJump.indexOf(name) === -1\n          ? entity[name] : entity.data[name];\n        const parsedValue = value === null || value === undefined ? '' : value;\n        col.push(parsedValue);\n      }\n      rows.push(col);\n    }\n\n    this.comment = comment;\n    this.columns = columnNames;\n    this.rows = rows;\n  }\n}\n","/*\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Visualization from '../visualization';\nimport NetworkTransformation from '../../tabledata/network';\n\n/**\n * Visualize data in network format\n */\nexport default class NetworkVisualization extends Visualization {\n  constructor(targetEl, config) {\n    super(targetEl, config);\n    console.log('Init network viz');\n    if (!config.properties) {\n      config.properties = {};\n    }\n    if (!config.d3Graph) {\n      config.d3Graph = {\n        forceLayout: {\n          timeout: 10000,\n          charge: -120,\n          linkDistance: 80,\n        },\n        zoom: {\n          minScale: 1.3,\n        },\n      };\n    }\n    this.targetEl.addClass('network');\n    this.containerId = this.targetEl.prop('id');\n    this.force = null;\n    this.svg = null;\n    this.$timeout = angular.injector(['ng']).get('$timeout');\n    this.$interpolate = angular.injector(['ng']).get('$interpolate');\n    this.transformation = new NetworkTransformation(config);\n  }\n\n  refresh() {\n    console.log('refresh');\n  }\n\n  render(networkData) {\n    if (!('graph' in networkData)) {\n      console.log('graph not found');\n      return;\n    }\n    if (!networkData.isRendered) {\n      networkData.isRendered = true;\n    } else {\n      return;\n    }\n    console.log('Rendering the graph');\n\n    if (networkData.graph.edges.length &&\n        !networkData.isDefaultSet) {\n      networkData.isDefaultSet = true;\n      this._setEdgesDefaults(networkData.graph);\n    }\n\n    const transformationConfig = this.transformation.getSetting().scope.config;\n    console.log('cfg', transformationConfig);\n    if (transformationConfig && angular.equals({}, transformationConfig.properties)) {\n      transformationConfig.properties = this.getNetworkProperties(networkData.graph);\n    }\n\n    this.targetEl.empty().append('<svg></svg>');\n\n    const width = this.targetEl.width();\n    const height = this.targetEl.height();\n    const self = this;\n    const defaultOpacity = 0;\n    const nodeSize = 10;\n    const textOffset = 3;\n    const linkSize = 10;\n\n    const arcPath = (leftHand, d) => {\n      let start = leftHand ? d.source : d.target;\n      let end = leftHand ? d.target : d.source;\n      let dx = end.x - start.x;\n      let dy = end.y - start.y;\n      let dr = d.totalCount === 1\n              ? 0 : Math.sqrt(Math.pow(dx, 2) + Math.pow(dy, 2)) / (1 + (1 / d.totalCount) * (d.count - 1));\n      let sweep = leftHand ? 0 : 1;\n      return `M${start.x},${start.y}A${dr},${dr} 0 0,${sweep} ${end.x},${end.y}`;\n    };\n    // Use elliptical arc path segments to doubly-encode directionality.\n    const tick = () => {\n      // Links\n      linkPath.attr('d', function(d) {\n        return arcPath(true, d);\n      });\n      textPath.attr('d', function(d) {\n        return arcPath(d.source.x < d.target.x, d);\n      });\n      // Nodes\n      circle.attr('transform', (d) => `translate(${d.x},${d.y})`);\n      text.attr('transform', (d) => `translate(${d.x},${d.y})`);\n    };\n\n    const setOpacity = (scale) => {\n      let opacity = scale >= +transformationConfig.d3Graph.zoom.minScale ? 1 : 0;\n      this.svg.selectAll('.nodeLabel')\n        .style('opacity', opacity);\n      this.svg.selectAll('textPath')\n        .style('opacity', opacity);\n    };\n\n    const zoom = d3.behavior.zoom()\n      .scaleExtent([1, 10])\n      .on('zoom', () => {\n        console.log('zoom');\n        setOpacity(d3.event.scale);\n        container.attr('transform', `translate(${d3.event.translate})scale(${d3.event.scale})`);\n      });\n\n    this.svg = d3.select(`#${this.containerId} svg`)\n      .attr('width', width)\n      .attr('height', height)\n      .call(zoom);\n\n    this.force = d3.layout.force()\n      .charge(transformationConfig.d3Graph.forceLayout.charge)\n      .linkDistance(transformationConfig.d3Graph.forceLayout.linkDistance)\n      .on('tick', tick)\n      .nodes(networkData.graph.nodes)\n      .links(networkData.graph.edges)\n      .size([width, height])\n      .on('start', () => {\n        console.log('force layout start');\n        this.$timeout(() => {\n          this.force.stop();\n        }, transformationConfig.d3Graph.forceLayout.timeout);\n      })\n      .on('end', () => {\n        console.log('force layout stop');\n        setOpacity(zoom.scale());\n      })\n      .start();\n\n    const renderFooterOnClick = (entity, type) => {\n      const footerId = this.containerId + '_footer';\n      const obj = {id: entity.id, label: entity.defaultLabel || entity.label, type: type};\n      let html = [`<li><b>${obj.type}_id:</b>&nbsp${obj.id}</li>`];\n      if (obj.label) {\n        html.push(`<li><b>${obj.type}_type:</b>&nbsp${obj.label}</li>`);\n      }\n      html = html.concat(_.map(entity.data, (v, k) => {\n        return `<li><b>${k}:</b>&nbsp${v}</li>`;\n      }));\n      angular.element('#' + footerId)\n        .find('.list-inline')\n        .empty()\n        .append(html.join(''));\n    };\n\n    const drag = d3.behavior.drag()\n      .origin((d) => d)\n      .on('dragstart', function(d) {\n        console.log('dragstart');\n        d3.event.sourceEvent.stopPropagation();\n        d3.select(this).classed('dragging', true);\n        self.force.stop();\n      })\n      .on('drag', function(d) {\n        console.log('drag');\n        d.px += d3.event.dx;\n        d.py += d3.event.dy;\n        d.x += d3.event.dx;\n        d.y += d3.event.dy;\n      })\n      .on('dragend', function(d) {\n        console.log('dragend');\n        d.fixed = true;\n        d3.select(this).classed('dragging', false);\n        self.force.resume();\n      });\n\n    const container = this.svg.append('g');\n    if (networkData.graph.directed) {\n      container.append('svg:defs').selectAll('marker')\n        .data(['arrowMarker-' + this.containerId])\n        .enter()\n        .append('svg:marker')\n        .attr('id', String)\n        .attr('viewBox', '0 -5 10 10')\n        .attr('refX', 16)\n        .attr('refY', 0)\n        .attr('markerWidth', 4)\n        .attr('markerHeight', 4)\n        .attr('orient', 'auto')\n        .append('svg:path')\n        .attr('d', 'M0,-5L10,0L0,5');\n    }\n    // Links\n    const link = container.append('svg:g')\n      .on('click', () => {\n        renderFooterOnClick(d3.select(d3.event.target).datum(), 'edge');\n      })\n      .selectAll('g.link')\n      .data(self.force.links())\n      .enter()\n      .append('g');\n    const getPathId = (d) => this.containerId + '_' + d.source.index + '_' + d.target.index + '_' + d.count;\n    const showLabel = (d) => this._showNodeLabel(d);\n    const linkPath = link.append('svg:path')\n      .attr('class', 'link')\n      .attr('size', linkSize)\n      .attr('marker-end', `url(#arrowMarker-${this.containerId})`);\n    const textPath = link.append('svg:path')\n      .attr('id', getPathId)\n      .attr('class', 'textpath');\n    container.append('svg:g')\n      .selectAll('.pathLabel')\n      .data(self.force.links())\n      .enter()\n      .append('svg:text')\n      .attr('class', 'pathLabel')\n      .append('svg:textPath')\n      .attr('startOffset', '50%')\n      .attr('text-anchor', 'middle')\n      .attr('xlink:href', (d) => '#' + getPathId(d))\n      .text((d) => d.label)\n      .style('opacity', defaultOpacity);\n    // Nodes\n    const circle = container.append('svg:g')\n      .on('click', () => {\n        renderFooterOnClick(d3.select(d3.event.target).datum(), 'node');\n      })\n      .selectAll('circle')\n      .data(self.force.nodes())\n      .enter().append('svg:circle')\n      .attr('r', (d) => nodeSize)\n      .attr('fill', (d) => networkData.graph.labels && d.label in networkData.graph.labels\n                  ? networkData.graph.labels[d.label] : '#000000')\n      .call(drag);\n    const text = container.append('svg:g').selectAll('g')\n      .data(self.force.nodes())\n      .enter().append('svg:g');\n    text.append('svg:text')\n        .attr('x', (d) => nodeSize + textOffset)\n        .attr('size', nodeSize)\n        .attr('y', '.31em')\n        .attr('class', (d) => 'nodeLabel shadow label-' + d.label)\n        .text(showLabel)\n        .style('opacity', defaultOpacity);\n    text.append('svg:text')\n        .attr('x', (d) => nodeSize + textOffset)\n        .attr('size', nodeSize)\n        .attr('y', '.31em')\n        .attr('class', (d) => 'nodeLabel label-' + d.label)\n        .text(showLabel)\n        .style('opacity', defaultOpacity);\n  }\n\n  destroy() {\n  }\n\n  _showNodeLabel(d) {\n    const transformationConfig = this.transformation.getSetting().scope.config;\n    const selectedLabel = (transformationConfig.properties[d.label] || {selected: 'label'}).selected;\n    return d.data[selectedLabel] || d[selectedLabel];\n  }\n\n  getTransformation() {\n    return this.transformation;\n  }\n\n  setNodesDefaults() {\n  }\n\n  _setEdgesDefaults(graph) {\n    graph.edges\n      .sort((a, b) => {\n        if (a.source > b.source) {\n          return 1;\n        } else if (a.source < b.source) {\n          return -1;\n        } else if (a.target > b.target) {\n          return 1;\n        } else if (a.target < b.target) {\n          return -1;\n        } else {\n          return 0;\n        }\n      });\n    graph.edges\n      .forEach((edge, index) => {\n        let prevEdge = graph.edges[index - 1];\n        edge.count = (index > 0 && +edge.source === +prevEdge.source && +edge.target === +prevEdge.target\n            ? prevEdge.count : 0) + 1;\n        edge.totalCount = graph.edges\n          .filter((innerEdge) => +edge.source === +innerEdge.source && +edge.target === +innerEdge.target)\n          .length;\n      });\n    graph.edges\n      .forEach((edge) => {\n        if (typeof +edge.source === 'number') {\n          // edge.source = graph.nodes.filter((node) => +edge.source === +node.id)[0] || null\n          edge.source = _.find(graph.nodes, (node) => +edge.source === +node.id);\n        }\n        if (typeof +edge.target === 'number') {\n          // edge.target = graph.nodes.filter((node) => +edge.target === +node.id)[0] || null\n          edge.target = _.find(graph.nodes, (node) => +edge.target === +node.id);\n        }\n      });\n  }\n\n  getNetworkProperties(graph) {\n    const baseCols = ['id', 'label'];\n    const properties = {};\n    graph.nodes.forEach(function(node) {\n      const hasLabel = 'label' in node && node.label !== '';\n      if (!hasLabel) {\n        return;\n      }\n      const label = node.label;\n      const hasKey = hasLabel && label in properties;\n      const keys = _.uniq(Object.keys(node.data || {})\n              .concat(hasKey ? properties[label].keys : baseCols));\n      if (!hasKey) {\n        properties[label] = {selected: 'label'};\n      }\n      properties[label].keys = keys;\n    });\n    return properties;\n  }\n}\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Transformation from './transformation';\n\n/**\n * trasformation settings for network visualization\n */\nexport default class NetworkTransformation extends Transformation {\n  getSetting() {\n    let self = this;\n    let configObj = self.config;\n    return {\n      template: 'app/tabledata/network_settings.html',\n      scope: {\n        config: configObj,\n        isEmptyObject: function(obj) {\n          obj = obj || {};\n          return angular.equals(obj, {});\n        },\n        setNetworkLabel: function(label, value) {\n          configObj.properties[label].selected = value;\n        },\n        saveConfig: function() {\n          self.emitConfig(configObj);\n        },\n      },\n    };\n  }\n\n  setConfig(config) {\n  }\n\n  transform(networkData) {\n    return networkData;\n  }\n}\n","export default class Result {\n  constructor(data) {\n    this.data = data;\n  }\n\n  checkAndReplaceCarriageReturn() {\n    const str = this.data.replace(/\\r\\n/g, '\\n');\n    if (/\\r/.test(str)) {\n      let newGenerated = '';\n      let strArr = str.split('\\n');\n      for (let str of strArr) {\n        if (/\\r/.test(str)) {\n          let splitCR = str.split('\\r');\n          newGenerated += splitCR[splitCR.length - 1] + '\\n';\n        } else {\n          newGenerated += str + '\\n';\n        }\n      }\n      // remove last \"\\n\" character\n      return newGenerated.slice(0, -1);\n    } else {\n      return str;\n    }\n  }\n}\n","/*  ansi_up.js\n *  author : Dru Nelson\n *  license : MIT\n *  http://github.com/drudru/ansi_up\n */\n(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define(['exports'], factory);\n    } else if (typeof exports === 'object' && typeof exports.nodeName !== 'string') {\n        // CommonJS\n        factory(exports);\n    } else {\n        // Browser globals\n        var exp = {};\n        factory(exp);\n        root.AnsiUp = exp.default;\n    }\n}(this, function (exports) {\n\"use strict\";\nfunction rgx(tmplObj) {\n    var subst = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        subst[_i - 1] = arguments[_i];\n    }\n    var regexText = tmplObj.raw[0];\n    var wsrgx = /^\\s+|\\s+\\n|\\s+#[\\s\\S]+?\\n/gm;\n    var txt2 = regexText.replace(wsrgx, '');\n    return new RegExp(txt2, 'm');\n}\nvar AnsiUp = (function () {\n    function AnsiUp() {\n        this.VERSION = \"2.0.3\";\n        this.ansi_colors = [\n            [\n                { rgb: [0, 0, 0], class_name: \"ansi-black\" },\n                { rgb: [187, 0, 0], class_name: \"ansi-red\" },\n                { rgb: [0, 187, 0], class_name: \"ansi-green\" },\n                { rgb: [187, 187, 0], class_name: \"ansi-yellow\" },\n                { rgb: [0, 0, 187], class_name: \"ansi-blue\" },\n                { rgb: [187, 0, 187], class_name: \"ansi-magenta\" },\n                { rgb: [0, 187, 187], class_name: \"ansi-cyan\" },\n                { rgb: [255, 255, 255], class_name: \"ansi-white\" }\n            ],\n            [\n                { rgb: [85, 85, 85], class_name: \"ansi-bright-black\" },\n                { rgb: [255, 85, 85], class_name: \"ansi-bright-red\" },\n                { rgb: [0, 255, 0], class_name: \"ansi-bright-green\" },\n                { rgb: [255, 255, 85], class_name: \"ansi-bright-yellow\" },\n                { rgb: [85, 85, 255], class_name: \"ansi-bright-blue\" },\n                { rgb: [255, 85, 255], class_name: \"ansi-bright-magenta\" },\n                { rgb: [85, 255, 255], class_name: \"ansi-bright-cyan\" },\n                { rgb: [255, 255, 255], class_name: \"ansi-bright-white\" }\n            ]\n        ];\n        this.htmlFormatter = {\n            transform: function (fragment, instance) {\n                var txt = fragment.text;\n                if (txt.length === 0)\n                    return txt;\n                if (instance._escape_for_html)\n                    txt = instance.old_escape_for_html(txt);\n                if (!fragment.bright && fragment.fg === null && fragment.bg === null)\n                    return txt;\n                var styles = [];\n                var classes = [];\n                var fg = fragment.fg;\n                var bg = fragment.bg;\n                if (fg === null && fragment.bright)\n                    fg = instance.ansi_colors[1][7];\n                if (!instance._use_classes) {\n                    if (fg)\n                        styles.push(\"color:rgb(\" + fg.rgb.join(',') + \")\");\n                    if (bg)\n                        styles.push(\"background-color:rgb(\" + bg.rgb + \")\");\n                }\n                else {\n                    if (fg) {\n                        if (fg.class_name !== 'truecolor') {\n                            classes.push(fg.class_name + \"-fg\");\n                        }\n                        else {\n                            styles.push(\"color:rgb(\" + fg.rgb.join(',') + \")\");\n                        }\n                    }\n                    if (bg) {\n                        if (bg.class_name !== 'truecolor') {\n                            classes.push(bg.class_name + \"-bg\");\n                        }\n                        else {\n                            styles.push(\"background-color:rgb(\" + bg.rgb.join(',') + \")\");\n                        }\n                    }\n                }\n                var class_string = '';\n                var style_string = '';\n                if (classes.length)\n                    class_string = \" class=\\\"\" + classes.join(' ') + \"\\\"\";\n                if (styles.length)\n                    style_string = \" style=\\\"\" + styles.join(';') + \"\\\"\";\n                return \"<span\" + class_string + style_string + \">\" + txt + \"</span>\";\n            },\n            compose: function (segments, instance) {\n                return segments.join(\"\");\n            }\n        };\n        this.textFormatter = {\n            transform: function (fragment, instance) {\n                return fragment.text;\n            },\n            compose: function (segments, instance) {\n                return segments.join(\"\");\n            }\n        };\n        this.setup_256_palette();\n        this._use_classes = false;\n        this._escape_for_html = true;\n        this.bright = false;\n        this.fg = this.bg = null;\n        this._buffer = '';\n    }\n    Object.defineProperty(AnsiUp.prototype, \"use_classes\", {\n        get: function () {\n            return this._use_classes;\n        },\n        set: function (arg) {\n            this._use_classes = arg;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AnsiUp.prototype, \"escape_for_html\", {\n        get: function () {\n            return this._escape_for_html;\n        },\n        set: function (arg) {\n            this._escape_for_html = arg;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    AnsiUp.prototype.setup_256_palette = function () {\n        var _this = this;\n        this.palette_256 = [];\n        this.ansi_colors.forEach(function (palette) {\n            palette.forEach(function (rec) {\n                _this.palette_256.push(rec);\n            });\n        });\n        var levels = [0, 95, 135, 175, 215, 255];\n        for (var r = 0; r < 6; ++r) {\n            for (var g = 0; g < 6; ++g) {\n                for (var b = 0; b < 6; ++b) {\n                    var col = { rgb: [levels[r], levels[g], levels[b]], class_name: 'truecolor' };\n                    this.palette_256.push(col);\n                }\n            }\n        }\n        var grey_level = 8;\n        for (var i = 0; i < 24; ++i, grey_level += 10) {\n            var gry = { rgb: [grey_level, grey_level, grey_level], class_name: 'truecolor' };\n            this.palette_256.push(gry);\n        }\n    };\n    AnsiUp.prototype.old_escape_for_html = function (txt) {\n        return txt.replace(/[&<>]/gm, function (str) {\n            if (str === \"&\")\n                return \"&amp;\";\n            if (str === \"<\")\n                return \"&lt;\";\n            if (str === \">\")\n                return \"&gt;\";\n        });\n    };\n    AnsiUp.prototype.old_linkify = function (txt) {\n        return txt.replace(/(https?:\\/\\/[^\\s]+)/gm, function (str) {\n            return \"<a href=\\\"\" + str + \"\\\">\" + str + \"</a>\";\n        });\n    };\n    AnsiUp.prototype.detect_incomplete_ansi = function (txt) {\n        return !(/.*?[\\x40-\\x7e]/.test(txt));\n    };\n    AnsiUp.prototype.detect_incomplete_link = function (txt) {\n        var found = false;\n        for (var i = txt.length - 1; i > 0; i--) {\n            if (/\\s|\\x1B/.test(txt[i])) {\n                found = true;\n                break;\n            }\n        }\n        if (!found) {\n            if (/(https?:\\/\\/[^\\s]+)/.test(txt))\n                return 0;\n            else\n                return -1;\n        }\n        var prefix = txt.substr(i + 1, 4);\n        if (prefix.length === 0)\n            return -1;\n        if (\"http\".indexOf(prefix) === 0)\n            return (i + 1);\n    };\n    AnsiUp.prototype.ansi_to = function (txt, formatter) {\n        var pkt = this._buffer + txt;\n        this._buffer = '';\n        var raw_text_pkts = pkt.split(/\\x1B\\[/);\n        if (raw_text_pkts.length === 1)\n            raw_text_pkts.push('');\n        this.handle_incomplete_sequences(raw_text_pkts);\n        var first_chunk = this.with_state(raw_text_pkts.shift());\n        var blocks = new Array(raw_text_pkts.length);\n        for (var i = 0, len = raw_text_pkts.length; i < len; ++i) {\n            blocks[i] = (formatter.transform(this.process_ansi(raw_text_pkts[i]), this));\n        }\n        if (first_chunk.text.length > 0)\n            blocks.unshift(formatter.transform(first_chunk, this));\n        return formatter.compose(blocks, this);\n    };\n    AnsiUp.prototype.ansi_to_html = function (txt) {\n        return this.ansi_to(txt, this.htmlFormatter);\n    };\n    AnsiUp.prototype.ansi_to_text = function (txt) {\n        return this.ansi_to(txt, this.textFormatter);\n    };\n    AnsiUp.prototype.with_state = function (text) {\n        return { bright: this.bright, fg: this.fg, bg: this.bg, text: text };\n    };\n    AnsiUp.prototype.handle_incomplete_sequences = function (chunks) {\n        var last_chunk = chunks[chunks.length - 1];\n        if ((last_chunk.length > 0) && this.detect_incomplete_ansi(last_chunk)) {\n            this._buffer = \"\\x1B[\" + last_chunk;\n            chunks.pop();\n            chunks.push('');\n        }\n        else {\n            if (last_chunk.slice(-1) === \"\\x1B\") {\n                this._buffer = \"\\x1B\";\n                console.log(\"raw\", chunks);\n                chunks.pop();\n                chunks.push(last_chunk.substr(0, last_chunk.length - 1));\n                console.log(chunks);\n                console.log(last_chunk);\n            }\n            if (chunks.length === 2 &&\n                chunks[1] === \"\" &&\n                chunks[0].slice(-1) === \"\\x1B\") {\n                this._buffer = \"\\x1B\";\n                last_chunk = chunks.shift();\n                chunks.unshift(last_chunk.substr(0, last_chunk.length - 1));\n            }\n        }\n    };\n    AnsiUp.prototype.process_ansi = function (block) {\n        if (!this._sgr_regex) {\n            this._sgr_regex = (_a = [\"\\n            ^                           # beginning of line\\n            ([!<-?]?)             # a private-mode char (!, <, =, >, ?)\\n            ([d;]*)                    # any digits or semicolons\\n            ([ -/]?               # an intermediate modifier\\n            [@-~])                # the command\\n            ([sS]*)                   # any text following this CSI sequence\\n          \"], _a.raw = [\"\\n            ^                           # beginning of line\\n            ([!\\\\x3c-\\\\x3f]?)             # a private-mode char (!, <, =, >, ?)\\n            ([\\\\d;]*)                    # any digits or semicolons\\n            ([\\\\x20-\\\\x2f]?               # an intermediate modifier\\n            [\\\\x40-\\\\x7e])                # the command\\n            ([\\\\s\\\\S]*)                   # any text following this CSI sequence\\n          \"], rgx(_a));\n        }\n        var matches = block.match(this._sgr_regex);\n        if (!matches) {\n            return this.with_state(block);\n        }\n        var orig_txt = matches[4];\n        if (matches[1] !== '' || matches[3] !== 'm') {\n            return this.with_state(orig_txt);\n        }\n        var sgr_cmds = matches[2].split(';');\n        while (sgr_cmds.length > 0) {\n            var sgr_cmd_str = sgr_cmds.shift();\n            var num = parseInt(sgr_cmd_str, 10);\n            if (isNaN(num) || num === 0) {\n                this.fg = this.bg = null;\n                this.bright = false;\n            }\n            else if (num === 1) {\n                this.bright = true;\n            }\n            else if (num === 22) {\n                this.bright = false;\n            }\n            else if (num === 39) {\n                this.fg = null;\n            }\n            else if (num === 49) {\n                this.bg = null;\n            }\n            else if ((num >= 30) && (num < 38)) {\n                var bidx = this.bright ? 1 : 0;\n                this.fg = this.ansi_colors[bidx][(num - 30)];\n            }\n            else if ((num >= 90) && (num < 98)) {\n                this.fg = this.ansi_colors[1][(num - 90)];\n            }\n            else if ((num >= 40) && (num < 48)) {\n                this.bg = this.ansi_colors[0][(num - 40)];\n            }\n            else if ((num >= 100) && (num < 108)) {\n                this.bg = this.ansi_colors[1][(num - 100)];\n            }\n            else if (num === 38 || num === 48) {\n                if (sgr_cmds.length > 0) {\n                    var is_foreground = (num === 38);\n                    var mode_cmd = sgr_cmds.shift();\n                    if (mode_cmd === '5' && sgr_cmds.length > 0) {\n                        var palette_index = parseInt(sgr_cmds.shift(), 10);\n                        if (palette_index >= 0 && palette_index <= 255) {\n                            if (is_foreground)\n                                this.fg = this.palette_256[palette_index];\n                            else\n                                this.bg = this.palette_256[palette_index];\n                        }\n                    }\n                    if (mode_cmd === '2' && sgr_cmds.length > 2) {\n                        var r = parseInt(sgr_cmds.shift(), 10);\n                        var g = parseInt(sgr_cmds.shift(), 10);\n                        var b = parseInt(sgr_cmds.shift(), 10);\n                        if ((r >= 0 && r <= 255) && (g >= 0 && g <= 255) && (b >= 0 && b <= 255)) {\n                            var c = { rgb: [r, g, b], class_name: 'truecolor' };\n                            if (is_foreground)\n                                this.fg = c;\n                            else\n                                this.bg = c;\n                        }\n                    }\n                }\n            }\n        }\n        return this.with_state(orig_txt);\n        var _a;\n    };\n    return AnsiUp;\n}());\n//# sourceMappingURL=ansi_up.js.map\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.default = AnsiUp;\n}));\n","module.exports = \"<!--\\nLicensed under the Apache License, Version 2.0 (the \\\"License\\\");\\nyou may not use this file except in compliance with the License.\\nYou may obtain a copy of the License at\\n\\n    http://www.apache.org/licenses/LICENSE-2.0\\n\\nUnless required by applicable law or agreed to in writing, software\\ndistributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\nSee the License for the specific language governing permissions and\\nlimitations under the License.\\n-->\\n\\n<div class=\\\"ui-grid-filter-container\\\"\\n     ng-repeat=\\\"colFilter in col.filters\\\"\\n     ng-class=\\\"{'ui-grid-filter-cancel-button-hidden' : colFilter.disableCancelFilterButton === true }\\\">\\n  <div ng-if=\\\"colFilter.type !== 'select'\\\">\\n    <input type=\\\"text\\\" class=\\\"input-sm form-control\\\"\\n           style=\\\"font-size: 14px; font-weight: 500\\\"\\n\\n           ng-model=\\\"colFilter.term\\\"\\n           ng-model-options=\\\"{ debounce : { 'default' : 300, 'blur' : 0 }}\\\"\\n           ng-attr-placeholder=\\\"{{colFilter.placeholder || ''}}\\\"\\n           aria-label=\\\"{{colFilter.ariaLabel || aria.defaultFilterLabel}}\\\" />\\n  </div>\\n</div>\\n\"","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nangular.module('zeppelinWebApp').directive('codeEditor', CodeEditorDirective);\n\nfunction CodeEditorDirective($templateRequest, $compile) {\n  return {\n    restrict: 'AE',\n    scope: {\n      paragraphId: '=paragraphId',\n      paragraph: '=paragraphContext',\n      dirtyText: '=dirtyText',\n      originalText: '=originalText',\n      onLoad: '=onLoad',\n      revisionView: '=revisionView',\n    },\n    link: function(scope, element, attrs, controller) {\n      $templateRequest('app/notebook/paragraph/code-editor/code-editor.directive.html').then(function(editorHtml) {\n        let editor = angular.element(editorHtml);\n        editor.attr('id', scope.paragraphId + '_editor');\n        element.append(editor);\n        $compile(editor)(scope);\n        console.debug('codeEditor directive revision view is ' + scope.revisionView);\n      });\n    },\n  };\n}\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nangular.module('zeppelinWebApp').service('saveAsService', SaveAsService);\n\nfunction SaveAsService(browserDetectService) {\n  'ngInject';\n\n  this.saveAs = function(content, filename, extension) {\n    let BOM = '\\uFEFF';\n    if (browserDetectService.detectIE()) {\n      angular.element('body').append('<iframe id=\"SaveAsId\" style=\"display: none\"></iframe>');\n      let frameSaveAs = angular.element('body > iframe#SaveAsId')[0].contentWindow;\n      content = BOM + content;\n      frameSaveAs.document.open('text/json', 'replace');\n      frameSaveAs.document.write(content);\n      frameSaveAs.document.close();\n      frameSaveAs.focus();\n      let t1 = Date.now();\n      frameSaveAs.document.execCommand('SaveAs', false, filename + '.' + extension);\n      let t2 = Date.now();\n\n      // This means, this version of IE dosen't support auto download of a file with extension provided in param\n      // falling back to \".txt\"\n      if (t1 === t2) {\n        frameSaveAs.document.execCommand('SaveAs', true, filename + '.txt');\n      }\n      angular.element('body > iframe#SaveAsId').remove();\n    } else {\n      const fileName = filename + '.' + extension;\n      let binaryData = [];\n      binaryData.push(BOM);\n      binaryData.push(content);\n      let blob = new Blob(binaryData, {type: 'octet/stream'});\n      const url = window.URL.createObjectURL(blob);\n      let a = document.createElement('a');\n      document.body.appendChild(a);\n      a.style = 'display: none';\n      a.href = url;\n      a.download = fileName;\n      a.click();\n      window.URL.revokeObjectURL(url);\n    }\n  };\n}\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nangular.module('zeppelinWebApp').service('browserDetectService', BrowserDetectService);\n\nfunction BrowserDetectService() {\n  this.detectIE = function() {\n    let ua = window.navigator.userAgent;\n    let msie = ua.indexOf('MSIE ');\n    if (msie > 0) {\n      // IE 10 or older => return version number\n      return parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10);\n    }\n    let trident = ua.indexOf('Trident/');\n    if (trident > 0) {\n      // IE 11 => return version number\n      let rv = ua.indexOf('rv:');\n      return parseInt(ua.substring(rv + 3, ua.indexOf('.', rv)), 10);\n    }\n    let edge = ua.indexOf('Edge/');\n    if (edge > 0) {\n      // IE 12 (aka Edge) => return version number\n      return parseInt(ua.substring(edge + 5, ua.indexOf('.', edge)), 10);\n    }\n    // other browser\n    return false;\n  };\n}\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nangular.module('zeppelinWebApp').controller('ElasticInputCtrl', ElasticInputCtrl);\n\nfunction ElasticInputCtrl() {\n  let vm = this;\n  vm.showEditor = false;\n  vm.value = '';\n}\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nangular.module('zeppelinWebApp').directive('dropdownInput', dropdownInputDirective);\n\nfunction dropdownInputDirective() {\n  return {\n    restrict: 'A',\n    link: function(scope, element) {\n      element.bind('click', function(event) {\n        event.stopPropagation();\n      });\n    },\n  };\n}\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nangular.module('zeppelinWebApp').service('noteVarShareService', NoteVarShareService);\n\nfunction NoteVarShareService() {\n  'ngInject';\n\n  let store = {};\n\n  this.clear = function() {\n    store = {};\n  };\n\n  this.put = function(key, value) {\n    store[key] = value;\n  };\n\n  this.get = function(key) {\n    return store[key];\n  };\n\n  this.del = function(key) {\n    let v = store[key];\n    delete store[key];\n    return v;\n  };\n}\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nangular.module('zeppelinWebApp').controller('NotebookRepositoryCtrl', NotebookRepositoryCtrl);\n\nfunction NotebookRepositoryCtrl($http, baseUrlSrv, ngToast) {\n  'ngInject';\n\n  let vm = this;\n  vm.notebookRepos = [];\n  vm.showDropdownSelected = showDropdownSelected;\n  vm.saveNotebookRepo = saveNotebookRepo;\n\n  _init();\n\n  // Public functions\n\n  function saveNotebookRepo(valueform, repo, data) {\n    console.log('data %o', data);\n    $http.put(baseUrlSrv.getRestApiBase() + '/notebook-repositories', {\n      'name': repo.className,\n      'settings': data,\n    }).success(function(data) {\n      let index = _.findIndex(vm.notebookRepos, {'className': repo.className});\n      if (index >= 0) {\n        vm.notebookRepos[index] = data.body;\n        console.log('repos %o, data %o', vm.notebookRepos, data.body);\n      }\n      valueform.$show();\n    }).error(function() {\n      ngToast.danger({\n        content: 'We couldn\\'t save that NotebookRepo\\'s settings',\n        verticalPosition: 'bottom',\n        timeout: '3000',\n      });\n      valueform.$show();\n    });\n\n    return 'manual';\n  }\n\n  function showDropdownSelected(setting) {\n    let index = _.findIndex(setting.value, {'value': setting.selected});\n    if (index < 0) {\n      return 'No value';\n    } else {\n      return setting.value[index].name;\n    }\n  }\n\n  // Private functions\n\n  function _getInterpreterSettings() {\n    $http.get(baseUrlSrv.getRestApiBase() + '/notebook-repositories')\n      .success(function(data, status, headers, config) {\n        vm.notebookRepos = data.body;\n        console.log('ya notebookRepos %o', vm.notebookRepos);\n      }).error(function(data, status, headers, config) {\n        if (status === 401) {\n          ngToast.danger({\n            content: 'You don\\'t have permission on this page',\n            verticalPosition: 'bottom',\n            timeout: '3000',\n          });\n          setTimeout(function() {\n            window.location = baseUrlSrv.getBase();\n          }, 3000);\n        }\n        console.log('Error %o %o', status, data.message);\n      });\n  }\n\n  function _init() {\n    _getInterpreterSettings();\n  }\n}\n","/*\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nangular.module('zeppelinWebApp').controller('SearchResultCtrl', SearchResultCtrl);\n\nfunction SearchResultCtrl($scope, $routeParams, searchService) {\n  'ngInject';\n\n  $scope.isResult = true;\n  $scope.searchTerm = $routeParams.searchTerm;\n  let results = searchService.search({'q': $routeParams.searchTerm}).query();\n\n  results.$promise.then(function(result) {\n    $scope.notes = result.body.map(function(note) {\n      // redirect to notebook when search result is a notebook itself,\n      // not a paragraph\n      if (!/\\/paragraph\\//.test(note.id)) {\n        return note;\n      }\n\n      note.id = note.id.replace('paragraph/', '?paragraph=') +\n        '&term=' + $routeParams.searchTerm;\n\n      return note;\n    });\n    if ($scope.notes.length === 0) {\n      $scope.isResult = false;\n    } else {\n      $scope.isResult = true;\n    }\n\n    $scope.$on('$routeChangeStart', function(event, next, current) {\n      if (next.originalPath !== '/search/:searchTerm') {\n        searchService.searchTerm = '';\n      }\n    });\n  });\n\n  $scope.page = 0;\n  $scope.allResults = false;\n\n  $scope.highlightSearchResults = function(note) {\n    return function(_editor) {\n      function getEditorMode(text) {\n        let editorModes = {\n          'ace/mode/scala': /^%(\\w*\\.)?spark/,\n          'ace/mode/python': /^%(\\w*\\.)?(pyspark|python)/,\n          'ace/mode/r': /^%(\\w*\\.)?(r|sparkr|knitr)/,\n          'ace/mode/sql': /^%(\\w*\\.)?\\wql/,\n          'ace/mode/markdown': /^%md/,\n          'ace/mode/sh': /^%sh/,\n        };\n\n        return Object.keys(editorModes).reduce(function(res, mode) {\n          return editorModes[mode].test(text) ? mode : res;\n        }, 'ace/mode/scala');\n      }\n\n      let Range = ace.require('ace/range').Range;\n\n      _editor.setOption('highlightActiveLine', false);\n      _editor.$blockScrolling = Infinity;\n      _editor.setReadOnly(true);\n      _editor.renderer.setShowGutter(false);\n      _editor.setTheme('ace/theme/chrome');\n      _editor.getSession().setMode(getEditorMode(note.text));\n\n      function getIndeces(term) {\n        return function(str) {\n          let indeces = [];\n          let i = -1;\n          while ((i = str.indexOf(term, i + 1)) >= 0) {\n            indeces.push(i);\n          }\n          return indeces;\n        };\n      }\n\n      let result = '';\n      if (note.header !== '') {\n        result = note.header + '\\n\\n' + note.snippet;\n      } else {\n        result = note.snippet;\n      }\n\n      let lines = result\n        .split('\\n')\n        .map(function(line, row) {\n          let match = line.match(/<B>(.+?)<\\/B>/);\n\n          // return early if nothing to highlight\n          if (!match) {\n            return line;\n          }\n\n          let term = match[1];\n          let __line = line\n            .replace(/<B>/g, '')\n            .replace(/<\\/B>/g, '');\n\n          let indeces = getIndeces(term)(__line);\n\n          indeces.forEach(function(start) {\n            let end = start + term.length;\n            if (note.header !== '' && row === 0) {\n              _editor\n                .getSession()\n                .addMarker(\n                  new Range(row, 0, row, line.length),\n                  'search-results-highlight-header',\n                  'background'\n                );\n              _editor\n                .getSession()\n                .addMarker(\n                  new Range(row, start, row, end),\n                  'search-results-highlight',\n                  'line'\n                );\n            } else {\n              _editor\n                .getSession()\n                .addMarker(\n                  new Range(row, start, row, end),\n                  'search-results-highlight',\n                  'line'\n                );\n            }\n          });\n          return __line;\n        });\n\n      // resize editor based on content length\n      _editor.setOption(\n        'maxLines',\n        lines.reduce(function(len, line) {\n          return len + line.length;\n        }, 0)\n      );\n\n      _editor.getSession().setValue(lines.join('\\n'));\n      note.searchResult = lines;\n    };\n  };\n}\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nangular.module('zeppelinWebApp').service('searchService', SearchService);\n\nfunction SearchService($resource, baseUrlSrv) {\n  'ngInject';\n\n  this.search = function(term) {\n    this.searchTerm = term.q;\n    console.log('Searching for: %o', term.q);\n    if (!term.q) { // TODO(bzz): empty string check\n      return;\n    }\n    let encQuery = window.encodeURIComponent(term.q);\n    return $resource(baseUrlSrv.getRestApiBase() + '/notebook/search?q=' + encQuery, {}, {\n      query: {method: 'GET'},\n    });\n  };\n\n  this.searchTerm = '';\n}\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport HeliumController from './helium.controller';\n\nangular.module('zeppelinWebApp')\n  .controller('HeliumCtrl', HeliumController);\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {HeliumType} from './helium-type';\n\nexport default function HeliumCtrl($scope, $rootScope, $sce,\n                                   baseUrlSrv, ngToast, heliumService) {\n  'ngInject';\n\n  $scope.pkgSearchResults = {};\n  $scope.defaultPackages = {};\n  $scope.showVersions = {};\n  $scope.bundleOrder = [];\n  $scope.bundleOrderChanged = false;\n  $scope.vizTypePkg = {};\n  $scope.spellTypePkg = {};\n  $scope.intpTypePkg = {};\n  $scope.appTypePkg = {};\n  $scope.numberOfEachPackageByType = {};\n  $scope.allPackageTypes = [HeliumType][0];\n  $scope.pkgListByType = 'VISUALIZATION';\n  $scope.defaultPackageConfigs = {}; // { pkgName, [{name, type, desc, value, defaultValue}] }\n  $scope.intpDefaultIcon = $sce.trustAsHtml('<img src=\"../assets/images/maven_default_icon.png\" style=\"width: 12px\"/>');\n\n  function init() {\n    // get all package info and set config\n    heliumService.getAllPackageInfoAndDefaultPackages()\n      .then(({pkgSearchResults, defaultPackages}) => {\n        // pagination\n        $scope.itemsPerPage = 10;\n        $scope.currentPage = 1;\n        $scope.maxSize = 5;\n\n        $scope.pkgSearchResults = pkgSearchResults;\n        $scope.defaultPackages = defaultPackages;\n        classifyPkgType($scope.defaultPackages);\n\n        return heliumService.getAllPackageConfigs();\n      })\n      .then((defaultPackageConfigs) => {\n        $scope.defaultPackageConfigs = defaultPackageConfigs;\n        return heliumService.getVisualizationPackageOrder();\n      })\n      .then((visPackageOrder) => {\n        setVisPackageOrder(visPackageOrder);\n      });\n  }\n\n  const setVisPackageOrder = function(visPackageOrder) {\n    $scope.bundleOrder = visPackageOrder;\n    $scope.bundleOrderChanged = false;\n  };\n\n  let orderPackageByPubDate = function(a, b) {\n    if (!a.pkg.published) {\n      // Because local registry pkgs don't have 'published' field, put current time instead to show them first\n      a.pkg.published = new Date().getTime();\n    }\n\n    return new Date(a.pkg.published).getTime() - new Date(b.pkg.published).getTime();\n  };\n\n  const classifyPkgType = function(packageInfo) {\n    let allTypesOfPkg = {};\n    let vizTypePkg = [];\n    let spellTypePkg = [];\n    let intpTypePkg = [];\n    let appTypePkg = [];\n\n    let packageInfoArr = Object.keys(packageInfo).map((key) => packageInfo[key]);\n    packageInfoArr = packageInfoArr.sort(orderPackageByPubDate).reverse();\n\n    for (let name in packageInfoArr) {\n      if (packageInfoArr.hasOwnProperty(name)) {\n        let pkgs = packageInfoArr[name];\n        let pkgType = pkgs.pkg.type;\n\n        switch (pkgType) {\n          case HeliumType.VISUALIZATION:\n            vizTypePkg.push(pkgs);\n            break;\n          case HeliumType.SPELL:\n            spellTypePkg.push(pkgs);\n            break;\n          case HeliumType.INTERPRETER:\n            intpTypePkg.push(pkgs);\n            break;\n          case HeliumType.APPLICATION:\n            appTypePkg.push(pkgs);\n            break;\n        }\n      }\n    }\n\n    let pkgsArr = [\n      vizTypePkg,\n      spellTypePkg,\n      intpTypePkg,\n      appTypePkg,\n    ];\n    for (let idx in _.keys(HeliumType)) {\n      if (_.keys(HeliumType).hasOwnProperty(idx)) {\n        allTypesOfPkg[_.keys(HeliumType)[idx]] = pkgsArr[idx];\n      }\n    }\n\n    $scope.allTypesOfPkg = allTypesOfPkg;\n  };\n\n  $scope.bundleOrderListeners = {\n    accept: function(sourceItemHandleScope, destSortableScope) {\n      return true;\n    },\n    itemMoved: function(event) {},\n    orderChanged: function(event) {\n      $scope.bundleOrderChanged = true;\n    },\n  };\n\n  $scope.saveBundleOrder = function() {\n    const confirm = BootstrapDialog.confirm({\n      closable: false,\n      closeByBackdrop: false,\n      closeByKeyboard: false,\n      title: '',\n      message: 'Save changes?',\n      callback: function(result) {\n        if (result) {\n          confirm.$modalFooter.find('button').addClass('disabled');\n          confirm.$modalFooter.find('button:contains(\"OK\")')\n            .html('<i class=\"fa fa-circle-o-notch fa-spin\"></i> Enabling');\n          heliumService.setVisualizationPackageOrder($scope.bundleOrder)\n            .success(function(data, status) {\n              setVisPackageOrder($scope.bundleOrder);\n              confirm.close();\n            })\n            .error(function(data, status) {\n              confirm.close();\n              console.log('Failed to save order');\n              BootstrapDialog.show({\n                title: 'Error on saving order ',\n                message: _.escape(data.message),\n              });\n            });\n          return false;\n        }\n      },\n    });\n  };\n\n  let getLicense = function(name, artifact) {\n    let filteredPkgSearchResults = _.filter($scope.defaultPackages[name], function(p) {\n      return p.artifact === artifact;\n    });\n\n    let license;\n    if (filteredPkgSearchResults.length === 0) {\n      filteredPkgSearchResults = _.filter($scope.pkgSearchResults[name], function(p) {\n        return p.pkg.artifact === artifact;\n      });\n\n      if (filteredPkgSearchResults.length > 0) {\n        license = filteredPkgSearchResults[0].pkg.license;\n      }\n    } else {\n      license = filteredPkgSearchResults[0].license;\n    }\n\n    if (!license) {\n      license = 'Unknown';\n    }\n    return license;\n  };\n\n  const getHeliumTypeText = function(type) {\n    if (type === HeliumType.VISUALIZATION) {\n      return `<a target=\"_blank\" href=\"https://zeppelin.apache.org/docs/${$rootScope.zeppelinVersion}/development/helium/writing_visualization.html\">${type}</a>`; // eslint-disable-line max-len\n    } else if (type === HeliumType.SPELL) {\n      return `<a target=\"_blank\" href=\"https://zeppelin.apache.org/docs/${$rootScope.zeppelinVersion}/development/helium/writing_spell.html\">${type}</a>`; // eslint-disable-line max-len\n    } else {\n      return type;\n    }\n  };\n\n  $scope.enable = function(name, artifact, type, groupId, description) {\n    let license = getLicense(name, artifact);\n    let mavenArtifactInfoToHTML = groupId + ':' + artifact.split('@')[0] + ':' + artifact.split('@')[1];\n\n    let confirm = '';\n    if (type === HeliumType.INTERPRETER) {\n      confirm = BootstrapDialog.confirm({\n        closable: false,\n        closeByBackdrop: false,\n        closeByKeyboard: false,\n        title: '<div style=\"font-weight: 300;\">Do you want to download an interpreter?</div>',\n        message: '<div style=\"font-size: 14px; margin-top: 5px;\">Name</div>' +\n          `<div style=\"color:gray\">${name}</div>` +\n          '<hr style=\"margin-top: 10px; margin-bottom: 10px;\" />' +\n          '<div style=\"font-size: 14px; margin-bottom: 2px;\">Artifact</div>' +\n          `<div style=\"color:gray\">${mavenArtifactInfoToHTML}</div>`,\n        callback: function(result) {\n          if (result) {\n            heliumService.installInterpreter({'name': name, 'artifact': mavenArtifactInfoToHTML})\n            .success(function(data, status) {\n              confirm.close();\n            }).error(function(data, status) {\n              confirm.close();\n              console.log('Failed to install an interpreter %o %o', name, artifact);\n              BootstrapDialog.show({\n                title: 'Error while starting to install ' + _.escape(name) + ' interpreter',\n                message: _.escape(data.message),\n              });\n            });\n            return false;\n          }\n        },\n      });\n    } else {\n      confirm = BootstrapDialog.confirm({\n        closable: false,\n        closeByBackdrop: false,\n        closeByKeyboard: false,\n        title: '<div style=\"font-weight: 300;\">Do you want to enable Helium Package?</div>',\n        message:\n          '<div style=\"font-size: 14px; margin-top: 5px;\">Artifact</div>' +\n          `<div style=\"color:gray\">${artifact}</div>` +\n          '<hr style=\"margin-top: 10px; margin-bottom: 10px;\" />' +\n          '<div style=\"font-size: 14px; margin-bottom: 2px;\">Type</div>' +\n          `<div style=\"color:gray\">${getHeliumTypeText(type)}</div>` +\n          '<hr style=\"margin-top: 10px; margin-bottom: 10px;\" />' +\n          '<div style=\"font-size: 14px;\">Description</div>' +\n          `<div style=\"color:gray\">${description}</div>` +\n          '<hr style=\"margin-top: 10px; margin-bottom: 10px;\" />' +\n          '<div style=\"font-size: 14px;\">License</div>' +\n          `<div style=\"color:gray\">${license}</div>`,\n        callback: function(result) {\n          if (result) {\n            confirm.$modalFooter.find('button').addClass('disabled');\n            confirm.$modalFooter.find('button:contains(\"OK\")')\n              .html('<i class=\"fa fa-circle-o-notch fa-spin\"></i> Enabling');\n            heliumService.enable(name, artifact, type).success(function(data, status) {\n              init();\n              confirm.close();\n            }).error(function(data, status) {\n              confirm.close();\n              console.log('Failed to enable package %o %o. %o', name, artifact, data);\n              BootstrapDialog.show({\n                title: 'Error on enabling ' + _.escape(name),\n                message: _.escape(data.message),\n              });\n            });\n            return false;\n          }\n        },\n      });\n    }\n  };\n\n  $scope.disable = function(name, artifact) {\n    const confirm = BootstrapDialog.confirm({\n      closable: false,\n      closeByBackdrop: false,\n      closeByKeyboard: false,\n      title: '<div style=\"font-weight: 300;\">Do you want to disable Helium Package?</div>',\n      message: _.escape(artifact),\n      callback: function(result) {\n        if (result) {\n          confirm.$modalFooter.find('button').addClass('disabled');\n          confirm.$modalFooter.find('button:contains(\"OK\")')\n            .html('<i class=\"fa fa-circle-o-notch fa-spin\"></i> Disabling');\n          heliumService.disable(name)\n          .success(function(data, status) {\n            init();\n            confirm.close();\n          })\n          .error(function(data, status) {\n            confirm.close();\n            console.log('Failed to disable package %o. %o', name, data);\n            BootstrapDialog.show({\n              title: 'Error on disabling ' + _.escape(name),\n              message: _.escape(data.message),\n            });\n          });\n          return false;\n        }\n      },\n    });\n  };\n\n  $scope.toggleVersions = function(pkgName) {\n    if ($scope.showVersions[pkgName]) {\n      $scope.showVersions[pkgName] = false;\n    } else {\n      $scope.showVersions[pkgName] = true;\n    }\n  };\n\n  $scope.isLocalPackage = function(pkgSearchResult) {\n    const pkg = pkgSearchResult.pkg;\n    return pkg.artifact && !pkg.artifact.includes('@');\n  };\n\n  $scope.hasNpmLink = function(pkgSearchResult) {\n    const pkg = pkgSearchResult.pkg;\n    return (pkg.type === HeliumType.SPELL || pkg.type === HeliumType.VISUALIZATION) &&\n      !$scope.isLocalPackage(pkgSearchResult);\n  };\n\n  $scope.hasMavenLink = function(pkgSearchResult) {\n    const pkg = pkgSearchResult.pkg;\n    return (pkg.type === HeliumType.APPLICATION || pkg.type === HeliumType.INTERPRETER) &&\n      !$scope.isLocalPackage(pkgSearchResult);\n  };\n\n  $scope.getPackageSize = function(pkgSearchResult, targetPkgType) {\n    let result = [];\n    _.map(pkgSearchResult, function(pkg) {\n      result.push(_.find(pkg, {type: targetPkgType}));\n    });\n    return _.compact(result).length;\n  };\n\n  $scope.configExists = function(pkgSearchResult) {\n    // helium package config is persisted per version\n    return pkgSearchResult.pkg.config && pkgSearchResult.pkg.artifact;\n  };\n\n  $scope.configOpened = function(pkgSearchResult) {\n    return pkgSearchResult.configOpened && !pkgSearchResult.configFetching;\n  };\n\n  $scope.getConfigButtonClass = function(pkgSearchResult) {\n    return (pkgSearchResult.configOpened && pkgSearchResult.configFetching)\n      ? 'disabled' : '';\n  };\n\n  $scope.toggleConfigButton = function(pkgSearchResult) {\n    if (pkgSearchResult.configOpened) {\n      pkgSearchResult.configOpened = false;\n      return;\n    }\n\n    const pkg = pkgSearchResult.pkg;\n    const pkgName = pkg.name;\n    pkgSearchResult.configFetching = true;\n    pkgSearchResult.configOpened = true;\n\n    heliumService.getSinglePackageConfigs(pkg)\n      .then((confs) => {\n        $scope.defaultPackageConfigs[pkgName] = confs;\n        pkgSearchResult.configFetching = false;\n      });\n  };\n\n  $scope.saveConfig = function(pkgSearchResult) {\n    const pkgName = pkgSearchResult.pkg.name;\n    const currentConf = $scope.defaultPackageConfigs[pkgName];\n\n    heliumService.saveConfig(pkgSearchResult.pkg, currentConf, () => {\n      // close after config is saved\n      pkgSearchResult.configOpened = false;\n    });\n  };\n\n  $scope.getDescriptionText = function(pkgSearchResult) {\n    return $sce.trustAsHtml(pkgSearchResult.pkg.description);\n  };\n\n  init();\n}\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {HeliumType} from './helium-type';\nimport {\n  createAllPackageConfigs,\n  createPersistableConfig,\n  mergePersistedConfWithSpec,\n} from './helium-conf';\nimport {\n  createDefaultPackages,\n} from './helium-package';\n\nangular.module('zeppelinWebApp').service('heliumService', HeliumService);\n\nexport default function HeliumService($http, $sce, baseUrlSrv) {\n  'ngInject';\n\n  let visualizationBundles = [];\n  let visualizationPackageOrder = [];\n  // name `heliumBundles` should be same as `HeliumBundleFactory.HELIUM_BUNDLES_VAR`\n  let heliumBundles = [];\n  // map for `{ magic: interpreter }`\n  let spellPerMagic = {};\n  // map for `{ magic: package-name }`\n  let pkgNamePerMagic = {};\n\n  /**\n   * @param magic {string} e.g `%flowchart`\n   * @returns {SpellBase} undefined if magic is not registered\n   */\n  this.getSpellByMagic = function(magic) {\n    return spellPerMagic[magic];\n  };\n\n  this.executeSpell = function(magic, textWithoutMagic) {\n    const promisedConf = this.getSinglePackageConfigUsingMagic(magic)\n      .then((confs) => createPersistableConfig(confs));\n\n    return promisedConf.then((conf) => {\n      const spell = this.getSpellByMagic(magic);\n      const spellResult = spell.interpret(textWithoutMagic, conf);\n      const parsed = spellResult.getAllParsedDataWithTypes(\n        spellPerMagic, magic, textWithoutMagic);\n\n      return parsed;\n    });\n  };\n\n  this.executeSpellAsDisplaySystem = function(magic, textWithoutMagic) {\n    const promisedConf = this.getSinglePackageConfigUsingMagic(magic)\n      .then((confs) => createPersistableConfig(confs));\n\n    return promisedConf.then((conf) => {\n      const spell = this.getSpellByMagic(magic);\n      const spellResult = spell.interpret(textWithoutMagic.trim(), conf);\n      const parsed = spellResult.getAllParsedDataWithTypes(spellPerMagic);\n\n      return parsed;\n    });\n  };\n\n  this.getVisualizationCachedPackages = function() {\n    return visualizationBundles;\n  };\n\n  this.getVisualizationCachedPackageOrder = function() {\n    return visualizationPackageOrder;\n  };\n\n  /**\n   * @returns {Promise} which returns bundleOrder and cache it in `visualizationPackageOrder`\n   */\n  this.getVisualizationPackageOrder = function() {\n    return $http.get(baseUrlSrv.getRestApiBase() + '/helium/order/visualization')\n      .then(function(response, status) {\n        const order = response.data.body;\n        visualizationPackageOrder = order;\n        return order;\n      })\n      .catch(function(error) {\n        console.error('Can not get bundle order', error);\n      });\n  };\n\n  this.setVisualizationPackageOrder = function(list) {\n    return $http.post(baseUrlSrv.getRestApiBase() + '/helium/order/visualization', list);\n  };\n\n  this.enable = function(name, artifact) {\n    return $http.post(baseUrlSrv.getRestApiBase() + '/helium/enable/' + name, artifact);\n  };\n\n  this.disable = function(name) {\n    return $http.post(baseUrlSrv.getRestApiBase() + '/helium/disable/' + name);\n  };\n\n  this.installInterpreter = function(installRequest) {\n    return $http.post(baseUrlSrv.getRestApiBase() + '/interpreter/install', installRequest);\n  };\n\n  this.saveConfig = function(pkg, defaultPackageConfig, closeConfigPanelCallback) {\n    // in case of local package, it will include `/`\n    const pkgArtifact = encodeURIComponent(pkg.artifact);\n    const pkgName = pkg.name;\n    const filtered = createPersistableConfig(defaultPackageConfig);\n\n    if (!pkgName || !pkgArtifact || !filtered) {\n      console.error(\n        `Can't save config for helium package '${pkgArtifact}'`, filtered);\n      return;\n    }\n\n    const url = `${baseUrlSrv.getRestApiBase()}/helium/config/${pkgName}/${pkgArtifact}`;\n    return $http.post(url, filtered)\n      .then(() => {\n        if (closeConfigPanelCallback) {\n          closeConfigPanelCallback();\n        }\n      }).catch((error) => {\n        console.error(`Failed to save config for ${pkgArtifact}`, error);\n      });\n  };\n\n  /**\n   * @returns {Promise<Object>} which including {name, Array<package info for artifact>}\n   */\n  this.getAllPackageInfo = function() {\n    return $http.get(`${baseUrlSrv.getRestApiBase()}/helium/package`)\n      .then(function(response, status) {\n        return response.data.body;\n      })\n      .catch(function(error) {\n        console.error('Failed to get all package infos', error);\n      });\n  };\n\n  this.getAllEnabledPackages = function() {\n    return $http.get(`${baseUrlSrv.getRestApiBase()}/helium/enabledPackage`)\n      .then(function(response, status) {\n        return response.data.body;\n      })\n      .catch(function(error) {\n        console.error('Failed to get all enabled package infos', error);\n      });\n  };\n\n  this.getSingleBundle = function(pkgName) {\n    let url = `${baseUrlSrv.getRestApiBase()}/helium/bundle/load/${pkgName}`;\n    if (process.env.HELIUM_BUNDLE_DEV) {\n      url = url + '?refresh=true';\n    }\n\n    return $http.get(url)\n      .then(function(response, status) {\n        const bundle = response.data;\n        if (bundle.substring(0, 'ERROR:'.length) === 'ERROR:') {\n          console.error(`Failed to get bundle: ${pkgName}`, bundle);\n          return ''; // empty bundle will be filtered later\n        }\n\n        return bundle;\n      })\n      .catch(function(error) {\n        console.error(`Failed to get single bundle: ${pkgName}`, error);\n      });\n  };\n\n  this.getDefaultPackages = function() {\n    return this.getAllPackageInfo()\n      .then((pkgSearchResults) => {\n        return createDefaultPackages(pkgSearchResults, $sce);\n      });\n  };\n\n  this.getAllPackageInfoAndDefaultPackages = function() {\n    return this.getAllPackageInfo()\n      .then((pkgSearchResults) => {\n        return {\n          pkgSearchResults: pkgSearchResults,\n          defaultPackages: createDefaultPackages(pkgSearchResults, $sce),\n        };\n      });\n  };\n\n  /**\n   * get all package configs.\n   * @return { Promise<{name, Array<Object>}> }\n   */\n  this.getAllPackageConfigs = function() {\n    const promisedDefaultPackages = this.getDefaultPackages();\n    const promisedPersistedConfs =\n      $http.get(`${baseUrlSrv.getRestApiBase()}/helium/config`)\n      .then(function(response, status) {\n        return response.data.body;\n      });\n\n    return Promise.all([promisedDefaultPackages, promisedPersistedConfs])\n      .then((values) => {\n        const defaultPackages = values[0];\n        const persistedConfs = values[1];\n\n        return createAllPackageConfigs(defaultPackages, persistedConfs);\n      })\n      .catch(function(error) {\n        console.error('Failed to get all package configs', error);\n      });\n  };\n\n  /**\n   * get the package config which is persisted in server.\n   * @return { Promise<Array<Object>> }\n   */\n  this.getSinglePackageConfigs = function(pkg) {\n    const pkgName = pkg.name;\n    // in case of local package, it will include `/`\n    const pkgArtifact = encodeURIComponent(pkg.artifact);\n\n    if (!pkgName || !pkgArtifact) {\n      console.error('Failed to fetch config for\\n', pkg);\n      return Promise.resolve([]);\n    }\n\n    const confUrl = `${baseUrlSrv.getRestApiBase()}/helium/config/${pkgName}/${pkgArtifact}`;\n    const promisedConf = $http.get(confUrl)\n      .then(function(response, status) {\n        return response.data.body;\n      });\n\n    return promisedConf.then(({confSpec, confPersisted}) => {\n      const merged = mergePersistedConfWithSpec(confPersisted, confSpec);\n      return merged;\n    });\n  };\n\n  this.getSinglePackageConfigUsingMagic = function(magic) {\n    const pkgName = pkgNamePerMagic[magic];\n\n    const confUrl = `${baseUrlSrv.getRestApiBase()}/helium/spell/config/${pkgName}`;\n    const promisedConf = $http.get(confUrl)\n      .then(function(response, status) {\n        return response.data.body;\n      });\n\n    return promisedConf.then(({confSpec, confPersisted}) => {\n      const merged = mergePersistedConfWithSpec(confPersisted, confSpec);\n      return merged;\n    });\n  };\n\n  const p = this.getAllEnabledPackages()\n    .then((enabledPackageSearchResults) => {\n      const promises = enabledPackageSearchResults.map((packageSearchResult) => {\n        const pkgName = packageSearchResult.pkg.name;\n        return this.getSingleBundle(pkgName);\n      });\n\n      return Promise.all(promises);\n    })\n    .then((bundles) => {\n      return bundles.reduce((acc, b) => {\n        // filter out empty bundle\n        if (b === '') {\n          return acc;\n        }\n        acc.push(b);\n        return acc;\n      }, []);\n    });\n\n  // load should be promise\n  this.load = p.then((availableBundles) => {\n    // evaluate bundles\n    availableBundles.map((b) => {\n      // eslint-disable-next-line no-eval\n      eval(b);\n    });\n\n    // extract bundles by type\n    heliumBundles.map((b) => {\n      if (b.type === HeliumType.SPELL) {\n        const spell = new b.class(); // eslint-disable-line new-cap\n        const pkgName = b.id;\n        spellPerMagic[spell.getMagic()] = spell;\n        pkgNamePerMagic[spell.getMagic()] = pkgName;\n      } else if (b.type === HeliumType.VISUALIZATION) {\n        visualizationBundles.push(b);\n      }\n    });\n  });\n\n  this.init = function() {\n    this.getVisualizationPackageOrder();\n  };\n\n  // init\n  this.init();\n}\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const HeliumConfFieldType = {\n  NUMBER: 'number',\n  JSON: 'json',\n  STRING: 'string',\n};\n\n/**\n * @param persisted <Object> including `type`, `description`, `defaultValue` for each conf key\n * @param spec <Object> including `value` for each conf key\n */\nexport function mergePersistedConfWithSpec(persisted, spec) {\n  const confs = [];\n\n  for (let name in spec) {\n    if (spec.hasOwnProperty(name)) {\n      const specField = spec[name];\n      const persistedValue = persisted[name];\n\n      const value = (persistedValue) ? persistedValue : specField.defaultValue;\n      const merged = {\n        name: name,\n        type: specField.type,\n        description: specField.description,\n        value: value,\n        defaultValue: specField.defaultValue,\n      };\n\n      confs.push(merged);\n    }\n  }\n\n  return confs;\n}\n\nexport function createAllPackageConfigs(defaultPackages, persistedConfs) {\n  let packageConfs = {};\n\n  for (let name in defaultPackages) {\n    if (defaultPackages.hasOwnProperty(name)) {\n      const pkgSearchResult = defaultPackages[name];\n\n      const spec = pkgSearchResult.pkg.config;\n      if (!spec) {\n        continue;\n      }\n\n      const artifact = pkgSearchResult.pkg.artifact;\n      if (!artifact) {\n        continue;\n      }\n\n      let persistedConf = {};\n      if (persistedConfs[artifact]) {\n        persistedConf = persistedConfs[artifact];\n      }\n\n      const confs = mergePersistedConfWithSpec(persistedConf, spec);\n      packageConfs[name] = confs;\n    }\n  }\n\n  return packageConfs;\n}\n\nexport function parseConfigValue(type, stringified) {\n  let value = stringified;\n\n  try {\n    if (HeliumConfFieldType.NUMBER === type) {\n      value = parseFloat(stringified);\n    } else if (HeliumConfFieldType.JSON === type) {\n      value = JSON.parse(stringified);\n    }\n  } catch (error) {\n    // return just the stringified one\n    console.error(`Failed to parse conf type ${type}, value ${value}`);\n  }\n\n  return value;\n}\n\n/**\n * persist key-value only\n * since other info (e.g type, desc) can be provided by default config\n */\nexport function createPersistableConfig(currentConfs) {\n  const filtered = currentConfs.reduce((acc, c) => {\n    acc[c.name] = parseConfigValue(c.type, c.value);\n    return acc;\n  }, {});\n\n  return filtered;\n}\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function createDefaultPackage(pkgSearchResult, sce) {\n  for (let pkgIdx in pkgSearchResult) {\n    if (pkgSearchResult.hasOwnProperty(pkgIdx)) {\n      const pkg = pkgSearchResult[pkgIdx];\n      pkg.pkg.icon = sce.trustAsHtml(pkg.pkg.icon);\n      if (pkg.enabled) {\n        pkgSearchResult.splice(pkgIdx, 1);\n        return pkg;\n      }\n    }\n  }\n\n  // show first available version if package is not enabled\n  const result = pkgSearchResult[0];\n  pkgSearchResult.splice(0, 1);\n  return result;\n}\n\n/**\n * create default packages based on `enabled` field and `latest` version.\n *\n * @param pkgSearchResults\n * @param sce angular `$sce` object\n * @returns {Object} including {name, pkgInfo}\n */\nexport function createDefaultPackages(pkgSearchResults, sce) {\n  const defaultPackages = {};\n  // show enabled version if any version of package is enabled\n  for (let name in pkgSearchResults) {\n    if (pkgSearchResults.hasOwnProperty(name)) {\n      const pkgSearchResult = pkgSearchResults[name];\n      defaultPackages[name] = createDefaultPackage(pkgSearchResult, sce);\n    }\n  }\n\n  return defaultPackages;\n}\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport './dynamic-forms.css';\n\nangular.module('zeppelinWebApp').directive('dynamicForms', DynamicFormDirective);\n\nfunction DynamicFormDirective($templateRequest, $compile) {\n  return {\n    restrict: 'AE',\n    scope: {\n      id: '=id',\n      hide: '=hide',\n      disable: '=disable',\n      actiononchange: '=actiononchange',\n      forms: '=forms',\n      params: '=params',\n      action: '=action',\n      removeaction: '=removeaction',\n    },\n\n    link: function(scope, element, attrs, controller) {\n      scope.loadForm = this.loadForm;\n      scope.toggleCheckbox = this.toggleCheckbox;\n      $templateRequest('app/notebook/dynamic-forms/dynamic-forms.directive.html').then(function(formsHtml) {\n        let forms = angular.element(formsHtml);\n        element.append(forms);\n        $compile(forms)(scope);\n      });\n    },\n\n    loadForm: function(formulaire, params) {\n      let value = formulaire.defaultValue;\n      if (params[formulaire.name]) {\n        value = params[formulaire.name];\n      }\n\n      params[formulaire.name] = value;\n    },\n\n    toggleCheckbox: function(formulaire, option, params) {\n      let idx = params[formulaire.name].indexOf(option.value);\n      if (idx > -1) {\n        params[formulaire.name].splice(idx, 1);\n      } else {\n        params[formulaire.name].push(option.value);\n      }\n    },\n\n  };\n}\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nangular.module('zeppelinWebApp').service('arrayOrderingSrv', ArrayOrderingService);\n\nfunction ArrayOrderingService(TRASH_FOLDER_ID) {\n  'ngInject';\n\n  let arrayOrderingSrv = this;\n\n  this.noteListOrdering = function(note) {\n    if (note.id === TRASH_FOLDER_ID) {\n      return '\\uFFFF';\n    }\n    return arrayOrderingSrv.getNoteName(note);\n  };\n\n  this.getNoteName = function(note) {\n    if (note.name === undefined || note.name.trim() === '') {\n      return 'Note ' + note.id;\n    } else {\n      return note.name;\n    }\n  };\n\n  this.noteComparator = function(v1, v2) {\n    let note1 = v1.value || v1;\n    let note2 = v2.value || v2;\n\n    if (note1.id === TRASH_FOLDER_ID) {\n      return 1;\n    }\n\n    if (note2.id === TRASH_FOLDER_ID) {\n      return -1;\n    }\n\n    if (note1.children === undefined && note2.children !== undefined) {\n      return 1;\n    }\n\n    if (note1.children !== undefined && note2.children === undefined) {\n      return -1;\n    }\n\n    let noteName1 = arrayOrderingSrv.getNoteName(note1);\n    let noteName2 = arrayOrderingSrv.getNoteName(note2);\n\n    return noteName1.localeCompare(noteName2);\n  };\n\n  this.getNotePath = function(note) {\n    if (note.path === undefined || note.path.trim() === '') {\n      return 'Note ' + note.id;\n    } else {\n      return note.path;\n    }\n  };\n}\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nangular.module('zeppelinWebApp').controller('NavCtrl', NavCtrl);\n\nfunction NavCtrl($scope, $rootScope, $http, $routeParams, $location,\n                 noteListFactory, baseUrlSrv, websocketMsgSrv,\n                 arrayOrderingSrv, searchService, TRASH_FOLDER_ID) {\n  'ngInject';\n\n  let vm = this;\n  vm.arrayOrderingSrv = arrayOrderingSrv;\n  vm.connected = websocketMsgSrv.isConnected();\n  vm.isActive = isActive;\n  vm.logout = logout;\n  vm.notes = noteListFactory;\n  vm.search = search;\n  vm.searchForm = searchService;\n  vm.showLoginWindow = showLoginWindow;\n  vm.TRASH_FOLDER_ID = TRASH_FOLDER_ID;\n  vm.isFilterNote = isFilterNote;\n  vm.numberOfNotesDisplayed = 10;\n  let revisionSupported = false;\n\n  $scope.query = {q: ''};\n\n  initController();\n\n  function getZeppelinVersion() {\n    $http.get(baseUrlSrv.getRestApiBase() + '/version').success(\n      function(data, status, headers, config) {\n        $rootScope.zeppelinVersion = data.body.version;\n      }).error(\n      function(data, status, headers, config) {\n        console.log('Error %o %o', status, data.message);\n      });\n  }\n\n  function getClusterAddr() {\n    $http.get(baseUrlSrv.getRestApiBase() + '/cluster/address').success(\n      function(data, status, headers, config) {\n        $rootScope.clusterAddr = data.body.clusterAddr;\n      }).error(\n      function(data, status, headers, config) {\n        console.log('Error %o %o', status, data.message);\n      });\n  }\n\n  function initController() {\n    $scope.isDrawNavbarNoteList = false;\n    angular.element('#notebook-list').perfectScrollbar({suppressScrollX: true});\n\n    angular.element(document).click(function() {\n      $scope.query.q = '';\n    });\n\n    getZeppelinVersion();\n    getClusterAddr();\n    loadNotes();\n  }\n\n  function isFilterNote(note) {\n    if (!$scope.query.q) {\n      return true;\n    }\n\n    let noteName = note.name;\n    if (noteName.toLowerCase().indexOf($scope.query.q.toLowerCase()) > -1) {\n      return true;\n    }\n    return false;\n  }\n\n  function isActive(noteId) {\n    return ($routeParams.noteId === noteId);\n  }\n\n  function listConfigurations() {\n    websocketMsgSrv.listConfigurations();\n  }\n\n  function loadNotes() {\n    websocketMsgSrv.getNoteList();\n  }\n\n  function getHomeNote() {\n    websocketMsgSrv.getHomeNote();\n  }\n\n  function logout() {\n    let logoutURL = baseUrlSrv.getRestApiBase() + '/login/logout';\n\n    $http.post(logoutURL).then(function() {}, function(response) {\n      let clearAuthorizationHeader = 'true';\n      if (response.data) {\n        let res = angular.fromJson(response.data).body;\n        if (res['redirectURL']) {\n          if (res['isLogoutAPI'] === 'true') {\n            $http.get(res['redirectURL']).then(function() {\n            }, function() {\n              window.location = baseUrlSrv.getBase();\n            });\n          } else {\n            window.location.href = res['redirectURL'] + window.location.href;\n          }\n          return undefined;\n        }\n        if (res['clearAuthorizationHeader']) {\n          clearAuthorizationHeader = res['clearAuthorizationHeader'];\n        }\n      }\n\n      // force authcBasic (if configured) to logout\n      if (clearAuthorizationHeader === 'true') {\n        if (detectIE()) {\n          let outcome;\n          try {\n            outcome = document.execCommand('ClearAuthenticationCache');\n          } catch (e) {\n            console.log(e);\n          }\n          if (!outcome) {\n            // Let's create an xmlhttp object\n            outcome = (function(x) {\n              if (x) {\n                // the reason we use \"random\" value for password is\n                // that browsers cache requests. changing\n                // password effectively behaves like cache-busing.\n                x.open('HEAD', location.href, true, 'logout',\n                  (new Date()).getTime().toString());\n                x.send('');\n                // x.abort()\n                return 1; // this is **speculative** \"We are done.\"\n              } else {\n                // eslint-disable-next-line no-useless-return\n                return;\n              }\n            })(window.XMLHttpRequest ? new window.XMLHttpRequest()\n              // eslint-disable-next-line no-undef\n              : (window.ActiveXObject ? new ActiveXObject('Microsoft.XMLHTTP') : u));\n          }\n          if (!outcome) {\n            let m = 'Your browser is too old or too weird to support log out functionality. Close all windows and ' +\n              'restart the browser.';\n            alert(m);\n          }\n        } else {\n          // for firefox and safari\n          logoutURL = logoutURL.replace('//', '//false:false@');\n        }\n      }\n\n      $http.post(logoutURL).error(function() {\n        $rootScope.userName = '';\n        $rootScope.ticket.principal = '';\n        $rootScope.ticket.screenUsername = '';\n        $rootScope.ticket.ticket = '';\n        $rootScope.ticket.roles = '';\n        BootstrapDialog.show({\n          message: 'Logout Success',\n        });\n        setTimeout(function() {\n          window.location = baseUrlSrv.getBase();\n        }, 1000);\n      });\n    });\n  }\n\n  function detectIE() {\n    let ua = window.navigator.userAgent;\n\n    let msie = ua.indexOf('MSIE ');\n    if (msie > 0) {\n      // IE 10 or older => return version number\n      return parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10);\n    }\n\n    let trident = ua.indexOf('Trident/');\n    if (trident > 0) {\n      // IE 11 => return version number\n      let rv = ua.indexOf('rv:');\n      return parseInt(ua.substring(rv + 3, ua.indexOf('.', rv)), 10);\n    }\n\n    let edge = ua.indexOf('Edge/');\n    if (edge > 0) {\n      // Edge (IE 12+) => return version number\n      return parseInt(ua.substring(edge + 5, ua.indexOf('.', edge)), 10);\n    }\n\n    // other browser\n    return false;\n  }\n\n  function search(searchTerm) {\n    $location.path('/search/' + searchTerm);\n  }\n\n  function showLoginWindow() {\n    setTimeout(function() {\n      angular.element('#userName').focus();\n    }, 500);\n  }\n\n  /*\n   ** $scope.$on functions below\n   */\n\n  $scope.$on('setNoteMenu', function(event, notes) {\n    noteListFactory.setNotes(notes);\n    initNotebookListEventListener();\n  });\n\n  $scope.$on('setConnectedStatus', function(event, param) {\n    vm.connected = param;\n  });\n\n  $scope.$on('loginSuccess', function(event, param) {\n    $rootScope.ticket.screenUsername = $rootScope.ticket.principal;\n    listConfigurations();\n    loadNotes();\n    getHomeNote();\n  });\n\n  /*\n   ** Performance optimization for Browser Render.\n   */\n  function initNotebookListEventListener() {\n    angular.element(document).ready(function() {\n      angular.element('.notebook-list-dropdown').on('show.bs.dropdown', function() {\n        $scope.isDrawNavbarNoteList = true;\n      });\n\n      angular.element('.notebook-list-dropdown').on('hide.bs.dropdown', function() {\n        $scope.isDrawNavbarNoteList = false;\n      });\n    });\n  }\n\n  $scope.loadMoreNotes = function() {\n    vm.numberOfNotesDisplayed += 10;\n  };\n\n  $scope.calculateTooltipPlacement = function(note) {\n    if (note !== undefined && note.name !== undefined) {\n      let length = note.name.length;\n      if (length < 2) {\n        return 'top-left';\n      } else if (length > 7) {\n        return 'top-right';\n      }\n    }\n    return 'top';\n  };\n\n  $scope.$on('configurationsInfo', function(scope, event) {\n    // Server send this parameter is String\n    if(event.configurations['isRevisionSupported']==='true') {\n      revisionSupported = true;\n    }\n  });\n\n  $rootScope.isRevisionSupported = function() {\n    return revisionSupported;\n  };\n}\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport './expand-collapse.css';\n\nangular.module('zeppelinWebApp').directive('expandCollapse', expandCollapseDirective);\n\nfunction expandCollapseDirective() {\n  return {\n    restrict: 'EA',\n    link: function(scope, element, attrs) {\n      angular.element(element).click(function(event) {\n        if (angular.element(element).next('.expandable:visible').length > 1) {\n          angular.element(element).next('.expandable:visible').slideUp('slow');\n          angular.element(element).find('i.fa-folder-open').toggleClass('fa-folder fa-folder-open');\n        } else {\n          angular.element(element).next('.expandable').first().slideToggle('200', function() {\n            // do not toggle trash folder\n            if (angular.element(element).find('.fa-trash-o').length === 0) {\n              angular.element(element).find('i').first().toggleClass('fa-folder fa-folder-open');\n            }\n          });\n        }\n\n        let target = event.target;\n\n        // add note\n        if (target.classList !== undefined && target.classList.contains('fa-plus') &&\n          target.tagName.toLowerCase() === 'i') {\n          return;\n        }\n\n        event.stopPropagation();\n      });\n    },\n  };\n}\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport './note-create.css';\n\nangular.module('zeppelinWebApp').controller('NoteCreateCtrl', NoteCreateCtrl);\n\nfunction NoteCreateCtrl($scope, noteListFactory, $routeParams, websocketMsgSrv) {\n  'ngInject';\n\n  let vm = this;\n  vm.clone = false;\n  vm.notes = noteListFactory;\n  vm.websocketMsgSrv = websocketMsgSrv;\n  $scope.note = {};\n  $scope.interpreterSettings = {};\n  $scope.note.defaultInterpreter = null;\n\n  vm.createNote = function() {\n    if (!vm.clone) {\n      let defaultInterpreterGroup = '';\n      if ($scope.note.defaultInterpreter !== null) {\n        defaultInterpreterGroup = $scope.note.defaultInterpreter.name;\n      }\n      vm.websocketMsgSrv.createNotebook($scope.note.notename, defaultInterpreterGroup);\n      $scope.note.defaultInterpreter = $scope.interpreterSettings[0];\n    } else {\n      let noteId = $routeParams.noteId;\n      vm.websocketMsgSrv.cloneNote(noteId, $scope.note.notename);\n    }\n  };\n\n  vm.handleNameEnter = function() {\n    angular.element('#noteCreateModal').modal('toggle');\n    vm.createNote();\n  };\n\n  vm.preVisible = function(clone, sourceNoteName, path) {\n    vm.clone = clone;\n    vm.sourceNoteName = sourceNoteName;\n    $scope.note.notename = vm.clone ? vm.cloneNoteName() : vm.newNoteName(path);\n    $scope.$apply();\n  };\n\n  vm.newNoteName = function(path) {\n    let newCount = 1;\n    angular.forEach(vm.notes.flatList, function(noteName) {\n      noteName = noteName.path;\n      if (noteName.match(/^\\/Untitled Note [0-9]*$/)) {\n        let lastCount = noteName.substr(15) * 1;\n        if (newCount <= lastCount) {\n          newCount = lastCount + 1;\n        }\n      }\n    });\n    return (path ? path + '/' : '') + 'Untitled Note ' + newCount;\n  };\n\n  vm.cloneNoteName = function() {\n    let copyCount = 1;\n    let newCloneName = '';\n    let lastIndex = vm.sourceNoteName.lastIndexOf(' ');\n    let endsWithNumber = !!vm.sourceNoteName.match('^.+?\\\\s\\\\d$');\n    let noteNamePrefix = endsWithNumber ? vm.sourceNoteName.substr(0, lastIndex) : vm.sourceNoteName;\n    let regexp = new RegExp('^' + noteNamePrefix + ' .+');\n\n    angular.forEach(vm.notes.flatList, function(noteName) {\n      noteName = noteName.path;\n      if (noteName.match(regexp)) {\n        let lastCopyCount = noteName.substr(lastIndex).trim();\n        newCloneName = noteNamePrefix;\n        lastCopyCount = parseInt(lastCopyCount);\n        if (copyCount <= lastCopyCount) {\n          copyCount = lastCopyCount + 1;\n        }\n      }\n    });\n\n    if (!newCloneName) {\n      newCloneName = vm.sourceNoteName;\n    }\n    return newCloneName + ' ' + copyCount;\n  };\n\n  vm.getInterpreterSettings = function() {\n    vm.websocketMsgSrv.getInterpreterSettings();\n  };\n\n  $scope.$on('interpreterSettings', function(event, data) {\n    $scope.interpreterSettings = data.interpreterSettings;\n\n    // initialize default interpreter with Spark interpreter\n    $scope.note.defaultInterpreter = data.interpreterSettings[0];\n  });\n}\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nangular.module('zeppelinWebApp').directive('modalvisible', modalvisible);\n\nfunction modalvisible() {\n  return {\n    restrict: 'A',\n    scope: {\n      preVisibleCallback: '&previsiblecallback',\n      postVisibleCallback: '&postvisiblecallback',\n      targetinput: '@targetinput',\n    },\n    link: function(scope, element, attrs) {\n      // Add some listeners\n      let previsibleMethod = scope.preVisibleCallback;\n      let postVisibleMethod = scope.postVisibleCallback;\n      element.on('show.bs.modal', function(e) {\n        let relatedTarget = angular.element(e.relatedTarget);\n        let clone = relatedTarget.data('clone');\n        let sourceNoteName = relatedTarget.data('source-note-name');\n        let path = relatedTarget.data('path');\n        let cloneNote = clone ? true : false;\n        previsibleMethod()(cloneNote, sourceNoteName, path);\n      });\n      element.on('shown.bs.modal', function(e) {\n        if (scope.targetinput) {\n          let ele = angular.element(e.target).find('input#' + scope.targetinput);\n          ele[0].focus();\n          ele[0].setSelectionRange(ele.val().lastIndexOf('/') + 1, ele.val().length);\n        }\n        postVisibleMethod();\n      });\n    },\n  };\n}\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport './note-import.css';\n\nangular.module('zeppelinWebApp').controller('NoteImportCtrl', NoteImportCtrl);\n\nfunction NoteImportCtrl($scope, $timeout, websocketMsgSrv) {\n  'ngInject';\n\n  let vm = this;\n  $scope.note = {};\n  $scope.note.step1 = true;\n  $scope.note.step2 = false;\n  $scope.maxLimit = '';\n  let limit = 0;\n\n  websocketMsgSrv.listConfigurations();\n  $scope.$on('configurationsInfo', function(scope, event) {\n    limit = event.configurations['zeppelin.websocket.max.text.message.size'];\n    $scope.maxLimit = Math.round(limit / 1048576);\n  });\n\n  vm.resetFlags = function() {\n    $scope.note = {};\n    $scope.note.step1 = true;\n    $scope.note.step2 = false;\n    angular.element('#noteImportFile').val('');\n  };\n\n  $scope.uploadFile = function() {\n    angular.element('#noteImportFile').click();\n  };\n\n  $scope.importFile = function(element) {\n    $scope.note.errorText = '';\n    $scope.note.importFile = element.files[0];\n    let file = $scope.note.importFile;\n    let reader = new FileReader();\n\n    if (file.size > limit) {\n      $scope.note.errorText = 'File size limit Exceeded!';\n      $scope.$apply();\n      return;\n    }\n\n    reader.onloadend = function() {\n      vm.processImportJson(reader.result);\n    };\n\n    if (file) {\n      reader.readAsText(file);\n    }\n  };\n\n  $scope.uploadURL = function() {\n    $scope.note.errorText = '';\n    $scope.note.step1 = false;\n    $timeout(function() {\n      $scope.note.step2 = true;\n    }, 400);\n  };\n\n  vm.importBack = function() {\n    $scope.note.errorText = '';\n    $timeout(function() {\n      $scope.note.step1 = true;\n    }, 400);\n    $scope.note.step2 = false;\n  };\n\n  vm.importNote = function() {\n    $scope.note.errorText = '';\n    if ($scope.note.importUrl) {\n      jQuery.ajax({\n        url: $scope.note.importUrl,\n        type: 'GET',\n        dataType: 'json',\n        jsonp: false,\n        xhrFields: {\n          withCredentials: false,\n        },\n        error: function(xhr, ajaxOptions, thrownError) {\n          $scope.note.errorText = 'Unable to Fetch URL';\n          $scope.$apply();\n        }}).done(function(data) {\n          vm.processImportJson(data);\n        });\n    } else {\n      $scope.note.errorText = 'Enter URL';\n      $scope.$apply();\n    }\n  };\n\n  vm.processImportJson = function(result) {\n    if (typeof result !== 'object') {\n      try {\n        result = JSON.parse(result);\n      } catch (e) {\n        $scope.note.errorText = 'JSON parse exception';\n        $scope.$apply();\n        return;\n      }\n    }\n    if (result.paragraphs && result.paragraphs.length > 0) {\n      // zeppelin notebook format\n      if (!$scope.note.noteImportName) {\n        $scope.note.noteImportName = result.name;\n      } else {\n        result.name = $scope.note.noteImportName;\n      }\n      websocketMsgSrv.importNote(result);\n      // angular.element('#noteImportModal').modal('hide');\n    } else if (result.cells && result.cells.length > 0) {\n      // nbviewer notebook format\n      if (!$scope.note.noteImportName) {\n        $scope.note.noteImportName = result.metadata.kernelspec.display_name;\n      }\n      result.name = $scope.note.noteImportName;\n      websocketMsgSrv.importNote(result);\n      // angular.element('#noteImportModal').modal('hide');\n    } else {\n      $scope.note.errorText = 'Invalid JSON';\n    }\n    $scope.$apply();\n  };\n\n  /*\n   ** $scope.$on functions below\n   */\n\n  $scope.$on('setNoteMenu', function(event, notes) {\n    vm.resetFlags();\n    angular.element('#noteImportModal').modal('hide');\n  });\n}\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nangular.module('zeppelinWebApp').directive('ngEnter', NgEnterDirective);\n\nfunction NgEnterDirective() {\n  return function(scope, element, attrs) {\n    element.bind('keydown keypress', function(event) {\n      if (event.which === 13) {\n        if (!event.shiftKey) {\n          scope.$apply(function() {\n            scope.$eval(attrs.ngEnter);\n          });\n        }\n        event.preventDefault();\n      }\n    });\n  };\n}\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nangular.module('zeppelinWebApp').directive('ngEscape', NgEscapeDirective);\n\nfunction NgEscapeDirective() {\n  return function(scope, element, attrs) {\n    element.bind('keydown keyup', function(event) {\n      if (event.which === 27) {\n        scope.$apply(function() {\n          scope.$eval(attrs.ngEscape);\n        });\n        event.preventDefault();\n      }\n    });\n  };\n}\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nangular.module('zeppelinWebApp').service('websocketMsgSrv', WebsocketMessageService);\n\nfunction WebsocketMessageService($rootScope, websocketEvents) {\n  'ngInject';\n\n  return {\n\n    getHomeNote: function() {\n      websocketEvents.sendNewEvent({op: 'GET_HOME_NOTE'});\n    },\n\n    createNotebook: function(noteName, defaultInterpreterGroup) {\n      websocketEvents.sendNewEvent({\n        op: 'NEW_NOTE',\n        data: {\n          name: noteName,\n          defaultInterpreterGroup: defaultInterpreterGroup,\n        },\n      });\n    },\n\n    moveNoteToTrash: function(noteId) {\n      websocketEvents.sendNewEvent({op: 'MOVE_NOTE_TO_TRASH', data: {id: noteId}});\n    },\n\n    moveFolderToTrash: function(folderPath) {\n      websocketEvents.sendNewEvent({op: 'MOVE_FOLDER_TO_TRASH', data: {id: folderPath}});\n    },\n\n    restoreNote: function(noteId) {\n      websocketEvents.sendNewEvent({op: 'RESTORE_NOTE', data: {id: noteId}});\n    },\n\n    restoreFolder: function(folderPath) {\n      websocketEvents.sendNewEvent({op: 'RESTORE_FOLDER', data: {id: folderPath}});\n    },\n\n    restoreAll: function() {\n      websocketEvents.sendNewEvent({op: 'RESTORE_ALL'});\n    },\n\n    deleteNote: function(noteId) {\n      websocketEvents.sendNewEvent({op: 'DEL_NOTE', data: {id: noteId}});\n    },\n\n    removeFolder: function(folderPath) {\n      websocketEvents.sendNewEvent({op: 'REMOVE_FOLDER', data: {id: folderPath}});\n    },\n\n    emptyTrash: function() {\n      websocketEvents.sendNewEvent({op: 'EMPTY_TRASH'});\n    },\n\n    cloneNote: function(noteIdToClone, newNoteName) {\n      websocketEvents.sendNewEvent({op: 'CLONE_NOTE', data: {id: noteIdToClone, name: newNoteName}});\n    },\n\n    getNoteList: function() {\n      websocketEvents.sendNewEvent({op: 'LIST_NOTES'});\n    },\n\n    reloadAllNotesFromRepo: function() {\n      websocketEvents.sendNewEvent({op: 'RELOAD_NOTES_FROM_REPO'});\n    },\n\n    getNote: function(noteId) {\n      websocketEvents.sendNewEvent({op: 'GET_NOTE', data: {id: noteId}});\n    },\n\n    updateNote: function(noteId, noteName, noteConfig) {\n      websocketEvents.sendNewEvent({op: 'NOTE_UPDATE', data: {id: noteId, name: noteName, config: noteConfig}});\n    },\n\n    updatePersonalizedMode: function(noteId, modeValue) {\n      websocketEvents.sendNewEvent({op: 'UPDATE_PERSONALIZED_MODE', data: {id: noteId, personalized: modeValue}});\n    },\n\n    renameNote: function(noteId, noteName, relative) {\n      websocketEvents.sendNewEvent({op: 'NOTE_RENAME', data: {id: noteId, name: noteName, relative: relative}});\n    },\n\n    renameFolder: function(folderId, folderPath) {\n      websocketEvents.sendNewEvent({op: 'FOLDER_RENAME', data: {id: folderId, name: folderPath}});\n    },\n\n    moveParagraph: function(paragraphId, newIndex) {\n      websocketEvents.sendNewEvent({op: 'MOVE_PARAGRAPH', data: {id: paragraphId, index: newIndex}});\n    },\n\n    insertParagraph: function(newIndex) {\n      websocketEvents.sendNewEvent({op: 'INSERT_PARAGRAPH', data: {index: newIndex}});\n    },\n\n    copyParagraph: function(newIndex, paragraphTitle, paragraphData,\n                            paragraphConfig, paragraphParams) {\n      websocketEvents.sendNewEvent({\n        op: 'COPY_PARAGRAPH',\n        data: {\n          index: newIndex,\n          title: paragraphTitle,\n          paragraph: paragraphData,\n          config: paragraphConfig,\n          params: paragraphParams,\n        },\n      });\n    },\n\n    updateAngularObject: function(noteId, paragraphId, name, value, interpreterGroupId) {\n      websocketEvents.sendNewEvent({\n        op: 'ANGULAR_OBJECT_UPDATED',\n        data: {\n          noteId: noteId,\n          paragraphId: paragraphId,\n          name: name,\n          value: value,\n          interpreterGroupId: interpreterGroupId,\n        },\n      });\n    },\n\n    clientBindAngularObject: function(noteId, name, value, paragraphId) {\n      websocketEvents.sendNewEvent({\n        op: 'ANGULAR_OBJECT_CLIENT_BIND',\n        data: {\n          noteId: noteId,\n          name: name,\n          value: value,\n          paragraphId: paragraphId,\n        },\n      });\n    },\n\n    clientUnbindAngularObject: function(noteId, name, paragraphId) {\n      websocketEvents.sendNewEvent({\n        op: 'ANGULAR_OBJECT_CLIENT_UNBIND',\n        data: {\n          noteId: noteId,\n          name: name,\n          paragraphId: paragraphId,\n        },\n      });\n    },\n\n    cancelParagraphRun: function(paragraphId) {\n      websocketEvents.sendNewEvent({op: 'CANCEL_PARAGRAPH', data: {id: paragraphId}});\n    },\n\n    paragraphExecutedBySpell: function(paragraphId, paragraphTitle,\n                                        paragraphText, paragraphResultsMsg,\n                                        paragraphStatus, paragraphErrorMessage,\n                                        paragraphConfig, paragraphParams,\n                                        paragraphDateStarted, paragraphDateFinished) {\n      websocketEvents.sendNewEvent({\n        op: 'PARAGRAPH_EXECUTED_BY_SPELL',\n        data: {\n          id: paragraphId,\n          title: paragraphTitle,\n          paragraph: paragraphText,\n          results: {\n            code: paragraphStatus,\n            msg: paragraphResultsMsg.map((dataWithType) => {\n              let serializedData = dataWithType.data;\n              return {type: dataWithType.type, data: serializedData};\n            }),\n          },\n          status: paragraphStatus,\n          errorMessage: paragraphErrorMessage,\n          config: paragraphConfig,\n          params: paragraphParams,\n          dateStarted: paragraphDateStarted,\n          dateFinished: paragraphDateFinished,\n        },\n      });\n    },\n\n    runParagraph: function(paragraphId, paragraphTitle, paragraphData, paragraphConfig, paragraphParams) {\n      // short circuit update paragraph status for immediate visual feedback without waiting for server response\n      $rootScope.$broadcast('updateStatus', {\n        id: paragraphId,\n        status: 'PENDING',\n      });\n\n      // send message to server\n      websocketEvents.sendNewEvent({\n        op: 'RUN_PARAGRAPH',\n        data: {\n          id: paragraphId,\n          title: paragraphTitle,\n          paragraph: paragraphData,\n          config: paragraphConfig,\n          params: paragraphParams,\n        },\n      });\n    },\n\n    runAllParagraphs: function(noteId, paragraphs) {\n      // short circuit update paragraph status for immediate visual feedback without waiting for server response\n      paragraphs.forEach((p) => {\n        $rootScope.$broadcast('updateStatus', {\n          id: p.id,\n          status: 'PENDING',\n        });\n      });\n\n      // send message to server\n      websocketEvents.sendNewEvent({\n        op: 'RUN_ALL_PARAGRAPHS',\n        data: {\n          noteId: noteId,\n          paragraphs: JSON.stringify(paragraphs),\n        },\n      });\n    },\n\n    removeParagraph: function(paragraphId) {\n      websocketEvents.sendNewEvent({op: 'PARAGRAPH_REMOVE', data: {id: paragraphId}});\n    },\n\n    clearParagraphOutput: function(paragraphId) {\n      websocketEvents.sendNewEvent({op: 'PARAGRAPH_CLEAR_OUTPUT', data: {id: paragraphId}});\n    },\n\n    clearAllParagraphOutput: function(noteId) {\n      websocketEvents.sendNewEvent({op: 'PARAGRAPH_CLEAR_ALL_OUTPUT', data: {id: noteId}});\n    },\n\n    completion: function(paragraphId, buf, cursor) {\n      websocketEvents.sendNewEvent({\n        op: 'COMPLETION',\n        data: {\n          id: paragraphId,\n          buf: buf,\n          cursor: cursor,\n        },\n      });\n    },\n\n    commitParagraph: function(paragraphId, paragraphTitle, paragraphData, paragraphConfig, paragraphParams, noteId) {\n      return websocketEvents.sendNewEvent({\n        op: 'COMMIT_PARAGRAPH',\n        data: {\n          id: paragraphId,\n          noteId: noteId,\n          title: paragraphTitle,\n          paragraph: paragraphData,\n          config: paragraphConfig,\n          params: paragraphParams,\n        },\n      });\n    },\n\n    patchParagraph: function(paragraphId, noteId, patch) {\n      // javascript add \",\" if change contains several patches\n      // but java library requires patch list without \",\"\n      patch = patch.replace(/,@@/g, '@@');\n      return websocketEvents.sendNewEvent({\n        op: 'PATCH_PARAGRAPH',\n        data: {\n          id: paragraphId,\n          noteId: noteId,\n          patch: patch,\n        },\n      });\n    },\n\n    importNote: function(note) {\n      websocketEvents.sendNewEvent({\n        op: 'IMPORT_NOTE',\n        data: {\n          note: note,\n        },\n      });\n    },\n\n    convertNote: function(noteId, noteName) {\n      websocketEvents.sendNewEvent({\n        op: 'CONVERT_NOTE_NBFORMAT',\n        data: {\n          noteId: noteId,\n          noteName: noteName,\n        },\n      });\n    },\n\n    checkpointNote: function(noteId, commitMessage) {\n      websocketEvents.sendNewEvent({\n        op: 'CHECKPOINT_NOTE',\n        data: {\n          noteId: noteId,\n          commitMessage: commitMessage,\n        },\n      });\n    },\n\n    setNoteRevision: function(noteId, revisionId) {\n      websocketEvents.sendNewEvent({\n        op: 'SET_NOTE_REVISION',\n        data: {\n          noteId: noteId,\n          revisionId: revisionId,\n        },\n      });\n    },\n\n    listRevisionHistory: function(noteId) {\n      websocketEvents.sendNewEvent({\n        op: 'LIST_REVISION_HISTORY',\n        data: {\n          noteId: noteId,\n        },\n      });\n    },\n\n    getNoteByRevision: function(noteId, revisionId) {\n      websocketEvents.sendNewEvent({\n        op: 'NOTE_REVISION',\n        data: {\n          noteId: noteId,\n          revisionId: revisionId,\n        },\n      });\n    },\n\n    getNoteByRevisionForCompare: function(noteId, revisionId, position) {\n      websocketEvents.sendNewEvent({\n        op: 'NOTE_REVISION_FOR_COMPARE',\n        data: {\n          noteId: noteId,\n          revisionId: revisionId,\n          position: position,\n        },\n      });\n    },\n\n    getEditorSetting: function(paragraphId, pararaphText) {\n      websocketEvents.sendNewEvent({\n        op: 'EDITOR_SETTING',\n        data: {\n          paragraphId: paragraphId,\n          paragraphText: pararaphText,\n        },\n      });\n    },\n\n    isConnected: function() {\n      return websocketEvents.isConnected();\n    },\n\n    getJobs: function() {\n      websocketEvents.sendNewEvent({op: 'LIST_NOTE_JOBS'});\n    },\n\n    disconnectJobEvent: function() {\n      websocketEvents.sendNewEvent({op: 'UNSUBSCRIBE_UPDATE_NOTE_JOBS'});\n    },\n\n    getUpdateNoteJobsList: function(lastUpdateServerUnixTime) {\n      websocketEvents.sendNewEvent(\n        {op: 'LIST_UPDATE_NOTE_JOBS', data: {lastUpdateUnixTime: lastUpdateServerUnixTime * 1}}\n      );\n    },\n\n    getInterpreterBindings: function(noteId) {\n      websocketEvents.sendNewEvent({op: 'GET_INTERPRETER_BINDINGS', data: {noteId: noteId}});\n    },\n\n    saveInterpreterBindings: function(noteId, selectedSettingIds) {\n      websocketEvents.sendNewEvent({op: 'SAVE_INTERPRETER_BINDINGS',\n        data: {noteId: noteId, selectedSettingIds: selectedSettingIds}});\n    },\n\n    listConfigurations: function() {\n      websocketEvents.sendNewEvent({op: 'LIST_CONFIGURATIONS'});\n    },\n\n    getInterpreterSettings: function() {\n      websocketEvents.sendNewEvent({op: 'GET_INTERPRETER_SETTINGS'});\n    },\n\n    saveNoteForms: function(note) {\n      websocketEvents.sendNewEvent({op: 'SAVE_NOTE_FORMS',\n        data: {\n          noteId: note.id,\n          noteParams: note.noteParams,\n        },\n      });\n    },\n\n    removeNoteForms: function(note, formName) {\n      websocketEvents.sendNewEvent({op: 'REMOVE_NOTE_FORMS',\n        data: {\n          noteId: note.id,\n          formName: formName,\n        },\n      });\n    },\n\n  };\n}\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nangular.module('zeppelinWebApp').factory('websocketEvents', WebsocketEventFactory);\n\nfunction WebsocketEventFactory($rootScope, $websocket, $location, baseUrlSrv, saveAsService, ngToast) {\n  'ngInject';\n\n  let websocketCalls = {};\n  let pingIntervalId;\n  const uniqueClientId = Math.random().toString(36).substring(2, 7);\n  let lastMsgIdSeqSent = 0;\n\n  websocketCalls.ws = $websocket(baseUrlSrv.getWebsocketUrl());\n  websocketCalls.ws.reconnectIfNotNormalClose = true;\n\n  websocketCalls.ws.onOpen(function() {\n    console.log('Websocket created');\n    $rootScope.$broadcast('setConnectedStatus', true);\n    pingIntervalId = setInterval(function() {\n      websocketCalls.sendNewEvent({op: 'PING'});\n    }, 10000);\n  });\n\n  websocketCalls.sendNewEvent = function(data) {\n    if ($rootScope.ticket !== undefined) {\n      data.principal = $rootScope.ticket.principal;\n      data.ticket = $rootScope.ticket.ticket;\n      data.roles = $rootScope.ticket.roles;\n    } else {\n      data.principal = '';\n      data.ticket = '';\n      data.roles = '';\n    }\n\n    data.msgId = uniqueClientId + '-' + ++lastMsgIdSeqSent;\n    console.log('Send >> %o, %o, %o, %o, %o', data.op, data.principal, data.ticket, data.roles, data);\n    return websocketCalls.ws.send(JSON.stringify(data));\n  };\n\n  websocketCalls.isConnected = function() {\n    return (websocketCalls.ws.socket.readyState === 1);\n  };\n\n  websocketCalls.ws.onMessage(function(event) {\n    let payload;\n    if (event.data) {\n      payload = angular.fromJson(event.data);\n    }\n\n    console.log('Receive << %o, %o', payload.op, payload);\n\n    let op = payload.op;\n    let data = payload.data;\n    let msgId = payload.msgId;\n    const uniqueClientId = msgId ? msgId.split('-')[0] : undefined;\n    const msgIdSeqReceived = msgId ? parseInt(msgId.split('-')[1]) : undefined;\n    const isResponseForRequestFromThisClient = uniqueClientId === uniqueClientId;\n\n    if (op === 'NOTE') {\n      $rootScope.$broadcast('setNoteContent', data.note);\n    } else if (op === 'NEW_NOTE') {\n      $location.path('/notebook/' + data.note.id);\n    } else if (op === 'NOTES_INFO') {\n      $rootScope.$broadcast('setNoteMenu', data.notes);\n    } else if (op === 'NOTE_RUNNING_STATUS') {\n      $rootScope.$broadcast('noteRunningStatus', data.status);\n    } else if (op === 'LIST_NOTE_JOBS') {\n      $rootScope.$emit('jobmanager:set-jobs', data.noteJobs);\n    } else if (op === 'LIST_UPDATE_NOTE_JOBS') {\n      $rootScope.$emit('jobmanager:update-jobs', data.noteRunningJobs);\n    } else if (op === 'AUTH_INFO') {\n      let btn = [];\n      if ($rootScope.ticket.roles === '[]') {\n        btn = [{\n          label: 'Close',\n          action: function(dialog) {\n            dialog.close();\n          },\n        }];\n      } else {\n        btn = [{\n          label: 'Login',\n          action: function(dialog) {\n            dialog.close();\n            angular.element('#loginModal').modal({\n              show: 'true',\n            });\n          },\n        }, {\n          label: 'Cancel',\n          action: function(dialog) {\n            dialog.close();\n            // using $rootScope.apply to trigger angular digest cycle\n            // changing $location.path inside bootstrap modal wont trigger digest\n            $rootScope.$apply(function() {\n              $location.path('/');\n            });\n          },\n        }];\n      }\n\n      BootstrapDialog.show({\n        closable: false,\n        closeByBackdrop: false,\n        closeByKeyboard: false,\n        title: 'Insufficient privileges',\n        message: _.escape(data.info.toString()),\n        buttons: btn,\n      });\n    } else if (op === 'PARAGRAPH') {\n      if (isResponseForRequestFromThisClient &&\n          lastMsgIdSeqSent > msgIdSeqReceived\n      ) {\n        // paragraph is already updated by short circuit.\n        console.log('PARAPGRAPH is already updated by shortcircuit');\n      } else {\n        $rootScope.$broadcast('updateParagraph', data);\n      }\n    } else if (op === 'PATCH_PARAGRAPH') {\n      $rootScope.$broadcast('patchReceived', data);\n    } else if (op === 'COLLABORATIVE_MODE_STATUS') {\n      $rootScope.$broadcast('collaborativeModeStatus', data);\n    } else if (op === 'RUN_PARAGRAPH_USING_SPELL') {\n      $rootScope.$broadcast('runParagraphUsingSpell', data);\n    } else if (op === 'PARAGRAPH_APPEND_OUTPUT') {\n      $rootScope.$broadcast('appendParagraphOutput', data);\n    } else if (op === 'PARAGRAPH_UPDATE_OUTPUT') {\n      $rootScope.$broadcast('updateParagraphOutput', data);\n    } else if (op === 'PROGRESS') {\n      $rootScope.$broadcast('updateProgress', data);\n    } else if (op === 'COMPLETION_LIST') {\n      $rootScope.$broadcast('completionList', data);\n    } else if (op === 'EDITOR_SETTING') {\n      $rootScope.$broadcast('editorSetting', data);\n    } else if (op === 'ANGULAR_OBJECT_UPDATE') {\n      $rootScope.$broadcast('angularObjectUpdate', data);\n    } else if (op === 'ANGULAR_OBJECT_REMOVE') {\n      $rootScope.$broadcast('angularObjectRemove', data);\n    } else if (op === 'APP_APPEND_OUTPUT') {\n      $rootScope.$broadcast('appendAppOutput', data);\n    } else if (op === 'APP_UPDATE_OUTPUT') {\n      $rootScope.$broadcast('updateAppOutput', data);\n    } else if (op === 'APP_LOAD') {\n      $rootScope.$broadcast('appLoad', data);\n    } else if (op === 'APP_STATUS_CHANGE') {\n      $rootScope.$broadcast('appStatusChange', data);\n    } else if (op === 'LIST_REVISION_HISTORY') {\n      $rootScope.$broadcast('listRevisionHistory', data);\n    } else if (op === 'NOTE_REVISION') {\n      $rootScope.$broadcast('noteRevision', data);\n    } else if (op === 'NOTE_REVISION_FOR_COMPARE') {\n      $rootScope.$broadcast('noteRevisionForCompare', data);\n    } else if (op === 'INTERPRETER_BINDINGS') {\n      $rootScope.$broadcast('interpreterBindings', data);\n    } else if (op === 'SAVE_NOTE_FORMS') {\n      $rootScope.$broadcast('saveNoteForms', data);\n    } else if (op === 'ERROR_INFO') {\n      BootstrapDialog.show({\n        closable: false,\n        closeByBackdrop: false,\n        closeByKeyboard: false,\n        title: 'Details',\n        message: _.escape(data.info.toString()),\n        buttons: [{\n          // close all the dialogs when there are error on running all paragraphs\n          label: 'Close',\n          action: function() {\n            BootstrapDialog.closeAll();\n          },\n        }],\n      });\n    } else if (op === 'SESSION_LOGOUT') {\n      $rootScope.$broadcast('session_logout', data);\n    } else if (op === 'CONFIGURATIONS_INFO') {\n      $rootScope.$broadcast('configurationsInfo', data);\n    } else if (op === 'INTERPRETER_SETTINGS') {\n      $rootScope.$broadcast('interpreterSettings', data);\n    } else if (op === 'PARAGRAPH_ADDED') {\n      $rootScope.$broadcast('addParagraph', data.paragraph, data.index);\n    } else if (op === 'PARAGRAPH_REMOVED') {\n      $rootScope.$broadcast('removeParagraph', data.id);\n    } else if (op === 'PARAGRAPH_MOVED') {\n      $rootScope.$broadcast('moveParagraph', data.id, data.index);\n    } else if (op === 'NOTE_UPDATED') {\n      $rootScope.$broadcast('updateNote', data.name, data.config, data.info);\n    } else if (op === 'SET_NOTE_REVISION') {\n      $rootScope.$broadcast('setNoteRevisionResult', data);\n    } else if (op === 'PARAS_INFO') {\n      $rootScope.$broadcast('updateParaInfos', data);\n    } else if (op === 'CONVERTED_NOTE_NBFORMAT') {\n      saveAsService.saveAs(data.nbformat, data.noteName, '.ipynb');\n    } else if (op === 'INTERPRETER_INSTALL_STARTED') {\n      ngToast.info(data.message);\n    } else if (op === 'INTERPRETER_INSTALL_RESULT') {\n      ngToast.info(data.message);\n    } else if (op === 'NOTICE') {\n      ngToast.info(data.notice);\n    } else {\n      console.error(`unknown websocket op: ${op}`);\n    }\n  });\n\n  websocketCalls.ws.onError(function(event) {\n    console.log('error message: ', event);\n    $rootScope.$broadcast('setConnectedStatus', false);\n  });\n\n  websocketCalls.ws.onClose(function(event) {\n    console.log('close message: ', event);\n    if (pingIntervalId !== undefined) {\n      clearInterval(pingIntervalId);\n      pingIntervalId = undefined;\n    }\n    $rootScope.$broadcast('setConnectedStatus', false);\n  });\n\n  return websocketCalls;\n}\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nangular.module('zeppelinWebApp').factory('noteListFactory', NoteListFactory);\n\nfunction NoteListFactory(arrayOrderingSrv, TRASH_FOLDER_ID) {\n  'ngInject';\n\n  const notes = {\n    root: {children: []},\n    flatList: [],\n    flatFolderMap: {},\n\n    setNotes: function(notesList) {\n      // a flat list to boost searching\n      notes.flatList = _.map(notesList, (note) => {\n        let notePath = note.path || note.id;\n        let nodes = notePath.match(/([^\\/][^\\/]*)/g) || [];\n\n        note.isTrash = note.path\n          ? note.path.split('/')[1] === TRASH_FOLDER_ID : false;\n        note.name = nodes.pop();\n        return note;\n      });\n\n      // construct the folder-based tree\n      notes.root = {children: []};\n      notes.flatFolderMap = {};\n      _.reduce(notesList, function(root, note) {\n        let notePath = note.path || note.id;\n        let nodes = notePath.match(/([^\\/][^\\/]*)/g);\n\n        // recursively add nodes\n        addNode(root, nodes, note.id);\n\n        return root;\n      }, notes.root);\n      notes.root.children.sort(arrayOrderingSrv.noteComparator);\n    },\n  };\n\n  const addNode = function(curDir, nodes, noteId) {\n    if (nodes.length === 1) {  // the leaf\n      curDir.children.push({\n        name: nodes[0],\n        id: noteId,\n        path: curDir.id ? curDir.id + '/' + nodes[0] : nodes[0],\n        isTrash: curDir.id ? curDir.id.split('/')[0] === TRASH_FOLDER_ID : false,\n      });\n    } else {  // a folder node\n      let node = nodes.shift();\n      let dir = _.find(curDir.children,\n        function(c) {\n          return c.name === node && c.children !== undefined;\n        });\n      if (dir !== undefined) { // found an existing dir\n        addNode(dir, nodes, noteId);\n      } else {\n        let newDir = {\n          id: curDir.id ? curDir.id + '/' + node : node,\n          name: node,\n          hidden: true,\n          children: [],\n          isTrash: curDir.id ? curDir.id.split('/')[0] === TRASH_FOLDER_ID : false,\n        };\n\n        // add the folder to flat folder map\n        notes.flatFolderMap[newDir.id] = newDir;\n\n        curDir.children.push(newDir);\n        addNode(newDir, nodes, noteId);\n      }\n    }\n  };\n\n  return notes;\n}\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nangular.module('zeppelinWebApp').service('baseUrlSrv', BaseUrlService);\n\nfunction BaseUrlService() {\n  this.getPort = function() {\n    let port = Number(location.port);\n    if (!port) {\n      port = 80;\n      if (location.protocol === 'https:') {\n        port = 443;\n      }\n    }\n    // Exception for when running locally via grunt\n    if (port === process.env.WEB_PORT) {\n      port = process.env.SERVER_PORT;\n    }\n    return port;\n  };\n\n  this.getWebsocketUrl = function() {\n    let wsProtocol = location.protocol === 'https:' ? 'wss:' : 'ws:';\n    return wsProtocol + '//' + location.hostname + ':' + this.getPort() +\n      skipTrailingSlash(location.pathname) + '/ws';\n  };\n\n  this.getBase = function() {\n    return location.protocol + '//' + location.hostname + ':' + this.getPort() + location.pathname;\n  };\n\n  this.getRestApiBase = function() {\n    return skipTrailingSlash(this.getBase()) + '/api';\n  };\n\n  const skipTrailingSlash = function(path) {\n    return path.replace(/\\/$/, '');\n  };\n}\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nangular.module('zeppelinWebApp').service('loaderSrv', LoaderService);\n\nfunction LoaderService() {\n  'ngInject';\n\n  this.showLoader = function() {\n    angular.element('#pre-loader').fadeIn();\n  };\n\n  this.hideLoader = function() {\n    angular.element('#pre-loader').fadeOut();\n  };\n}\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nangular.module('zeppelinWebApp').controller('LoginCtrl', LoginCtrl);\n\nfunction LoginCtrl($scope, $rootScope, $http, $httpParamSerializer, baseUrlSrv, $location, $timeout) {\n  'ngInject';\n\n  $scope.SigningIn = false;\n  $scope.loginParams = {};\n  $scope.login = function() {\n    $scope.SigningIn = true;\n    $http({\n      method: 'POST',\n      url: baseUrlSrv.getRestApiBase() + '/login',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      data: $httpParamSerializer({\n        'userName': $scope.loginParams.userName,\n        'password': $scope.loginParams.password,\n      }),\n    }).then(function successCallback(response) {\n      $rootScope.ticket = response.data.body;\n      angular.element('#loginModal').modal('toggle');\n      $rootScope.$broadcast('loginSuccess', true);\n      $rootScope.userName = $scope.loginParams.userName;\n      $scope.SigningIn = false;\n\n      // redirect to the page from where the user originally was\n      if ($location.search() && $location.search()['ref']) {\n        $timeout(function() {\n          let redirectLocation = $location.search()['ref'];\n          $location.$$search = {};\n          $location.path(redirectLocation);\n          $scope.$apply();\n        }, 100);\n      }\n    }, function errorCallback(errorResponse) {\n      $scope.loginParams.errorText = 'The username and password that you entered don\\'t match.';\n      $scope.SigningIn = false;\n    });\n  };\n\n  let initValues = function() {\n    $scope.loginParams = {\n      userName: '',\n      password: '',\n    };\n  };\n\n  // handle session logout message received from WebSocket\n  $rootScope.$on('session_logout', function(event, data) {\n    if ($rootScope.userName !== '') {\n      $rootScope.userName = '';\n      $rootScope.ticket = undefined;\n\n      setTimeout(function() {\n        $scope.loginParams = {};\n        $scope.loginParams.errorText = data.info;\n        angular.element('.nav-login-btn').click();\n      }, 1000);\n      let locationPath = $location.path();\n      $location.path('/').search('ref', locationPath);\n    }\n  });\n\n  /*\n   ** $scope.$on functions below\n   */\n  $scope.$on('initLoginValues', function() {\n    initValues();\n  });\n}\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nangular.module('zeppelinWebApp').service('noteActionService', noteActionService);\n\nfunction noteActionService(websocketMsgSrv, $location, noteRenameService, noteListFactory) {\n  'ngInject';\n\n  this.moveNoteToTrash = function(noteId, redirectToHome) {\n    BootstrapDialog.confirm({\n      closable: true,\n      title: 'Move this note to trash?',\n      message: 'This note will be moved to <strong>trash</strong>.',\n      callback: function(result) {\n        if (result) {\n          websocketMsgSrv.moveNoteToTrash(noteId);\n          if (redirectToHome) {\n            $location.path('/');\n          }\n        }\n      },\n    });\n  };\n\n  this.moveFolderToTrash = function(folderId) {\n    BootstrapDialog.confirm({\n      closable: true,\n      title: 'Move this folder to trash?',\n      message: 'This folder will be moved to <strong>trash</strong>.',\n      callback: function(result) {\n        if (result) {\n          websocketMsgSrv.moveFolderToTrash(folderId);\n        }\n      },\n    });\n  };\n\n  this.removeNote = function(noteId, redirectToHome) {\n    BootstrapDialog.confirm({\n      type: BootstrapDialog.TYPE_WARNING,\n      closable: true,\n      title: 'WARNING! This note will be removed permanently',\n      message: 'This cannot be undone. Are you sure?',\n      callback: function(result) {\n        if (result) {\n          websocketMsgSrv.deleteNote(noteId);\n          if (redirectToHome) {\n            $location.path('/');\n          }\n        }\n      },\n    });\n  };\n\n  this.removeFolder = function(folderId) {\n    BootstrapDialog.confirm({\n      type: BootstrapDialog.TYPE_WARNING,\n      closable: true,\n      title: 'WARNING! This folder will be removed permanently',\n      message: 'This cannot be undone. Are you sure?',\n      callback: function(result) {\n        if (result) {\n          websocketMsgSrv.removeFolder(folderId);\n        }\n      },\n    });\n  };\n\n  this.restoreAll = function() {\n    BootstrapDialog.confirm({\n      closable: true,\n      title: 'Are you sure want to restore all notes in the trash?',\n      message: 'Folders and notes in the trash will be ' +\n      '<strong>merged</strong> into their original position.',\n      callback: function(result) {\n        if (result) {\n          websocketMsgSrv.restoreAll();\n        }\n      },\n    });\n  };\n\n  this.emptyTrash = function() {\n    BootstrapDialog.confirm({\n      type: BootstrapDialog.TYPE_WARNING,\n      closable: true,\n      title: 'WARNING! Notes under trash will be removed permanently',\n      message: 'This cannot be undone. Are you sure?',\n      callback: function(result) {\n        if (result) {\n          websocketMsgSrv.emptyTrash();\n        }\n      },\n    });\n  };\n\n  this.clearAllParagraphOutput = function(noteId) {\n    BootstrapDialog.confirm({\n      closable: true,\n      title: '',\n      message: 'Do you want to clear all output?',\n      callback: function(result) {\n        if (result) {\n          websocketMsgSrv.clearAllParagraphOutput(noteId);\n        }\n      },\n    });\n  };\n\n  this.renameNote = function(noteId, notePath) {\n    noteRenameService.openRenameModal({\n      title: 'Rename note',\n      oldName: notePath,\n      callback: function(newName) {\n        websocketMsgSrv.renameNote(noteId, newName);\n      },\n    });\n  };\n\n  this.renameFolder = function(folderPath) {\n    noteRenameService.openRenameModal({\n      title: 'Rename folder',\n      oldName: folderPath,\n      callback: function(newName) {\n        let newFolderPath = normalizeFolderId(newName);\n        if (_.has(noteListFactory.flatFolderMap, newFolderPath)) {\n          BootstrapDialog.confirm({\n            type: BootstrapDialog.TYPE_WARNING,\n            closable: true,\n            title: 'WARNING! The folder will be MERGED',\n            message: 'The folder will be merged into <strong>' + _.escape(newFolderPath) + '</strong>. Are you sure?',\n            callback: function(result) {\n              if (result) {\n                websocketMsgSrv.renameFolder(folderPath, newFolderPath);\n              }\n            },\n          });\n        } else {\n          websocketMsgSrv.renameFolder(folderPath, newFolderPath);\n        }\n      },\n    });\n  };\n\n  function normalizeFolderId(folderId) {\n    folderId = folderId.trim();\n\n    while (folderId.indexOf('\\\\') > -1) {\n      folderId = folderId.replace('\\\\', '/');\n    }\n\n    while (folderId.indexOf('///') > -1) {\n      folderId = folderId.replace('///', '/');\n    }\n\n    folderId = folderId.replace('//', '/');\n\n    if (folderId === '/') {\n      return '/';\n    }\n\n    if (folderId[0] === '/') {\n      folderId = folderId.substring(1);\n    }\n\n    if (folderId.slice(-1) === '/') {\n      folderId = folderId.slice(0, -1);\n    }\n\n    return folderId;\n  }\n}\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport './note-rename.css';\n\nangular.module('zeppelinWebApp').controller('NoteRenameCtrl', NoteRenameController);\n\nfunction NoteRenameController($scope) {\n  'ngInject';\n\n  let self = this;\n\n  $scope.params = {newName: ''};\n  $scope.isValid = true;\n\n  $scope.rename = function() {\n    angular.element('#noteRenameModal').modal('hide');\n    self.callback($scope.params.newName);\n  };\n\n  $scope.$on('openRenameModal', function(event, options) {\n    self.validator = options.validator || defaultValidator;\n    self.callback = options.callback || function() {};\n\n    $scope.title = options.title || 'Rename';\n    $scope.params.newName = options.oldName || '';\n    $scope.validate = function() {\n      $scope.isValid = self.validator($scope.params.newName);\n    };\n\n    angular.element('#noteRenameModal').modal('show');\n  });\n\n  function defaultValidator(str) {\n    return !!str.trim();\n  }\n}\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nangular.module('zeppelinWebApp').service('noteRenameService', NoteRenameService);\n\nfunction NoteRenameService($rootScope) {\n  'ngInject';\n\n  let self = this;\n\n  /**\n   * <options schema>\n   * title: string - Modal title\n   * oldName: string - name to initialize input\n   * callback: (newName: string)=>void - callback onButtonClick\n   * validator: (str: string)=>boolean - input validator\n   */\n  self.openRenameModal = function(options) {\n    $rootScope.$broadcast('openRenameModal', options);\n  };\n}\n"],"sourceRoot":""}